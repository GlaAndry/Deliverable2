
COMMIT:[bookie-server-config] Avoid considering empty journalDirectories

As discussed at : https://github.com/apache/pulsar/issues/6042

### Issue
We have config management tool which manages bookie-server configuration and sets empty value of `journalDirectories` if bookie-server is still wants to use single journal dir: `journalDirectory`. In this case, bookie-server doesn't consider `journalDirectory` value and keeps empty list of `journalDirectories` which stats bookie with invalid configuration.

### Expected behavior
Bookie-server should parse empty configuration `journalDirectories=` properly and avoid picking up empty value of `journalDirectories` and in that case, bookie-server should fallback to `journalDirectory` config.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2245 from rdhabalia/journal_dir
TREE:tree a12f08307d67bc006234857817180e141b8ee0b1 ------
TIME:03/31/2020 21:12:16

COMMIT:Allow build on JDK14 - upgrade Groovy compiler

### Motivation

Current version of Groovy compiler for integration tests do not support JDK14

### Changes

Update Groovy Compiler
Update dockerfile-maven-plugin as well



Reviewers: Sijie Guo <None>

This closes #2298 from eolivelli/fix/build-jdk14
TREE:tree 820b49e7de6d9af36bfe554f8e31486bc566c1a4 ------
TIME:03/30/2020 02:16:40

COMMIT:Unable to enable TLS if using v2 protocol

Descriptions of the changes in this PR:

*Motivation*

TLS is enabled using `startTLS` but the `startTLS`
is a v3 protobuf request. So if the client is
configured to use v2 protocol, the client is not
able to decode `startTLSResponse`.

*Modifications*

This change is to improve the v2 protocol response handling for
handling `startTLS` response.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2300 from sijie/fix_tls_v2_protocol

(cherry picked from commit 87981d420d0ae9d472d4e92b7abc145069e17e61)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree c90a9593960b1ad697a38781c791ae5a44c40644 ------
TIME:03/30/2020 02:14:05

COMMIT:Unable to enable TLS if using v2 protocol

Descriptions of the changes in this PR:

*Motivation*

TLS is enabled using `startTLS` but the `startTLS`
is a v3 protobuf request. So if the client is
configured to use v2 protocol, the client is not
able to decode `startTLSResponse`.

*Modifications*

This change is to improve the v2 protocol response handling for
handling `startTLS` response.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2300 from sijie/fix_tls_v2_protocol
TREE:tree c50b94e961dbf62ca5b15ff50ed36fe3280d7664 ------
TIME:03/30/2020 02:14:05

COMMIT:Update Arquillian Cube to 1.18.2

### Motivation
Update Arquillian to latest version

Reviewers: Rajan Dhabalia <rdhabalia@apache.org>

This closes #2297 from eolivelli/fix/update-arquillian
TREE:tree 54017987a65200a3dcd0ba897fbf24986a01d921 ------
TIME:03/24/2020 19:22:41

COMMIT:Updated site at revision 86f58e8a7

TREE:tree 97dc37c5c0b564919ebe7f838845636e91832ff8 ------
TIME:03/23/2020 21:54:46

COMMIT:[BOOKIE-LEDGER-RECOVERY] Fix bookie recovery stuck even with enough ack-quorum response

### Motivation
As discussed at https://github.com/apache/pulsar/issues/6505 

Bk-client was not able to recover ledger which has 2 write/ack quorum and one of the bookie went down and recovery was kept failing and bookkeeper client was not able to recover the ledger.

**BK-Client log**

```
20:44:43.721 [BookKeeperClientWorker-OrderedExecutor-1-0] ERROR org.apache.bookkeeper.client.ReadLastConfirmedOp - While readLastConfirmed ledger: 1234567 did not hear success responses from all quorums
20:44:43.721 [bookkeeper-io-12-27] ERROR org.apache.bookkeeper.proto.PerChannelBookieClient - Could not connect to bookie: [id: 0xb8b97441, L:/1.1.1.1:1234]/1.1.1.2:3181, current s
tate CONNECTING : 
io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: No route to host: /1.1.1.2:3181
        at io.netty.channel.unix.Errors.throwConnectException(Errors.java:112) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.unix.Socket.finishConnect(Socket.java:269) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.doFinishConnect(AbstractEpollChannel.java:665) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:642) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:522) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:423) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330) [netty-transport-native-epoll-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) [netty-common-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.31.Final.jar:4.1.31.Final]
        at java.lang.Thread.run(Thread.java:834) [?:?]
Caused by: java.net.ConnectException: finishConnect(..) failed: No route to host
```

**Ledger metadata**

```
BookieMetadataFormatVersion 2
quorumSize: 2
ensembleSize: 2
length: 0
lastEntryId: -1
state: IN_RECOVERY
segment {
  ensembleMember: "1.1.1.1:3181"
  ensembleMember: "1.1.1.2:3181"
  firstEntryId: 0
}
digestType: CRC32
```

**Root cause:**
Bookie should be able to recover ledger once it receives the response from total N (`(Qw - Qa)+1`) bookies. But it was waiting for a successful response from both quorums.
Reference: https://bookkeeper.apache.org/docs/4.5.0/development/protocol/

### Modification
Bookie should be able to recover ledger once it receives the response from total N (`(Qw - Qa)+1`) bookies.


Reviewers: Diego Salvi <diego.salvi@diennea.com>,  Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2281 from rdhabalia/recover_q
TREE:tree c1fb70c5f8e2982df5d9bbf957d0d1ff64ceb458 ------
TIME:03/23/2020 17:02:26

COMMIT: #2288: add metadata to StreamStorage ledgers (#2296)

Descriptions of the changes in this PR:

Added 'application' and 'component' metadata to StreamStorage ledgers.
application: bk-stream-storage-service
component: state-store / checkpoint-store

Master Issue: #2288

* #2288 add metadata to StreamStorage ledgers

* #2288 add metadata to StreamStorage ledgers

Co-authored-by: Dennis Mercuriali <dennis.mercuriali@diennea.com>
TREE:tree 84c59f0c93906ba6d2604e8a9d85b65f5e0941f3 ------
TIME:03/23/2020 12:29:13

COMMIT:Remove old Jenkins stuff (#2293)

Remove old Jenkins stuff for GitHub Create Pull Request template
Co-authored-by: Enrico Olivelli <enrico.olivelli@diennea.com>
TREE:tree 48441b7719cfc48bad89c9ae2e570915531765ed ------
TIME:03/23/2020 12:28:41

COMMIT:Updated site at revision 05fe83d6c

TREE:tree b6390cfc28fab7ab73ca7c9385acd76a7ba0d4d3 ------
TIME:03/19/2020 00:54:40

COMMIT:2279 fix NPE when exec readjournal command

Descriptions of the changes in this PR:
This PR fix NullPointerException when exec readjournal command
See issue #2279 


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2280 from aloyszhang/read-jounral

(cherry picked from commit bd3d3b5473f1b8d90d681d03a128c9332c80425d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 50f869f38d942db6158ab6b494b0fd9273bd9007 ------
TIME:03/19/2020 00:51:46

COMMIT:2279 fix NPE when exec readjournal command

Descriptions of the changes in this PR:
This PR fix NullPointerException when exec readjournal command
See issue #2279 


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2280 from aloyszhang/read-jounral
TREE:tree ce9ab79fe6530f813b51b9f469371e500ab783a4 ------
TIME:03/19/2020 00:51:46

COMMIT:[BOOKIE-MTLS] add BouncyCastleProvider for security-provider to avoid InvalidKeyException

### Motivation
As described at: https://github.com/apache/pulsar/issues/5047

### Issue

Sometimes user  sees `Invalid TLS configuration` at bookie while loading PKCS8Key file and that can be fixed by using Bouncycastle provider.: https://stackoverflow.com/questions/6559272/algid-parse-error-not-a-sequence/18912362#18912362

```
2019-08-26 16:16:51,983 - ERROR - [BookKeeperClientWorker-OrderedExecutor-0-0:BookieClient179] - Security Exception in creating new default PCBC pool: 
org.apache.bookkeeper.tls.SecurityException: Invalid TLS configuration
	at org.apache.bookkeeper.tls.TLSContextFactory.init(TLSContextFactory.java:392)
	at org.apache.bookkeeper.proto.PerChannelBookieClient.<init>(PerChannelBookieClient.java:266)
	at org.apache.bookkeeper.proto.BookieClient.create(BookieClient.java:155)
	at org.apache.bookkeeper.proto.DefaultPerChannelBookieClientPool.<init>(DefaultPerChannelBookieClientPool.java:71)
	at org.apache.bookkeeper.proto.BookieClient.lookupClient(BookieClient.java:168)
	at org.apache.bookkeeper.proto.BookieClient.addEntry(BookieClient.java:245)
	at org.apache.bookkeeper.client.PendingAddOp.sendWriteRequest(PendingAddOp.java:131)
	at org.apache.bookkeeper.client.PendingAddOp.safeRun(PendingAddOp.java:240)
	at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: File does not contain valid private key: /my.key.pem
	at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:267)
	at org.apache.bookkeeper.tls.TLSContextFactory.createClientContext(TLSContextFactory.java:244)
	at org.apache.bookkeeper.tls.TLSContextFactory.init(TLSContextFactory.java:363)
	... 12 more
Caused by: java.security.spec.InvalidKeySpecException: Neither RSA, DSA nor EC worked
	at io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1045)
	at io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1014)
	at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:265)
	... 14 more
Caused by: java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
	at sun.security.ec.ECKeyFactory.engineGeneratePrivate(ECKeyFactory.java:169)
	at java.security.KeyFactory.generatePrivate(KeyFactory.java:372)
	at io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1043)
	... 16 more
Caused by: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
	at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:351)
	at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:356)
	at sun.security.ec.ECPrivateKeyImpl.<init>(ECPrivateKeyImpl.java:73)
	at sun.security.ec.ECKeyFactory.implGeneratePrivate(ECKeyFactory.java:237)
	at sun.security.ec.ECKeyFactory.engineGeneratePrivate(ECKeyFactory.java:165)
	... 18 more
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2151 from rdhabalia/bc-mtls
TREE:tree c6ef1b118e07d41de20c9c449709ccb7fed1a0d5 ------
TIME:03/19/2020 00:32:42

COMMIT:Do not log WARNING about PlacementPolicy for tests and simple setups


Descriptions of the changes in this PR:
Do not log 'New ensemble: {} is not adhering to Placement Policy. quarantinedBookies' in case of ensembleSize = 1


### Motivation
In tests cases and in simple demos it is very annoying to see that log line at "WARNING" level.
If we are requiring only 1 bookie it is not a big deal to WARN that the placement policy is not "adhering"


Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>, Atri Sharma <None>, Sijie Guo <None>

This closes #2286 from eolivelli/fix/no-log-single-bookie

(cherry picked from commit 05fe83d6ca97d6bc415bb304e4f24537b7b06c0a)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f164561d7b2ad02a953c7993c9b59f476006f47f ------
TIME:03/19/2020 00:10:18

COMMIT:Do not log WARNING about PlacementPolicy for tests and simple setups


Descriptions of the changes in this PR:
Do not log 'New ensemble: {} is not adhering to Placement Policy. quarantinedBookies' in case of ensembleSize = 1


### Motivation
In tests cases and in simple demos it is very annoying to see that log line at "WARNING" level.
If we are requiring only 1 bookie it is not a big deal to WARN that the placement policy is not "adhering"


Reviewers: Matteo Minardi <minardi.matteo@hotmail.it>, Atri Sharma <None>, Sijie Guo <None>

This closes #2286 from eolivelli/fix/no-log-single-bookie
TREE:tree e3084549e53372af118b4a6e97773b4b56681b9f ------
TIME:03/19/2020 00:10:18

COMMIT:Add Journal PageCache flush interval control when journalSyncData is disabled

Descriptions of the changes in this PR:
### Motivation
There was a weird behavior observed: when journalSyncData is disabled, it will trigger callbacks when the data is flushed to filesystem(PageCache) but still enqueue a fsync request to force write queue to fsync PageCache data to disk frequently. Though the fsync thread dequeue fsync request and execute fsync operation asynchronously, it still cause disk io util increase when fsync frequency high enough. when disk io util increase, especially reach 100%, it will block new journal file creation and lead to journal sync time increases to mutiple seconds.

### Changes
when journalSyncData is disabled, we introduce `journalPageCacheFlushIntervalMSec` to control journal PageCache flush frequency to reduce disk io util, default value is 1000ms

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2287 from hangc0276/bugfix

(cherry picked from commit 8201de86a6e04164efa4fabbf91d4c4a67bbd1fe)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fdf46c5f889527e3d8066675d162f332daf669c1 ------
TIME:03/19/2020 00:08:25

COMMIT:Add Journal PageCache flush interval control when journalSyncData is disabled

Descriptions of the changes in this PR:
### Motivation
There was a weird behavior observed: when journalSyncData is disabled, it will trigger callbacks when the data is flushed to filesystem(PageCache) but still enqueue a fsync request to force write queue to fsync PageCache data to disk frequently. Though the fsync thread dequeue fsync request and execute fsync operation asynchronously, it still cause disk io util increase when fsync frequency high enough. when disk io util increase, especially reach 100%, it will block new journal file creation and lead to journal sync time increases to mutiple seconds.

### Changes
when journalSyncData is disabled, we introduce `journalPageCacheFlushIntervalMSec` to control journal PageCache flush frequency to reduce disk io util, default value is 1000ms

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2287 from hangc0276/bugfix
TREE:tree be82a0c915d6f7ece6318a547b7428e4862c827e ------
TIME:03/19/2020 00:08:25

COMMIT:fix some stats monitor metrics

Descriptions of the changes in this PR:

The journalStats.getJournalQueueSize increase once and decrease twice, so this stat metric will be negative.

It increases in `logAddEntry` function and decrease in `QueueEntry recall` methord and Journal main thread run methord.

so we should delete the decrease in journal main thread run methord.

```
queue.put(QueueEntry.create(
                entry, ackBeforeSync,  ledgerId, entryId, cb, ctx, MathUtils.nowInNano(),
                journalStats.getJournalAddEntryStats(),
                journalStats.getJournalQueueSize()))
```

Reviewers: Sijie Guo <None>

This closes #2290 from hangc0276/bugfix_metrics

(cherry picked from commit fbfd49a1e0307e5d490a2cdf8cbb840ef88cf628)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 3e5da0d480a239342fa48e0aa86681ed72eace03 ------
TIME:03/19/2020 00:05:04

COMMIT:fix some stats monitor metrics

Descriptions of the changes in this PR:

The journalStats.getJournalQueueSize increase once and decrease twice, so this stat metric will be negative.

It increases in `logAddEntry` function and decrease in `QueueEntry recall` methord and Journal main thread run methord.

so we should delete the decrease in journal main thread run methord.

```
queue.put(QueueEntry.create(
                entry, ackBeforeSync,  ledgerId, entryId, cb, ctx, MathUtils.nowInNano(),
                journalStats.getJournalAddEntryStats(),
                journalStats.getJournalQueueSize()))
```

Reviewers: Sijie Guo <None>

This closes #2290 from hangc0276/bugfix_metrics
TREE:tree 2fbeaeaa1cde52b8d630f9847764cb75c231d961 ------
TIME:03/19/2020 00:05:04

COMMIT:Update Prometheus library to 0.8.1

Descriptions of the changes in this PR:
Update Prometheus library to 0.8.1

### Motivation

We have an obsolete version

### Changes

Update Prometheus library to latest version 0.8.1 and update NOTICE files


Reviewers: Sijie Guo <None>

This closes #2291 from eolivelli/fix/update-prom-081
TREE:tree e630716a4faca4da8371e0cf81cba04e14e12877 ------
TIME:03/18/2020 23:15:33

COMMIT:fix bookie decommission sleep timeout value is negative bug

when decommission a bookie, and the ledger size of the bookie is big enough, the thread timeout will get negative, and the decommission operation will give up by throw exceptions as follow
```
14:12:56.982 [main] INFO  org.apache.bookkeeper.client.BookKeeperAdmin - Count of Ledgers which need to be rereplicated: 272752
14:12:56.983 [main] ERROR org.apache.bookkeeper.bookie.BookieShell - Received exception in DecommissionBookieCmd 
java.lang.IllegalArgumentException: timeout value is negative
	at java.lang.Thread.sleep(Native Method) ~[?:?]
	at org.apache.bookkeeper.client.BookKeeperAdmin.waitForLedgersToBeReplicated(BookKeeperAdmin.java:1528) ~[org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
	at org.apache.bookkeeper.client.BookKeeperAdmin.decommissionBookie(BookKeeperAdmin.java:1500) ~[org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
	at org.apache.bookkeeper.bookie.BookieShell$DecommissionBookieCmd.runCmd(BookieShell.java:2664) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
	at org.apache.bookkeeper.bookie.BookieShell$MyCommand.runCmd(BookieShell.java:277) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
	at org.apache.bookkeeper.bookie.BookieShell.run(BookieShell.java:3081) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
	at org.apache.bookkeeper.bookie.BookieShell.main(BookieShell.java:3172) [org.apache.bookkeeper-bookkeeper-server-4.9.2.jar:4.9.2]
14:12:57.013 [main] INFO  org.apache.zookeeper.ZooKeeper - Session: 0x206189927840052 closed
```
The exception code is 
```
private void waitForLedgersToBeReplicated(Collection<Long> ledgers, BookieSocketAddress thisBookieAddress,
            LedgerManager ledgerManager) throws InterruptedException, TimeoutException {
        int maxSleepTimeInBetweenChecks = 10 * 60 * 1000; // 10 minutes
        int sleepTimePerLedger = 10 * 1000; // 10 secs
        Predicate<Long> validateBookieIsNotPartOfEnsemble = ledgerId -> !areEntriesOfLedgerStoredInTheBookie(ledgerId,
                thisBookieAddress, ledgerManager);
        while (!ledgers.isEmpty()) {
            LOG.info("Count of Ledgers which need to be rereplicated: {}", ledgers.size());
            int sleepTimeForThisCheck = ledgers.size() * sleepTimePerLedger > maxSleepTimeInBetweenChecks
                    ? maxSleepTimeInBetweenChecks : ledgers.size() * sleepTimePerLedger;
            Thread.sleep(sleepTimeForThisCheck);
            LOG.debug("Making sure following ledgers replication to be completed: {}", ledgers);
            ledgers.removeIf(validateBookieIsNotPartOfEnsemble);
        }
    }
```
the ledger size is `272752`, when computing sleepTimeForThisCheck, 
`ledgers.size() * sleepTimePerLedger` is `272752 * 10 * 1000 = 2727520000`， 
the value exceeds max int value `2147483647`, it will turn to `-1567447296`, then the sleepTimeForThisCheck will be `-1567447296`.
 Thread.sleep will throw `java.lang.IllegalArgumentException: timeout value is negative` exception

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #2284 from hangc0276/bug_fix
TREE:tree 1ea7e64682084fec19121997d3cb5da9d63c3b02 ------
TIME:03/10/2020 14:17:53

COMMIT:Fixes vertx can not receive the request body

---

*Motivation*

Vertx can not receive the request body so that the REST API
can not work well if you have a request with body.

*Modifications*

- Add body handler for the vertx http service

*Verify this change*

- Pass the test `testHttpMethodsWithBody`

Descriptions of the changes in this PR:



### Motivation

(Explain: why you're making that change, what is the problem you're trying to solve)

### Changes

(Describe: what changes you have made)

Master Issue: #<master-issue-number>




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2241 from zymap/fix-can-not-read-body
TREE:tree fed4fc194620b98b605e0d038dfeb5b939c572da ------
TIME:03/09/2020 12:30:00

COMMIT:Updated site at revision 21e0e2f94

TREE:tree 7c600e6f67f874d1b7db5f52642feba66cf03178 ------
TIME:03/07/2020 15:36:08

COMMIT:Bump nokogiri from 1.10.7 to 1.10.8 in /site

Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.10.7 to 1.10.8.
- [Release notes](https://github.com/sparklemotion/nokogiri/releases)
- [Changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md)
- [Commits](https://github.com/sparklemotion/nokogiri/compare/v1.10.7...v1.10.8)

Signed-off-by: dependabot[bot] <support@github.com>
TREE:tree c11aa5db3c92a3d3136e92a58ab9710e806ba7ee ------
TIME:03/07/2020 14:47:54

COMMIT:Bump libthrift from 0.9.3 to 0.12.0

Bumps [libthrift](https://github.com/apache/thrift) from 0.9.3 to 0.12.0.
- [Release notes](https://github.com/apache/thrift/releases)
- [Changelog](https://github.com/apache/thrift/blob/master/CHANGES.md)
- [Commits](https://github.com/apache/thrift/compare/0.9.3...v0.12.0)

Signed-off-by: dependabot[bot] <support@github.com>
TREE:tree ee33e0c1db7d4a4cf2996f32fcb36324e57e389c ------
TIME:03/07/2020 14:47:45

COMMIT:Drop Maven Profile -Dstream (#2233)

### Motivation

The "stream" profile enables the build of all of the additional packages regarding the 'table service'.
This profile complicates a lot every script and the Maven project.
As the stream storage service is now stable and used in production, it is better to always include those modules.
Regualar developers on bookkeeper-server module won't be affected by this change as it affects only the full build and the release process.

### Changes
Modify every pom.xml in order to enable all of the parts of the pom.xml that would be enabled with '-Dstream'.
Modify release scripts by removing references to -Dstream
Modify bin/common.sh about the auto build feature
Modify Groovy scripts for Jenkins
Do not "shade" libthrift inside Distributed Log Jar

I did not modify the website because currently the precommit validation of the website is broken


* Remove stream Maven Profile

* Delete job_bookkeeper_precommit_java11.groovy

* Delete job_bookkeeper_precommit_java8.groovy

* Delete ticktoc.sh

* Restore -DstreamTests profile

Co-authored-by: Enrico Olivelli <eolivelli@apache.org>
TREE:tree 3f1d4a83cd6b161cbc31ae301beabf0d6cda81c1 ------
TIME:03/07/2020 14:46:45

COMMIT:Move the result of the BKCTL to the console by default

### Motivation

### Changes

  Move the result of the BKCTL to the console

Master Issue: #2236

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2268 from SunDapeng1/branch-2267

(cherry picked from commit 407a0299af034423aca009fe353c10a9de15f490)
Signed-off-by: Enrico Olivelli <enrico.olivelli@diennea.com>

TREE:tree a8c272e020ecc5b0ac1ae4426ff5e6ff32fda48d ------
TIME:03/06/2020 08:31:24

COMMIT:Move the result of the BKCTL to the console by default

### Motivation 


### Changes

  Move the result of the BKCTL to the console

Master Issue: #2236  

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2268 from SunDapeng1/branch-2267
TREE:tree 5f0d07c0ac5fb0719358eeed3f0b99631ac11894 ------
TIME:03/06/2020 08:31:24

COMMIT:2178: IOException Should Be Thrown When Journal Is Corrupted

Fixes #2178 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>,  Sijie Guo <sijie@apache.org>

This closes #2257 from atris/2176
TREE:tree b57f91faaae2333e7295f0d53d3934b5d8081955 ------
TIME:03/06/2020 08:15:15

COMMIT:Move checkout action to v2 (#2272)


TREE:tree 95dd736559ba6fb04a2e2354c400b117b2982097 ------
TIME:02/24/2020 08:08:23

COMMIT:ISSUE #2218: Write customMetadata on ledgers created by DistributedLog

### Changes

Enable DistributedLog to attach custom metadata to underlying ledgers when writing logs.

The user can pass a LedgerMetadata object to DistributedLogManager#openLogWriter and DistributedLogManager#openAsyncLogWriter. The LedgerMetadata object is then used by the Allocator backing the BKLogWriteHandler every time it must allocate a new ledger.

Master Issue: #2218



Reviewers: Enrico Olivelli <eolivelli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2254 from dmercuriali/2218-distributedlog-ledger-custom-metadata, closes #2218
TREE:tree 437d22e0677121dca6a06d79fabcd812996ac0bc ------
TIME:02/17/2020 14:03:15

COMMIT:Fix method order in order to make the execution of TestEntryLog predictable

### Motivation

TestEntyLog reuses the entryLogger variable across test methods execution, resulting in an unpredictable execution.
We can at least make the test work consistently across environments using JUnit built-in FixMethodOrder annotation

### Changes
FixMethodOrder(MethodSorters.NAME_ASCENDING)

Fixes #2260


Reviewers: Atri Sharma <atri@apache.org>

This closes #2266 from eolivelli/fix/flaky
TREE:tree a2e003516a083872fd2f9948492a84f5d8f36a16 ------
TIME:02/17/2020 09:12:37

COMMIT:Revert "bin/bookkeeper shell supports the -conf"

This reverts commit 163db4496d50cae198b80c9d88c14579f6d2e9f3.

Descriptions of the changes in this PR:
Commit 163db4496d50cae198b80c9d88c14579f6d2e9f3 broke "bookkeeper shell" command and integration tests are no more able to work



Reviewers: Sijie Guo <sijie@apache.org>

This closes #2265 from eolivelli/fix/revert-bad-fix
TREE:tree d619d6283d83209185e2f48988681abe6c24e8f4 ------
TIME:02/16/2020 10:14:02

COMMIT:Updated site at revision 018648b8c

TREE:tree 3607716f854d6db38561964c60c7d8b9b1e8ad47 ------
TIME:02/13/2020 18:26:35

COMMIT:Add BP-38 to list of approved releases

TREE:tree 2276a8f836da57e6f0570a5229931b7df1a264d9 ------
TIME:02/13/2020 17:44:00

COMMIT:Updated site at revision 26e03dc8d

TREE:tree 382ff7957010a896bab2ebf0d5208f3d2d81abd6 ------
TIME:02/13/2020 17:30:23

COMMIT:BP-38 Publish Bookie Service Info on Metadata Service

This is the BP page for BP-38 Publish Bookie Service Info on Metadata Service

Master Issue: #2215 




Reviewers: [Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>, Flavio Junqueira <fpj@apache.org>

This closes #2214 from eolivelli/fix/bp-disc
TREE:tree fb9ee362526e47061145dd82a428547125e0d4a2 ------
TIME:02/13/2020 16:40:39

COMMIT:Remove travis

Descriptions of the changes in this PR:

### Motivation

The CI is moved to github actions.

### Changes

Delete travis configuration.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2259 from sijie/remove_travis_ci

(cherry picked from commit 9397d111408351bbe329588c026c226b03893f11)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 4359edd51ce6326ebb7b9ec517cf6ef7e07f9368 ------
TIME:02/10/2020 17:13:35

COMMIT:Remove travis

Descriptions of the changes in this PR:

### Motivation

The CI is moved to github actions.


### Changes

Delete travis configuration.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2259 from sijie/remove_travis_ci
TREE:tree 6f2cbe9836cd274f977c006a5ddf7abeece7d09a ------
TIME:02/10/2020 17:13:35

COMMIT:[CODE-STYLE] fix build failure for check-style

Descriptions of the changes in this PR:



### Motivation

PR Validation build is failing with below exception:
```
[ERROR] src/main/java/org/apache/bookkeeper/stream/storage/impl/cluster/ZkClusterInitializer.java:[35] (imports) ImportOrder: Import org.apache.bookkeeper.stream.storage.StorageConstants.getSegmentsRootPath appears after other imports that it should precede
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (default-cli) on project stream-storage-service-impl: You have 1 Checkstyle violation. -> [Help 1]
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2258 from rdhabalia/checkZk
TREE:tree b4b946c39b088da698cc8d35d7a8d581575debab ------
TIME:01/31/2020 13:26:16

COMMIT:Updated site at revision e37f3aa03

TREE:tree 4ae6cd814715a7aefe00699250c0cf45189c67bc ------
TIME:01/31/2020 05:40:24

COMMIT:Website: update Gemfile dependencies

Updating Gemfile dependencies to try fix Travis (see https://github.com/apache/bookkeeper/issues/2252)

Also fixing https://www.cvedetails.com/cve/CVE-2018-17567/ in the meantime

You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2256 from aluccaroni/master
TREE:tree 1a8a8852a0ffcad971593072aa2c3e9a8e5d065a ------
TIME:01/31/2020 05:02:14

COMMIT:Remove Jenkins precommit jobs and fix checkstyle errors



Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2255 from sijie/remove_bookkeeper_tests
TREE:tree ffd4f0548fa6868935edd89e5c9534cbf1874f09 ------
TIME:01/27/2020 17:31:08

COMMIT:Website: add EOL tag to navbar

As discussed on the mailing list, I'm updating the BookKeeper website to reflect the EOLed version of BookKeeper

You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site

Here a screenshot of the new navbar:
![image](https://user-images.githubusercontent.com/11058798/72979770-587ce880-3dd9-11ea-86bf-de4a9aa694d3.png)


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo

This closes #2253 from aluccaroni/master
TREE:tree 80b2e59386ff60667bc8101e087a8b7c39bfdf00 ------
TIME:01/25/2020 16:47:26

COMMIT:bin/bookkeeper shell supports the -conf

### Motivation
`bin/bookkeeper shell ` support `-conf configuration`, but it doesn't work. bk_server.conf is loaded by default, even if the configuration is specified
![image](https://user-images.githubusercontent.com/42792537/70309755-2a534180-1849-11ea-96b0-bd5b07a6b717.png)
Modify `bin/bookkeeper` to specify the configuration file as an absolute path



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2211 from SunDapeng1/branch-2211
TREE:tree 08495c4e08186ae0547e90a80801065fb9844b68 ------
TIME:01/22/2020 11:22:56

COMMIT:[CI] Migrate the Jenkins CI to Github Action

---

Master Issue: #2242

*Modifications*

Migrate theJenkins CI to Github Action


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2246 from zymap/migrate-ci
TREE:tree 057ded4ae9860f13dd8bda2d1405ef1df8a39f27 ------
TIME:01/22/2020 11:18:33

COMMIT:Website: Update Release Management for new Time Based Release Plan

As discussed on the mailing list, I'm updating the BookKeeper website to reflect the new Time Based Release Plan.

You can find the staging website  https://aluccaroni.github.io/bookkeeper-staging-site/community/releases/

Please note that I've removed the calendar since it was empty

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2251 from aluccaroni/master
TREE:tree ab2c8fc73ffa228b50179f9650118df600b3898a ------
TIME:01/22/2020 11:16:34

COMMIT:[HOTFIX] [DOCS] fix error in leger api document

This PR :
1. add missing comma and dot
2. fix some layout error
in ledger-api document

Reviewers: Sijie Guo <None>

This closes #2250 from aloyszhang/hotfix-ledger-api
TREE:tree da97a2b412d0f3ff0ae538be039d671c2ec347d0 ------
TIME:01/22/2020 11:15:19

COMMIT:[HOTFIX] [DOCS] remove redundant word in protocol documents

This PR removes redundant word  "because" in protocol documents.


Reviewers: Sijie Guo <None>

This closes #2249 from aloyszhang/hotfix-protocol
TREE:tree 7748073f40c8151a8b3a827e4787cf964d0d804c ------
TIME:01/22/2020 11:13:47

COMMIT:[HOTFIX] fix the http endpoint component count error

This PR is a hotfix for "BookKeeper Admin REST API" document, the compoent of HTTP endpoints should be 5, but it's 4 in the doc.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2248 from aloyszhang/hotfix
TREE:tree 44a914d1bd9f40da7265fb7b4e38255cd8ffc860 ------
TIME:01/22/2020 11:12:45

COMMIT:Create ledgersRootPath recursively for 'bin/bookkeeper shell metaformat'

Create ledgersRootPath recursively for `bin/bookkeeper shell metaformat`. The existence of any parent znodes is not an error condition


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2237 from SunDapeng1/branch-2236
TREE:tree 95a0ae0c6daee9b510314b681f757f4d5858c62f ------
TIME:01/22/2020 11:09:41

COMMIT:Increase the 'segment store path' in the 'Initializing stream cluster' log

Increase the 'segment store path' in the 'Initializing stream cluster' log

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2238 from SunDapeng1/branch-2238
TREE:tree 229b48ca222b84df59b94996f930261c28b3136d ------
TIME:01/22/2020 11:08:17

COMMIT:[bookie-server] add support of client auto cert refresh

### Motivation
as described at: https://github.com/apache/pulsar/issues/6010

Bookkeeper-client caches the tls certificates when it first tries to create a cnx with a given bookie and after that it never reloads certs even when valid certs changes on the file-system or new bookie-connection is created. Because of that as soon as client certs expires and bk-client disconnects from bookie then bk-client is not able to reconnect to bookie until we restart the bk-client process. and we see below TLS exception at bk-client.

```
19:43:03.983 [bookkeeper-io-12-45] ERROR org.apache.bookkeeper.proto.PerChannelBookieClient - Unexpected exception caught by bookie client channel handler
io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem
        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:472) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:799) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:433) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.32.Final.jar:4.1.32.Final]
        at java.lang.Thread.run(Thread.java:834) [?:?]
Caused by: javax.net.ssl.SSLHandshakeException: General OpenSslEngine problem
        at io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback.handle(ReferenceCountedOpenSslClientContext.java:273) ~[netty-all-4.1.32.Final.jar
:4.1.32.Final]
        at io.netty.internal.tcnative.SSL.readFromSSL(Native Method) ~[netty-tcnative-boringssl-static-2.0.20.Final.jar:2.0.20.Final]
        at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:575) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1124) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1236) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1279) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:217) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1301) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1215) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1249) ~[netty-all-4.1.32.Final.jar:4.1.32.Final]
        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]
        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441) ~[netty-codec-4.1.31.Final.jar:4.1.31.Final]
        ... 14 more
```

### Modification
Add support at bk-client to reload certs once they have changed on file-system.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2235 from rdhabalia/bk_client_cert
TREE:tree 52828a36a45c51cc37734d2ed12e0b9f411833a4 ------
TIME:01/16/2020 15:26:46

COMMIT:ISSUE #2224: Config ServerConfiguration with setAllowLoopback(true) for Unit Tests

### Motivation

Unit test fails when build master branch

### Changes

Config ServerConfiguration with setAllowLoopback(true) in the class GarbageCollectorThreadTest

Master Issue: #2224 


Reviewers: Jia Zhai <zhaijia@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2226 from coolbeevip/ISSUE-2224, closes #2224 and squashes the following commits:

fdba4fbce [Lei Zhang] ISSUE-2224 set allowLoopback is true
2ff7ca5af [Enrico Olivelli] Account Apache Thrift and Http Client files in LICENSE files - Fix build on Travis
2bbf58e01 [Dapeng] Fixed bin/bookkeeper shell readjournal
9d61fb4fe [Dapeng] [DOCS] Modify “Using Autoecovery”,recover does not support the specified target bookie
2ca4025e4 [Anup Ghatage] [DOCUMENTATION] Add doc for decommissioning bookie process
62e3b9b6f [Enrico Olivelli] Make 4.9.2 as stable
40f349ccf [Enrico Olivelli] Bump Python client version
b1991e6b3 [Enrico Olivelli] Release notes for 4.10
9f4b1359e [冉小龙] Fix the log level of not support Sse42Crc32C
557dfe90f [Jennifer Huang] [DOCS] Update coding_guide.md
43f8cd74f [Enrico Olivelli] Add -Dtwitter to fix auto-build
f57962bcc [Matteo Merli] Removed mutex contention on BufferedChannel
f5d2e5931 [Enrico Olivelli] Add -Dtwitter to release scripts in order to build Twitter stats providers
7efa8e89e [Enrico Olivelli] Fix version in modules that are not active by default
d49b46f4e [Enrico Olivelli] [maven-release-plugin] prepare for next development iteration
5a4213bb0 [Enrico Olivelli] [maven-release-plugin] prepare branch branch-4.10
f8a5974a5 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment
8559126a3 [Anup Ghatage] Issue #2145: Make ledgerDirs in Cookie consistent across generating a…
TREE:tree 352f9a91892ef24b1d211041e9f348932d561fb7 ------
TIME:01/07/2020 09:15:28

COMMIT:Remove Twitter Libraries

- Twitter Stats Providers
- Twitter Http Server

Descriptions of the changes in this PR:
- Drop all stats providers used only by Twitter and Twitter Http server 
- Fix BookKeeper Server packaging, it did not include Netty epoll transport Linux binding (no .so file)
- Adapt license stuff accordingly  
- Drop third party libs needed by Twitter stuff, most notably: Scala runtime and Netty 3.10


### Motivation

Those modules are apparently no more in use and especially they are no more mantained.
It is better to remove them, the code is still on git, but we won't be building it any more or bundling  useless third party libraries in our releases. 

### Changes
- remove twitter stats providers
- remove twitter http server
- adjust LICENSE file for binary distribution (bookkeeper-all)
- fix pom.xml files
- remove -Dtwitter from release files
- remove -Dtwitter from bin/common.sh
- remove other links to Twitter stuff in current documentation 


Master Issue: #<master-issue-number>




Reviewers: Dave Rusek <dave.rusek@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo

This closes #2232 from eolivelli/fix/drop-twitter-stuff
TREE:tree e05110afdf78768298136b7a8705ea5eed2cce98 ------
TIME:01/06/2020 08:10:12

COMMIT:Account Apache Thrift and Http Client files in LICENSE files - Fix build on Travis

fixes #2227

Descriptions of the changes in this PR:
- Account Thrift and Http client in LICENSE files.
- Force using Maven 3.6.3 in MacOSx builds on Travis
- Test only with -Dstream profile


### Motivation

Those files are inside the binary packages but they are not taken into account in LICENSE file.
Travis started to report errors when Travis updated Maven version to 3.6.2 in Linux machines, MaxOSx machines are still with 3.3.9 and the build does not bundle all of the needed jars ! 

Master Issue: #2227 




Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2228 from eolivelli/fix/license-files
TREE:tree 2313e7e7d3b6f28c4b87c978c108bc931c973df5 ------
TIME:01/04/2020 14:10:31

COMMIT:Account Apache Thrift and Http Client files in LICENSE files - Fix build on Travis

fixes #2227

Descriptions of the changes in this PR:
- Account Thrift and Http client in LICENSE files.
- Force using Maven 3.6.3 in MacOSx builds on Travis
- Test only with -Dstream profile


### Motivation

Those files are inside the binary packages but they are not taken into account in LICENSE file.
Travis started to report errors when Travis updated Maven version to 3.6.2 in Linux machines, MaxOSx machines are still with 3.3.9 and the build does not bundle all of the needed jars ! 

Master Issue: #2227 




Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2228 from eolivelli/fix/license-files
TREE:tree 53e8b8b0f1e51c40a4c0c2a008bef852af69dafb ------
TIME:01/04/2020 14:10:31

COMMIT:Fixed bin/bookkeeper shell readjournal

### Motivation
An error occurred while executing `bin/bookkeeper shell readjournal`,
![image](https://user-images.githubusercontent.com/42792537/70305222-d80d2300-183e-11ea-8759-88dfcc90b5be.png)
 the journal file name is hexadecimal, but when readjournal is executed, the journal name is resolved in base 10

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo

This closes #2210 from SunDapeng1/branch-2208

(cherry picked from commit 2bbf58e0168df000db1712a84acaecf61d00c347)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree f6c972a7009080408a9bacd6e83f70fb78dd2feb ------
TIME:12/22/2019 18:47:22

COMMIT:Fixed bin/bookkeeper shell readjournal

### Motivation
An error occurred while executing `bin/bookkeeper shell readjournal`,
![image](https://user-images.githubusercontent.com/42792537/70305222-d80d2300-183e-11ea-8759-88dfcc90b5be.png)
 the journal file name is hexadecimal, but when readjournal is executed, the journal name is resolved in base 10

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo

This closes #2210 from SunDapeng1/branch-2208
TREE:tree 79db6d921a091826c31fc355a6c674308e061141 ------
TIME:12/22/2019 18:47:22

COMMIT:Updated site at revision 9d61fb4fe

TREE:tree f0bcf3f511a08ca8486efae5e71f42a76dbfde2b ------
TIME:12/09/2019 10:03:22

COMMIT:[DOCS] Modify “Using Autoecovery”,recover does not support the specified target bookie

### Motivation 
`bin/bookkeeper shell recover` only receives one parameter i.e. failed bookie. According to [recovery](https://bookkeeper.apache.org/docs/latest/admin/autorecovery/#manual-recovery) it is useless to specify ZooKeeper address and target bookie.
![image](https://user-images.githubusercontent.com/42792537/68930100-a3babf80-07c8-11ea-90e1-320cfac1b77b.png)

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2207 from SunDapeng1/branch-2207
TREE:tree e21609fec5a0d32d3c45b13864104781f66c41c3 ------
TIME:12/09/2019 09:08:25

COMMIT:Updated site at revision 2ca4025e4

TREE:tree 7da7d01f2dfbbf2dd764c6a9ff4b1ffbb7ed6f7a ------
TIME:11/19/2019 03:50:22

COMMIT:Updated site at revision 62e3b9b6f

TREE:tree 31c3a1595e71cc809c22f7e6a95c127ce4c2c2b8 ------
TIME:11/19/2019 03:11:08

COMMIT:[DOCUMENTATION] Add doc for decommissioning bookie process

### Motivation
Documentation on how to decommission a bookie safely.

### Changes
Added `decommission.md`

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2199 from Ghatage/decomission-documentation
TREE:tree 7b9b52aa7c8b4365cfc96ad219a2bb04a0e76565 ------
TIME:11/19/2019 02:30:53

COMMIT:Make 4.9.2 as stable

Descriptions of the changes in this PR:



### Motivation

4.10.0 has been released, 4.9.2 has been running in production for a while on several known projects. We can mark 4.9.2 as current 'stable' 

### Changes
Update website config.
Fix DLog version.





Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <None>

This closes #2200 from eolivelli/fix/change-stable-492
TREE:tree f994cea9dd7307e838c6ccd2862344db9ab47d3e ------
TIME:11/19/2019 02:28:47

COMMIT:Bump jackson.version from 2.9.7 to 2.10.1

Bumps `jackson.version` from 2.9.7 to 2.10.1.

Updates `jackson-core` from 2.9.7 to 2.10.1
- [Release notes](https://github.com/FasterXML/jackson-core/releases)
- [Commits](https://github.com/FasterXML/jackson-core/compare/jackson-core-2.9.7...jackson-core-2.10.1)

Updates `jackson-databind` from 2.9.7 to 2.10.1
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

Updates `jackson-annotations` from 2.9.7 to 2.10.1
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

Updates `jackson-module-paranamer` from 2.9.7 to 2.10.1
- [Release notes](https://github.com/FasterXML/jackson-modules-base/releases)
- [Commits](https://github.com/FasterXML/jackson-modules-base/compare/jackson-modules-base-2.9.7...jackson-modules-base-2.10.1)

Updates `jackson-module-scala_2.11` from 2.9.7 to 2.10.1
- [Release notes](https://github.com/FasterXML/jackson-module-scala/releases)
- [Changelog](https://github.com/FasterXML/jackson-module-scala/blob/master/release.sbt)
- [Commits](https://github.com/FasterXML/jackson-module-scala/compare/jackson-module-scala-2.9.7...jackson-module-scala-2.10.1)

Signed-off-by: dependabot[bot] <support@github.com>
TREE:tree 689660060e0c4a21c5ff0b62abe7fd54190aa2d7 ------
TIME:11/13/2019 04:16:48

COMMIT:Bump jetty.version from 9.4.5.v20170502 to 9.4.22.v20191022

Bumps `jetty.version` from 9.4.5.v20170502 to 9.4.22.v20191022.

Updates `jetty-server` from 9.4.5.v20170502 to 9.4.22.v20191022
- [Release notes](https://github.com/eclipse/jetty.project/releases)
- [Commits](https://github.com/eclipse/jetty.project/compare/jetty-9.4.5.v20170502...jetty-9.4.22.v20191022)

Updates `jetty-servlet` from 9.4.5.v20170502 to 9.4.22.v20191022
- [Release notes](https://github.com/eclipse/jetty.project/releases)
- [Commits](https://github.com/eclipse/jetty.project/compare/jetty-9.4.5.v20170502...jetty-9.4.22.v20191022)

Signed-off-by: dependabot[bot] <support@github.com>
TREE:tree a4f828c652b31b39d0cea67cb95a8a0e7908ba85 ------
TIME:11/11/2019 21:48:16

COMMIT:Bump Python client version

TREE:tree 4dccca74bdd1a1b1c8a42886e5172bb290bd19ac ------
TIME:11/11/2019 21:47:22

COMMIT:Updated site at revision b1991e6b3

TREE:tree d3c9c846d99fedd0fefea528703cffc53fce209e ------
TIME:11/11/2019 10:44:22

COMMIT:Release notes for 4.10

Please only consider this commit https://github.com/apache/bookkeeper/commit/0d91a95f306031d85c6a8195b0e6d73523cbfc0a as it contains the release notes.
The previous commit is only the preparation for the website.

Reviewers: Sijie Guo

This closes #2165 from eolivelli/fix/release-notes-410
TREE:tree ea6e05f84ec252f009840dfe9da8852c56d49206 ------
TIME:11/11/2019 10:04:43

COMMIT:Fix the log level of not support Sse42Crc32C

Signed-off-by: xiaolong.ran <ranxiaolong716gmail.com>

### Motivation

When users are using Apache Pulsar, they will encounter the following error about `Sse42Crc32C`. But in fact it does not affect the correctness of Apache Pulsar use. But the error level log information will cause confusion for the user.
```
10:12:49.119 [pulsar-ordered-OrderedExecutor-0-0-EventThread] ERROR org.apache.bookkeeper.proto.checksum.CRC32CDigestManager - Sse42Crc32C is not supported, will use a slower CRC32C implementation.
```



### Changes

Replace the log level of `not support Sse42Crc32C` from error to warn.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2198 from wolfstudy/xiaolong/sse42Crc32C
TREE:tree e90cad22abaa5e3e86e0304544c13bf033872342 ------
TIME:11/07/2019 12:25:41

COMMIT:Updated site at revision 557dfe90f

TREE:tree 18a8787e470ebe2923a365a432d7fd6b09f7aa9f ------
TIME:11/06/2019 07:43:29

COMMIT:[DOCS] Update coding_guide.md

### Motivation
The link to `OrderedSafeExecutor` does not work.

### Changes
Correct the link to `OrderedExecutor`.

Reviewers: Sijie Guo <None>

This closes #2196 from Jennifer88huang/patch-1
TREE:tree 7f35e0b440f13693e627bff6eea51a46d8100909 ------
TIME:11/06/2019 07:04:19

COMMIT:Add -Dtwitter to fix auto-build

Descriptions of the changes in this PR:



### Motivation

Make bin/bookkeeper standalone work again

### Changes


Add -Dtwitter in order to activate "Twitter" profile and build Twitter stats providers.





Reviewers: Sijie Guo <None>

This closes #2195 from eolivelli/fix/add-twitter-common

(cherry picked from commit 43f8cd74fea3e97de11f4bd90532e884df375332)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree d29672b005558538e35c7d9baf38a494f3883e16 ------
TIME:11/03/2019 11:41:48

COMMIT:Add -Dtwitter to fix auto-build

Descriptions of the changes in this PR:



### Motivation

Make bin/bookkeeper standalone work again

### Changes


Add -Dtwitter in order to activate "Twitter" profile and build Twitter stats providers.





Reviewers: Sijie Guo <None>

This closes #2195 from eolivelli/fix/add-twitter-common
TREE:tree 32737613a599efa4e0223499dec28f4213965f57 ------
TIME:11/03/2019 11:41:48

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.10.0-rc0

TREE:tree 1ad6be572f66a4f3275dafc03c1ba39ae1fae40b ------
TIME:10/31/2019 12:00:37

COMMIT:[maven-release-plugin] prepare release v4.10.0-rc0

TREE:tree 0b01128ca306b1a86e0f3b02ef8011da7125445b ------
TIME:10/31/2019 11:59:46

COMMIT:Updated site at revision f57962bcc

TREE:tree d55860a4a0497cdf6e720f44036335e11245efe8 ------
TIME:10/31/2019 11:53:50

COMMIT:Add -Dtwitter to release scripts in order to build Twitter stats providers

### Motivation

With this commit we disable Twitter providers from default build
https://github.com/apache/bookkeeper/commit/b689d8313654de21759b2e2d47210b75434038c3

This leads to inconsistences during the release process

### Changes

Add -Dtwitter to every release script





Reviewers: Sijie Guo <None>

This closes #2192 from eolivelli/fix/fix-release-scripts
TREE:tree 1872e9d8c23e7a06fbc8033ea7a92d97ab58587e ------
TIME:10/30/2019 15:09:53

COMMIT:Removed mutex contention on BufferedChannel

### Motivation

Contention on `BufferedChannel` between the journal thread and the ForceWriteThread was introduced in #1228.

`unpersistentBytes` is only used if `unpersistedBytesBound > 0`, which is not true by default. We shouldn't be paying the penalty if not needed.

Also `position` doesn't need to be `AtomicLong` since it's only updated while the mutex is taken. Using a volatile will have the same effect with less overhead.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #2187 from merlimat/buffered-channel-contention
TREE:tree 2f9ba53e9cbac548e99f13c76ffa04a717e484bb ------
TIME:10/31/2019 11:17:58

COMMIT:Removed mutex contention on BufferedChannel

### Motivation

Contention on `BufferedChannel` between the journal thread and the ForceWriteThread was introduced in #1228.

`unpersistentBytes` is only used if `unpersistedBytesBound > 0`, which is not true by default. We shouldn't be paying the penalty if not needed.

Also `position` doesn't need to be `AtomicLong` since it's only updated while the mutex is taken. Using a volatile will have the same effect with less overhead.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #2187 from merlimat/buffered-channel-contention
TREE:tree d6e3d0b564b7d1ae602c39f551eae9e477aec857 ------
TIME:10/31/2019 11:17:58

COMMIT:Add -Dtwitter to release scripts in order to build Twitter stats providers

### Motivation

With this commit we disable Twitter providers from default build
https://github.com/apache/bookkeeper/commit/b689d8313654de21759b2e2d47210b75434038c3

This leads to inconsistences during the release process

### Changes

Add -Dtwitter to every release script





Reviewers: Sijie Guo <None>

This closes #2192 from eolivelli/fix/fix-release-scripts
TREE:tree 64cfb000fa0bfee904c0ec42aaded159e826f74e ------
TIME:10/30/2019 15:09:53

COMMIT:Fix version in modules that are not active by default

TREE:tree 5f1f307cbbf531675fc94379c2de1ceff834a770 ------
TIME:10/30/2019 13:16:14

COMMIT:Bump checkstyle from 6.19 to 8.18

Bumps [checkstyle](https://github.com/checkstyle/checkstyle) from 6.19 to 8.18.
- [Release notes](https://github.com/checkstyle/checkstyle/releases)
- [Commits](https://github.com/checkstyle/checkstyle/compare/checkstyle-6.19...checkstyle-8.18)

Signed-off-by: dependabot[bot] <support@github.com>
TREE:tree 2ea1b02f94f445d2a9f2fd67b8fc2a046228af0d ------
TIME:10/30/2019 12:58:16

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 9f076ad4d8b368fe91233b42796c6e4529f8dbd6 ------
TIME:10/30/2019 12:57:06

COMMIT:[maven-release-plugin] prepare branch branch-4.10

TREE:tree b3a849db999da2fba98311f2b79bd7ac079d6d6a ------
TIME:10/30/2019 12:56:44

COMMIT:Fix firstStoredEntryId logic in LedgerFragment

Descriptions of the changes in this PR:

- firstStoredEntryId logic in LedgerFragment should return '-1'
only if no bookie contains any entry of that LedgerFragment.

This is a serious issue, in our cluster we observed for a particular ledger, which is marked under replicated, it is returning -1 for firstStoredEntryId and 10 for lastStoredEntryId. Because of that the ReplicationWorker, tries to replicate entryId ‘-1’ and as expected it keeps failing while reading it. So ledger remains under replicated for ever.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2180 from reddycharan/fixfirststoredentryidcom and squashes the following commits:

3cb8ae443 [Charan Reddy Guttapalem] change Long to long
9d9db66dd [Charan Reddy Guttapalem] minor log changes
37b025ccb [Charan Reddy Guttapalem] review comments
6e63fbb1e [Charan Reddy Guttapalem] review comments
dbf836b32 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment
2978a1a39 [Charan Reddy Guttapalem] Fix firstStoredEntryId logic in LedgerFragment
TREE:tree 90a3cdc91b390ea7ea1ca0049e9987758c7e510c ------
TIME:10/29/2019 14:34:06

COMMIT:Issue #2145: Make ledgerDirs in Cookie consistent across generating a…

…nd setting

Descriptions of the changes in this PR:

### Motivation

In PR #1794 we brought in a way to generate a cookie from command line.
However during generation, we have to also encode the ledger dirs by default.

### Changes

Added encoding of ledger dir paths while setting the ledger dirs in a generated cookie in `GenerateCookieCommand.java`.
Tweaked existing test to include more than one ledger path for test coverage.

Master Issue: #2145 

Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2146 from Ghatage/community/2145, closes #2145 and squashes the following commits:

2de21f854 [Anup Ghatage] Fix checkstyle
4695675ff [Anup Ghatage] Revert to handling encoding like in generateCookie(), Add another test
90d02136a [Anup Ghatage] Change GenerateCookieCommandTest's to encodeDirPaths while creating cookies
d8da5153a [Anup Ghatage] Issue #2145: Make ledgerDirs in Cookie consistent across generating and setting
TREE:tree 55c0a8fecfeea32c52d30fb0bc8329854f29c1ea ------
TIME:10/29/2019 13:50:02

COMMIT:Updated site at revision 029e8e0e0

TREE:tree 784930201152a94a4fd7bbb6214500aa27f92e9f ------
TIME:10/26/2019 06:30:09

COMMIT:[DOC] Improve the Manual deployment document.

### Motivation
Following the [Manual deployment](https://bookkeeper.apache.org/docs/latest/deployment/manual/), startup bookie may have failure since there is no znode(e.g. /ledger) about bookie in zookeeper. 

### Changes

Modify the site/docs/latest/deployment/manual.md, set up cluster metadata before startup of bookie.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2183 from SunDapengcmss/branch-2183
TREE:tree b280dd07258b89722accf1d16c9898ca09e5a1c6 ------
TIME:10/26/2019 05:53:32

COMMIT:Upgrade Apache Parent Pom to 19

Descriptions of the changes in this PR:
Update the reference to the common Apache Parent POM, version 19


### Motivation
Be up to date with ASF-wide configurations

### Changes
Change the version




Reviewers: Sijie Guo <None>

This closes #2184 from eolivelli/fix/update-apache-parent
TREE:tree cf6c12ed522c18944565bb780b7b9e12ee184ac2 ------
TIME:10/25/2019 09:20:21

COMMIT:Journal scan should throw IOException when it reads negative length

Descriptions of the changes in this PR:

### Motivation

During journal replay, we can encounter negative length value if there is journal corruption. Currently, due to this bug, we pass negative length to limit a buffer, which throws IllegalArgumentException.

### Changes

Updated the Journal class to throw `IOException` with a clear message, instead of unclear `IllegalArgumentException`.

Master Issue: #2176


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #2177 from karanmehta93/master
TREE:tree 86c707e396cbb89dab7a62d515795b84c874d020 ------
TIME:10/24/2019 23:39:01

COMMIT:Fix logic of areEntriesOfLedgerStoredInTheBookie



Descriptions of the changes in this PR:

- in BookKeeperAdmin.areEntriesOfLedgerStoredInTheBookie method, segmentNum
is not correctly incremented while iterating over the segments of
the ledger. Fixing the logic of it.
- this issue caused decombookie bookieshell command to wait forever.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2186 from reddycharan/fixareledgersstoredcom
TREE:tree b7ea93596af34a7941b5e21f47d58edbaee1f05b ------
TIME:10/24/2019 23:31:19

COMMIT:[DLOG] LogReader shouldn't be added to pending if not locking

The pendingReaders set in BKDistributedLogManager exists so that if
the manager is closed which the lock is being acquired for a reader,
that reader will be closed (even though it hasn't been returned to the
client).

In the case that the reader is opened without a lock, there
is not async action being performed. Previously we were also adding
these readers to the pendingReaders, but they were never being removed
from the pendingReaders, causing a memory leak. This change avoids
adding no-locking readers to pendingReaders.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2185 from ivankelly/orphan-reader
(cherry picked from commit 4f56edf012de8fbf1e33657b390f01fc823aa2c4)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree d43e36aa66f56abf1a13d80e0dfb539ec0cd70f7 ------
TIME:10/23/2019 10:49:00

COMMIT:[DLOG] LogReader shouldn't be added to pending if not locking

The pendingReaders set in BKDistributedLogManager exists so that if
the manager is closed which the lock is being acquired for a reader,
that reader will be closed (even though it hasn't been returned to the
client).

In the case that the reader is opened without a lock, there
is not async action being performed. Previously we were also adding
these readers to the pendingReaders, but they were never being removed
from the pendingReaders, causing a memory leak. This change avoids
adding no-locking readers to pendingReaders.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2185 from ivankelly/orphan-reader
(cherry picked from commit 4f56edf012de8fbf1e33657b390f01fc823aa2c4)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 87ad6862175f8d5ee266e902ecc653d501d79de0 ------
TIME:10/23/2019 10:49:00

COMMIT:[DLOG] LogReader shouldn't be added to pending if not locking

The pendingReaders set in BKDistributedLogManager exists so that if
the manager is closed which the lock is being acquired for a reader,
that reader will be closed (even though it hasn't been returned to the
client).

In the case that the reader is opened without a lock, there
is not async action being performed. Previously we were also adding
these readers to the pendingReaders, but they were never being removed
from the pendingReaders, causing a memory leak. This change avoids
adding no-locking readers to pendingReaders.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2185 from ivankelly/orphan-reader
TREE:tree 286d7cc13ec2006d366d149caa67e5086979d7de ------
TIME:10/23/2019 10:49:00

COMMIT:Update maven version to 3.6.2 for Jenkins

Descriptions of the changes in this PR:

### Motivation

Update maven version to 3.6.2 for Jenkins build environments, since maven 3.6.0 is no longer available in the environment.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #2181 from karanmehta93/updateMavenVersion
TREE:tree 997d11389355f27bc59f63b5104c8139813a5556 ------
TIME:10/17/2019 23:38:37

COMMIT:Call exceptionHandler if Bookie.start fails with exception.


Descriptions of the changes in this PR:

When main thread of Bookie/BookieServer has exited with exception while starting Bookie,
Bookie process shouldn't be alive because of any non-daemon thread that has already
started.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Karan Mehta <k.mehta@salesforce.com>

This closes #2173 from reddycharan/fixbookiestartup
TREE:tree 7bf9c67b19b4910555b1b9a38d8a264c8bda749f ------
TIME:10/11/2019 17:22:54

COMMIT:Updated site at revision 14c997904

TREE:tree 7a5bdc694850e9c6d8c838ba10462ae26e2e121c ------
TIME:10/10/2019 18:09:54

COMMIT:Add documentation for ByteBuffer lifecycle when adding entries

Descriptions of the changes in this PR:

Adding documentation for the issue [here](https://github.com/apache/bookkeeper/issues/2138) as discussed [here](https://github.com/apache/bookkeeper/issues/2138#issuecomment-522099668).

Master Issue: #2138 


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2175 from karanmehta93/master
TREE:tree 42469c50b22100b6fa0d8a057aedfd02d686b89c ------
TIME:10/10/2019 17:31:08

COMMIT:Updated site at revision 2f996dcf0

TREE:tree 84eb88337a7b067fa8a317566b0d3a2272f1131b ------
TIME:10/02/2019 20:47:54

COMMIT:Enhance deferLedgerLockReleaseOfFailedLedger in ReplicationWorker

Descriptions of the changes in this PR:

**Issue:** In the past, ReplicationWorker (RW) retrial logic is enhanced to backoff
replication after threshold number of replication failures of a ledger. This is
to help in a pathological situation where data (ledger/entry) is unavailable.
But this is sub-optimal solution, since there is possibility that each RW can
try recovering a ledger threshold number of times, before a RW defers
ledgerLockRelease. Also each time a RW tries to recover it would read entry/fragment
sequentially and writes to new bookies until it finds a missing entry (completely
unavailable) before failing on replication of that ledger. This is done for
each retrial and it bloats the storage and overreplication need to detect and
delete it, which runs once a day by default. So because of this cluster can
run out of storage space and may become RO cluster. Also this puts quite a bit of
load on cluster in vain.

**So the new proposal is to**
- On each RW. remember the state in addition to the counter. State must include the entries which RW failed to read.
- Counter and state must kept around in each RW node. And exponential backup should be used for deferLedgerLockReleaseOfFailedLedger
- During next attempt by RW, try to read the failed entries which is noted in the state. Read must be successful before proceeding replicating.
- With this model we avoid duplicate copies on each attempt. At the most each RW will create only one copy

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #2166 from reddycharan/enhancereplication
TREE:tree 8f1a0ec8aeebc4ae1736b786b2140fc4c66bbbff ------
TIME:10/02/2019 20:10:16

COMMIT:Avoid throwing exception when doing EntryLogger.internalReadEntry

### Motivation

In the refactoring part of #1819, the `internalReadEntry()` behavior was changed into throwing an exception when reading an entry from a different ledger.

This is causing a big performance issue when doing read-head from the ledger storage, because we keep reading from the current entry log until we find an entry from a different ledger.

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2172 from merlimat/read-internal

(cherry picked from commit 1e63d3c83e89d152cb603955e303b5377d8ab8e6)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 500a848a4aba07c621fc59b62663a42756175595 ------
TIME:10/02/2019 10:05:42

COMMIT:Avoid throwing exception when doing EntryLogger.internalReadEntry

### Motivation

In the refactoring part of #1819, the `internalReadEntry()` behavior was changed into throwing an exception when reading an entry from a different ledger. 

This is causing a big performance issue when doing read-head from the ledger storage, because we keep reading from the current entry log until we find an entry from a different ledger. 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2172 from merlimat/read-internal
TREE:tree e2a06f0cf5b05be2036346f2abbaee7d5131f06a ------
TIME:10/02/2019 10:05:42

COMMIT:Update bc tests to include versions up to 4.9.x

### Motivation

With backward compatibility tests we should cover the compatibility of current version against old versions, current we are only test current version against ancient releases.

This change supersedes #1648 from sijie 

### Changes

Change the list of versions to test clients and bookie upgrade




Reviewers: Matteo Merli <mmerli@apache.org>

This closes #2171 from eolivelli/update_bc_tests
TREE:tree 16bb65a1f0f393b66de207dd1af205fb10b396db ------
TIME:10/02/2019 10:02:54

COMMIT:Change Python client version to 4.10.0

According to the release guide, before cutting a release we have to remove the 'alpha' qualifier from Python client version

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #2163 from eolivelli/fix/python-client
TREE:tree 4c1cee87c97a9c243220ef22a086e3bdaaf59e41 ------
TIME:09/27/2019 16:00:55

COMMIT:Fix tests and upgrade libs to make tests pass on JDK13

- Upgrade Mockito and PowerMock with a version that support JDK12+
- Fix bash script tests

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #2169 from eolivelli/fix/make-tests-pass-jdk13
TREE:tree a715060efe9b6c59c92dea699a96e0ad14038fb0 ------
TIME:09/27/2019 15:59:46

COMMIT:Make the project buildable with JDK12 and JDK13

Upgrade Lombok to 1.18.10
Upgrade Groovy and Groovy Compiler and Maven Compiler plugin
Fix an inverted if that prevented **bkctl** to work with JDK11+ and it made GC LOGGING opts not applied with JDK8 (in bkctl command), a regression introduced by #2132

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #2160 from eolivelli/fix/build-jdk12
TREE:tree b9e59802aec78f0ab4b18f4657375da1f1725bb4 ------
TIME:09/26/2019 09:06:44

COMMIT:Updated site at revision 4c6cf097d

TREE:tree 6d876abf98d09f5f1fffe9e2eedaf1f6722dffcb ------
TIME:08/29/2019 20:48:29

COMMIT:[BOOKIE] auto refresh tls cert at bookie-server

### Motivation

Right now, if certs are rotated then bookie doesn't pick up refresh cert and we have to restart the bookie. So, we need a way to auto refresh certs into bookie.

### Modification

- add configuration `tlsCertFilesRefreshDurationSeconds` to auto refresh cert
- bookie checks last modified date of the cert after auto-refresh duration and refresh certs if requires

### Result

- Bookie can refresh certs without restart.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2154 from rdhabalia/auto_mtls
TREE:tree 3ae52605c91bbf1df51ab1bd79ed0b94bfc89416 ------
TIME:08/29/2019 20:05:45

COMMIT:Issue #2152: Amend disk usage warn log

### Motivation

Fixes #2152

### Changes

Replace `diskUsageThreshold` by `diskUsageWarnThreshold` when disk usage threshold doesn't trigger first.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2153 from murong00/branch-2153, closes #2152
TREE:tree 300f3e3c727c3a9e409d023ee4acfec1278dca35 ------
TIME:08/27/2019 07:47:47

COMMIT:Updated site at revision 171e2f914

TREE:tree aad6a22c2b6162a30ac68d9b29fb5e499ada85bf ------
TIME:08/26/2019 21:37:42

COMMIT:Improve journal throughput when journalSyncData is disabled.

Descriptions of the changes in this PR:

### Motivation

There was a weird behavior observed: when `journalSyncData` is disabled, the journal throughput decreased with multiple journal dirs on same journal disk.

The problem is when `journalSyncData` is disabled, we still sync data to disk when rolling the journal file. The sync time increases to multiple seconds, because it has to flush all the files to disk and wait the whole sync operation to be completed.

### Changes

when `journalSyncData` is disabled, we trigger callbacks when the data is flushed to filesystem but still enqueue a fsync request to force write queue to make sure we still fsync data frequently.

Also added a journal perf tool to do performance testing on journal.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #2150 from sijie/journal_perf
TREE:tree d54fc0a24b7319ae802f63ba0a93a0eb46a58b3d ------
TIME:08/26/2019 20:16:08

COMMIT:Journal should respect to `flushWhenQueueEmpty` setting


Descriptions of the changes in this PR:

*Motivation*

Currently journal doesn't respect to `flushWhenQueueEmpty` setting.
Even `flushWhenQueueEmpty` is set to false, we can still see flushes
triggered due to queue empty.





Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #2147 from sijie/fix_flush_when_empty
TREE:tree c099a5dab5ff983263faca6a0e39cda4ed777e44 ------
TIME:08/26/2019 20:15:15

COMMIT:Simplify if statements

### Changes

* Simplify `if` statements where it is possible (mainly for `if` statements returning boolean values)
* Remove redundant semicolons
* Remove the `close` method where the resource is used withing the try-with-resources block

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2137 from vzhikserg/simplify-if-statements
TREE:tree b0171c093e29896cbe2d9ef41de69a3069419cba ------
TIME:08/23/2019 13:15:59

COMMIT:Replicascheck comprehensive testcases.


Descriptions of the changes in this PR:

- adding comprehensive testcases for newly added
scrutiny - replicasCheck.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2141 from reddycharan/replicaschecktest
TREE:tree ca4a9551e9722bccdaedf3e7b9dfbe3698eb88f7 ------
TIME:08/13/2019 19:53:39

COMMIT:Replace C style array declaration with Java style

### Motivation

The C style array definitions look weird for a Java developer.

### Changes

All C style array declarations were updated with the Java array declarations and the stylechecker rule was added to enforce the Java way. 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2139 from vzhikserg/replace-c-style-array-declaration-with-java-style
TREE:tree 4cb1ea5a96f3cc8aa9b47cc05fa0000839e64c9d ------
TIME:08/05/2019 16:28:17

COMMIT:Remove redundant array creation

### Changes

Remove redundant array creation in log statements to simplify the code.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2129 from vzhikserg/remove-redundant-array-creation
TREE:tree d7f76dde7ea88eca9fcdea07e8dee3bb1f91c140 ------
TIME:07/29/2019 13:52:20

COMMIT:Make default Bookie scripts work on JDK11+

- detect new Java versions in bin/common.sh
- use different defaults on JDK8 vs JDK11+

Descriptions of the changes in this PR:
Change distribution scripts in order to detect a JDK newer then JDK8 and set default JVM options accordingly.

### Motivation

Because I want that BookKeeper tools run out of the box with JDK11

### Changes
1) detect a JDK newer then JDK8, but checking if exists $JAVA_HOME/bin/jshell (this is quite robust, better then parsing some Java version string)
2) use new defaults for JDK11, in particular do not enable experimental and deprecated options, use the new [Java Unified Logging](https://openjdk.java.net/jeps/158) log system for GC

Please note the output of "Java Unified Logging" is very different from the old pre-Java9 one and 
options are different, there is no simple port.

Master Issue: #1912




Reviewers: Sijie Guo <None>

This closes #2132 from eolivelli/fix/run-jdk11
TREE:tree 2c822b9d3cc8fb545fa7e13eec4fd2d3a29f178e ------
TIME:07/29/2019 13:49:00

COMMIT:Updated site at revision 60ff4ec79

TREE:tree 57ded48c21070d600da62105af0f78384f546665 ------
TIME:07/29/2019 09:31:15

COMMIT:Issue #2127: Allow user override default SASL service name bookkeeper

Descriptions of the changes in this PR:
default SASL service name "bookkeeper" can be override by JVM property "bookkeeper.sasl.servicename"

### Motivation



### Changes

Instead of use a constant value, it would read from JVM property first, if it doesn't exists, then use default value from constant variable SaslConstants.SASL_BOOKKEEPER_PROTOCOL

Master Issue: #2127




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo

This closes #2128 from 29x10/master, closes #2127
TREE:tree 78bbaca434570b99fb8e3119efd55aa09550e3ea ------
TIME:07/29/2019 08:11:14

COMMIT:Upgrade to latest Maven version 3.6.1

### Motivation
- ASF CI does not support Maven 3.5.0
- Maven 3.5.0 is a very old version

### Changes

- update Jenkins DSL files to "Maven (latest)"
- update release procedure to Maven 3.6.1
- update docker based dev environment to use Maven 3.6.1 + jdk11 (it was 3.5.0 + legacy jdk9)





Reviewers: Sijie Guo <sijie@apache.org>

This closes #2135 from eolivelli/fix/upgrade-maven
TREE:tree 8d18d72a3ae518e60202225227d0297681e9f8cb ------
TIME:07/29/2019 08:08:44

COMMIT:Updated site at revision 5311e00f3

TREE:tree b8e9de95803441d07529b49597783e741a44f9a7 ------
TIME:07/27/2019 15:30:30

COMMIT:Issue #2130 : Fix for broken URLs

Fixed broken URLs in README for Programmer Guide, Tutorial and Java API.

Descriptions of the changes in this PR:

Updated the URLs.

### Motivation
Wanted to go through the tutorial when I came to the repo and found the links were broken in the README.
### Changes


Master Issue: #2130


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2131 from pavankumarchaitanya/master, closes #2130
TREE:tree f185e48e9267774d3dd6814f286691d8ab453519 ------
TIME:07/27/2019 14:48:56

COMMIT:Make build pass on JDK11, fix javadoc configuration


Descriptions of the changes in this PR:

### Motivation

Build fails on recent JDK11 versions and on JDK11, see #2133, this is because javadoc has problems with references to core Java API when source version is set to 8.

### Changes
Upgrade Java doc plugin to latest 3.1.1 and disable auto linking to core Java classes with
`<detectJavaApiLink>false</detectJavaApiLink>
`
Closes #2133




Reviewers: Sijie Guo <None>

This closes #2134 from eolivelli/fix/javadoc-jdk11

(cherry picked from commit 5311e00f399ae3b5cb39fe03d8b5dd8c0547de14)
Signed-off-by: eolivelli <eolivelli@apache.org>

TREE:tree 0c320ff68220e99a026e85968f1407f3e6a49bda ------
TIME:07/27/2019 14:47:07

COMMIT:Make build pass on JDK11, fix javadoc configuration


Descriptions of the changes in this PR:

### Motivation

Build fails on recent JDK11 versions and on JDK11, see #2133, this is because javadoc has problems with references to core Java API when source version is set to 8.

### Changes
Upgrade Java doc plugin to latest 3.1.1 and disable auto linking to core Java classes with
`<detectJavaApiLink>false</detectJavaApiLink>
`
Closes #2133




Reviewers: Sijie Guo <None>

This closes #2134 from eolivelli/fix/javadoc-jdk11

(cherry picked from commit 5311e00f399ae3b5cb39fe03d8b5dd8c0547de14)
Signed-off-by: eolivelli <eolivelli@apache.org>

TREE:tree ededb4d82784ba23526dafe660425e6cb22ba49e ------
TIME:07/27/2019 14:47:07

COMMIT:Make build pass on JDK11, fix javadoc configuration


Descriptions of the changes in this PR:

### Motivation

Build fails on recent JDK11 versions and on JDK11, see #2133, this is because javadoc has problems with references to core Java API when source version is set to 8.

### Changes
Upgrade Java doc plugin to latest 3.1.1 and disable auto linking to core Java classes with
`<detectJavaApiLink>false</detectJavaApiLink>
`
Closes #2133




Reviewers: Sijie Guo <None>

This closes #2134 from eolivelli/fix/javadoc-jdk11
TREE:tree 143f80827c7b2c3cc734e84a8b39ec4379a60b01 ------
TIME:07/27/2019 14:47:07

COMMIT:Updated site at revision 86e8a72c7

TREE:tree 6845888809d0d0a6c57c5674f63b7dfb0a02026c ------
TIME:07/21/2019 23:11:04

COMMIT:Implementation of new scrutiny - replicas check (Part-1)

Descriptions of the changes in this PR:

- this is implementation of scrutiny mentioned in
https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md
- In this commit, urLedgersElapsedRecoveryGracePeriod check is added to placementPolicyCheck.
- new scrutiny is added replicasCheck and it is disabled by default.
- this is first part of replicas check, in this part currently metrics are not added and
also delayed replicas check for potentially faulty ledgers (failure in trying to get
info. from Bookie of the ensembles of the ledger) is not added.
- have to add more failure test scenarios for replicas check logic.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <None>

This closes #2120 from reddycharan/replicascheck and squashes the following commits:

d4dc81e15 [Sijie Guo] Merge remote-tracking branch 'apache/master' into replicascheck
5a3fa848f [Matteo Minardi] Issue #2124: Test 'ListBookiesCommand ' is failing
df24f672a [vzhikserg] Use bulk operation instead of iteration
2a1cfe249 [vzhikserg] Fix log statements with incorrect placeholders
TREE:tree 07d6273bfb452373f70938f3743b5a7264826576 ------
TIME:07/21/2019 22:28:55

COMMIT:Issue #2124: Test 'ListBookiesCommand ' is failing

Introduced and fixed the tests involving the ListBookiesCommand



Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2125 from mino181295/fix/test-cmd-list, closes #2124
TREE:tree 52c3749322980dbbdf75ea081d34341871042a5f ------
TIME:07/21/2019 08:14:52

COMMIT:Use bulk operation instead of iteration

### Changes

* Use the `addAll` method instead of iteration

Reviewers: Sijie Guo <None>

This closes #2122 from vzhikserg/bulk-call-instead-of-iteration
TREE:tree 0356e734daa9dd601cce54bb62c1eaacbe9f5f89 ------
TIME:07/20/2019 03:15:30

COMMIT:Fix log statements with incorrect placeholders

### Changes

The following changes were made:

- remove unused placeholders in the log statements
- add missing placeholders to the log strings to show the complete information
- remove unnecessary initialization of object arrays in the log statements 

Reviewers: Sijie Guo <None>

This closes #2123 from vzhikserg/fix-log-statements
TREE:tree e2caf8dffb5b32fc0d0fec89df3a1cad9ddae1b9 ------
TIME:07/20/2019 03:14:26

COMMIT:[CI] Prune networks older than 12h

Previously we were using a filter which matched on the network name of
the networks we create. However, docker seems to have removed this
functionality, so now we just prune all unused networks which are more
than 12h old (no CI job should be taking more than 12h).


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2126 from ivankelly/ci-failure
TREE:tree eeb1aef589175e79e314ddc2f0cf6ff109c43365 ------
TIME:07/19/2019 17:48:40

COMMIT:Updated site at revision eecb259de

TREE:tree dbffbcbbfd7b1cfe195139e2e490d4e1b0eb7463 ------
TIME:07/17/2019 11:04:08

COMMIT:Website update for 4.9.2 release

Added 4.9.2 release to website

Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <None>

This closes #2098 from merlimat/master
TREE:tree f1b57b97b3f044de07312efb9b0f30c8d67be015 ------
TIME:07/17/2019 09:46:05

COMMIT:Issue #1961: Included ZooKeeper client AclId.

Descriptions of the changes in this PR:
Included ZooKeeper Acl to the builder.

### Changes

It is now possible to unbind DistributedLog namesapaces.

Master Issue: #1961


Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <None>

This closes #2118 from hugomiguelabreu/master, closes #1961
TREE:tree f5abf288eea246f333e999bcc054e539279ff792 ------
TIME:07/17/2019 09:41:39

COMMIT:Updated site at revision 762a61365

TREE:tree f38b52d3803b445f390f88475f6963f8157a6b2e ------
TIME:07/12/2019 10:51:13

COMMIT:Issue #2103: Avoid stop of entry log compaction

### Motivation

As mentioned in #2103, if an exception occurs during compaction of a specific entry log, `GarbageCollectorThread` does not perform compaction of other entry logs until the bookie server is restarted. As a result, the number of entry logs continues to increase and eventually it will run out of disk space.

### Changes

The cause of the compaction stop is that the `compacting` flag remains true if `compactor.compact(entryLogMeta)` throws some exception.
https://github.com/apache/bookkeeper/blob/b2e099bbc7b13f13825fe78ab009ca132cb3a9ba/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java#L504-L519

Therefore, fixed `GarbageCollectorThread` so that it set the compaction flag to false even if compaction of a specific entry log fails.

Master Issue: #2103

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2121 from massakam/entry-log-compaction, closes #2103
TREE:tree aba323b2bf23affec7f49186ffe047076f6a1be9 ------
TIME:07/12/2019 10:04:46

COMMIT:[BK-SERVER] Clean up over-replicated ledgers owned by different bookies

### Motivation
As described at: https://github.com/apache/pulsar/issues/4632
- Sometimes due to overreplication, bookie contains ledgers which are not owned by that bookie anymore and that bookie is not part of the ensemble-list of those ledgers. In this case, GC finds out those overreplicated ledgers and 
- deletes their index from dbStorage (rocksDB) and 
- tries to delete them from entrylog files.

However, bookie doesn't delete them from entry-log files due to change made in [#870](https://github.com/apache/bookkeeper/issues/870) where bookie avoids deleting ledger if znode of that ledger exists.

Because of that bookie ends up storing large number entrylog files with ledgers which are owned by different bookies. It also cause OOM when GC tries to deal with large number of entry log files.

### Modification

Delete the ledgers if bookie is not part of ensemble list of over-replicated ledgers

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2119 from rdhabalia/overRepl
TREE:tree 347878cde63f07ebb10d683a83bd4c28db7af8f5 ------
TIME:07/12/2019 10:03:10

COMMIT:Implement a method to get all the Bookies

In this PR I'm adding a `BokKeeperAdmin#getAllBookies` to retrive all the bookies (cookie) retriving them from the `RegistrationClient`

This is still a work in progress, I'm adding some tests in the next commit.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2117 from mino181295/allbookies
TREE:tree 2f868571a5c20cc190f9fda1c246e4b7e5023a99 ------
TIME:07/12/2019 10:01:55

COMMIT:Updated site at revision b34162a

TREE:tree eb62ad1c506c4d8f8b5d9c13795ae2d02971dab0 ------
TIME:06/25/2019 09:04:56

COMMIT:Implementation of ZoneawareEnsemblePlacementPolicy


Descriptions of the changes in this PR:

Implementation of ZoneawareEnsemblePlacementPolicy

- This is meant to be used in public cloud infrastructure in which
Availability zones (AZs) are isolated locations within data center
regions from which public cloud services originate and operate.
- ZoneawareEnsemblePlacementPolicy is a placement policy implementation
which uses zone information for placing ensembles.
- In this PlacementPolicy, it is assumed the networktopology/networklocation
 is going to be two level tree, where first part indicates zoneid
and the second part indicates upgradedomainid.
- Here upgrade domain is a set of bookies in an AZ that can be brought
down together for short term maintenance with no impact to the service.
This would help in enabling parallel patching.
- Upgrade domain is a logic concept/division and it may be mapped to
cloud provider native cluster/grouping like Placement Groups in AWS.

Introduce soft PlacementPolicyAdherence

- for ZoneawarePlacementPolicy if in a writeset the number
of zones are in between minnumofzones and desirednumofzones
then it is considered MEETS_SOFT.
- if all of the writesets have zones >= desirednumofzones
then it is considered MEETS_STRICT
- if a writeset contains < minnumofzones then it is considered
FAIL
- add corresponding metric for PlacementPolicyAdherence.MEETS_SOFT


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #2113 from reddycharan/zoneawareplacementpolicycommunitybranch
TREE:tree 9be07b4de9df910291d615137706297f253d9899 ------
TIME:06/25/2019 08:17:52

COMMIT:Added zookeeper host configuration. Closes #1960

Descriptions of the changes in this PR:
Added host IP binding to sandbox.

### Motivation
Allowing running the sandbox inside guest machines and be accessible by all system (including other guest machines). When binding 127.0.0.1 other guest machines will experience an error. By allowing to bind the correct IP the namespace will be available and correctly configured for other hosts.

### Changes
Added a new argument to the _dlog_ tool allowing to define the host IP to bind ZooKeeper and DistributedLog namespace.

Master Issue: #1960




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2081 from hugomiguelabreu/master, closes #1960
TREE:tree 2ea9ab1ceff6c4e2715ba24429cfdb5f45e5484f ------
TIME:06/21/2019 05:22:33

COMMIT:Issue #1970: Ensure getStickyReadBookieIndex returns valid bookie index

Descriptions of the changes in this PR:

Master Issue: #1970
Related Issues: apache/pulsar#3715 apache/pulsar#4526

*Motivation*

Fixes #1970

By default bookie uses a random generator to generate a bookie index as the sticky
read bookie index. However the random generator will generate negative numbers. Hence
it will generate negative bookie indexes in write set and cause ArrayIndexOutOfBoundException
when bookkeeper attempts to read entries.

*Modifications*

Make sure getStickyReadBookieIndex not return negative number.

*Verify this change*

This problem introduced by a random generator. It is very hard to write a unit test to reproduce this issue.
Existing StickyRead tests are good to cover this code change.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Yong Zhang <zhangyong1025.zy@gmail.com>

This closes #2111 from sijie/fix_sticky_read, closes #1970
TREE:tree 090ba81581b7479dd0eafbeaf54a01d3997c58d3 ------
TIME:06/21/2019 05:19:53

COMMIT:Issue #1970: Ensure getStickyReadBookieIndex returns valid bookie index

Descriptions of the changes in this PR:

Master Issue: #1970
Related Issues: apache/pulsar#3715 apache/pulsar#4526

*Motivation*

Fixes #1970

By default bookie uses a random generator to generate a bookie index as the sticky
read bookie index. However the random generator will generate negative numbers. Hence
it will generate negative bookie indexes in write set and cause ArrayIndexOutOfBoundException
when bookkeeper attempts to read entries.

*Modifications*

Make sure getStickyReadBookieIndex not return negative number.

*Verify this change*

This problem introduced by a random generator. It is very hard to write a unit test to reproduce this issue.
Existing StickyRead tests are good to cover this code change.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Yong Zhang <zhangyong1025.zy@gmail.com>

This closes #2111 from sijie/fix_sticky_read, closes #1970
TREE:tree f367641f181f05a4863ee5791dfd78bf53e1d6e9 ------
TIME:06/21/2019 05:19:53

COMMIT:[DLOG] Delete empty inprogress segment on recovery

This addresses an issue, whereby if a user is using getLastTxId() to
find the first txnid when starting to write, they will continue to be
able to write if the last segment written by the previous writer was
empty. If the last segment was empty, then the maxTxId would be higher
than the result of getLastTxId(). maxTxId is read from a znode, while
getLastTxId() reads the txid of the last persisted record. In the case
of an empty inprogress segment, the maxTxId znode was being updated
with the expected first transaction id of the segment.

This patch addresses the issue with the following changes:
1. The maxTxId znode is only updated when inprogress segment is
   completed, so it's value always refers to a transaction that
   exists.
2. On recovery, if the inprogress segment is empty, delete it. There
   was a TODO comment to do this already there.
3. When generating the sequence number, allow a potential sequence
   number which is equal to the current max sequence number, as this
   can be the case where recovery deleted an inprogress empty segment.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2099 from ivankelly/txnid-issue
(cherry picked from commit 533dd5d6e9d3ac9b24d2462f6ae4d4240a4bffdf)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 8d9f3f2b62be3db5e5c27ac185e987696e671c55 ------
TIME:06/20/2019 14:36:11

COMMIT:[DLOG] Delete empty inprogress segment on recovery

This addresses an issue, whereby if a user is using getLastTxId() to
find the first txnid when starting to write, they will continue to be
able to write if the last segment written by the previous writer was
empty. If the last segment was empty, then the maxTxId would be higher
than the result of getLastTxId(). maxTxId is read from a znode, while
getLastTxId() reads the txid of the last persisted record. In the case
of an empty inprogress segment, the maxTxId znode was being updated
with the expected first transaction id of the segment.

This patch addresses the issue with the following changes:
1. The maxTxId znode is only updated when inprogress segment is
   completed, so it's value always refers to a transaction that
   exists.
2. On recovery, if the inprogress segment is empty, delete it. There
   was a TODO comment to do this already there.
3. When generating the sequence number, allow a potential sequence
   number which is equal to the current max sequence number, as this
   can be the case where recovery deleted an inprogress empty segment.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2099 from ivankelly/txnid-issue
(cherry picked from commit 533dd5d6e9d3ac9b24d2462f6ae4d4240a4bffdf)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 43e5ce6cf1204238e60a4ac0eb7336ee0b754c8b ------
TIME:06/20/2019 14:36:11

COMMIT:[DLOG] Delete empty inprogress segment on recovery

This addresses an issue, whereby if a user is using getLastTxId() to
find the first txnid when starting to write, they will continue to be
able to write if the last segment written by the previous writer was
empty. If the last segment was empty, then the maxTxId would be higher
than the result of getLastTxId(). maxTxId is read from a znode, while
getLastTxId() reads the txid of the last persisted record. In the case
of an empty inprogress segment, the maxTxId znode was being updated
with the expected first transaction id of the segment.

This patch addresses the issue with the following changes:
1. The maxTxId znode is only updated when inprogress segment is
   completed, so it's value always refers to a transaction that
   exists.
2. On recovery, if the inprogress segment is empty, delete it. There
   was a TODO comment to do this already there.
3. When generating the sequence number, allow a potential sequence
   number which is equal to the current max sequence number, as this
   can be the case where recovery deleted an inprogress empty segment.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2099 from ivankelly/txnid-issue
TREE:tree 15a25d1189a4e56960951622dd8cf9f1a3456ee0 ------
TIME:06/20/2019 14:36:11

COMMIT:Use https for Twitter maven repo

### Motivation

Fetch the maven dependencies through HTTPs 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2100 from merlimat/merlimat-patch-1
TREE:tree e6eb14a92cb38197e2231c7c8cac0ab36a9b8be0 ------
TIME:06/13/2019 11:22:09

COMMIT:Testcase for limitStatsLogging.



Descriptions of the changes in this PR:

bd2b16e880d172d4761461fdbf85c1bd19b24e36 had introduced
'limitStatsLogging' feature, which would be used to limit statslogging,
where it is needed. eg - we would like to suppress logs from PCBC
in Auditor/ReplicationWorker process.

In this commit I'm adding testcases for this feature.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2109 from reddycharan/testlimitstatslogging
TREE:tree ca49d5da6e20fd19db06f36bd815bfcdd6385808 ------
TIME:06/10/2019 23:57:11

COMMIT:Bring back statslogger to BookKeeper client in ReplicationWorker process.


Descriptions of the changes in this PR:

bd2b16e880d172d4761461fdbf85c1bd19b24e36 is supposed to fix this issue,
but it missed passing statsLogger to createBookKeeperClient method.

For more info. check desc. of bd2b16e880d172d4761461fdbf85c1bd19b24e36.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2108 from reddycharan/enablebookieclientlogger
TREE:tree 08acefb79f42984bb02700f69e8d112cefe4bc6f ------
TIME:06/07/2019 17:27:04

COMMIT:Display filesystem and docker info for all jenkins runs

Descriptions of the changes in this PR:

Changes to shell commands in few scripts

### Motivation

It was difficult to reproduce jenkins test failures locally and the cause might be due to differences in underlying file system. These commands will output more information to spot the exact differences.

### Changes

Running `df` command with an additional `-T` parameter to output filesystem information
Added `docker info` command to print docker details before every test run



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2107 from karanmehta93/master
TREE:tree 1641b1b12771762448a68bda45446dc5de207ed6 ------
TIME:06/07/2019 17:25:58

COMMIT:Update distributedlog library to use NoSuchLedgerExistsOnMetadataServer

*Motivation*

Issue #2066 introduced `NoSuchLedgerExistsOnMetadataServer`. But the distributedlog
library is not updated to reflect to this change.

*Modifications*

Change to use `NoSuchLedgerExistsOnMetadataServer` in the right place.

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2102 from sijie/fix_failure_test
TREE:tree 9d70cf61f947cbe286b252d1571b9f5fc8b6bab7 ------
TIME:06/06/2019 10:58:43

COMMIT:ISSUE #1927: fix NoNodeException in LocalBookeeper

### Motivation
It addresses #1927 where it provides a conf check at the beginning of startLocalBookiesInternal function.
### Changes

- Add a conf check at the beginning of startLocalBookiesInternal function where non-default zkLedgersRootPath is not allowed.

cc sijie 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2082 from zhaohaidao/master, closes #1927
TREE:tree 85015cba2f7c50d2aea8db56b89f884a6eb7e657 ------
TIME:06/06/2019 09:31:27

COMMIT:Updated site at revision b88f4b8

TREE:tree 127d110347b16673d855c7bfec50409c7b143c08 ------
TIME:06/01/2019 03:23:15

COMMIT:Entries must be acknowledged by bookies in multiple fault domains before being acknowledged to client

Descriptions of the changes in this PR:

Bookkeeper write logic makes sure that there are at least ackQuorumSize
number of successful writes before sending ack back to the client. In
many cases these may fall into the same fault domain. A mechanism to
force bookkeeper to make sure that there are acks from at least
minNumRacksPerWriteQuorum number of fault domains and a configuration
to enforce this.

Signed-off-by: Ankit Jain <jain.asalesforce.com>

Master Issue: #2095 

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2096 from ankit-j/ankit-j/enforceFragmentMultipleFaultDomainWrite and squashes the following commits:

c90fd5a3d [Ankit Jain] Addressing review comments
07deae673 [Ankit Jain] Addressing @reddycharan's review comments
14164e291 [Ankit Jain] Fixed spacing error in bk_server.yaml
22c8b3c03 [Ankit Jain] Updated testing.
917ed1c45 [Ankit Jain] Move readLock.unlock to finally block
78e0cd501 [Ankit Jain] Modify test to not use default rack for bookies
ca0bc3b8b [Ankit Jain] Entries must be acknowledged by bookies in multiple fault domains before being acknowledged to client
d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
TREE:tree 878c6b5311400590fa92f84b9629154390298dac ------
TIME:06/01/2019 02:24:55

COMMIT:Update lastLogMark to EOF when replaying journal

Descriptions of the changes in this PR:

### Motivation
 
The [commit](https://github.com/apache/bookkeeper/commit/36be8362399341022c8de64f9319270726df2cb3) caused integration test failure `test101_RegenerateIndex`, with the exception
```
```java.io.IOException: Invalid argument
    at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
    at sun.nio.ch.FileDispatcherImpl.read(FileDispatcherImpl.java:46)
    at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
    at sun.nio.ch.IOUtil.read(IOUtil.java:197)
    at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:159)
    at org.apache.bookkeeper.bookie.JournalChannel.read(JournalChannel.java:257)
    at org.apache.bookkeeper.bookie.Journal.fullRead(Journal.java:1171)
    at org.apache.bookkeeper.bookie.Journal.scanJournal(Journal.java:792)
    at org.apache.bookkeeper.bookie.Bookie.replay(Bookie.java:924)
    at org.apache.bookkeeper.bookie.Bookie.readJournal(Bookie.java:886)
    at org.apache.bookkeeper.bookie.Bookie.start(Bookie.java:943)
    at org.apache.bookkeeper.proto.BookieServer.start(BookieServer.java:141)
    at org.apache.bookkeeper.server.service.BookieService.doStart(BookieService.java:58)
    at org.apache.bookkeeper.common.component.AbstractLifecycleComponent.start(AbstractLifecycleComponent.java:78)
    at org.apache.bookkeeper.common.component.LifecycleComponentStack.lambda$start$2(LifecycleComponentStack.java:113)
    at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:408)
    at org.apache.bookkeeper.common.component.LifecycleComponentStack.start(LifecycleComponentStack.java:113)
    at org.apache.bookkeeper.common.component.ComponentStarter.startComponent(ComponentStarter.java:80)
    at org.apache.bookkeeper.server.Main.doMain(Main.java:229)
    at org.apache.bookkeeper.server.Main.main(Main.java:203)
```

As discussed on slack, it is hard to figure out an exact reason as to why the native JNI call fails with an invalid argument. Hence this PR proposes that the `lastLogMark` is updated to journal EOF instead of an arbitrary LONG.MAX_VALUE. The FileChannel interface defines that the implementors can pass in any long offset and the file handler should return EOF immediately when trying to read it. However it doesn't seem to be working as expected.

### Changes

Updated `Journal#setLastLogMark()` method to accept an `scanOffset` instead of constant `LONG.MAX_VALUE`.

ivankelly eolivelli 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2105 from karanmehta93/master
TREE:tree 53fdaf670022cb7dc1da698abc84fa6eb63e75d7 ------
TIME:05/31/2019 16:49:13

COMMIT:Updated site at revision 7fbd362

TREE:tree d0e7a1e69644f567864f8a84755ad4978d50fbdd ------
TIME:05/20/2019 05:40:42

COMMIT:Fix flaky testIOVertexHTTPServerEndpointForARWithPrometheusProvider test

Descriptions of the changes in this PR:

- in testIOVertexHTTPServerEndpointForARWithPrometheusProvider test
it is not correct to assume that Auditor would have been created and
started completely when we complete AutoRecoveryMain.start and see it
status as started. It would make sure AuditorElector.submitElectionTask
has submitted election task but not the completion of Auditor.start.
So instead of relying on Auditor metric (NUM_UNDER_REPLICATED_LEDGERS),
use ReplicationWorker metric - NUM_FULL_OR_PARTIAL_LEDGERS_REPLICATED.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2093 from reddycharan/fixflakytest
TREE:tree 7b5e8fe64e4345f91b04468f3fcdc7ad1963cf39 ------
TIME:05/20/2019 04:53:36

COMMIT:Fallback to use v3 protocol for some types of requests if they are not implemented in v2

Descriptions of the changes in this PR:

### Motivation

#2071 

### Changes

- Add a client pool use v3 wire protocol
- Obtain client by version
- Currently only support `writeLac` and `readLac`

Master Issue: #2071 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2085 from zymap/compatible_protocol
TREE:tree fa33874f48ca76db8724d1bbb0f3b27eebdd002d ------
TIME:05/20/2019 04:51:58

COMMIT:[SITE] modify nettyMaxFrameSizeBytes Description

Descriptions of the changes in this PR:

Fixes #2079

### Motivation
when the client-side attempt to send more than the default size bytes, it should set up the corresponding parameter `setNettyMaxFrameSizeBytes(int maxSize)`

(Explain: why you're making that change, what is the problem you're trying to solve)

Master Issue: #2079 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2086 from hellozepp/issue-2079
TREE:tree b493dd7df1447b39e463201b62fe1baae38289c2 ------
TIME:05/20/2019 04:45:35

COMMIT:Update and flush lastLogMark when replaying journal

Descriptions of the changes in this PR:

Update `lastLogMark` in memory after replaying each journal
Check for writable ledger dirs with `minUsableSizeForEntryLogCreation` to flush the `lastMark` file for bookies in ReadOnlyMode
Log line changes

### Motivation

Master Issue: #2087 


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #2090 from karanmehta93/master and squashes the following commits:

f802cf6da [Karan Mehta] Fixed small issue in constuctor chaining in BookKeeperClusterTestCase
407e9f1ff [Karan Mehta] Moved lastLogMark updation logic to Journal.java
585313196 [Karan Mehta] Fix checkstyle errors
c3d47014a [Karan Mehta] Fix testJournalLogAddEntryCalledCorrectly test
c72b7b55e [Karan Mehta] Addressed nit
5d238f2b7 [Karan Mehta] Refactored code to update lastLogMark only when replaying journal and addressed nits
b5515697f [Karan Mehta] Issue #2087 Update and flush lastLogMark when replaying journal
d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
TREE:tree 458747a99f0664e5c56a4708dd90bf03db61a812 ------
TIME:05/17/2019 19:38:43

COMMIT:[BK-CLIENT] Check empty ledger-parent node while deleting ledger

### Motivation

As discussed at [#4276](https://github.com/apache/pulsar/issues/4276), while deleting ledger, bk-client should check parent node is empty before issuing delete request for parent znode.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #2097 from rdhabalia/led_del and squashes the following commits:

f5c0ca36c [rdhabalia] return callback with ok
ede5e9403 [rdhabalia] [Bk-Client] Check empty ledger-parent node while deleting ledger
d35aa22ad [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
b4ca4537b [Charan Reddy Guttapalem] Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.
aa84c7fdd [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
10859afb7 [Matteo Merli] Added HTTP handler to expose bookie state
707ae5c85 [karanmehta93] ISSUE #2075: Bookieshell lastmark command isn't functional, always returning 0-0
41b39c6ef [Charan Reddy Guttapalem] ISSUE #1967: make ledger creation and removal robust to zk connectionloss
973d2ab0d [Matteo Merli] Use pure python implementation of MurmurHash
9bb7e4b82 [Venkateswararao Jujjuri (JV)] Explicit error message if extent is not present on ZK (#2066)
bd699e61d [mtang01] ISSUE #2067: reduce byte[] allocation in add entry
7c62e1232 [karanmehta93] ISSUE #2073: ReadOnlyBookieTest#testBookieContinueWritingIfMulti…
42e77802c [Ivan Kelly] DLog Namespace#openLog should declare LogNotFoundException
86bce12b5 [Yong Zhang] Migrate command `ledgermetadata`
407cb35e5 [Charan Reddy Guttapalem] ISSUE #1967: make ledger creation and removal robust to zk connectionloss
eaa601404 [Like] Support asynchronous fence request for V2 ReadEntryProcessor
d23b45ec8 [Ivan Kelly] Fix typo in overview page for 4.8.2
44ee320b6 [Ivan Kelly] k
316b71923 [Ivan Kelly] Wait for LAC update even if ledger fenced
066621507 [Yong Zhang] Migrate command `updatecookie`
6f3396801 [Yong Zhang] Migrate command `triggeraudit`
60d993edf [Yong Zhang] Migrate command `autorecovery`
ed008f278 [Yong Zhang] Migrate command `whoisauditor`
5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid`
90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index`
848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation
06f2b6f50 [Yong Zhang] Migrate command `updateledgers`
7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file`
d4dbb6bfb [Dongfa,Huang] Avoid useless verify if LedgerEntryRequest completed
5c150f283 [Enrico Olivelli] Release notes for 4.9.1
1246826ba [Yong Zhang] Migrate command `recover`
1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck`
67f83620e [Yong Zhang] Migrate command `readledger`
bfbd6b023 [Yong Zhang] Migrate command `decommission`
d40b8b69f [Yong Zhang] Migrate command `readlog`
95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster`
e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated`
0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool
6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster`
c391fe58d [Yong Zhang] Migrate command `readlogmetadata`
120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay`
bf66235e5 [Yong Zhang] Migrate command `deleteledger`
751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time
138a7ae85 [Yong Zhang] Migrate command `metadataformat`
b043d1694 [Yong Zhang] Migrate command `listledgers`
4573285db [Ivan Kelly] Docker autobuild hook
e3d807a32 [Like] Fix IDE complain as there are multi choices for error code
9524a9f4a [Yong Zhang] Migrate command `readjournal`
6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed
e35a108c7 [Like] Fix error message for unrecognized number-of-bookies
5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null
6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2
1448d12aa [Yong Zhang] Migrate command `listfilesondisk`
4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage`
468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty
f26a4cae0 [Ivan Kelly] Release notes for v4.8.2
ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage`
8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity`
fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
TREE:tree 29b9c7b0f3a77655b27b5142d5293300ae0a28e7 ------
TIME:05/17/2019 09:39:12

COMMIT:Bump version to 4.9.3-SNAPSHOT

TREE:tree d509c6e7bf6e31982802b9c7f5f31928a6492090 ------
TIME:05/16/2019 20:34:09

COMMIT:[RELEASE] bump development of branch-4.9 to 4.9.3-SNAPSHOT

TREE:tree cdc9100453da891de25bd7ae2b1e2b1cc659e877 ------
TIME:05/16/2019 20:32:03

COMMIT:Updated site at revision 2ff26d6

TREE:tree 0f0883b02e0b284208e246d8e0700e602ac746c4 ------
TIME:05/16/2019 20:31:33

COMMIT:Added release notes for release 4.9.2

### Motivation

Release notes for patch release 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2088 from merlimat/relnotes-4.9.2
TREE:tree 3939d594edc6f524ec34a6ba8f3585be2879f6ad ------
TIME:05/16/2019 19:35:08

COMMIT:[BK-GC] avoid blocking call in gc-thread

### Motivation

Right now, we have below 3 issues because of which gc thread gets blocked forever and it can't perform gc-task further. Below issues are mainly related to blocking call while doing zk-operation without timeout. 

bug-fixes:
1. right now, [GC - ScanAndCompareGarbageCollector](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/ScanAndCompareGarbageCollector.java#L142) passes timeout in millisecond to [LedgerManager](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/LongHierarchicalLedgerManager.java#L166) but it 
takes it as second and again try to convert it in millis so, 30Kms timeout becomes [30M ms timeout](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java#L245). Sp, fix timeout unit during gc.

2. Right now, GC makes blocking call to get list of children on ledger znode and sometime zk-call back doesn't comeback which blocks the gc-thread forever. However, recently we added the timeout on the [object-waiting-lock](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/ZkUtils.java#L243-L248) which doesn't work because it's in while loop and `object.wait(timeout)` completes without any exception and GC threads keep running in while loop.

3. add zk-timeout during delete ledgers in bookie else it can also block the GC thread.





### Changes

add timeout while bk-gc makes zk-call to verify deleted ledgers.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Rajan Dhabalia <rdhabalia@apache.org>

This closes #1940 from rdhabalia/verify_gc
TREE:tree aa8bbcefb14bee6c1c6f6523385e9bf00359edd0 ------
TIME:05/15/2019 08:35:18

COMMIT:Updated site at revision d35aa22

TREE:tree 7e6b877a466257166d51fcbe519c8c896513a647 ------
TIME:05/14/2019 01:55:38

COMMIT:Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.


Descriptions of the changes in this PR:

- Moving components/methods which are common in nature with respect to
placementpolicy from RackawareEnsemblePlacementPolicyImpl to
TopologyAwareEnsemblePlacementPolicy, so that any new placementpolicy
implementation can extend TopologyAwareEnsemblePlacementPolicy and reuse
those common components/generic.
- Change signature of methods of RackChangeNotifier interface.
- Delete duplicate methods in RackawareEnsemblePlacementPolicyImpl and
TopologyAwareEnsemblePlacementPolicy (missed removing them in #2089)
- Created separate class for BookieNode
- This change has no functionality change, it is just reorganizing code.


Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #2092 from reddycharan/placementpolicyrefactoring
TREE:tree 762687d64e6dbf2f48b1065f71698c05e4718f84 ------
TIME:05/14/2019 01:06:41

COMMIT:Updated site at revision b4ca453

TREE:tree ba51d56a50fe36593eec188e29402c4fdc1173c5 ------
TIME:05/10/2019 19:47:21

COMMIT:Move common placementpolicy components to TopologyAwareEnsemblePlacementPolicy.

Descriptions of the changes in this PR:

- Moving components/methods which are common in nature with respect to
placementpolicy from RackawareEnsemblePlacementPolicyImpl to
TopologyAwareEnsemblePlacementPolicy, so that any new placementpolicy
implementation can extend TopologyAwareEnsemblePlacementPolicy and reuse
those common components/generic.
- This change has no functionality change, it is just reorganizing code.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2089 from reddycharan/3azplacement
TREE:tree 51a128cca550d2c4f562e620a2f619c98f341ee2 ------
TIME:05/10/2019 18:59:17

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.9.2-rc0

TREE:tree b7fea9035eb51c4e27dffa782b5dad06154ea45a ------
TIME:05/08/2019 01:12:12

COMMIT:[maven-release-plugin] prepare release v4.9.2-rc0

TREE:tree 43d68aa6d63be9303bb3284ca519314fd630e5b2 ------
TIME:05/08/2019 00:54:01

COMMIT:Bump python client to 4.9.2

TREE:tree b10142dedcd8b5c2323ba9c4df511ace8ef53bea ------
TIME:05/07/2019 23:30:25

COMMIT:Updated site at revision aa84c7f

TREE:tree 456bf394cae34d9209e65c7167af19de49d093ba ------
TIME:05/05/2019 01:16:58

COMMIT:GetListOfEntriesOfLedger implementation


Descriptions of the changes in this PR:

As described in this BP - https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md, this request returns list of entries bookie contains for the given ledger in an encoded format. The returned list provides weakly consistent state, of the entries of the ledger.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1931 from reddycharan/getlistofentries and squashes the following commits:

467bb8b73 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
757f99156 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
4e84bcba0 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
f5655bb29 [Charan Reddy Guttapalem] GetListOfEntriesOfLedger implementation
TREE:tree f2f5febf73f9378d815135ff6ff6e775023293d9 ------
TIME:05/05/2019 00:28:01

COMMIT:Updated site at revision 10859af

TREE:tree 77ac506e8f756ccceaa762674315aefd5bdfa2ec ------
TIME:05/03/2019 19:16:27

COMMIT:ISSUE #2020: close db properly to avoid open RocksDB failure at the second time

Descriptions of the changes in this PR:

### Motivation

If not releasing resources of failed/closed asyncStore, new creating of the same store identifier will fail, mainly caused by RocksDBException, like #2020 shows.

### Changes

add scStores to factory's instance variable at the `addstore` method of `MVCCStoreFactoryImpl` class;
release store when open fail;

Descriptions of the changes in this PR:

Master Issue: #2020 



Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2022 from ArvinDevel/issue2020, closes #2020
TREE:tree cd76e161321e9895358a9ed9071103bf1dacee91 ------
TIME:04/01/2019 18:27:42

COMMIT:Added HTTP handler to expose bookie state

### Motivation

Allow to check the state of the bookie through HTTP.

The main reason is to allow light-weight probes that can be run frequently to establish whether the bookie is running and meets a minimum readiness criteria. One example is to automatically wait until the bookie has completed the startup sequence.

### Changes

Added new HTTP handler that exposes the values from the bookie `StateManager`. 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1995 from merlimat/bookie-state

(cherry picked from commit 10859afb7e8f2ee095e70f4e5482959bb5a3067a)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree fedd699977e0acfcb52f2e67d4344642f6a78317 ------
TIME:05/03/2019 18:29:24

COMMIT:Added HTTP handler to expose bookie state

### Motivation

Allow to check the state of the bookie through HTTP.

The main reason is to allow light-weight probes that can be run frequently to establish whether the bookie is running and meets a minimum readiness criteria. One example is to automatically wait until the bookie has completed the startup sequence.

### Changes

Added new HTTP handler that exposes the values from the bookie `StateManager`. 

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1995 from merlimat/bookie-state
TREE:tree 009ca1a6da3eed7d31beb7d6443ec2999168631e ------
TIME:05/03/2019 18:29:24

COMMIT:ISSUE #2075: Bookieshell lastmark command isn't functional, always returning 0-0

Descriptions of the changes in this PR:



### Motivation

`lastmark` shell command is to be used while debugging however currently it cannot be used since it returns incorrect value.

### Changes

Updated `LedgerDirsManager` object initialization to use correct `ledgerDirs`.
Master Issue: #2075




Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2076 from karanmehta93/ISSUE-2075, closes #2075

(cherry picked from commit 707ae5c8536f967c0369f951d6178670c5dd031d)
Signed-off-by: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

TREE:tree cbc50e2d7b3908d1ea4c97afc9e3a0df2068c34f ------
TIME:05/02/2019 21:38:31

COMMIT:ISSUE #2075: Bookieshell lastmark command isn't functional, always returning 0-0

Descriptions of the changes in this PR:



### Motivation

`lastmark` shell command is to be used while debugging however currently it cannot be used since it returns incorrect value.

### Changes

Updated `LedgerDirsManager` object initialization to use correct `ledgerDirs`.
Master Issue: #2075




Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2076 from karanmehta93/ISSUE-2075, closes #2075

(cherry picked from commit 707ae5c8536f967c0369f951d6178670c5dd031d)
Signed-off-by: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

TREE:tree eeeaf977cf4627e4c5255aed65924e6d8bc59618 ------
TIME:05/02/2019 21:38:31

COMMIT:ISSUE #2075: Bookieshell lastmark command isn't functional, always returning 0-0

Descriptions of the changes in this PR:



### Motivation

`lastmark` shell command is to be used while debugging however currently it cannot be used since it returns incorrect value.

### Changes

Updated `LedgerDirsManager` object initialization to use correct `ledgerDirs`.
Master Issue: #2075




Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2076 from karanmehta93/ISSUE-2075, closes #2075
TREE:tree f25f5440071ecb614c960b9b64fbdc12262a998f ------
TIME:05/02/2019 21:38:31

COMMIT:ISSUE #1967: make ledger creation and removal robust to zk connectionloss


- fix test failures in TestLedgerMetadataSerDe


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2070 from reddycharan/fixzktestfailures, closes #1967
TREE:tree 213f1487156aadf4d55a508411239796b764b1e1 ------
TIME:05/02/2019 20:42:49

COMMIT:Use pure python implementation of MurmurHash

### Motivation

BK table python client is depending on `mmh3` library for MurmurHash. This library wraps a C based function but there are no binaries published on PyPI. Therefore users need to have a GCC installed in order to install the BK client lib, since it compiles it at install time. GCC is typically not available in Docker containers.

### Modifications

Include a pure python implementation of MurmurHash to use if the C based is not found. 

Notes:
 * I couldn't find any published pure-python MurmurHash implementations on PyPI
 * Importing public-domain code is permitted by ASF



Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2069 from merlimat/mmh3

(cherry picked from commit 973d2ab0da91e5a24b1d30990ca6bb1484f07f7e)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree 075b5a92baa858ffa1418a12f7e71489dcac2057 ------
TIME:05/02/2019 20:37:14

COMMIT:Use pure python implementation of MurmurHash

### Motivation

BK table python client is depending on `mmh3` library for MurmurHash. This library wraps a C based function but there are no binaries published on PyPI. Therefore users need to have a GCC installed in order to install the BK client lib, since it compiles it at install time. GCC is typically not available in Docker containers.

### Modifications

Include a pure python implementation of MurmurHash to use if the C based is not found. 

Notes:
 * I couldn't find any published pure-python MurmurHash implementations on PyPI
 * Importing public-domain code is permitted by ASF



Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #2069 from merlimat/mmh3
TREE:tree f0487510a9d75c34be68bb7562ae42e54cb91f24 ------
TIME:05/02/2019 20:37:14

COMMIT:Updated site at revision 9bb7e4b

TREE:tree 31b62e935ec4c532e6f1e3d3e635a06b330fc54c ------
TIME:05/01/2019 06:13:44

COMMIT:Explicit error message if extent is not present on ZK (#2066)

* Explicit error message if extent is not present on ZK

Client can get no extent error in the following two scenarios.
1. When client attempted to read/open an extent that
   is not on ZK (metadata server)
2. When client attempted to read a Ledger which is on metadata
   server, but somehow missing on bookies (Data server)

It is quite confusing to get the same error, NoSuchLedgerExists
for both these cases. This checkin introduced a new error at the
BookKeeper client level, NoSuchLedgerExistsOnMetadataServer if
it is not available on ZK.

For errors related to Ledger is not available on bookie,
I left NoSuchLedgerExists as-is(instead of changing it to
NoSuchLedgerExistsOnDataServer) to minimize code changes.

This change alone provides enough distinction between these
two types of errors.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>

* Checkstyle fixes

* Some more fixes

* Fixing DL test fixes

TREE:tree b933d2e23581413976aa95047bce0e45b514f53b ------
TIME:05/01/2019 05:20:32

COMMIT:ISSUE #2067: reduce byte[] allocation in add entry

Descriptions of the changes in this PR:
This change removes a byte[] copy in DigestManager digest calculation
(computeDigestAndPackageForSending)
that puts crc header and payload in a continuous buffer. Instead,
it uses protobuf ByteString.concat to concatenate header and payload
without copy when building protobuf message.




### Motivation

In add entry code path, I see lots of byte[] allocated to do digest calculation.  It's possible to not allocate byte[]. 

### Changes

Don't allocate a ByteBuf to copy data. Keep header and data separate, but use ByteString.concat when construct protobuf message.

Master Issue: #2067 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2068 from mtang01/add_entry_mem, closes #2067
TREE:tree de90f6bce4ec182a4059f752fd14e4a26e055e23 ------
TIME:04/30/2019 04:31:04

COMMIT:ISSUE #2073: ReadOnlyBookieTest#testBookieContinueWritingIfMulti…

…pleLedgersPresent is flaky

Descriptions of the changes in this PR:

Updated the test to use random port number for bookie startup instead of predefined one.

### Motivation

ReadOnlyBookieTest#testBookieContinueWritingIfMultipleLedgersPresent test is flaky due to this reason.

### Changes

(Describe: what changes you have made)

Master Issue: #2073 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2074 from karanmehta93/master, closes #2073
TREE:tree c3487e2a4ba7149f684a4c25f005d1de482b6d6a ------
TIME:04/30/2019 04:28:35

COMMIT:DLog Namespace#openLog should declare LogNotFoundException

Other methods such as delete do, so openLog should declare it to be
consistent and to give users a hint that it can be caught.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #2072 from ivankelly/dl-openlog-ex
TREE:tree 80dd0bfeb7e5c1731a769aef16db3997cf49b872 ------
TIME:04/28/2019 04:06:24

COMMIT:Migrate command `ledgermetadata`

Descriptions of the changes in this PR:

Using `bkctl` run command `ledgermetadata`

### Motivation

#2018 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2019 from zymap/command-ledgermetadata
TREE:tree 76944a66b0ed67a4e9b4b7c9e2012f3e6c012321 ------
TIME:04/24/2019 12:17:04

COMMIT:Updated site at revision 407cb35

TREE:tree f9ab0411d8f342b1bbb66082ca2d77202415adbe ------
TIME:04/19/2019 20:03:55

COMMIT:ISSUE #1967: make ledger creation and removal robust to zk connectionloss


Descriptions of the changes in this PR:

The bookkeeper project ZooKeeperClient wrapper for the ZooKeeper client
will resend zk node creations and removals upon reconnect after a
ConnectionLoss event. In the event that the original succeeded, the
resent operation will erroneously return LedgerExistException or
NoSuchLedgerExistsException for creation and removal respectively.

For removal, this patch limits the operation by allowing it to always
succeed if the ledger does not exist in order to make it idempotent.
This is appears to be the simplest solution as exclusive removal isn't
important.

**Note, the above is an actual change to the bk client semantics**

For creation, exclusive creation is cleary important for correctness,
so this patch adds a creator token field to the LedgerMetdata to
disambiguate the above race from a real race. For
AbstractZkLedgerManager, this is simply a random long value.

There's an oportunity for optimization with the above if exclusive
ledger creation failures are expected to be common.  You only actually
need to perform this check if the operation was really resent.  I chose
not to go this route yet because it would require messing with the
ZooKeeperClient interface to surface that information without burdening
other callers.

If the client is set to version 2 or older, this field will be ignored
and the old behavior will be retained.  If the client is version 3 or
newer but creation races with an older client, the new client will
interpret the nonce to be BLANK and thereby detect the race correctly.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2006 from reddycharan/zkretrialrobust, closes #1967
TREE:tree c3cedc73460eb2bce1300b1c4d4278bfb5ebb830 ------
TIME:04/19/2019 19:11:08

COMMIT:Updated site at revision eaa6014

TREE:tree 8e7869dd2355e84f05d5e2fd902e578e4bec3d3d ------
TIME:04/19/2019 04:12:07

COMMIT:Support asynchronous fence request for V2 ReadEntryProcessor

Currently, the ```ReadEntryProcessor``` v2 does not support asynchronous fence request, which wait for 1000 milliseconds to wait it done if it's a fencing request. This pull request attempt to support asynchronous response if a thread pool is provided. 

Closes #283

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2021 from liketic/refactor
TREE:tree 3b8dd957193a7eee93438735a42525ec1f178b9c ------
TIME:04/19/2019 02:44:54

COMMIT:Fix typo in overview page for 4.8.2

The release notes link text was saying the latest version rather than
4.8.2.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2048 from ivankelly/doc-typo-relnotes
TREE:tree caeaabfa00e845a40a60555d5823187b1e770b24 ------
TIME:04/19/2019 02:43:05

COMMIT:k

Otherwise the watch objects will accumulate and eventually cause an
OOM on the bookie, if LAC doesn't progress.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #2051 from ivankelly/tme-oom

(cherry picked from commit 44ee320b64ee1d47ee8b278a843bd033660b7aa0)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 748a12575c789f4083816b8af20bef3835acfda0 ------
TIME:04/19/2019 02:40:07

COMMIT:k

Otherwise the watch objects will accumulate and eventually cause an
OOM on the bookie, if LAC doesn't progress.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #2051 from ivankelly/tme-oom
TREE:tree 11fe8d5a9040db446af988505fc3122b8449fca4 ------
TIME:04/19/2019 02:40:07

COMMIT:Wait for LAC update even if ledger fenced

Previous behaviour was to return straight away. However, LAC can
change when the ledger is fenced and there is no guarantee that a
fenced ledger will turn into a closed ledger (fencing client may
crash), which would cause the client tailing with longpoll LAC to go
into a tight loop.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

This closes #2052 from ivankelly/wait-on-fenced

(cherry picked from commit 316b71923e841c9fdb61159067c4bcf6075d1f21)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 325907c8649c4a09ebcb2f8201a086727de45a32 ------
TIME:04/19/2019 02:32:02

COMMIT:Wait for LAC update even if ledger fenced

Previous behaviour was to return straight away. However, LAC can
change when the ledger is fenced and there is no guarantee that a
fenced ledger will turn into a closed ledger (fencing client may
crash), which would cause the client tailing with longpoll LAC to go
into a tight loop.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

This closes #2052 from ivankelly/wait-on-fenced

(cherry picked from commit 316b71923e841c9fdb61159067c4bcf6075d1f21)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5a93e76abd21173f6812903d1a0d258dac291c8d ------
TIME:04/19/2019 02:32:02

COMMIT:Wait for LAC update even if ledger fenced

Previous behaviour was to return straight away. However, LAC can
change when the ledger is fenced and there is no guarantee that a
fenced ledger will turn into a closed ledger (fencing client may
crash), which would cause the client tailing with longpoll LAC to go
into a tight loop.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

This closes #2052 from ivankelly/wait-on-fenced
TREE:tree 70a6556cad1e4905253ca6b581b14565df90acd9 ------
TIME:04/19/2019 02:32:02

COMMIT:Migrate command `updatecookie`

Descriptions of the changes in this PR:

#2059 

### Description

Provide some admin operation about cookie

```
Command to update cookie

Usage:  bkctl cookie admin [flags]

Flags:

    -d, --delete
        Delete cookie both locally and in zooKeeper

    -e, --expandstorage
        Add new empty ledger/index directories

    -f, --force
        Force delete cookie

    -host, --hostname
        Expects config useHostNameAsBookieID=true as the option value

    -l, --list
        List paths of all the cookies present locally and on zooKeeper


    -h, --help
        Display help information
```

### Changes

Update command `updatecookie` to `admin`


Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #2060 from zymap/command-updatecookie
TREE:tree 5832c92ab11abab54ad872d1b886fdd39e297e4e ------
TIME:04/19/2019 02:30:26

COMMIT:Migrate command `triggeraudit`

Descriptions of the changes in this PR:

- Using `bkctl` run command `triggeraudit`

### Motivation

#2011 

Reviewers: Sijie Guo <sijie@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #2012 from zymap/command-triggeraudit and squashes the following commits:

5a4b496ec [Yong Zhang] Fix conflict ---
236b7d6e5 [Yong Zhang] Fix validation
b039b637e [Yong Zhang] Rename file
8bea52522 [Yong Zhang] Remove unused imports
d39d1e886 [Yong Zhang] Migrate command `triggeraudit`
60d993edf [Yong Zhang] Migrate command `autorecovery`
ed008f278 [Yong Zhang] Migrate command `whoisauditor`
5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid`
90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index`
848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation
06f2b6f50 [Yong Zhang] Migrate command `updateledgers`
7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file`
d4dbb6bfb [Dongfa,Huang] Avoid useless verify if LedgerEntryRequest completed
5c150f283 [Enrico Olivelli] Release notes for 4.9.1
1246826ba [Yong Zhang] Migrate command `recover`
1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck`
67f83620e [Yong Zhang] Migrate command `readledger`
bfbd6b023 [Yong Zhang] Migrate command `decommission`
d40b8b69f [Yong Zhang] Migrate command `readlog`
95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster`
e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated`
0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool
6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster`
c391fe58d [Yong Zhang] Migrate command `readlogmetadata`
120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay`
bf66235e5 [Yong Zhang] Migrate command `deleteledger`
751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time
138a7ae85 [Yong Zhang] Migrate command `metadataformat`
b043d1694 [Yong Zhang] Migrate command `listledgers`
4573285db [Ivan Kelly] Docker autobuild hook
e3d807a32 [Like] Fix IDE complain as there are multi choices for error code
9524a9f4a [Yong Zhang] Migrate command `readjournal`
6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed
e35a108c7 [Like] Fix error message for unrecognized number-of-bookies
5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null
6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2
1448d12aa [Yong Zhang] Migrate command `listfilesondisk`
4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage`
468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty
f26a4cae0 [Ivan Kelly] Release notes for v4.8.2
ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage`
8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity`
fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
TREE:tree 2589defc6d54471a5fc3491f07855a5d02d2de64 ------
TIME:04/17/2019 08:32:24

COMMIT:Migrate command `autorecovery`

Descriptions of the changes in this PR:

- Using `bkctl` run command `autorecovery`

### Motivation

#2009 

Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2010 from zymap/command-autorecovery and squashes the following commits:

6fcd96904 [Yong Zhang] Fix validation
cd383f372 [Yong Zhang] Rename package
efb573221 [Yong Zhang] Rename command
89da2852e [Yong Zhang] Fix error in bookieshell
a037501ee [Yong Zhang] Rename args
4bb36b0b3 [Yong Zhang] Fix imports postion
e41a742d3 [Yong Zhang] Add unit test for command `autorecovery`
b0c91f704 [Yong Zhang] Rename file
cb06f66de [Yong Zhang] Migrate command `autorecovery`
ed008f278 [Yong Zhang] Migrate command `whoisauditor`
5b8e0971a [Yong Zhang] Migrate command `Whatisinstanceid`
90c79444d [Yong Zhang] Migrate command `rebuild-db-ledger-locations-index`
848f8527f [Nicolas Michael] ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation
06f2b6f50 [Yong Zhang] Migrate command `updateledgers`
7ad5849b1 [Yong Zhang] Migrate command `regenerate-interleaved-storage-index-file`
d4dbb6bfb [Dongfa,Huang] Avoid useless verify if LedgerEntryRequest completed
5c150f283 [Enrico Olivelli] Release notes for 4.9.1
1246826ba [Yong Zhang] Migrate command `recover`
1d4cc71fd [Yong Zhang] Migrate command `localconsistencycheck`
67f83620e [Yong Zhang] Migrate command `readledger`
bfbd6b023 [Yong Zhang] Migrate command `decommission`
d40b8b69f [Yong Zhang] Migrate command `readlog`
95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster`
e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated`
0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool
6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster`
c391fe58d [Yong Zhang] Migrate command `readlogmetadata`
120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay`
bf66235e5 [Yong Zhang] Migrate command `deleteledger`
751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time
138a7ae85 [Yong Zhang] Migrate command `metadataformat`
b043d1694 [Yong Zhang] Migrate command `listledgers`
4573285db [Ivan Kelly] Docker autobuild hook
e3d807a32 [Like] Fix IDE complain as there are multi choices for error code
9524a9f4a [Yong Zhang] Migrate command `readjournal`
6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed
e35a108c7 [Like] Fix error message for unrecognized number-of-bookies
5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null
6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2
1448d12aa [Yong Zhang] Migrate command `listfilesondisk`
4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage`
468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty
f26a4cae0 [Ivan Kelly] Release notes for v4.8.2
ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage`
8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity`
fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
TREE:tree bc7034cf47e0accf5453895ea355c4f4c4245743 ------
TIME:04/16/2019 10:48:32

COMMIT:Migrate command `whoisauditor`

Descriptions of the changes in this PR:

- Using `bkctl` run command `whoisauditor`

### Motivation

#2007 


Reviewers: Sijie Guo <sijie@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #2008 from zymap/command-whoisauditor
TREE:tree bbef2bc18ae71b729803740ca914abba9f7d9598 ------
TIME:04/15/2019 08:00:56

COMMIT:Migrate command `Whatisinstanceid`

Descriptions of the changes in this PR:

#2027 



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2028 from zymap/whatisinstanceid
TREE:tree 67ab1835727d08bc3a16d8f7d8c3b0e4de6f8dde ------
TIME:04/11/2019 04:19:47

COMMIT:Migrate command `rebuild-db-ledger-locations-index`

Descriptions of the changes in this PR:

#2036 


Reviewers: Sijie Guo <sijie@apache.org>

This closes #2034 from zymap/command-RDBLLI
TREE:tree c36f14c7f4a7384c746dbc20e29ac856f6f1247b ------
TIME:04/10/2019 13:18:17

COMMIT:ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation

This bugfix for the FastCodahale timer implementation ensures that percentiles provided by a FastSnapshot are calculated correctly even if the total count of events (provided by FastTimer) is out of sync with the recorded events in the percentile buckets.

### Motivation

FastCodahale Timer implementation may miscalculate percentiles if snapshots of values are slightly out of sync, and if only few events have been recorded.

FastCodahale Timers use fine-grained locking and are meant to tolerate that (some) values change while being recorded or while snapshots are created. Currently, the total count of requests is not synchronized with the number of requests recorded in percentile buckets. If a snapshot is created while the total count of the timer has been incremented beyond the sum of values in the percentile buckets, the percentile calculation may produce wrong values.

For example, if 3 percentile values have been recorded, but the overall count is 4, then the percentile calculation would be based on 4 values. This becomes most obvious if a percentile > .75 (e.g. p95) is being calculated. For this, the implementation will try to find 0.95 * 4 values, which is more than the 3 values recorded in the buckets. Since no bucket fulfills the criteria, the bound of the last (overflow) bucket will be returned, i.e. Long.MAX_VALUE.

### Changes

FastSnapshots now bases the percentile calculation on the sum of values in the percentile buckets rather than a count provided by the caller (i.e. FastTimer). This ensures that percentiles are calculated correctly without the need of having all counters fully synchronized.

Master Issue: #2053 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2054 from nicmichael/fast-codahale-bugfix, closes #2053

(cherry picked from commit 848f8527f9d4745753b2f1e22ac1b8e981ea0d1d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 2d3329f49d03e6dc614b329e77180ef6575399cd ------
TIME:04/10/2019 03:44:52

COMMIT:ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation

This bugfix for the FastCodahale timer implementation ensures that percentiles provided by a FastSnapshot are calculated correctly even if the total count of events (provided by FastTimer) is out of sync with the recorded events in the percentile buckets.

### Motivation

FastCodahale Timer implementation may miscalculate percentiles if snapshots of values are slightly out of sync, and if only few events have been recorded.

FastCodahale Timers use fine-grained locking and are meant to tolerate that (some) values change while being recorded or while snapshots are created. Currently, the total count of requests is not synchronized with the number of requests recorded in percentile buckets. If a snapshot is created while the total count of the timer has been incremented beyond the sum of values in the percentile buckets, the percentile calculation may produce wrong values.

For example, if 3 percentile values have been recorded, but the overall count is 4, then the percentile calculation would be based on 4 values. This becomes most obvious if a percentile > .75 (e.g. p95) is being calculated. For this, the implementation will try to find 0.95 * 4 values, which is more than the 3 values recorded in the buckets. Since no bucket fulfills the criteria, the bound of the last (overflow) bucket will be returned, i.e. Long.MAX_VALUE.

### Changes

FastSnapshots now bases the percentile calculation on the sum of values in the percentile buckets rather than a count provided by the caller (i.e. FastTimer). This ensures that percentiles are calculated correctly without the need of having all counters fully synchronized.

Master Issue: #2053 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2054 from nicmichael/fast-codahale-bugfix, closes #2053

(cherry picked from commit 848f8527f9d4745753b2f1e22ac1b8e981ea0d1d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f519b4316277ba6a79c6dfdece9d5681f087072c ------
TIME:04/10/2019 03:44:52

COMMIT:ISSUE #2053: Bugfix for Percentile Calculation in FastCodahale Timer Implementation

This bugfix for the FastCodahale timer implementation ensures that percentiles provided by a FastSnapshot are calculated correctly even if the total count of events (provided by FastTimer) is out of sync with the recorded events in the percentile buckets.

### Motivation

FastCodahale Timer implementation may miscalculate percentiles if snapshots of values are slightly out of sync, and if only few events have been recorded.

FastCodahale Timers use fine-grained locking and are meant to tolerate that (some) values change while being recorded or while snapshots are created. Currently, the total count of requests is not synchronized with the number of requests recorded in percentile buckets. If a snapshot is created while the total count of the timer has been incremented beyond the sum of values in the percentile buckets, the percentile calculation may produce wrong values.

For example, if 3 percentile values have been recorded, but the overall count is 4, then the percentile calculation would be based on 4 values. This becomes most obvious if a percentile > .75 (e.g. p95) is being calculated. For this, the implementation will try to find 0.95 * 4 values, which is more than the 3 values recorded in the buckets. Since no bucket fulfills the criteria, the bound of the last (overflow) bucket will be returned, i.e. Long.MAX_VALUE.

### Changes

FastSnapshots now bases the percentile calculation on the sum of values in the percentile buckets rather than a count provided by the caller (i.e. FastTimer). This ensures that percentiles are calculated correctly without the need of having all counters fully synchronized.

Master Issue: #2053 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2054 from nicmichael/fast-codahale-bugfix, closes #2053
TREE:tree b8dd2c96cab9a83ddb553e27e9c590111ed348cb ------
TIME:04/10/2019 03:44:52

COMMIT:Migrate command `updateledgers`

Descriptions of the changes in this PR:

#2057 

```
Update bookie id in ledgers (this may take a long time).

Usage:  bkctl ledger update [flags]

Flags:

    -host, --hostname
        Expects configuration useHostNameAsBookieID=true as the optin value

    -l, --limit
        Maximum number of ledgers of ledgers to update (default: no limit)

    -p, --printprogress
        Print messages on every configured seconds if verbose turned on
        (default: 10 secs)

    -v, --verbose
        Print status of the ledger updation (default: false)

    -s, updatepersec
        Number of ledgers updating per second (default: 5 per sec)


    -h, --help
        Display help information
```


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2058 from zymap/command-updateledgers
TREE:tree 7f679be3698b76b6d200a6be6b531ee7d3009722 ------
TIME:04/10/2019 03:42:04

COMMIT:Migrate command `regenerate-interleaved-storage-index-file`

Descriptions of the changes in this PR:

#2033 

```
Regenerate an interleaved storage index file, from available entrylogger files.

Usage:  bkctl bookie regenerate-interleaved-storage-index-file [flags]

Flags:

    -b, --b64password
        The password in base64 encoding, for cases where the password is not
        UTF-8.

    -d, --dryrun
        Process the entryLogger, but don't write anthing.

    -l, --ledgerids
        Ledger(s) whose index needs to be regenerated. Multiple can be
        specified, comma separated.

    -p, --password
        The bookie stores the password in the index file, so we need it to
        regenerate.This must match the value in the ledger metadata.


    -h, --help
        Display help information
```


Reviewers: Sijie Guo <sijie@apache.org>

This closes #2035 from zymap/command-RISIF
TREE:tree 3953b2c86c14300ce7f19116fdbd2caad4e06042 ------
TIME:04/09/2019 14:00:26

COMMIT:Avoid useless verify if LedgerEntryRequest completed

Avoid useless verify if LedgerEntryRequest completed

Change-Id: Ifda2a6e218c49105a5627be69566ea2ce4a57699

Descriptions of the changes in this PR:
Print misleading logs when the SpeculativeRequestExecutionPolicy is turned on：
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 602
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 606
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 610
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 614
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 644 , actual: 622
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 640 , actual: 626
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 656 , actual: 630
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 652 , actual: 634
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 648 , actual: 638
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 660 , actual: 642
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 675 , actual: 646
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 671 , actual: 650
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 667 , actual: 654
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 663 , actual: 658
2019-04-03 18:30:49,848 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 670
2019-04-03 18:30:49,849 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 692 , actual: 662



### Motivation
Avoid useless verify and redundant logging(caused by the use of recycled `entryImpl`) if LedgerEntryRequest completed

### Changes
Return immediately if completed

Master Issue: #<master-issue-number>




Reviewers: Sijie Guo <sijie@apache.org>

This closes #2061 from huangdongfa/master
TREE:tree 7109dffeb4dcdc1c0206ec530e62390d243b035f ------
TIME:04/09/2019 10:16:44

COMMIT:Avoid useless verify if LedgerEntryRequest completed

Avoid useless verify if LedgerEntryRequest completed

Change-Id: Ifda2a6e218c49105a5627be69566ea2ce4a57699

Descriptions of the changes in this PR:
Print misleading logs when the SpeculativeRequestExecutionPolicy is turned on：
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 602
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 606
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 610
2019-04-03 18:30:49,839 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 614
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 644 , actual: 622
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 640 , actual: 626
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 656 , actual: 630
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 652 , actual: 634
2019-04-03 18:30:49,843 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 648 , actual: 638
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 660 , actual: 642
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 675 , actual: 646
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 671 , actual: 650
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 667 , actual: 654
2019-04-03 18:30:49,846 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 663 , actual: 658
2019-04-03 18:30:49,848 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: -1 , actual: 670
2019-04-03 18:30:49,849 ERROR org.apache.bookkeeper.client.DigestManager: Entry-id mismatch in authenticated message, expected: 692 , actual: 662



### Motivation
Avoid useless verify and redundant logging(caused by the use of recycled `entryImpl`) if LedgerEntryRequest completed

### Changes
Return immediately if completed

Master Issue: #<master-issue-number>




Reviewers: Sijie Guo <sijie@apache.org>

This closes #2061 from huangdongfa/master
TREE:tree 2fbad9877cb873d98c1e3e08a8ae40492ba944e7 ------
TIME:04/09/2019 10:16:44

COMMIT:Updated site at revision 5c150f2

TREE:tree e8258ddeaca305ef94037022ce4831948eee1ecf ------
TIME:04/08/2019 23:05:30

COMMIT:Release notes for 4.9.1

Descriptions of the changes in this PR:
- Release notes for Apache BookKeeper 4.9.1
- Add Apache BookKeeper docs for 4.9.1 to the website




Reviewers: Sijie Guo <sijie@apache.org>

This closes #1992 from eolivelli/fix/releasenotest491
TREE:tree cdece89dbe6835b9bba8338cb484ac327eb9031e ------
TIME:04/08/2019 22:15:35

COMMIT:Bump version to 4.9.2-SNAPSHOT



Reviewers: Sijie Guo <sijie@apache.org>

This closes #2063 from eolivelli/fix/update-492
TREE:tree f767fcf064e7370d52fe4b362a2584c7657ce906 ------
TIME:04/08/2019 22:14:16

COMMIT:Migrate command `recover`

Descriptions of the changes in this PR:

#2055 

Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2056 from zymap/command-recover
TREE:tree f13298dd3b924b277ed01ceb3db426555031727f ------
TIME:04/08/2019 06:29:48

COMMIT:Migrate command `localconsistencycheck`

Descriptions of the changes in this PR:

#2042 

Using bkctl run command localconsistencycheck

```
Validate Ledger Storage internal metadata
Usage:  bkctl bookie localconsistencycheck [flags]
Flags:

    -h, --help
        Display help information
```

Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2043 from zymap/command-localconsistencycheck and squashes the following commits:

c31f07a00 [Sijie Guo] Merge branch 'master' into command-localconsistencycheck
c391fe58d [Yong Zhang] Migrate command `readlogmetadata`
120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay`
bf66235e5 [Yong Zhang] Migrate command `deleteledger`
c9bb4a42c [Yong Zhang] Migrate command `localconsistencycheck`
751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time
138a7ae85 [Yong Zhang] Migrate command `metadataformat`
b043d1694 [Yong Zhang] Migrate command `listledgers`
4573285db [Ivan Kelly] Docker autobuild hook
e3d807a32 [Like] Fix IDE complain as there are multi choices for error code
9524a9f4a [Yong Zhang] Migrate command `readjournal`
6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed
e35a108c7 [Like] Fix error message for unrecognized number-of-bookies
5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null
6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2
1448d12aa [Yong Zhang] Migrate command `listfilesondisk`
4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage`
468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty
f26a4cae0 [Ivan Kelly] Release notes for v4.8.2
ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage`
8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity`
fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
TREE:tree a7979e4eb46c46c93de1319ac47635016b7656c8 ------
TIME:04/03/2019 15:40:06

COMMIT:Migrate command `readledger`

Descriptions of the changes in this PR:

#2040 

- Using `bkctl` run `readledger`

```
Read a range of entries from a ledger.

Usage:  bkctl bookie readledger [flags]

Flags:

    -b, --bookie
        Only read from a specific bookie

    -ef, --entryformatter
        Set entry formatter

    -fe, --firstentryid
        First Entry ID

    -r, --force-recovery
        Ensure the ledger is properly closed before reading

    -le, --lastentryid
        Last Entry ID

    -l, --ledgerid
        Ledger ID

    -lf, --ledgeridformatter
        Set ledger id formatter

    -m, --msg
        Print message body


    -h, --help
        Display help information
```


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2041 from zymap/command-readledger and squashes the following commits:

56b0a4581 [Yong Zhang] Remove unused import
30dafa85f [Yong Zhang] Merge branch 'master' into command-readledger
bfbd6b023 [Yong Zhang] Migrate command `decommission`
d40b8b69f [Yong Zhang] Migrate command `readlog`
95d145a15 [Yong Zhang] Migrate command `nukeexistingcluster`
e2b1dc7f3 [Yong Zhang] Migrate command `listunderreplicated`
c465c4761 [Yong Zhang] Remove unused import
0988e12c7 [bd2019us] ISSUE #2023: change cached thread pool to fixed thread pool
6a6d7bbd9 [Yong Zhang] Migrate command `initnewcluster`
931df8c2c [Sijie Guo] Merge branch 'master' into command-readledger
c391fe58d [Yong Zhang] Migrate command `readlogmetadata`
120d67737 [Yong Zhang] Migrate command `lostbookierecoverydelay`
bf66235e5 [Yong Zhang] Migrate command `deleteledger`
87e6644f2 [Yong Zhang] Fix some conflict
5ae05f0d2 [Yong Zhang] Migrate command `readledger`
751e55fa4 [Arvin] ISSUE #2020: close db properly to avoid open RocksDB failure at the second time
138a7ae85 [Yong Zhang] Migrate command `metadataformat`
b043d1694 [Yong Zhang] Migrate command `listledgers`
4573285db [Ivan Kelly] Docker autobuild hook
e3d807a32 [Like] Fix IDE complain as there are multi choices for error code
9524a9f4a [Yong Zhang] Migrate command `readjournal`
6c3f33f55 [Yong Zhang] Fix when met unexpect entry id crashed
e35a108c7 [Like] Fix error message for unrecognized number-of-bookies
5902ee27b [Boyang Jerry Peng] fix potential NPE when releasing entry that is null
6aa73ce05 [Ivan Kelly] [RELEASE] Update website to include documentation for 4.8.2
1448d12aa [Yong Zhang] Migrate command `listfilesondisk`
4de598379 [Yong Zhang] Issue #1987: Migrate command `convert-to-interleaved-storage`
468743e7e [Matteo Merli] In DbLedgerStorage use default values when config key is present but empty
f26a4cae0 [Ivan Kelly] Release notes for v4.8.2
ec2636cd2 [Yong Zhang] Issue #1985: Migrate command `convert-to-db-storage`
8cc7239ac [Yong Zhang] Issue #1982: Migrate command `bookiesanity`
fa90f0185 [Yong Zhang] Issue #1980: Migrate command `ledger` from shell to bkctl
TREE:tree 947878ba73f6f813d73784462164fba0b229c2db ------
TIME:04/03/2019 15:30:16

COMMIT:Migrate command `decommission`

Descriptions of the changes in this PR:

#2049 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #2050 from zymap/command-decommissionbookie
TREE:tree df30d756240dabb5ee4d4374efd855c8cfd6727c ------
TIME:04/03/2019 08:18:52

COMMIT:Migrate command `readlog`

Descriptions of the changes in this PR:

#2044 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #2045 from zymap/command-readlog
TREE:tree 257d35a542398e7ca48b583dec22c085e7547563 ------
TIME:04/03/2019 08:17:45

COMMIT:Migrate command `nukeexistingcluster`

Descriptions of the changes in this PR:

#2029 



Reviewers: Sijie Guo <sijie@apache.org>

This closes #2030 from zymap/command-nukeexistingcluster
TREE:tree b9af88c901496dd9308a91bbcb0f1687a19601e0 ------
TIME:04/03/2019 08:16:23

COMMIT:Migrate command `listunderreplicated`

Descriptions of the changes in this PR:

- Using `bkctl` run command `listunderreplicated`

### Motivation

#2013 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2014 from zymap/command-listunderreplicated
TREE:tree 65ebce7abfeedd831b7731b52934f751fe5cef55 ------
TIME:04/03/2019 08:15:23

COMMIT:ISSUE #2023: change cached thread pool to fixed thread pool

Descriptions of the changes in this PR:

change newCachedThreadPool() to newFixedThreadPool(int)

### Motivation

newFixedThreadPool(int) can be freely configured with the total number of threads, while cached thread pool may cause OutOfMemoryError when there are too many threads need to created.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2024 from bd2019us/patch, closes #2023

(cherry picked from commit 0988e12c7a12e1ffae2cdbe932ba414ec06f40cc)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5f3485810555a3722be0dc8488090e24b7d1e155 ------
TIME:04/02/2019 20:35:23

COMMIT:ISSUE #2023: change cached thread pool to fixed thread pool

Descriptions of the changes in this PR:

change newCachedThreadPool() to newFixedThreadPool(int)

### Motivation

newFixedThreadPool(int) can be freely configured with the total number of threads, while cached thread pool may cause OutOfMemoryError when there are too many threads need to created.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2024 from bd2019us/patch, closes #2023
TREE:tree f0d4f12b0e128b253f4b9b5eb79ee152fdf4392a ------
TIME:04/02/2019 20:35:23

COMMIT:Migrate command `initnewcluster`

Descriptions of the changes in this PR:

#2046 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #2047 from zymap/command-initnewcluster
TREE:tree de5437f668c9b1f57e999f0fd54ce0e9c3595667 ------
TIME:04/02/2019 20:33:16

COMMIT:Migrate command `readlogmetadata`

Descriptions of the changes in this PR:

#2038 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #2039 from zymap/command-readlogmetadata
TREE:tree db17c3dbf374ba2138dc88678c7856b49e2ade15 ------
TIME:04/02/2019 20:21:14

COMMIT:Migrate command `lostbookierecoverydelay`

Descriptions of the changes in this PR:

- Using `bkctl` run command `lostbookierecoverydelay`

### Motivation

#2015 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #2016 from zymap/command-lostbookierecoverydelay
TREE:tree f92c9d2ef78ae64b60cf596fffdc79fb315b1144 ------
TIME:04/02/2019 10:39:03

COMMIT:Migrate command `deleteledger`

Descriptions of the changes in this PR:

#2025 



Reviewers: Sijie Guo <sijie@apache.org>

This closes #2026 from zymap/command-deleteledger
TREE:tree 6ac69e2dae2f6e88e4ca006d316027261be1384c ------
TIME:04/02/2019 10:32:23

COMMIT:ISSUE #2020: close db properly to avoid open RocksDB failure at the second time

Descriptions of the changes in this PR:

### Motivation

If not releasing resources of failed/closed asyncStore, new creating of the same store identifier will fail, mainly caused by RocksDBException, like #2020 shows.

### Changes

add scStores to factory's instance variable at the `addstore` method of `MVCCStoreFactoryImpl` class;
release store when open fail;

Descriptions of the changes in this PR:

Master Issue: #2020 



Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2022 from ArvinDevel/issue2020, closes #2020
TREE:tree cd599c8e6baf36baf49202635497181685c81d76 ------
TIME:04/01/2019 18:27:42

COMMIT:Migrate command `metadataformat`

Descriptions of the changes in this PR:

#2031 


Reviewers: Sijie Guo <sijie@apache.org>

This closes #2032 from zymap/command-metaformat
TREE:tree 72c0918db5532d9c1ab4fce6ebc6150c45fabb00 ------
TIME:04/01/2019 18:18:42

COMMIT:Migrate command `listledgers`

Descriptions of the changes in this PR:

Using `bkctl` run command `listledgers`

### Motivation

#2004 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2005 from zymap/command-listledgers
TREE:tree 49c93815dbd67a5b59c332ea88f440bc922a106c ------
TIME:04/01/2019 18:10:39

COMMIT:Updated site at revision 4573285

TREE:tree d048f03e5a1d52a1d489f1bfe25db9d3769c231f ------
TIME:04/01/2019 15:10:04

COMMIT:Docker autobuild hook

This hook will allow docker autobuild to build from the offical tag
and removes the need to update the dockerfile after the release has
been made.

It also adds a build arg, DISTRO_URL which can be used for testing
release candidates.

```
docker build --build-arg BK_VERSION=4.9.1
    --build-arg DISTRO_URL=<rc-tarball-url> .
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2017 from ivankelly/docker-tag2
(cherry picked from commit 4573285db9e027416bf33ab9b959b952d2b0e8d5)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 55b3f55aa153afe25746ccb2dabfc22a32af00c8 ------
TIME:04/01/2019 14:19:49

COMMIT:Docker autobuild hook

This hook will allow docker autobuild to build from the offical tag
and removes the need to update the dockerfile after the release has
been made.

It also adds a build arg, DISTRO_URL which can be used for testing
release candidates.

```
docker build --build-arg BK_VERSION=4.9.1
    --build-arg DISTRO_URL=<rc-tarball-url> .
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2017 from ivankelly/docker-tag2
(cherry picked from commit 4573285db9e027416bf33ab9b959b952d2b0e8d5)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree fc0abbd39c799d5063d5a5154f2062f63f58b771 ------
TIME:04/01/2019 14:19:49

COMMIT:Docker autobuild hook

This hook will allow docker autobuild to build from the offical tag
and removes the need to update the dockerfile after the release has
been made.

It also adds a build arg, DISTRO_URL which can be used for testing
release candidates.

```
docker build --build-arg BK_VERSION=4.9.1
    --build-arg DISTRO_URL=<rc-tarball-url> .
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2017 from ivankelly/docker-tag2
(cherry picked from commit 4573285db9e027416bf33ab9b959b952d2b0e8d5)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree b163d3621213f6dd55b80f9857f597872a1a38df ------
TIME:04/01/2019 14:19:49

COMMIT:Docker autobuild hook

This hook will allow docker autobuild to build from the offical tag
and removes the need to update the dockerfile after the release has
been made.

It also adds a build arg, DISTRO_URL which can be used for testing
release candidates.

```
docker build --build-arg BK_VERSION=4.9.1
    --build-arg DISTRO_URL=<rc-tarball-url> .
```


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #2017 from ivankelly/docker-tag2
TREE:tree 24bb016f9733729b6c15710e067770728e9fb6c4 ------
TIME:04/01/2019 14:19:49

COMMIT:Bumping version to 4.8.3-SNAPSHOT (#2003)


TREE:tree 88d638413b902dd30fbb57522c38246f8bb36256 ------
TIME:04/01/2019 14:18:22

COMMIT:Fix IDE complain as there are multi choices for error code

There are two ```Code``` in ```org.apache.bookkeeper.client. BKException```:

The first is https://github.com/apache/bookkeeper/blob/f26a4cae0e9205ad391c6d4d79f2937871864c28/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BKException.java#L136

The second is https://github.com/apache/bookkeeper/blob/f26a4cae0e9205ad391c6d4d79f2937871864c28/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/api/BKException.java#L180

BKException's subclasses cannot auto choice which ```Code```. 


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1999 from liketic/fix-code
TREE:tree 70198f0c062a7c5384edc3786be56d06020e7614 ------
TIME:03/29/2019 05:45:33

COMMIT:Migrate command `readjournal`

Descriptions of the changes in this PR:

- Use `bkctl` execute `readjournal` command

### Motivation

- Migrate from bookieshelll




Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #2000 from zymap/command-readjournal
TREE:tree ecf109fcef0d7636d75e947b968685c2524c09ec ------
TIME:03/29/2019 05:44:24

COMMIT:Fix when met unexpect entry id crashed


Fixes #2001

*Motivation*

When met a unexpect entry id, db indexes failed cleanup.

*Modifications*

Catch the exception and ignore it.

Master Issue: #2001 




Reviewers: Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #2002 from zymap/fixnoentryexception

(cherry picked from commit 6c3f33f55fc3754925323b1d077108331d027aaf)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b21e07c40108354346e5ba84b206e58812c8b9bf ------
TIME:03/27/2019 16:35:48

COMMIT:Fix when met unexpect entry id crashed


Fixes #2001

*Motivation*

When met a unexpect entry id, db indexes failed cleanup.

*Modifications*

Catch the exception and ignore it.

Master Issue: #2001 




Reviewers: Jia Zhai <zhaijia@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #2002 from zymap/fixnoentryexception
TREE:tree 629ba4b09913c7270e915ed7cbe97c2260f7772a ------
TIME:03/27/2019 16:35:48

COMMIT:Fix error message for unrecognized number-of-bookies

Closes #1925 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1997 from liketic/fix-issue-1925

(cherry picked from commit e35a108c7a47d746d5010ee5178712496741cc18)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 824168b85c052042cbfb8b89bc3ff2015956ad13 ------
TIME:03/27/2019 06:11:17

COMMIT:Fix error message for unrecognized number-of-bookies

Closes #1925 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1997 from liketic/fix-issue-1925
TREE:tree d0643ae714bca3fcb782bb37a24de35f9efada91 ------
TIME:03/27/2019 06:11:17

COMMIT:Updated site at revision 6aa73ce

TREE:tree 68c9d4715b3782f81e28d143c54d2298012fefc2 ------
TIME:03/26/2019 16:10:54

COMMIT:fix potential NPE when releasing entry that is null

Descriptions of the changes in this PR:

### Motivation
A interrupt exception can occur during the poll operation of the blocking and cause a NPE to be thrown

### Changes
Check if entry is null before trying to release it


Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1998 from jerrypeng/fix_NPE
TREE:tree a0bef3ae8c4bdd3dc842cf50f25c1e01e8ff1e6c ------
TIME:03/26/2019 15:33:54

COMMIT:[RELEASE] Update website to include documentation for 4.8.2



Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1993 from ivankelly/482site
TREE:tree 2859f7c7d03126953f3a4707bed0045e94f43331 ------
TIME:03/26/2019 15:27:23

COMMIT:Migrate command `listfilesondisk`

Descriptions of the changes in this PR:

- Replace command `listfilesondisk` 

### Motivation

- Use `bkctl` to run command `listfilesondisk`
- #1989 
### Changes

- Add command in `bkctl`


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1990 from zymap/command-listfilesondisc and squashes the following commits:

922e2b70a [Sijie Guo] Merge branch 'master' into command-listfilesondisc
8d72a00bd [Yong Zhang] Migrate command `listfilesondisk`
TREE:tree 4e1697547840b7507beba295e40a994467b6ce49 ------
TIME:03/25/2019 04:14:16

COMMIT:Issue #1987: Migrate command `convert-to-interleaved-storage`

Descriptions of the changes in this PR:

- Migrate command `convert-to-interleaved-storage`

### Motivation

- #1987 
- Use `bkctl` to run command `convert-to-interleaved-storage`

### Changes

- Add command in `bookiegroup`


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1988 from zymap/command-ctis, closes #1987
TREE:tree db06b122ba7465f59535b06a74ef227229efec99 ------
TIME:03/25/2019 03:50:13

COMMIT:In DbLedgerStorage use default values when config key is present but empty

### Motivation

Currently setting the `dbStorage_writeCacheMaxSizeMb=` with empty value is making the
DbLedgerStorage initialize to fail since the empty string is being parsed as long. 

Instead, we should just apply the default value as in the case where the config key is not there.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1996 from merlimat/db-storage-config

(cherry picked from commit 468743e7e45ce5a862ddef41de0e4b87d988402a)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fa8bca6352c24846837e5e00ffe6a2e2c68f81a4 ------
TIME:03/25/2019 03:43:27

COMMIT:In DbLedgerStorage use default values when config key is present but empty

### Motivation

Currently setting the `dbStorage_writeCacheMaxSizeMb=` with empty value is making the
DbLedgerStorage initialize to fail since the empty string is being parsed as long. 

Instead, we should just apply the default value as in the case where the config key is not there.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1996 from merlimat/db-storage-config
TREE:tree 10896909ac5b3cc833f57da1c486941065b0c3b4 ------
TIME:03/25/2019 03:43:27

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.9.1-rc0

TREE:tree c72e5e1056cf3e27af0c6221ce8db953735bd217 ------
TIME:03/21/2019 22:59:23

COMMIT:[maven-release-plugin] prepare release v4.9.1-rc0

TREE:tree d9e7b5ffa1ea07d982efa3e8bc9128ad6abfea95 ------
TIME:03/21/2019 22:59:01

COMMIT:Updated site at revision f26a4ca

TREE:tree 0125f1136733c1e11923d791ab48ee7ee95ab827 ------
TIME:03/20/2019 11:05:44

COMMIT:Release notes for v4.8.2



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #1976 from ivankelly/v4.8.2-relnotes
TREE:tree adcfcec33be6ac84c4d58875a4e33e8c5cafd802 ------
TIME:03/20/2019 10:19:22

COMMIT:Bump python client to 4.9.1






Reviewers: Sijie Guo <sijie@apache.org>

This closes #1994 from eolivelli/fix/bump-python-client-version-491
TREE:tree c72e5e1056cf3e27af0c6221ce8db953735bd217 ------
TIME:03/20/2019 09:42:37

COMMIT:Issue #1985: Migrate command `convert-to-db-storage`

*Motivation*

- Use bkctl to run command `convert-to-db-storage`

*Modifications*

- #1985 
- Add command in `bookieGroup`


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1986 from zymap/command-ctdb, closes #1985
TREE:tree 8c93cba709c7a1c08f16e9837a21fdfc978f07d9 ------
TIME:03/19/2019 16:38:40

COMMIT:Issue #1982: Migrate command `bookiesanity`

Descriptions of the changes in this PR:

- migrate command `bookiesanity`

### Changes

- use command by `bkctl bookie sanity`

Master Issue: #1982 


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1983 from zymap/command-bookiesanity, closes #1982
TREE:tree d336f8bccb03c084ec5218e3f6594b2184e32cfb ------
TIME:03/18/2019 09:11:27

COMMIT:Issue #1980: Migrate command `ledger` from shell to bkctl

Descriptions of the changes in this PR:

Migrate command `ledger` from shell to bkctl

### Motivation

#1980 

### Changes

- Add new implement for `ledger`


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1981 from zymap/command-ledger, closes #1980
TREE:tree 031c3ebeee1088439bcd1b3a82181cf7f68bed42 ------
TIME:03/15/2019 07:56:33

COMMIT:Tool to search and replace bookie ids in ledger metadata

To use:
```
bin/bkctl bookieid searchreplace --from <from> --to <to>
```

To be used in cases where the DNS name of the bookie has to change, and you don't want all the data to have to be moved by autorecovery.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #1968 from ivankelly/bk-replace-bookieid
TREE:tree ebecf5732425854fbf8d65e1969b79c1c3ae94ae ------
TIME:03/14/2019 06:19:23

COMMIT:Issue #1977: Migrate command 'bookieinit'

Descriptions of the changes in this PR:

Migrate command `bookieinit` from shell to bkctl

### Motivation

 Issue #1977 

### Changes

- Replace command `bookieinit` in shell


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1978 from zymap/command-bookieinit, closes #1977
TREE:tree 13d8f8e857597de0292ca8554f2c2fde0c78ab54 ------
TIME:03/12/2019 17:30:43

COMMIT:Migrate command `bookieformat`

Descriptions of the changes in this PR:

Migrate command `bookieformat`.

### Motivation

#1974 

### Changes

- Add command `bookieformat` to bkctl
- Replace command in shell


Reviewers: Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1975 from zymap/command-bookieformat and squashes the following commits:

90e8a1dde [Yong Zhang] Add doc
e079383ac [Yong Zhang] Fix the way deal with exception
eb78fe74f [Yong Zhang] Add unit test for `commandformat`
a3bafe6d9 [Yong Zhang] Migrate command `bookieformate` to bkctl
TREE:tree 4ad9c21013f399cb2eac49435d3812105994d696 ------
TIME:03/11/2019 02:57:35

COMMIT:Migrate command `bookieinfo` to bkctl

### Motivation

Migrate command `bookieinfo` to bkctl.

### Changes

You can execute as `bin/bkctl bookie  info`.


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1972 from zymap/yongzhang/command_info
TREE:tree 8e2755446357182f9444e86930b871098faf4bb9 ------
TIME:03/10/2019 11:32:27

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.8.2-rc0

TREE:tree 50014b8acedad2d1aa78d0a5f796b46027c6c3e1 ------
TIME:03/08/2019 15:42:47

COMMIT:[maven-release-plugin] prepare release v4.8.2-rc0

TREE:tree a4b380fa6f38c1c1d85625a82e4e1e955c2dd74a ------
TIME:03/08/2019 15:35:28

COMMIT:Add validateConf to AbstractDNSToSwitchMapping

Descriptions of the changes in this PR:

- when setConf of AbstractDNSToSwitchMapping  is called it
should do sanity checking of the conf/env. and throw
RuntimeException if things are not valid.
- For RawScriptBasedMapping.validateConf, try executing
the script with no arguments for sanity check purpose.
Here it is expected that running script with no arguments
would do sanity check of the script and the env.

(there are 2 commits in this PR, but this PR is meant for the second commit and there is other PR for the first commit)

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1965 from reddycharan/sanitycheckmappingconf
TREE:tree 5c47d8fa37aa82f25ac879b3f6f00aaca3a2a892 ------
TIME:03/05/2019 19:27:04

COMMIT:[DLOG] Avoid double read in readahead

There was a bug in the ReadAheadReader whereby, if it was in a paused
state and the last segment it had read had been closed, then when a
writer started writing new segments, the ReadAheadReader would issue a
double read. This would end up triggering an error when it got to the
end of the segment as the issued one of the issued reads would then be
cancelled when the segment was closed.

This fix adds an explicit state machine to the reader and moves all
state transitions to run on the ordered executor, so only one read can
ever be issued at a time.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1973 from ivankelly/dlog-reader-crash-master
(cherry picked from commit db5d7e7cf30d58c9c463ce29c7d7900115717206)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 50014b8acedad2d1aa78d0a5f796b46027c6c3e1 ------
TIME:03/05/2019 08:49:23

COMMIT:[DLOG] Avoid double read in readahead

There was a bug in the ReadAheadReader whereby, if it was in a paused
state and the last segment it had read had been closed, then when a
writer started writing new segments, the ReadAheadReader would issue a
double read. This would end up triggering an error when it got to the
end of the segment as the issued one of the issued reads would then be
cancelled when the segment was closed.

This fix adds an explicit state machine to the reader and moves all
state transitions to run on the ordered executor, so only one read can
ever be issued at a time.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1973 from ivankelly/dlog-reader-crash-master
(cherry picked from commit db5d7e7cf30d58c9c463ce29c7d7900115717206)

Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 34f5ea62a4faea6a40107d91c66761043aeffaf4 ------
TIME:03/05/2019 08:49:23

COMMIT:[DLOG] Avoid double read in readahead

There was a bug in the ReadAheadReader whereby, if it was in a paused
state and the last segment it had read had been closed, then when a
writer started writing new segments, the ReadAheadReader would issue a
double read. This would end up triggering an error when it got to the
end of the segment as the issued one of the issued reads would then be
cancelled when the segment was closed.

This fix adds an explicit state machine to the reader and moves all
state transitions to run on the ordered executor, so only one read can
ever be issued at a time.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1973 from ivankelly/dlog-reader-crash-master
TREE:tree ac42fdadef11496d679e15dc7fac1fa1a51c3688 ------
TIME:03/05/2019 08:49:23

COMMIT:Use the same thread to monitor ledger and index directories

Closes #1655 

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1957 from liketic/reduce-monitor-threads
TREE:tree ada3ebedaef10c1704b41d922f1e26bbac6cb8e6 ------
TIME:03/03/2019 16:14:59

COMMIT:Use automatic resource management to close streams

We can use automatic resource management introduced in java 7, which makes code shorter.

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1958 from liketic/use-resource
TREE:tree 38f7e31f3b64d59797d415e0189a7b5b4fde2304 ------
TIME:03/02/2019 16:20:53

COMMIT:Updated site at revision b67e8b2

TREE:tree 8dd48261a357cc5e5d6ecac9cd3c91d86f53f944 ------
TIME:02/28/2019 16:57:47

COMMIT:[PYTHON] Fix python client version

Descriptions of the changes in this PR:

*Motivation*

pip doesn't work with '-SNAPSHOT'. Use `-alpha-0` instead of `-SNAPSHOT` for python.

*Modifications*

- update setup.py file
- update release guide





Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1954 from sijie/fix_python_version
TREE:tree 6bf6b8a8fe982dab265d03162e97a290a68cdd77 ------
TIME:02/28/2019 16:13:21

COMMIT:Updated site at revision 756cae7

TREE:tree d503a49e644341388141717a937a5b1c7079265b ------
TIME:02/28/2019 02:46:50

COMMIT:Use conf value in RackawareEnsemblePlacementPolicyImpl.initialize method



Descriptions of the changes in this PR:

- Use conf value in RackawareEnsemblePlacementPolicyImpl.initialize method,
instead of uninitialized enforceMinNumRacksPerWriteQuorum variable

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1964 from reddycharan/fixexceptioncondition
TREE:tree 9474db9bc56e9cc44bfd07d55ff63d0899fe2068 ------
TIME:02/27/2019 08:50:45

COMMIT:Add http method test for vertx-http server

### Motivation

As discussed at #1953, adding test to verify all http-method works for vertx-http-server.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1963 from rdhabalia/gc_test
TREE:tree aca8b40a6c115367793c6bcc6e9f66c43ef92f9a ------
TIME:02/27/2019 08:37:46

COMMIT:Fix unable download twitter dependencies

---

Fixes #1962

*Motivation*

There are some twitter dependencies can't download from repo

*Modifications*

- remove some using in StatsLoggerBenchmark.java
- update some config in pom.xml

Descriptions of the changes in this PR:

You can add -Dtwitter to choose add twitter dependencies.

### Motivation

(Explain: why you're making that change, what is the problem you're trying to solve)

### Changes

(Describe: what changes you have made)

Master Issue: #1962




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1966 from zymap/master
TREE:tree dd70db8459102e12d693bb726f76b56bd404c85e ------
TIME:02/27/2019 08:21:49

COMMIT:Updated site at revision 9ad191c

TREE:tree f688c5671d1b1511c5d7e905db8697bf151dad73 ------
TIME:02/25/2019 11:01:05

COMMIT:[DOC] popover for 'striped' as well as 'striping'

Adds a popover term for 'striped' to match 'striping'.

### Motivation

<img width="817" alt="screen shot 2019-02-19 at 14 08 07" src="https://user-images.githubusercontent.com/1994486/53020896-ddd07e00-344f-11e9-9327-7beb380515d7.png">

The first "link" text has no pop-over, but the second does. 

### Changes

Just copies the pop-over for striping. It seems inelegant vs. allowing multiple pop-over terms to refer to the same HTML fragment rather than being 1-1, but also is a straightforward and unobtrusive change.

Master Issue: (no issue)




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1951 from kjgorman/striped-popover
TREE:tree 7c262e42ff348ff1745bd5425dc4428d6b4123ae ------
TIME:02/25/2019 10:20:34

COMMIT:Updated site at revision 35c9640

TREE:tree d001fb517c514186d103a535b54c5433ca721276 ------
TIME:02/25/2019 07:16:54

COMMIT:[BOOKIE-HTTP-SERVER] Fix: broken vertx rest endpoints

### Motivation
Right now, vertx-http-server is not serving any rest endpoint except get because vertx server doesn't add put/post/delete http-methods into routing rules.

### Modification
Add put/post/delete http-methods into routing rules.

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1953 from rdhabalia/http_ep
TREE:tree 2b1661fc97324085053ae8e96d350b7f70e2615b ------
TIME:02/25/2019 06:40:19

COMMIT:[PYTHON] [BRANCH-4.9] Bump python client version to 4.9.1-alpha-0



Descriptions of the changes in this PR:

*Motivation*

The development cycle of branch-4.9 is 4.9.1

*Modifications*

Update the python client version to `4.9.1-alpha-0`

Related Issue: #1954 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1955 from sijie/fix_python_version_branch49
TREE:tree cff1e03a247947db21f4521f1af11c9c3118af46 ------
TIME:02/25/2019 06:38:53

COMMIT:Log error (if any) in Shell.runCommand



Descriptions of the changes in this PR:
- Log error (if any) in Shell.runCommand even in the case of successful execution

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1956 from reddycharan/printshellerror
TREE:tree 1aa47874115ed9b0f822172466a99693f4683c99 ------
TIME:02/25/2019 06:36:16

COMMIT:Fix obsoleted proposals document link

Closes #1531 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1959 from liketic/fix-link
TREE:tree 3210ae0e02a740c9bcca4ecc139cac3b2b76638a ------
TIME:02/25/2019 06:35:00

COMMIT:Updated site at revision 49135b6

TREE:tree 4e658a9eb46128d03d7c4f84a917d973be61af85 ------
TIME:02/21/2019 22:20:36

COMMIT:Exclude defaultrack bookies when enforceMinNumRacksPerWriteQuorum is enabled


Descriptions of the changes in this PR:

- enforceMinNumRacksPerWriteQuorum is meant to be used for strict placement policy. So when
it is enabled, bookies which belong to default faultzone/rack (because of failure in resolving
network location) should be excluded from bookie selection.
- add gauge for number of bookies in default faultzone/rack. It will be helpful to create alerts
based on this gauge.
- add gauge for number of ledgers found not adhering to strict placement policy in Auditor's
placement policy check. This gauge will be more helpful in creating alert instead of using
monotonously increasing alert.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Pasha Kuznetsov <None>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1941 from reddycharan/ignoredefaultzoneandfixmetrics
TREE:tree e1d7d5b660bb150ce0ab863192f1dd3d6dd752c3 ------
TIME:02/21/2019 21:41:14

COMMIT:Updated site at revision 31901ff

TREE:tree dfa365ce90aaec4cc487121f34835c8a9217040d ------
TIME:02/20/2019 13:53:16

COMMIT:[DOC] Fix command path in documents

Closes #1556

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1948 from liketic/fix-cmd-dir
TREE:tree 48c8d3c9de96a34e0018c52f5aa874c2c1d77718 ------
TIME:02/20/2019 13:11:00

COMMIT:BOOKKEEPER-1919: putEntryOffset translate FileInfoDeletedException

IndexInMemPageMgr should translate FileInfoDeletedException into
NoLedgerException as expected by users like
InterleavedLedgerStorage.updateEntriesLocations and
EntryMemTable.flushSnapshot.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1950 from athanatos/forupstream/wip-1919
TREE:tree bea146209c1faa77f841ed5cb305c2d279f57590 ------
TIME:02/20/2019 11:43:29

COMMIT:BOOKKEEPER-1919: putEntryOffset translate FileInfoDeletedException

IndexInMemPageMgr should translate FileInfoDeletedException into
NoLedgerException as expected by users like
InterleavedLedgerStorage.updateEntriesLocations and
EntryMemTable.flushSnapshot.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1950 from athanatos/forupstream/wip-1919
TREE:tree 2333b7260f76907e7e6ca6c31248b5ab2a9a9628 ------
TIME:02/20/2019 11:43:29

COMMIT:Filter empty string for networkTopologyScriptFileName



Descriptions of the changes in this PR:

- filter empty string for networkTopologyScriptFileName.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1952 from reddycharan/ignoreemptystring

(cherry picked from commit 166be82390ff18c402647838895ba07e3372e51d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 0d59044d3e0edc26ca0129a5744926ea3ab158f6 ------
TIME:02/20/2019 11:24:03

COMMIT:Filter empty string for networkTopologyScriptFileName



Descriptions of the changes in this PR:

- filter empty string for networkTopologyScriptFileName.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1952 from reddycharan/ignoreemptystring
TREE:tree b42716129dacdf44f5dce593344388eb0d2a4c28 ------
TIME:02/20/2019 11:24:03

COMMIT:Updated site at revision d511f59

TREE:tree 2776db27d20fbd40b6994f09ed74c961c0c066ad ------
TIME:02/16/2019 16:44:11

COMMIT:[BK-GC] Fix GC thread gets blocked

### Motivation

It addresses below thread-stuck while performing gc in bookie.

```
Thread 3363: (state = BLOCKED)
 - java.lang.Object.wait(long) bci=0 (Compiled frame; information may be imprecise)
 - java.lang.Object.wait() bci=2, line=502 (Compiled frame)
 - org.apache.bookkeeper.util.ZkUtils.getChildrenInSingleNode(org.apache.zookeeper.ZooKeeper, java.lang.String) bci=34, line=243 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator.getChildrenAt(java.lang.String) bci=8, line=165 (Compiled fr
ame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$LeafIterator.<init>(org.apache.bookkeeper.meta.LongHierarchic
alLedgerManager$LongHierarchicalLedgerRangeIterator, java.lang.String) bci=11, line=187 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.advance() bci=137, line=261 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=28, line=281 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4, line=278 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4, line=278 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator$InnerIterator.next() bci=4, line=278 (Compiled frame)
 - org.apache.bookkeeper.meta.LongHierarchicalLedgerManager$LongHierarchicalLedgerRangeIterator.next() bci=8, line=304 (Compiled frame)
 - org.apache.bookkeeper.meta.HierarchicalLedgerManager$HierarchicalLedgerRangeIterator.next() bci=26, line=117 (Compiled frame)
 - org.apache.bookkeeper.bookie.ScanAndCompareGarbageCollector.gc(org.apache.bookkeeper.bookie.GarbageCollector$GarbageCleaner) bci=195, line=168 (Compiled frame)
 - org.apache.bookkeeper.bookie.GarbageCollectorThread.doGcLedgers() bci=8, line=393 (Compiled frame)
 - org.apache.bookkeeper.bookie.GarbageCollectorThread.runWithFlags(boolean, boolean, boolean) bci=39, line=355 (Compiled frame)
 - org.apache.bookkeeper.bookie.GarbageCollectorThread.safeRun() bci=28, line=333 (Compiled frame)
 - org.apache.bookkeeper.common.util.SafeRunnable.run() bci=1, line=36 (Compiled frame)
 - java.util.concurrent.Executors$RunnableAdapter.call() bci=4, line=511 (Compiled frame)
 - java.util.concurrent.FutureTask.runAndReset() bci=47, line=308 (Compiled frame)
 - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask) bci=1, line=180 (Compiled frame)
 - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() bci=37, line=294 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) bci=95, line=1142 (Compiled frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() bci=5, line=617 (Interpreted frame)
 - io.netty.util.concurrent.FastThreadLocalRunnable.run() bci=4, line=30 (Interpreted frame)
 - java.lang.Thread.run() bci=11, line=748 (Interpreted frame)
```

### Changes

add time-out to zk operation to avoid GC thread blocking.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1937 from rdhabalia/gc_dead
TREE:tree 1482a0fd50234322b70f7f9cd81f2e117569024b ------
TIME:02/16/2019 15:59:54

COMMIT:[DOC] Add python client release instructions to release guide






Reviewers: Jia Zhai <zhaijia@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1942 from sijie/update_instructions_on_publish_pythonclient
TREE:tree 9d20d2d438b5b32d3d33a2651803db1e448e846e ------
TIME:02/13/2019 03:31:51

COMMIT:Updated site at revision 8c7c377

TREE:tree c8fa406a1b154416d66cce44d8ed16b022bc91d1 ------
TIME:02/09/2019 04:06:43

COMMIT:[WEBSITE] Update release schedule for 4.10.0






Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1932 from sijie/update_release_schedule
TREE:tree 5e43ff5dc8557fd5a9f1b8d7fde3aeff3a60d350 ------
TIME:02/09/2019 02:38:26

COMMIT:fix invalid formatter xml

### Motivation

`formatter.xml` is an invalid xml and eclipse fails to load it.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1939 from rdhabalia/format_xml
TREE:tree cceac8b9c36d680e297beae12cdffb2eae5e5e5b ------
TIME:02/09/2019 02:36:30

COMMIT:Bump Netty and GRPC version



Descriptions of the changes in this PR:

*Motivation*

When we bumped Netty's version, we didn't bump the gRPC version.
So the gRPC version has become very old.

*Modifications*

Bump both gRPC and Netty version to make them aligned with each other.



Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1934 from sijie/bump_grpc_version
TREE:tree 5007d6e0f1f9d132a923e214553e5b657009133f ------
TIME:02/09/2019 02:33:56

COMMIT:[DEV] Break current ISSUE_TEMPLATE into multiple single templates

Descriptions of the changes in this PR:

*Motivation*

Following the Github community recommendations (https://github.com/apache/bookkeeper/community)
to break down current ISSUE_TEMPLATE to multiple single templates

*Modifications*

- break down the `ISSUE_TEMPLATE.md` into multiple files in `ISSUE_TEMPLATE`
- fix the skip phrase in PULL_REQUEST_TEMPLATE



Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1933 from sijie/fix_pull_request_templates
TREE:tree 35df036ebedbf14328e83e77b1485f4a1f6522e2 ------
TIME:02/05/2019 15:42:11

COMMIT:Updated site at revision 4868b55

TREE:tree d9d6f607268dea307d15a569e3047f02face7eee ------
TIME:02/02/2019 01:10:24

COMMIT:[RELEASE] Update Dockerfile to 4.9.0






Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1929 from sijie/update_docker_file

(cherry picked from commit 1da10f8cfaa7ad2bd132f7136291e20ce2d97d5c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fba045bac289b7e59efdcdd87bd5123a48d12447 ------
TIME:02/01/2019 16:53:19

COMMIT:[RELEASE] bump development of branch-4.9 to 4.9.1-SNAPSHOT






Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1930 from sijie/bump_to_version_491
TREE:tree 7a86945ad09c0a8196071ae73297bb65a32c0ae5 ------
TIME:02/02/2019 00:31:11

COMMIT:[RELEASE] Release Notes for 4.9.0






Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>

This closes #1910 from sijie/bk490_release_notes
TREE:tree 9a3fbd91c8cb5d6b46c08eecbca376a5085552dc ------
TIME:02/02/2019 00:28:33

COMMIT:Updated site at revision a79cd08

TREE:tree f6dccddc3a45d5f06678feaf71406ee82e5161e2 ------
TIME:02/01/2019 21:23:46

COMMIT:PlacementPolicy checker validating EnsemblePlacementpolicy


Descriptions of the changes in this PR:

- As described in BP-34,
https://github.com/apache/bookkeeper/blob/master/site/bps/BP-34-cluster-metadata-checker.md,
this change introduces new checker - cluster-metadata-checker with initial responsibility
of validating the EnsemblePlacementpolicy of segments of ledgers (which are writeclosed/fenced).




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1902 from reddycharan/placementpolicyscrutiny
TREE:tree b0c2e0200fbf853021791666baad0ff5e0cc19b8 ------
TIME:02/01/2019 20:43:04

COMMIT:Updated site at revision 2755784

TREE:tree 2ee44e67f5f42bb5c9b46bb626ebdb372e88a455 ------
TIME:02/01/2019 17:33:39

COMMIT:[RELEASE] Update Dockerfile to 4.9.0






Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1929 from sijie/update_docker_file

(cherry picked from commit 1da10f8cfaa7ad2bd132f7136291e20ce2d97d5c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 70d99e927f0a9e0f2bfcdb2c5de0b60845c9bc16 ------
TIME:02/01/2019 16:53:19

COMMIT:[RELEASE] Update Dockerfile to 4.9.0






Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1929 from sijie/update_docker_file
TREE:tree 8c936c21f05687396c1025ec023143c7e1f56482 ------
TIME:02/01/2019 16:53:19

COMMIT:[RELEASE] Update website to include documentation for 4.9.0






Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1928 from sijie/update_website_490
TREE:tree f4419043b60a8d5fba33f368e85fad7f75008de7 ------
TIME:02/01/2019 16:52:12

COMMIT:Updated site at revision d8b894f

TREE:tree f8f5bde90b416eb226bd7563ad6b6561b66edec9 ------
TIME:01/31/2019 11:56:30

COMMIT:Ignore usage of localNode in PlacementPolicy.


Descriptions of the changes in this PR:

'ignoreLocalNodeInPlacementPolicy' specifies whether to ignore localnode
in the internal logic of placement policy. If it is not possible or useful
to use Bookkeeper client node's (or AutoReplicator) rack/region info. for
placement policy then it is better to ignore localnode instead of false
alarming with error/warn log lines and metrics.

It is not valid to expect rack mapping information to be available for Bookkeeper
client and ReplicationWorker nodes. So if rackmapping info. is not available
then it is better to ignore creation of BookieNode by resolving rack information
for the client localnode. Otherwise it would log unnecessary warn/error log lines
and rack resolution failure metrics.

Reviewers: Sijie Guo <sijie@apache.org>, Jia Zhai <zhaijia@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1917 from reddycharan/ignorelocalnodeinplacementpolicy
TREE:tree 8b8aa4e6a10940e605c0c3167c5381d86f87bfd5 ------
TIME:01/31/2019 11:17:09

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.9.0-rc1

TREE:tree c056b0e7b9a860a1f1e18deb8ccd6da8e22e0e0e ------
TIME:01/27/2019 04:48:07

COMMIT:[maven-release-plugin] prepare release v4.9.0-rc1

TREE:tree a9794eb1bb3e0ff66dd662bbf1092ffce656755f ------
TIME:01/27/2019 04:46:41

COMMIT:[RELEASE] add bkctl package to release scripts


Descriptions of the changes in this PR:


*Motivation*

starting from bookkeeper 4.9.0, a separate tool package `bkctl` is released.

*Modifications*

add bkctl into release scripts




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1907 from sijie/include_bkctl_package
TREE:tree c056b0e7b9a860a1f1e18deb8ccd6da8e22e0e0e ------
TIME:01/22/2019 03:47:58

COMMIT:Add semantically meaningful return values to placement policy

Currently newEnsemble and replaceBookie in EnsemblePlacementPolicy
return a apache commons Pair<> with the second argument being a
boolean to denote whether the placement conforms strictly to the
policy. From calling code, the meaning of this second value is
unclear.

This patch replaces Pair<> with an PlacementResult object, in which
the strict conformity argument is clearly labels. This will also allow
extension in the future to return more metadata about particular
placements.

Also, we shouldn't put third party library classes in interfaces.

Issue:  #1914


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1916 from ivankelly/meaningful-placement-res
TREE:tree 0e324b9adc8353c89a4eeef7fb21f95b37b19895 ------
TIME:01/25/2019 05:09:10

COMMIT:Updated site at revision 737f92b

TREE:tree 4d86c54f889aece1483008cd162de07ddaf0749c ------
TIME:01/25/2019 06:26:01

COMMIT:Add semantically meaningful return values to placement policy

Currently newEnsemble and replaceBookie in EnsemblePlacementPolicy
return a apache commons Pair<> with the second argument being a
boolean to denote whether the placement conforms strictly to the
policy. From calling code, the meaning of this second value is
unclear.

This patch replaces Pair<> with an PlacementResult object, in which
the strict conformity argument is clearly labels. This will also allow
extension in the future to return more metadata about particular
placements.

Also, we shouldn't put third party library classes in interfaces.

Issue:  #1914


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1916 from ivankelly/meaningful-placement-res
TREE:tree b77fd8fa53d9cd68f0536d9082966c65326b2c43 ------
TIME:01/25/2019 05:09:10

COMMIT:[TABLE SERVICE] bump python client version to 4.10.0-SNAPSHOT



Descriptions of the changes in this PR:

*Modifications*

Bump the development of python client to 4.10.0-SNAPSHOT




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1911 from sijie/bump_python_client_development
TREE:tree 0fc48443c90e96683f777a6cb7d3312cc75797a3 ------
TIME:01/25/2019 05:07:36

COMMIT:Revert "fix/pair"

This reverts commit 615f96701a461160d6d246e5387668b0e3406609.

TREE:tree aa292d66312251fd4c13017ade7845ff8e7efcee ------
TIME:01/22/2019 22:01:59

COMMIT:fix/pair

TREE:tree 700023ffe8dc57ae400051a81663613fb422f349 ------
TIME:01/22/2019 22:01:09

COMMIT:[RELEASE] add bkctl package to release scripts


Descriptions of the changes in this PR:


*Motivation*

starting from bookkeeper 4.9.0, a separate tool package `bkctl` is released.

*Modifications*

add bkctl into release scripts




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1907 from sijie/include_bkctl_package
TREE:tree aa292d66312251fd4c13017ade7845ff8e7efcee ------
TIME:01/22/2019 03:47:58

COMMIT:[RELEASE] Release table service python client


Descriptions of the changes in this PR:

*Motivation*

Update the table service python client version to release version

*Modifications*

Bump the version to 4.9.0




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1906 from sijie/release_python_client
TREE:tree 1f573db0096e1519af2a9e26028484623fa7f005 ------
TIME:01/22/2019 03:39:11

COMMIT:[RELEASE] Release table service python client


Descriptions of the changes in this PR:

*Motivation*

Update the table service python client version to release version

*Modifications*

Bump the version to 4.9.0




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1906 from sijie/release_python_client
TREE:tree d9677a988fad56c4af799d813f0a5c4638833b04 ------
TIME:01/22/2019 03:39:11

COMMIT:[BUILD] Fix master build after release 4.9.0



Descriptions of the changes in this PR:

*Motivation*

when creating branch-4.9, maven release plugin doesn't bump the version for stream modules.

*Modifications*

run `mvn versions:set` to manually fix the version for all modules




Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1909 from sijie/fix_master_build
TREE:tree 3e7db32c6845f2b2c5e27111d9a19e6dff80c96b ------
TIME:01/22/2019 03:31:37

COMMIT:Updated site at revision 8c24f94

TREE:tree dc30f8c4fb34a17e655aac1edee42e9b4d2dc050 ------
TIME:01/21/2019 11:11:50

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.9.0-rc0

TREE:tree 757e28095de4366d3ea10f7b2205efa88a9bcc4d ------
TIME:01/21/2019 10:39:00

COMMIT:[maven-release-plugin] prepare release v4.9.0-rc0

TREE:tree f0a877a6dd30fd0f0ea917d5d962958582065c20 ------
TIME:01/21/2019 10:38:24

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree bf339742cacc6b9cb276ba50354da28fdf5a75b8 ------
TIME:01/21/2019 10:02:39

COMMIT:[maven-release-plugin] prepare branch branch-4.9

TREE:tree 879a0f13149bdc04ee245d349acad8cf66ade8eb ------
TIME:01/21/2019 10:02:29

COMMIT:HTTP GetMetaService returns JSON rather than calling #serialize

Once the binary ledger metadata serializing is available, the output
of GetMetaService would no longer be understandable. In preparation
for this, make GetMetaService use output JSON, rather than directly
calling #serialize.

Master issue: #723


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1864 from ivankelly/get-to-string
TREE:tree 7aafab5c8ae6dcd2353303046ecf2c55c7aaba5c ------
TIME:01/21/2019 09:56:22

COMMIT:Small fix wrong nodesUninitialized count when checkCovered


Descriptions of the changes in this PR:

### Motivation

Since count `nodesUninitialized` is always 0,
there is no wait if we haven't seen any OK responses and there are still nodes not heard from

### Changes

Correct  nodesUninitialized count and add a related testcase




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1900 from huangdongfa/fix-error-nodesUninitialized

(cherry picked from commit dcdd1e887ef01f7515053f7eb06f8479de8700ff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree dd0062c2edca05418da8a9c69046d42c7c61dbe1 ------
TIME:01/21/2019 09:54:59

COMMIT:Small fix wrong nodesUninitialized count when checkCovered


Descriptions of the changes in this PR:

### Motivation

Since count `nodesUninitialized` is always 0,
there is no wait if we haven't seen any OK responses and there are still nodes not heard from

### Changes

Correct  nodesUninitialized count and add a related testcase




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1900 from huangdongfa/fix-error-nodesUninitialized
TREE:tree 1a6c0d5cf11c9ead083d7efc5760110fe9d41bb5 ------
TIME:01/21/2019 09:54:59

COMMIT:replace default source-release-assembly by bookkeeper-dist

fix for #1895

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1904 from hboutemy/master
TREE:tree 74d0a26bbf70fbffbd149e53337f51f7edc9ea9a ------
TIME:01/17/2019 12:34:26

COMMIT:Updated site at revision 5343665

TREE:tree 9744cd7b1ebce1414cf592be5fec1620009da324 ------
TIME:01/17/2019 02:43:43

COMMIT:Binary metadata format

This patch adds a binary metadata format and bumps the metadata format
version to 3. The contents of the binary metadata is the same as the
contents of the text format for now. The difference is that the binary
is more compact, and the fields can be added to the metadata when
using the binary format, which isn't possible with the text
format. With the text format, parsing with a client that didn't
recognise the new field would fail.

For now, the text format (version 2) is still used by default. We will
provide a tool to allow administrators to bump to version 3.

Some tests have been modified to provide digest and password to the
builder. All protobuf metadata in released versions has had digest and
password (first protobuf metadata was in release-4.2.0). So if new
metadata is created or read with version 2, it will have this two
fields set.

Master issue: #723


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1866 from ivankelly/binary-metadata
TREE:tree ca6b9a04ea6ce5361e96a70edb9e5f17d86e95f3 ------
TIME:01/17/2019 01:26:44

COMMIT:Move Jobs from Obsolete JDK9 to JDK11


Descriptions of the changes in this PR:

- create new jobs for JDK 11
- disable spotbugs on JDK 11 on CI
- drop jdk9 and jdk10 from Travis




Reviewers: Sijie Guo <sijie@apache.org>

This closes #1903 from eolivelli/fix/ci-jdk11-part1
TREE:tree 7fecb39bbc16b570c995cdd99ba07a9ccef890ec ------
TIME:01/17/2019 01:23:33

COMMIT:Make Spotbugs pass on JDK11

Descriptions of the changes in this PR:
- upgrade spotbugs to 3.1.8
- disable spotbugs on JDK11 (due to for https://github.com/spotbugs/spotbugs/issues/756)

### Motivation

This change is on the way to give full "official" support do JDK11

### Changes

- upgrade spotbugs to 3.1.8
- fix new spotbugs issues
- disable spotbugs on JDK11 (due to for https://github.com/spotbugs/spotbugs/issues/756)




Reviewers: Sijie Guo <sijie@apache.org>

This closes #1849 from eolivelli/fix/ci-java11
TREE:tree 18a234721a67ddcf14c3763d6130b40b5d0e59ad ------
TIME:01/16/2019 13:24:12

COMMIT:Updated site at revision 42fe150

TREE:tree ee936c1bb5b48cb4582ec0333e520c9547099330 ------
TIME:01/13/2019 03:43:39

COMMIT:Enhance EnsemblePlacementPolicy and DNSResolverDecorator to log relevant metrics.


Descriptions of the changes in this PR:


Make changes to EnsemblePlacementPolicy so that it would return boolean value indicating
if the return value of newEnsemble and replaceBookie are strictly adhering to corresponding
PlacementPolicy or it fell back to random.

Similarly DNSResolverDecorator should log a metric when it was unable to resolve rack info and
it is using default rack.



Reviewers: Samuel Just <sjust@salesforce.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1883 from reddycharan/enhanceplacementpolicy
TREE:tree 23dbe33f23ea68820b95b7747f71e32bb49603ec ------
TIME:01/13/2019 03:04:35

COMMIT:Updated site at revision 4c85877

TREE:tree 71c91bb433a4180ff90716813d4ea8b1d201ccbd ------
TIME:01/09/2019 01:49:32

COMMIT:Allow to configure sticky reads

### Motivation

Currently the BK client is issuing the read requests in round-robin fashion across all the bookies in the write set.

One issue with this approach is that it's not taking full advantage of the read-ahead cache, either explicit (like in `DbLedgerStorage`) or implicit (by reading data through Linux page cache which will do some prefetching).

With `e=2`, `w=2`, when we read `e-0` from `bookie-1` and `e-1` from `bookie-2`, we fail to take advantage of the fact that `bookie-1` will have already `e-1` in memory.

Effectively with `e-2`, `w-2` the disk read IO will be doubled, compared to the amount of data served to BK clients. The larger the quorum, the bigger will be overhead (eg: `e=5`, `w=5` will lead to 5x reads from disk).

### Changes

Added a BK client flag for "sticky reads". When reading from a ledger that has `E=W` (every bookie has all the entries), the sticky reads will direct all read request to 1 single bookie in the ensemble.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1808 from merlimat/single-bookie-per-ledger-read-master
TREE:tree d5bcac98966098ac4409b1aeeed60e3cca6632aa ------
TIME:01/09/2019 01:12:48

COMMIT:Updated site at revision 1a66de0

TREE:tree 1df82e9211ecf3a699172b89d2bba600f0a7206f ------
TIME:01/08/2019 21:54:44

COMMIT:Configure Netty allocator in bookie and client

### Motivation

This is based on #1754. Adding the code to configure and use the allocator wrapper in bookie and client.

(I'll rebase once the first PR is merged)

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1755 from merlimat/use-allocator
TREE:tree c9c11a9499f5e4eba5244ee4a8535c821d91d8f6 ------
TIME:01/08/2019 21:16:09

COMMIT:Updated site at revision e426547

TREE:tree 50d14e7919ca944990c67aed4fade98a272027f6 ------
TIME:01/08/2019 01:19:50

COMMIT:Allow to configure BK for low latency busy-wait settings

### Motivation

Added `enableBusyWait` configuration option to turn on CPU Affinity and busy wait on sockets and queues.



Reviewers: Sijie Guo <sijie@apache.org>

This closes #1812 from merlimat/configure-busy-poll
TREE:tree 18cce2f2de56fc96600192d64b18f353b8d61839 ------
TIME:01/08/2019 00:41:52

COMMIT:Updated site at revision ed7ca37

TREE:tree 1fde9dca91e5070aa0335ff80a1d9da2ac7794a3 ------
TIME:01/04/2019 02:18:51

COMMIT:ISSUE #1892: ILS: reset retry in consistency check loop

This patch additionally:
- modifies InterleavedLedgerStorageTest.java to test with and without
  entryLogPerLedger
- refactors the test a bit to ensure that the gc calls really do race
  with the right part of the checker
- addresses a few other more cosmetic errors

(bug W-5721713)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1894 from athanatos/forupstream/wip-1892, closes #1892
TREE:tree d58164cbb7a3a2db8e1d24157ea91932dad94745 ------
TIME:01/04/2019 01:41:37

COMMIT:Updated site at revision 21d71fb

TREE:tree 9fc2bcc51e4e3bea35020bfb36dec3ceaef641e7 ------
TIME:12/22/2018 01:17:28

COMMIT:Revert maxLedgerMetadataFormatVersion changes in layout

There is ongoing discussions about how to do this, so I'm reverting this
change for now to allow 4.9 release to proceed. The change modifies the
contents of the layout znode, so once they're in an official release they
cannot be removed without breaking BC.

The reverted changes are:

dd684b Ledger manager factories initialized with max metadata version
dce4fd Add max ledger metadata format version to layout

Master issue: #723


Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1890 from ivankelly/revert-max-format
TREE:tree 1ad91af393d928f6f6071922a9a81cf778074da8 ------
TIME:12/22/2018 00:44:36

COMMIT:Multiple calls to LedgerHandle#close should wait on actual close

The previous behaviour was to complete successfully immediately if
close had already been called on the handle. This allowed for
potential consistency violations, as the caller could believe that the
ledger was closed, when in fact the close operation was still in
progress and could still potentially fail.

Issue: #1712


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1889 from ivankelly/double-close-anomoly
TREE:tree ddd7f38087ad30b2860460df7eb66e7be9a4f999 ------
TIME:12/22/2018 00:41:22

COMMIT:Introduce a configuration framework for better organizing and documentating configuration settings

Descriptions of the changes in this PR:

### Motivation

One common task in developing bookkeeper is to make sure all the configuration
settings are well documented, and the configuration file we ship in each release
is in-sync with the code itself.

However maintaining things in-sync is non-trivial. This proposal is exploring
a new way to manage configuration settings for better documentation.

### Changes

- Introduce `ConfigKey` for defining a configuration setting key in a configuration
- Introduce `ConfigKeyGroup` for grouping configuration settings together
- Introduce `ConfigDef` for generating the configuration definition for a given configuration
- Add a `save` method for saving a configuration definition into a configuration file

Master Issue: #1867 




Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1869 from sijie/config_defs
TREE:tree ec6cbc570ec5dff84a09e8449ae2669f25f7b3d5 ------
TIME:12/22/2018 00:40:11

COMMIT:Issue#1886 Handle double bookie failures

For this race condition to happen:
1. ZK metadata version is different from Client write ledger
   handle - Replication worker
2. Client made an ensemble change and replaced a bookie,
   sent change proposal to zk
3. While this is pending, Client made another ensemble change
   replaced the same index with the bookie that was prior to step#2
4. Ensemble change made in step#2 came back to client with
   version conflict error.
5. Client need to resolve this conflict

The fix is to reconsile the local state, zk state, and do bookie
replaceemnt, send the updated metadata to zk.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
(rev Sam Just)

Descriptions of the changes in this PR:



### Motivation

(Explain: why you're making that change, what is the problem you're trying to solve)

### Changes

(Describe: what changes you have made)

Master Issue: #<master-issue-number>




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1887 from jvrao/metadata-final, closes #1886
TREE:tree f0e818a27fd230071a7c2592de508bfb29176850 ------
TIME:12/20/2018 23:56:55

COMMIT:Updated site at revision bd2b16e

TREE:tree a6f12b832ed3fa0109d13fe013dc7ff39224db55 ------
TIME:12/20/2018 11:59:46

COMMIT:Bring back statslogger to BookKeeper client in ReplicationWorker process.


Descriptions of the changes in this PR:

- https://github.com/apache/bookkeeper/commit/2837f6257baf15dc9dd9eb4bcac34596b442be33
had inadvertently removed StatsLogger to BookKeeper client instance in ReplicationWorker process.
So restore StatsLogger in BookKeeper client object.
- Also introduce new config called - 'limitStatsLogging', which would be used to limit statslogging
as and when needed.
- currently this config is used to limit the stats from PCBC. Because if AR process is running in
each Bookie node, then for each AR there will be n number of PCBCs and totally it comes out to
n^2 PCBCs in the cluster. Which is unmanageable from stats collector perspective. So this config
value can be set to true in AR config.


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1888 from reddycharan/bringbackmetricsforarprocess
TREE:tree 8a010cec6b0931e8da21e82ff13ab785830542b3 ------
TIME:12/19/2018 12:47:12

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for ledger cache stats


Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document the ledger cache stats.

*Changes*

- convert ledger cache stats to use StatsDoc for documenting metrics

Master Issue: #1785





Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1872 from sijie/ledgercache_stats
TREE:tree 407364b9bcd3737d0b425e4f3c6813a5f9c546ea ------
TIME:12/17/2018 14:18:49

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for garbage collector stats

Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document gc stats.

*Changes*

- convert gc stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1875 from sijie/gc_stats
TREE:tree 1b7e6014ce2b9f6a42c7274444edf51acc12e54f ------
TIME:12/16/2018 09:20:35

COMMIT:Updated site at revision 1b2138f

TREE:tree a3c4a80e1dc02328a475f2068efe541d8ad8867e ------
TIME:12/14/2018 03:42:36

COMMIT:Issue #1884: (@W-5697664@) dir_*_usage stats are reported as 0 ...

for read-only bookies after a restart

### Motivation

Fixing the Issue #1884:

When a read-only bookie is restarted it keeps reporting `dir_*_usage`
stats as `0` until it becomes writable again.

This is caused by the `LedgerDirsMonitor.check` only updating
`diskUsages` if there are any writable dirs, or if the total usage
goes below the low water mark, otherwise relying on previously filled
values which are `0` after a bookie is restarted.

### Changes

* Change the `LedgerDirsMonitor.check` to update `diskUsages`
  even when there are no writable dirs.
* Add new `testLedgerDirsMonitorStartReadOnly` testing this scenario.
* Simplify previous tests checking read-only since `diskUsages`
  are now updated regardless if a bookie is in read-only mode.

jvrao reddycharan

Reviewers: Sijie Guo <sijie@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1885 from pasha-kuznetsov/issue-1884-dir-usage-ro-restart, closes #1884

(cherry picked from commit 1b2138fd4ecdbc4dfec00709b51e1367dfd49654)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree dd62ebf8749543da8023466bd434c2a1cff5d874 ------
TIME:12/14/2018 02:45:11

COMMIT:Issue #1884: (@W-5697664@) dir_*_usage stats are reported as 0 ...

for read-only bookies after a restart

### Motivation

Fixing the Issue #1884:

When a read-only bookie is restarted it keeps reporting `dir_*_usage`
stats as `0` until it becomes writable again.

This is caused by the `LedgerDirsMonitor.check` only updating
`diskUsages` if there are any writable dirs, or if the total usage
goes below the low water mark, otherwise relying on previously filled
values which are `0` after a bookie is restarted.

### Changes

* Change the `LedgerDirsMonitor.check` to update `diskUsages`
  even when there are no writable dirs.
* Add new `testLedgerDirsMonitorStartReadOnly` testing this scenario.
* Simplify previous tests checking read-only since `diskUsages`
  are now updated regardless if a bookie is in read-only mode.

jvrao reddycharan

Reviewers: Sijie Guo <sijie@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1885 from pasha-kuznetsov/issue-1884-dir-usage-ro-restart, closes #1884

(cherry picked from commit 1b2138fd4ecdbc4dfec00709b51e1367dfd49654)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 2acce2e6209a73c013f68407c4c0bcbea03f1101 ------
TIME:12/14/2018 02:45:11

COMMIT:Issue #1884: (@W-5697664@) dir_*_usage stats are reported as 0 ...

for read-only bookies after a restart

### Motivation

Fixing the Issue #1884:

When a read-only bookie is restarted it keeps reporting `dir_*_usage`
stats as `0` until it becomes writable again.

This is caused by the `LedgerDirsMonitor.check` only updating
`diskUsages` if there are any writable dirs, or if the total usage
goes below the low water mark, otherwise relying on previously filled
values which are `0` after a bookie is restarted.

### Changes

* Change the `LedgerDirsMonitor.check` to update `diskUsages`
  even when there are no writable dirs.
* Add new `testLedgerDirsMonitorStartReadOnly` testing this scenario.
* Simplify previous tests checking read-only since `diskUsages`
  are now updated regardless if a bookie is in read-only mode.

jvrao reddycharan 




Reviewers: Sijie Guo <sijie@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1885 from pasha-kuznetsov/issue-1884-dir-usage-ro-restart, closes #1884
TREE:tree a4e96075145c22867f2adec2f5d0e34ee815391b ------
TIME:12/14/2018 02:45:11

COMMIT:BP-37: Improve configuration management for better documentation


Descriptions of the changes in this PR:

*Motivation*

One common task in developing bookkeeper is to make sure all the configuration
settings are well documented, and the configuration file we ship in each release
is in-sync with the code itself.

However maintaining things in-sync is non-trivial. This proposal is exploring
a new way to manage configuration settings for better documentation.

Master Issue: #1867





Reviewers: Matteo Merli <mmerli@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1868 from sijie/bp37_conf_documentation
TREE:tree 9f7489f1f91dfdff508d94fc80d1f190ba2fea32 ------
TIME:12/14/2018 02:43:33

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for journal stats



Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785),
this PR is to document the journal stats.

*Changes*

- convert journal stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1870 from sijie/statsdoc_journal
TREE:tree 3a4aee2461c2c617ae020026bb5a4385eff83d1f ------
TIME:12/14/2018 02:28:26

COMMIT:Updated site at revision c0138f3

TREE:tree 1fa169cd64cd0fd4df666315044604fb0ef3ea6a ------
TIME:12/13/2018 16:53:40

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for bookkeeper autorecovery stats

Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document bookkeeper autorecovery stats.

*Changes*

- convert bookkeeper autorecovery stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Jia Zhai <None>

This closes #1879 from sijie/replication_stats
TREE:tree f7539dfd0b1c7c784c3637fc54e61025fccf77e1 ------
TIME:12/13/2018 15:50:44

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for db ledger storage stats


Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document the db ledger storage stats.

*Changes*

- convert db ledger storage stats to use StatsDoc for documenting metrics

Master Issue: #1785





Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1874 from sijie/ldb_stats
TREE:tree a5d6a6a3f5c5cb18c611df161a338c90ecd18206 ------
TIME:12/13/2018 15:49:02

COMMIT:Add get method for rest endpoint gc

Descriptions of the changes in this PR:

Add get method for rest endpoint gc to get force triggered GC running status on Bookie.
true -- force triggered GC is running on Bookie. false -- not running.

### Motivation

This is base on PR #1838, and in the review comments sijie is suggested to add get methods.

### Changes

Add get method for rest endpoint gc and unit test.





Reviewers: Sijie Guo <sijie@apache.org>

This closes #1840 from jiazhai/rest_gc_get
TREE:tree 8e2a8f8e6ad0b5427556d6ccd05dbd95ca6c976e ------
TIME:12/13/2018 15:45:09

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for memtable stats

Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document the memtable stats.

*Changes*

- convert memtable stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1873 from sijie/memtable_stats
TREE:tree b152e046e937f55fc7e68168cb2a3da22939fb5b ------
TIME:12/13/2018 15:41:34

COMMIT:Updated site at revision f4bbc21

TREE:tree fc85a95fb48ee43262583fae4c339534f08a2cb8 ------
TIME:12/12/2018 03:28:13

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for bookkeeper client stats



Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document bookkeeper client stats.

*Changes*

- convert bookkeeper client stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1878 from sijie/client_stats
TREE:tree 22529ef7d23993625d6c761d7053965fd7fb880f ------
TIME:12/12/2018 02:23:07

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for interleaved ledger storage stats

Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document interleaved ledger storage stats.

*Changes*

- convert interleaved ledger storage stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1877 from sijie/interleaved_stats
TREE:tree bcf6611f000f30e21a919d878ceeb6fe4f25d320 ------
TIME:12/12/2018 02:20:52

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for bookie state manager stats



Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document bookie state manager stats.

*Changes*

- convert bookie state manager stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1876 from sijie/bookie_state_stats
TREE:tree 2aa4cf764083afd87937f53d773ad63196214ba8 ------
TIME:12/12/2018 02:19:29

COMMIT:[STATS] [DOC] Add @StatsDoc annotation for entrylogger stats

Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785),
this PR is to document the entrylogger stats.

*Changes*

- convert entrylogger stats to use StatsDoc for documenting metrics

Master Issue: #1785




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1871 from sijie/document_ledgerstorage_stats
TREE:tree 524cc250d1394659d39fa2410c62356a2f75a7e0 ------
TIME:12/12/2018 02:14:54

COMMIT:[CI] Update precommit job captions with trigger phrase



Descriptions of the changes in this PR:

*Motivation*

Sometime people don't know how to retrigger a bookkeeper precommit job.

*Changes*

This PR is adding the trigger phrase to the job caption. so people will know
how to retrigger the jobs in the PR itself.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1881 from sijie/update_jenkins_for_self_instructions
TREE:tree bda7aaf869e2efc6ead08ac20fce19b9f65b7bb4 ------
TIME:12/12/2018 02:13:19

COMMIT:Updated site at revision 9a0da5c

TREE:tree 37147abdce0e235ab35fa04f34682124669fb46a ------
TIME:12/11/2018 22:20:26

COMMIT:ISSUE #1770: Add local checker for Sorted/InterleavedLedgerStorage

The main goal of this patch is the ScrubberService LifecycleComponent
which runs in the background periodically verifying the internal
consistency of the LedgerStorage. To get that to work:

- LedgerStorage now has a localConsistencyCheck call with
implementations in Interleaved and Sorted.

- In service of that implementation, LedgerCache gains an interface for
iterating safely over the entries of a ledger with a way of handling
concurrently modified or deleted ledgers with corresponding
modifications to LedgerEntryPage for detecting deletion.

- EntryLogger has been refactored to permit checking the correctness
(and throwing a descriptive exception in case of a problem) of an entry
without actually reading it for use within localConsistencyCheck.

- The two mechanisms for iterating over a ledger's entries in
BookieShell have both been replaced with the new single implementation
(InterleavedLedgerStorageTest now has a test checking the output of the
affected command.)

- Misc changes to *LogCompactor to support tests in
InterleavedLedgerStorageTest.

Because the consistency check needs to run in the background and hold
LEP instances potentially for a relatively long time, a delete may
overlap with the scan of an LEP page. As part of this patch,
IndexInMemPageMgr and LedgerEntryPage now permit an LEP to be marked
deleted and not added back to the set of free pages until released.

This patch also adds an option to run the checker on startup (defaults
to false).

(bug W-5188823)
(bug W-5153309)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1819 from athanatos/forupstream/wip-1770, closes #1770
TREE:tree 3873448cd3fe015716e6570e5cc827f586d9830c ------
TIME:12/11/2018 21:43:25

COMMIT:Updated site at revision dd684b3

TREE:tree c915ca4b7f5e6dee5f524a95ae3a288b250ff446 ------
TIME:12/06/2018 21:38:40

COMMIT:Ledger manager factories initialized with max metadata version

In dce4fd4 the max metadata format version was put in the
configuration which was then used to create ledger managers. This is
not safe though, as it there are multiple paths which through which
ledger manager factories are created and some may not see this
configuration modification. For example, on a new cluster where there
is no preexisting layout, the layout isn't written until after the
ledger manager factory has been created.

This patch changes LedgerManagerFactory#initialize to explicitly
require that the max ledger metadata format is specified in the call.

Master issue: #723

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1865 from ivankelly/explicit-max
TREE:tree 657025bc9be69d098aed893d0e7b55a8f4853317 ------
TIME:12/06/2018 21:02:41

COMMIT:changingEnsemble should be negated before calling unset success

If the first pending add op is completed, but does not have the
replaced bookie in its write set, callbacks are triggered straight
away.

Previously this would then hang forever, as the changingEnsemble would
be true. This patch sets changingEnsemble to false before calling
unsetSuccessAndSendWriteRequest so that if callbacks are triggered
straight away, they can actually complete. It also moves the call to
unsetSuccessAndSendWriteRequest outside of the metadataLock so that
the callbacks don't run inside the lock.


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1857 from ivankelly/block-order
TREE:tree 23bc6b4352585442c60891ef2f5722dbed1ad5b6 ------
TIME:12/06/2018 14:20:22

COMMIT:Fix selectFromNetworkLocation in RackawareEnsemblePlacementPolicyImpl


Descriptions of the changes in this PR:

Since beginning, selectFromNetworkLocation(excludeRacks, excludeBookies,..)
method kind of ignores predicate/ensemble passed to that method
https://github.com/apache/bookkeeper/blob/branch-4.7/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L694.

This was kind of ok, because so far effectively this method is called from only
one place - https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L612,
which passes TruePredicate.INSTANCE and EnsembleForReplacementWithNoConstraints.INSTANCE.

But it is not ideal to ignore those parameters in selectFromNetworkLocation(excludeRacks, excludeBookies,..),
from future usage perspective. So passing the received predicate and ensemble to the underlying calls.


Reviewers: Sijie Guo <sijie@apache.org>, Samuel Just <sjust@salesforce.com>

This closes #1862 from reddycharan/fixrackaware
TREE:tree 5c7aac957676d9ab501ab47948693417174394c4 ------
TIME:12/06/2018 14:16:50

COMMIT:Fix selectFromNetworkLocation in RackawareEnsemblePlacementPolicyImpl


Descriptions of the changes in this PR:

Since beginning, selectFromNetworkLocation(excludeRacks, excludeBookies,..)
method kind of ignores predicate/ensemble passed to that method
https://github.com/apache/bookkeeper/blob/branch-4.7/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L694.

This was kind of ok, because so far effectively this method is called from only
one place - https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/RackawareEnsemblePlacementPolicyImpl.java#L612,
which passes TruePredicate.INSTANCE and EnsembleForReplacementWithNoConstraints.INSTANCE.

But it is not ideal to ignore those parameters in selectFromNetworkLocation(excludeRacks, excludeBookies,..),
from future usage perspective. So passing the received predicate and ensemble to the underlying calls.


Reviewers: Sijie Guo <sijie@apache.org>, Samuel Just <sjust@salesforce.com>

This closes #1862 from reddycharan/fixrackaware
TREE:tree e53616863111348702257db85c53f4d4a378439f ------
TIME:12/06/2018 14:16:50

COMMIT:Updated site at revision 97dda46

TREE:tree 5bb8be158d8526483b7aa4a575ad91c2516c8582 ------
TIME:12/05/2018 22:14:30

COMMIT:[RELEASE] [WEBSITE] Add documentation for release 4.7.3

*Motivation*

Add documentation for release 4.7.3

Descriptions of the changes in this PR:





Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1859 from sijie/website_473
TREE:tree b250103fcb4ab0ced9624e90bbafac2b7f050b02 ------
TIME:12/05/2018 21:35:18

COMMIT:[RELEASE] [DOCKER] Update the docker file for release 4.7.3

*Motivation*

Update release version in the docker file




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1860 from sijie/update_docker_version
TREE:tree 611f41d51efcb895b8c1bb0607336d25bfca2e31 ------
TIME:12/05/2018 20:39:11

COMMIT:[RELEASE] bump branch-4.7 to 4.7.4-SNAPSHOT

Descriptions of the changes in this PR:

*Motivation*

Move the development version of branch-4.7 to 4.7.4-SNAPSHOT




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1861 from sijie/update_version_to_474
TREE:tree 3da023aeb15d7d7f2cb5396ad9b94619f80f4883 ------
TIME:12/05/2018 20:42:05

COMMIT:[RELEASE] [DOCKER] Update the docker file for release 4.7.3

*Motivation*

Update release version in the docker file




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1860 from sijie/update_docker_version
TREE:tree 73711666c53105e46a0192701e639781689e1207 ------
TIME:12/05/2018 20:39:11

COMMIT:Update BookKeeper version in Docker file for 4.8.1 release

Descriptions of the changes in this PR:
Change version from 4.8.0 in 4.8.1 on Dockerfile in branch-4.8


### Motivation

Distribute new Docker images for 4.8.1 release





Reviewers: Sijie Guo <sijie@apache.org>

This closes #1851 from eolivelli/fix/docker-4.8.1
TREE:tree d0286708280fe5d5f1076c0f2c458529edad9c4e ------
TIME:12/01/2018 01:08:41

COMMIT:Updated site at revision 41837e6

TREE:tree 8284a96971c87311add3e25d574d234a3d3b56c4 ------
TIME:12/04/2018 21:02:44

COMMIT:Update BookKeeper version in Docker file for 4.8.1 release

Descriptions of the changes in this PR:
Change version from 4.8.0 in 4.8.1 on Dockerfile in branch-4.8


### Motivation

Distribute new Docker images for 4.8.1 release





Reviewers: Sijie Guo <sijieapache.org>

This closes #1851 from eolivelli/fix/docker-4.8.1




Reviewers: Sijie Guo <sijie@apache.org>

This closes #1854 from eolivelli/fix/pick-481-docker
TREE:tree 0d5bcef446772015dd47119e2ee486a418e98018 ------
TIME:12/04/2018 20:28:53

COMMIT:[RELEASE NOTES] Release Notes for 4.7.3






Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1850 from sijie/release_notes_473
TREE:tree e7688e610a246f976c37511f776856fca8d57832 ------
TIME:12/04/2018 19:55:15

COMMIT:remove misleading comment


Descriptions of the changes in this PR:

*Motivation*

ParallelRead is actually used internally at ledger recovery. It is used at production.

*Changes*

Removed misleading comment.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1671 from sijie/remove_misleading_comment
TREE:tree b91aebe3c65b50b4c3ac93da9ac8f2e7d871fff8 ------
TIME:12/04/2018 19:53:41

COMMIT:Updated site at revision dce4fd4

TREE:tree c7eace066479e976ec0b32260693198828da7651 ------
TIME:12/04/2018 12:34:34

COMMIT:Add max ledger metadata format version to layout

The max ledger metadata format version is the maximum format version
that will be used to write ledger metadata. By setting it in the
ledger layout it becomes a cluster-wide configuration which is
initialized along with the cluster. Any cluster initialized with the
current code will end up with version 2. For this cluster serde will
only ever serialize with up to version 2 of the ledger metadata
format, so all clients that understand version 2 will continue to
work, even as the software version increases and new metadata formats
become available (such as the binary metadata format coming soon).

Currently there is no handling in LedgerMetadataSerDe, because we
don't have a new version, but when there is, it will use
```
Math.min(maxLedgerMetadataFormatVersion,
         metadata.getMetadataFormatVersion())
```
to decide which serialization method to use.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1858 from ivankelly/format-version
TREE:tree 6fbac0b83b9dc9943ab71aea86054d7aa0477037 ------
TIME:12/04/2018 12:03:14

COMMIT:[TABLE SERVICE] remove extra code

Descriptions of the changes in this PR:
review code and found extra code.


### Motivation
clean code

### Changes

clean extra code

Master Issue: #<master-issue-number>




Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1856 from xujianhai/master
TREE:tree 1683b127e0f50c197d67a2ab3b82c16f4503bf9d ------
TIME:12/03/2018 20:41:01

COMMIT:Updated site at revision 80a12e7

TREE:tree 0c4863ee9979cfecadd171af965fa111300cd9b0 ------
TIME:12/03/2018 16:38:59

COMMIT:Bump version to 4.8.2-SNAPSHOT



Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1847 from eolivelli/fix/start-482
TREE:tree 1b5869f3660116d3a950a0c1af098d5f92b2843d ------
TIME:12/03/2018 16:13:42

COMMIT:Mark 4.8.1 as latest release

Descriptions of the changes in this PR:

Change website configuration so that the downloads make suggest 4.8.1 and 4.8.0






Reviewers: Sijie Guo <sijie@apache.org>

This closes #1855 from eolivelli/fix/mark-481-latest
TREE:tree 8c9c30cab5dbc2f4725600e4f13df4e2d0683a8d ------
TIME:12/03/2018 16:07:16

COMMIT:Updated site at revision 8e0e9fb

TREE:tree 4d26c8d1a10e38e5962b67d844e0707f5390596b ------
TIME:12/03/2018 14:09:50

COMMIT:Users of LedgerMetadata should use the api interface

All users to LedgerMetadata should use api.LedgerMetadata rather than
client.LedgerMetadata.

Some methods have been promoted to the interface to allow this.

Other methods have been moved out to a utility class that acts purely
on api.LedgerMetadata.

client.LedgerMetadata has been renamed to LedgerMetadataImpl.

Master issue: #723


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1852 from ivankelly/kill-store-ctime
TREE:tree 8308be6ed2121a62b43a662c9113e8ced1d13696 ------
TIME:12/03/2018 13:37:03

COMMIT:LedgerMetadata should require digest and password together

There's never a case when setting the digest and password where you
only have one, but not the other.

The patch adds validation in LedgerMetadata that if you provide one, you
provide the other. The only case where you don't provide these is when 
using pre-4.1.0 (i think) metadata.

Master issue: #281


Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1836 from ivankelly/builder-pw
TREE:tree 56a4b442c29d8ffc7518d6d1f39ac1d4a33b623d ------
TIME:12/01/2018 01:29:53

COMMIT:[TABLE SERVICE] add a bookie registration based grpc name resolver

Descriptions of the changes in this PR:

*Motivation*

Table service is using grpc name resolver to figure out the alive servers serving table service.
Currently it is using default dns name resolver. In the context of Pulsar, since brokers talk
to bookies via zookeeper service discovery, it is making sense for brokers talk to table service
via zookeeper service discovery. So this PR is to add a bookie registration based grpc name resolver.

*Changes*

Implement a bookie-registration library based grpc name resolver.




Reviewers: Jia Zhai <None>

This closes #1842 from sijie/add_zookeeper_resolver
TREE:tree 4ed954f8bde157d96640f207d52c36f22b477e46 ------
TIME:12/01/2018 01:29:01

COMMIT:Update BookKeeper version in Docker file for 4.8.1 release

Descriptions of the changes in this PR:
Change version from 4.8.0 in 4.8.1 on Dockerfile in branch-4.8


### Motivation

Distribute new Docker images for 4.8.1 release





Reviewers: Sijie Guo <sijie@apache.org>

This closes #1851 from eolivelli/fix/docker-4.8.1
TREE:tree 0e382912061842a8a3a657c653de0fbcb6449474 ------
TIME:12/01/2018 01:08:41

COMMIT:Let OS choose port for vertx test

The previous implementation was searching for a open port by
repeatedly trying to startServer on ports starting at 8080. However,
after the first attempt fails, the Vertx instance in VertxHttpServer
is broken and the test hangs. 8080 is a very common port to have stuff
running on, so these hangs have happened to be repeatedly.

This fix is to allow the OS to choose the port, by specifying 0 as the
listening port and querying afterwards.

Issue: #1821

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1853 from ivankelly/vertx-8080

(cherry picked from commit b39564183eb8cab5ab21752843fe65a949fc96ff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ba17cee16a21af9b3c4bd77de9b320a31ba61d77 ------
TIME:12/01/2018 01:06:29

COMMIT:Let OS choose port for vertx test

The previous implementation was searching for a open port by
repeatedly trying to startServer on ports starting at 8080. However,
after the first attempt fails, the Vertx instance in VertxHttpServer
is broken and the test hangs. 8080 is a very common port to have stuff
running on, so these hangs have happened to be repeatedly.

This fix is to allow the OS to choose the port, by specifying 0 as the
listening port and querying afterwards.

Issue: #1821


Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1853 from ivankelly/vertx-8080
TREE:tree 9095a5beeefeb7f1f3c6db2b69f4c893c2b4bdf2 ------
TIME:12/01/2018 01:06:29

COMMIT:Move serialization code out of LedgerMetadata

This PR moves the serialization code out of LedgerMetadata so that it
can later be adapted to run different serialization code depending on
the environment.

Notable non-refactor changes:
- LedgerMetadata#toString no longer uses #serialize because it's no
  longer available. Instead it uses the ToString helper from guava.
  byte[] fields are now base64 encoded.
- There's a new state enum and getter in api.LedgerMetadata. This is
  so that LedgerMetadataFormat can be removed from
  client.LedgerMetadata.

Master issue: #723


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1848 from ivankelly/refactor-md-serde
TREE:tree 3649f079c1f1050fa2f2a87e8f955bc622767ffb ------
TIME:11/30/2018 11:25:40

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.7.3-rc0

TREE:tree 43177613c0fb4e8fa20a1a5e16341c5efe6f5751 ------
TIME:11/30/2018 10:09:46

COMMIT:[maven-release-plugin] prepare release v4.7.3-rc0

TREE:tree 36a508ea482ea412bb558dbe35975984b208f5a9 ------
TIME:11/30/2018 10:09:01

COMMIT:Set default sizes of DbLedgerStorage read and write cache to be proportional to JVM direct memory


### Motivation

To simplify Bookie configuration when using `DbLedgerStorage`, set the memory size defaults for WriteCache, ReadCache and RocksDB block cache to be pegged to the available direct memory configured in the JVM.

User can always configure specific values and override this behavior.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1813 from merlimat/auto-conf-db-storage-mem
TREE:tree 8af02fd3ce2fa10bd1cf7886c4c48f2c3d247d31 ------
TIME:11/30/2018 09:27:23

COMMIT:[CI] increase timeout of website build to 120 mins



Descriptions of the changes in this PR:

*Motivation*

Since we have more releases, the build time for website is increasing to beyond 30 min.
Increase it to 120 mins for now




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1844 from sijie/change_website_buildtime
TREE:tree 2cd6bfcc3dd1181d8ca388593d400ac68c98c26a ------
TIME:11/30/2018 07:51:05

COMMIT:Rename LedgerMetadataBuilder#closingAt to  parameter order (#1835)

* Rename LedgerMetadataBuilder#closingAt to clarify parameter order

The two parameters are long, which can be confusing.

Master issue: #281

TREE:tree 39a895ada7b35bb6358efa32e6f571ef67997362 ------
TIME:11/29/2018 10:07:00

COMMIT:Updated site at revision 8979e9e

TREE:tree f434f2f27fe08093ac8c22d8a26ed9e5139fa2b1 ------
TIME:11/29/2018 04:18:40

COMMIT:[STATS] Add @StatsDoc annotation for bookie server request stats



Descriptions of the changes in this PR:

*Motivation*

As part of [BP-36](https://github.com/apache/bookkeeper/issues/1785), this PR is to document the request stats
for bookkeeper server.

*Changes*

- add `parent` and `happensAfter` in StatsDoc
- convert bookie request stats to use StatsDoc for documenting metrics

Master Issue: #1785 




Reviewers: Jia Zhai <None>

This closes #1839 from sijie/bp36_add_parent_and_happensafter
TREE:tree b935775ace4283a61b29238816e989f8764f206b ------
TIME:11/29/2018 03:41:34

COMMIT:[RELEASE] fix docker mount volume issue

Descriptions of the changes in this PR:

* Motivation

 #1674 introduced a regression for running release scripts on mac.
 the destination should be "/home/${USER}" rather than ${LOCAL_HOME}.
 because the docker os is linux. Otherwise the gpg keys can not propagated
 correctly from host machine to docker.

* Changes

 Use `/home/${USER}` as the destination path

Reviewers: Jia Zhai <None>

This closes #1845 from sijie/fix_release_scripts

(cherry picked from commit b0708b58f9d6490ed4e47ec688067bebdeb121aa)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 43177613c0fb4e8fa20a1a5e16341c5efe6f5751 ------
TIME:11/29/2018 03:10:38

COMMIT:[RELEASE] fix docker mount volume issue

Descriptions of the changes in this PR:

* Motivation

 #1674 introduced a regression for running release scripts on mac.
 the destination should be "/home/${USER}" rather than ${LOCAL_HOME}.
 because the docker os is linux. Otherwise the gpg keys can not propagated
 correctly from host machine to docker.

* Changes

 Use `/home/${USER}` as the destination path

Reviewers: Jia Zhai <None>

This closes #1845 from sijie/fix_release_scripts

(cherry picked from commit b0708b58f9d6490ed4e47ec688067bebdeb121aa)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 8f4f6e0a2541062a8526d0851dd4baf3b6cacd34 ------
TIME:11/29/2018 03:10:38

COMMIT:[RELEASE] fix docker mount volume issue



Descriptions of the changes in this PR:

* Motivation

 #1674 introduced a regression for running release scripts on mac.
 the destination should be "/home/${USER}" rather than ${LOCAL_HOME}.
 because the docker os is linux. Otherwise the gpg keys can not propagated
 correctly from host machine to docker.

* Changes

 Use `/home/${USER}` as the destination path





Reviewers: Jia Zhai <None>

This closes #1845 from sijie/fix_release_scripts
TREE:tree 885255149f39e8d9c707b5512321c14492cfe9cc ------
TIME:11/29/2018 03:10:38

COMMIT:Updated site at revision d7fffac

TREE:tree 6814da8e1cdbb62450022dd35064a1e70afb1d04 ------
TIME:11/28/2018 22:59:20

COMMIT:Trigger a website build

TREE:tree 459b34edf39d16d8622a33dc28216af4d493a1e1 ------
TIME:11/28/2018 22:24:34

COMMIT:[LEDGER STORAGE] DbLedgerStorage should do periodical flush

Descriptions of the changes in this PR:

*Motivation*

DbLedgerStorage doesn't drive checkpoint itself. so currently DbLedgerStorage flush only
happens either when write-cache is full or entry log file rotated. The correctness is still
maintained. However the behavior is different from original yahoo behavior.

*Changes*

Revert the behavior back to original periodical flush

Reviewers: Matteo Merli <mmerli@apache.org>, Jia Zhai <None>

This closes #1843 from sijie/dbledgerstorage_sync

(cherry picked from commit d7fffac47f013a6902f9b61e8f8ffcb3ed29abff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 910cf4495d2ca71f997afc084f7d37204acdc2ae ------
TIME:11/28/2018 21:07:29

COMMIT:[LEDGER STORAGE] DbLedgerStorage should do periodical flush

Descriptions of the changes in this PR:

*Motivation*

DbLedgerStorage doesn't drive checkpoint itself. so currently DbLedgerStorage flush only
happens either when write-cache is full or entry log file rotated. The correctness is still
maintained. However the behavior is different from original yahoo behavior.

*Changes*

Revert the behavior back to original periodical flush

Reviewers: Matteo Merli <mmerli@apache.org>, Jia Zhai <None>

This closes #1843 from sijie/dbledgerstorage_sync

(cherry picked from commit d7fffac47f013a6902f9b61e8f8ffcb3ed29abff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree cb64a0cfa15ba8a7e062be4e5d718b640b6d97df ------
TIME:11/28/2018 21:07:29

COMMIT:[LEDGER STORAGE] DbLedgerStorage should do periodical flush



Descriptions of the changes in this PR:

*Motivation*

DbLedgerStorage doesn't drive checkpoint itself. so currently DbLedgerStorage flush only
happens either when write-cache is full or entry log file rotated. The correctness is still
maintained. However the behavior is different from original yahoo behavior.

*Changes*

Revert the behavior back to original periodical flush




Reviewers: Matteo Merli <mmerli@apache.org>, Jia Zhai <None>

This closes #1843 from sijie/dbledgerstorage_sync
TREE:tree 6f4c727e1b164cda0a6dac6c166bae1ad2253703 ------
TIME:11/28/2018 21:07:29

COMMIT:Only publish suspect ledgers if they have missing fragments

This is a fix for a flake in
AuditorPeriodicCheckTest#testIndexCorruption. Auditor#checkAllLedgers()
runs a check on all ledgers, passing ProcessLostFragmentsCb as a
callback to LedgerChecker#checkLedger for each one.

LedgerChecker#checkLedger triggers the callback on completion,
regardless of whether there are fragments missing on not. Previously,
ProcessLostFragments was not checking if there were lost fragments
before publishing the ledger as suspected in zookeeper.

The flake triggered as there were always two ledgers that existed when
the check occurred, both would be reported as suspected, and it was
random which would be returned while polling for underreplicated
ledgers.

The fix is to check that something is actually underreplicated before
publishing.


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1834 from ivankelly/auditor-periodic-flake
TREE:tree 7cac2e21c92aab39052b3552007f2a72ae87f096 ------
TIME:11/28/2018 16:31:13

COMMIT:Use ${sha1} instead of ${ghprbActualCommit} for Pre-commit Jobs

Descriptions of the changes in this PR:

### Motivation

According to  the documentation of the GitHub Pull Request plugin:
- ${sha1} means a commit which is the result of merging the PR branch with the target branch
- ${ghprbActualCommit} is directly the PR branch

So currently we are not testing the PR branch against the target branch, but only the branch "as it is"

see:
https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=4&ved=2ahUKEwje0PjpnuDeAhUF2SwKHXN4BgYQFjADegQIAxAB&url=https%3A%2F%2Fwiki.jenkins.io%2Fdisplay%2FJENKINS%2FGitHub%2Bpull%2Brequest%2Bbuilder%2Bplugin&usg=AOvVaw2XvPL5ynRYnqVEWqpe9cs1

### Changes

Use ${sha1} instead of ${ghprbActualCommit} for Pre-commit Jobs




Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo

This closes #1818 from eolivelli/fix/jenskin-use-sha1
TREE:tree c22e0992d17ff3d6fea2066ca71da3b4fba1e780 ------
TIME:11/28/2018 09:19:52

COMMIT:Add rest endpoint trigger_gc to trigger GC on Bookie

Descriptions of the changes in this PR:

Add rest endpoint trigger_gc to trigger GC on Bookie

Some times user would like to trigger GC manually instead of waiting to the timeout or disk full.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1838 from jiazhai/rest_force_gc

(cherry picked from commit 641db3b4ff29d8e04216fee84625546707631e8e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a8df8d3ebff7b10affaf92d8198ba47576bb1f82 ------
TIME:11/27/2018 11:16:19

COMMIT:[UTILS] Move ReflectionUtils to bookkeeper-common module

Descriptions of the changes in this PR:

*Motivation*

RefelectionUtils contains helpers for loading classes from relections.
It is useful across the project. However the class is in `bookkeeper-server` module only.

*Changes*

Move this class to `bookkeeper-common` module




Reviewers: Jia Zhai <None>

This closes #1841 from sijie/move_reflection_utils
TREE:tree 19db76bdd31a4b137d423638538ced97e1613b41 ------
TIME:11/28/2018 07:58:12

COMMIT:Add rest endpoint trigger_gc to trigger GC on Bookie

Descriptions of the changes in this PR:

Add rest endpoint trigger_gc to trigger GC on Bookie

### Motivation

Some times user would like to trigger GC manually instead of waiting to the timeout or disk full.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1838 from jiazhai/rest_force_gc

(cherry picked from commit 641db3b4ff29d8e04216fee84625546707631e8e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 18def5e2b783c65746071b37fa569658f8d40753 ------
TIME:11/27/2018 11:16:19

COMMIT:Add rest endpoint trigger_gc to trigger GC on Bookie

Descriptions of the changes in this PR:

Add rest endpoint trigger_gc to trigger GC on Bookie

### Motivation

Some times user would like to trigger GC manually instead of waiting to the timeout or disk full. 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1838 from jiazhai/rest_force_gc
TREE:tree 6bbd48706b5f1186feab780c80cf83df3f88e56a ------
TIME:11/27/2018 11:16:19

COMMIT:ISSUE #1538: Expose MetricsServer in http server

Descriptions of the changes in this PR:

Expose MetricsServer in  http server under `/metrics`

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1546 from jiazhai/issue_1538, closes #1538

TREE:tree 002350e1d3cd7cb78eaef92a19cb0dc8152bd87b ------
TIME:07/24/2018 14:06:08

COMMIT:Release notes for 4.8.1

Release notes for 4.8.1

The commit to review is d09296c589b8a188937833ca51a4b24ea337a901




Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1795 from eolivelli/fix/481-release-notes
TREE:tree 2ef35276eb0963df97d872ad469242d828d34c6e ------
TIME:11/26/2018 09:51:38

COMMIT:Remove MathUtils.now()

Descriptions of the changes in this PR:

*Motivation*

`MathUtils.now()` using System.nanoTime doesn't provide accurate time. It is used
for measuring pupose. However since `nanoTime` can have numeric overflow, so when
it is used for converting into milliseconds, it is misleading and error-prone. A
lot of places using `MathUtis.now` can all replaced with `System.currentTimeMillis()`.

It leads to unknown behavior on compactions. examples is shown in the following figure.

<img width="1157" alt="wechatimg180" src="https://user-images.githubusercontent.com/1217863/48965961-d860b600-ef7c-11e8-9394-1d51cef5c68c.png">

example: this graph shows the major_compaction_count. major compaction is supposed to run every day. but in the graph, there is no major compaction occuring in 4 days.

*Changes*

Remove `MathUtils.now()` and replace it with `System.currentTimeMillis()`.

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1837 from sijie/remove_mathutils_now

(cherry picked from commit a32e29d66162b76a8dd6f58d3eacb7b62dd07ba2)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fe2cf478c451b530f85978fe2cf61e01c3ff9f50 ------
TIME:11/25/2018 06:29:12

COMMIT:Remove MathUtils.now()

Descriptions of the changes in this PR:

*Motivation*

`MathUtils.now()` using System.nanoTime doesn't provide accurate time. It is used
for measuring pupose. However since `nanoTime` can have numeric overflow, so when
it is used for converting into milliseconds, it is misleading and error-prone. A
lot of places using `MathUtis.now` can all replaced with `System.currentTimeMillis()`.

It leads to unknown behavior on compactions. examples is shown in the following figure.

<img width="1157" alt="wechatimg180" src="https://user-images.githubusercontent.com/1217863/48965961-d860b600-ef7c-11e8-9394-1d51cef5c68c.png">

example: this graph shows the major_compaction_count. major compaction is supposed to run every day. but in the graph, there is no major compaction occuring in 4 days.

*Changes*

Remove `MathUtils.now()` and replace it with `System.currentTimeMillis()`.

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1837 from sijie/remove_mathutils_now

(cherry picked from commit a32e29d66162b76a8dd6f58d3eacb7b62dd07ba2)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 440d4b31e0b1b38761aadad2391c23f9eeaaead3 ------
TIME:11/25/2018 06:29:12

COMMIT:Remove MathUtils.now()

Descriptions of the changes in this PR:

*Motivation*

`MathUtils.now()` using System.nanoTime doesn't provide accurate time. It is used
for measuring pupose. However since `nanoTime` can have numeric overflow, so when
it is used for converting into milliseconds, it is misleading and error-prone. A
lot of places using `MathUtis.now` can all replaced with `System.currentTimeMillis()`.

It leads to unknown behavior on compactions. examples is shown in the following figure.

<img width="1157" alt="wechatimg180" src="https://user-images.githubusercontent.com/1217863/48965961-d860b600-ef7c-11e8-9394-1d51cef5c68c.png">

example: this graph shows the major_compaction_count. major compaction is supposed to run every day. but in the graph, there is no major compaction occuring in 4 days.

*Changes*

Remove `MathUtils.now()` and replace it with `System.currentTimeMillis()`.





Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1837 from sijie/remove_mathutils_now
TREE:tree 955d5ce0b9f34faa994153f811e29405292d9e85 ------
TIME:11/25/2018 06:29:12

COMMIT:Make custom metadata final

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1833 from ivankelly/immut-cust
TREE:tree b76e9f19cf17caf891b7866f6128f8366b639455 ------
TIME:11/23/2018 19:50:47

COMMIT:Remove LedgerMetadata copy constructor

A copy constructor makes no sense when it's not possible to mutate the object.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1832 from ivankelly/kill-copy
TREE:tree 648bc814caf13cc42ea7690461f3b0a780d6cfc9 ------
TIME:11/23/2018 17:44:35

COMMIT:Updated site at revision 9b3c6b7

TREE:tree 459b34edf39d16d8622a33dc28216af4d493a1e1 ------
TIME:11/23/2018 16:02:49

COMMIT:Prepare website structure for 4.8.1 release

Signed-off-by: eolivelli <eolivelliapache.org>

Descriptions of the changes in this PR:



### Motivation

Prepare the wesite for 4.8.1 release

### Changes

Create the structure for docs for 4.8.1




Reviewers: Sijie Guo <sijie@apache.org>

This closes #1790 from eolivelli/fix/site-481-structure
TREE:tree 5a584704466f21eceb74802ad311eaa61ff3b24f ------
TIME:11/23/2018 15:57:35

COMMIT:Make LedgerMetadata fields for closing immutable

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1831 from ivankelly/close-immut
TREE:tree 46b90bd3a17c011cc5b2b6e325df3de84218f3a1 ------
TIME:11/23/2018 15:32:31

COMMIT:Updated site at revision 32ae783

TREE:tree 9f083cfb1abae2b125781629624b72c43bdd568a ------
TIME:11/23/2018 01:59:17

COMMIT:Remove LedgerMetadata methods modifying ensembles

Remove any methods in LedgerMetadata that modify the ensemble. With
this change the ensembles are 100% immutable.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1830 from ivankelly/no-mod-ensemble
TREE:tree 62367cf06319dd4f85644141b04b2cce354dd8e7 ------
TIME:11/23/2018 01:04:44

COMMIT:[SCRIPTS] improve bookkeeper script to better handle standalone command


Descriptions of the changes in this PR:



*Motivation*

`bin/bookkeeper standalone` is broken when a release package is built without including `stream` profile.

*Changes*

`standalone` is a service component including everything. so fail the command if it can't locate corresponding components.

Related Issues: #1822





Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1823 from sijie/refactor_bookkeeper_scripts
TREE:tree 6039080044c2e0f4fd33a0a6cdd68178c15c49c4 ------
TIME:11/23/2018 01:03:15

COMMIT:Updated site at revision b52869b

TREE:tree e0d4492a420bfaa4d3cab6816d06766fe3876613 ------
TIME:11/22/2018 21:14:52

COMMIT:Move utility method from LedgerMetadata to test

The method is only used in the test, so it should live there.

Master issue: #281


Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1829 from ivankelly/move-junk
TREE:tree c16c04280c4a2818f9e178eb014f60df40c1ee88 ------
TIME:11/22/2018 20:20:42

COMMIT:Remove duplication logic for 'minNumRacksPerWriteQuorum' handling in RackawareEnsemblePlacementPolicyImpl

Descriptions of the changes in this PR:

With this change
https://github.com/apache/bookkeeper/commit/9ba4c4e0d8be770e03110a958fb8b75a65ae0f59
we introduced 'minNumRacksPerWriteQuorum' config option. To handle that, logic is added in
RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal and RackQuorumCoverageSet. But in
retrospect, this is kind of duplicate logic and changes made in RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal
is not really needed, because anyhow 'apply' of predicate (RRTopologyAwareCoverageEnsemble) is called, which calls
'apply' method on all the concerned RackQuorumCoverageSet.

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1810 from reddycharan/revertrackawarechanges

(cherry picked from commit 8c65088dcd019fa9fe17d39745ca1400ccf7bbbb)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 4ef5fae0aa396ca12d788377eb487a39f44f424f ------
TIME:11/22/2018 20:18:42

COMMIT:Remove duplication logic for 'minNumRacksPerWriteQuorum' handling in RackawareEnsemblePlacementPolicyImpl

Descriptions of the changes in this PR:

With this change
https://github.com/apache/bookkeeper/commit/9ba4c4e0d8be770e03110a958fb8b75a65ae0f59
we introduced 'minNumRacksPerWriteQuorum' config option. To handle that, logic is added in
RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal and RackQuorumCoverageSet. But in
retrospect, this is kind of duplicate logic and changes made in RackawareEnsemblePlacementPolicyImpl.newEnsembleInternal
is not really needed, because anyhow 'apply' of predicate (RRTopologyAwareCoverageEnsemble) is called, which calls
'apply' method on all the concerned RackQuorumCoverageSet.

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1810 from reddycharan/revertrackawarechanges
TREE:tree 28ee9a7d4cc5aedac0e705036b0238b5cea769b1 ------
TIME:11/22/2018 20:18:42

COMMIT:Updated site at revision 10df5e7

TREE:tree efdfdd034a32e146a7554b5ab9efaa78ffbc354d ------
TIME:11/22/2018 19:15:31

COMMIT:Make most LedgerMetadata fields final

Make most fields in LedgerMetadata final. The ones which I have not
changed in this patch require a more involved change, so they'll come
in separate PRs.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1828 from ivankelly/mostly-final
TREE:tree f660fb3563cd3b788c2b0175315a6cbe5400e0cc ------
TIME:11/22/2018 18:45:48

COMMIT:Updated site at revision c6031e0

TREE:tree c96a69a40bc64907c2d9e5fd32bc372e6f349775 ------
TIME:11/22/2018 16:52:31

COMMIT:Remove LedgerMetadata constructors except one for builder

LedgerMetadata shouldn't generally be created outside the client,
except for testing. In the case where it is, the builder should be
used to construct it.

I've left the copy constructor for now, as I don't feel comfortable
removing it until all fields are final, which will occur soon.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1827 from ivankelly/kill-constructors
TREE:tree ae5fe34cef6981d3e4a726fd6801e1e15cc770b8 ------
TIME:11/22/2018 16:23:30

COMMIT:Fix flake in AuditorPeriodicBookieCheckTest

The flake was occurring because the bookie checker was trying to
connect to a TCP endpoint that didn't respond (1.1.1.1) and was
waiting for the whole tcp connect timeout (10sec), while the test was
waiting 10 seconds for the success condition to occur. The success
condition often occurred just after the test fails.

The solution was to bring the connect timeout for the client down to
500ms, giving the auditor plenty of time to register the
underreplicated ledger.

I guess this used to pass in the past because maybe 1.1.1.1 was
actually rejecting packets instead of dropping them, and these changed
when cloudflare took over the address. I changed the endpoint to
192.0.2.0/24 range (TEST-NET) to avoid a similar scenario in the
future.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1826 from ivankelly/auditor-bookie-flake
TREE:tree b9b1682ae23cd26dbd44763286ce6241d991e4d7 ------
TIME:11/22/2018 12:15:35

COMMIT:Updated site at revision f49bd03

TREE:tree d80651d7209cc59d249a0e4521e8e43a47bc17d1 ------
TIME:11/22/2018 03:10:54

COMMIT:LedgerMetadata#parseConfig uses Metadata Builder

parseConfig is one of the main places that mutates member fields of
LedgerMetadata. This change removes these mutates to make it use
LedgerMetadataBuilder instead.

Master issue: #281


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1825 from ivankelly/parse-builder
TREE:tree 8b606ec72d472006fad24fc4942599585952846f ------
TIME:11/22/2018 02:42:45

COMMIT:Updated site at revision 79bb0b1

TREE:tree 2dffea8fe2666b7109a51489dada255334fd6cdc ------
TIME:11/21/2018 18:53:55

COMMIT:AbstractZkLedgerManager should catch all exceptions from parseConfig

And always complete the request if an exception does occur, rather
than throwing it out to the higher level, and hanging the request
forever.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1824 from ivankelly/catch-all-exception-zk
TREE:tree 5931609262503a193a2e517fbcadd369b15c483e ------
TIME:11/21/2018 18:24:59

COMMIT:Change LedgerManager to use CompletableFuture

All new uses of LedgerManager are creating GenericCallbackFutures to
pass in as the callback. This patch cuts out the middleman, and makes
LedgerManager return CompletableFutures itself.

The patch only touches the CRUD operations, and not
LedgerManager#asyncProcessLedgers, which I may tackle in a later PR.

Master issue: #281


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1809 from ivankelly/metastore-futures
TREE:tree 1685a9530025d5bb80a8d913bf6f4f62c5b73c46 ------
TIME:11/19/2018 15:23:36

COMMIT:Rollback snakeyaml version (Fixes IT tests)

The stats gen (#1787) change introduced a version of snakeyaml which
is incompatible with arquillian-cube (between 1.19 and 1.23 they
remove some methods).

This was picked up by the integration tests, but overriden to submit.

This change pins the snakeyaml version at 1.19, thereby allowing the
integration tests to run again.


Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1817 from ivankelly/fix-it
TREE:tree 26a424cb524cd7b3cf76950dfad030e82359bf34 ------
TIME:11/19/2018 11:26:39

COMMIT:Updated site at revision fe50b8c

TREE:tree b7c4718f49d248d8dc757d5edb4b9437f1953c38 ------
TIME:11/17/2018 18:41:06

COMMIT:Introduce condensed encoding format for availabilityOfEntriesOfLedger

Descriptions of the changes in this PR:

- this condensed encoding format will take fewer bytes than initially
proposed bit vector.

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1814 from reddycharan/updatebpdoc
TREE:tree fc52409941b936e8f85ee99aaefcadd31b8a8ffc ------
TIME:11/17/2018 18:11:31

COMMIT:[BOOKIE] Fix sorted ledger storage rotating entry log files too frequent

Descriptions of the changes in this PR:

*Motivation*

A strong behavior was observed when using sorted ledger storage with single entry log manager on production:

"the entry log files are rotated very frequently and small entry log files are produced".

The problem was introduced due to #1410.

At current entry logger, when a new entry log file is created, EntryLogger will notify its listeners
that a new entry log file is rotated via [`onRotateEntryLog`](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogManagerBase.java#L152).

Before the change in #1410, `SortedLedgerStorage` inherits from `InterleavedLedgerStorage`.
So when a new entry log file is rotated, `SortedLedgerStorage` is notified.

However after the change in #1410, `SortedLedgerStorage` doesn't inherits `InterleavedLedgerStorage` anymore.
Instead, the relationship is changed to composition. `SortedLedgerStorage` is composed using an interleaved ledger
storage. So the entrylog listener contract was broken. `SortedLedgerStorage` will not receive any `onRotateEntryLog`
notification any more.

*Changes*

When `SortedLedgerStorage` initializes, it passes its own entry log listener down to the interleaved ledger storage.
So entry logger can notify the right person for entry log rotations.

*Tests*

Existing tests should cover most of the case. Looking for how to add new test cases.

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Andrey Yegorov <None>

This closes #1807 from sijie/fix_rotation_behavior

(cherry picked from commit deebe6db0c2fbd89cd7558e3a7ce76ec076aac5b)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree bb677aabe33383a5a78f9e471deaac2a2baecda0 ------
TIME:11/16/2018 23:10:26

COMMIT:[BOOKIE] Fix sorted ledger storage rotating entry log files too frequent



Descriptions of the changes in this PR:

*Motivation*

A strong behavior was observed when using sorted ledger storage with single entry log manager on production:

"the entry log files are rotated very frequently and small entry log files are produced".

The problem was introduced due to #1410.

At current entry logger, when a new entry log file is created, EntryLogger will notify its listeners
that a new entry log file is rotated via [`onRotateEntryLog`](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogManagerBase.java#L152).

Before the change in #1410, `SortedLedgerStorage` inherits from `InterleavedLedgerStorage`.
So when a new entry log file is rotated, `SortedLedgerStorage` is notified.

However after the change in #1410, `SortedLedgerStorage` doesn't inherits `InterleavedLedgerStorage` anymore.
Instead, the relationship is changed to composition. `SortedLedgerStorage` is composed using an interleaved ledger
storage. So the entrylog listener contract was broken. `SortedLedgerStorage` will not receive any `onRotateEntryLog`
notification any more.

*Changes*

When `SortedLedgerStorage` initializes, it passes its own entry log listener down to the interleaved ledger storage.
So entry logger can notify the right person for entry log rotations.

*Tests*

Existing tests should cover most of the case. Looking for how to add new test cases.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Andrey Yegorov <None>

This closes #1807 from sijie/fix_rotation_behavior
TREE:tree e45eaec09c189b7f5a5fbf5ad7c6a78d0cd472d3 ------
TIME:11/16/2018 23:10:26

COMMIT:Fix cpu-affinity module build on jdk10+

Port tricks from circe-checksum to cpu-affinity module in order to make the build pass on JDK11

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1816 from eolivelli/fix/jdk11-cpu-affinity-build
TREE:tree 65e9a7abc96fb9c88c8bd23d3e4c45a24d218ff3 ------
TIME:11/16/2018 23:09:31

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.8.1-rc1

TREE:tree 05973f01852165bb25b9f3f8b1a919963d71fc00 ------
TIME:11/15/2018 12:50:14

COMMIT:[maven-release-plugin] prepare release v4.8.1-rc1

TREE:tree 47beefd0a5cf043d166b88fd8c3e9633155217f7 ------
TIME:11/15/2018 12:49:52

COMMIT:Updated site at revision 5997963

TREE:tree f05cdfe0b5e716c16982bf9e7f31231d17f91b2b ------
TIME:11/15/2018 00:41:52

COMMIT:Added BlockingQueue implementation based on JCtools

### Motivation

Add a `BlockingQueue` implementation that is suitable for low latency and low contention. 

Key points:
 * Optimized for multiple producers and single consumer
 * When waiting for entries, the thread is blocked with busy wait to avoid context switch.

(This will be used in subsequent PRs to optionally enable it)

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1682 from merlimat/blocking-queue
TREE:tree dbb63620afff5c66df98cc5f4817875d8ef276b9 ------
TIME:11/15/2018 00:12:57

COMMIT:ISSUE #1799: bkctl is broken with default build options

This is a cherry pick of #1799 on branch-4.8.
Original commit is from Sijie Guo

Descriptions of the changes in this PR:

*Motivation*

`bkctl` is designed in a modularized way for extensibility.
it loads command groups via ServiceLoader. However current build
profile doesn't leverage this extensibility. Instead it hardcodes
all the commands in one service load file. So if `bkctl` is built
without `-Dstream`, it will broke.

*Changes*

- move `ledger` related commands to `tools/ledger`
- generate the service load file by concating `commands` files from each module's resources directory.

*Results*

bkctl works for all build profiles.

- without `-Dstream`

```
$ bin/bkctl

bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie      Commands on operating a single bookie
    bookies     Commands on operating a cluster of bookies
    cookie      Commands on operating cookies
    ledger      Commands on interacting with ledgers

    help        Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

- with `-Dstream`

```
$ bin/bkctl

bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters
    cookie          Commands on operating cookies
    ledger          Commands on interacting with ledgers
    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

    help            Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

Master Issue: #1799


Reviewers: Sijie Guo <sijie@apache.org>

This closes #1806 from eolivelli/fix/backport-bkctl, closes #1799
TREE:tree 79e24aeb081446668a0862a7749d4a5fea6358f7 ------
TIME:11/14/2018 12:19:52

COMMIT:Added module to enable CPU affinity

### Motivation

This is part of a set of changes aimed at reducing latency in BK at the expense of other aspects (eg: max throughput). While not intended to be used as default settings, they might be good to have whenever the latency becomes critical. 

Pinning a thread to a particular CPU will ensure no other process will execute on that CPU reducing all scheduler induced context switches that will cause latency jittery.

A given thread that wants to get pinned to a CPU just needs to call: 

```java
CpuAffinity.acquireCore();
```

It's called `acquireCore()` because it will also disable hyper-threading on the pinned cpu.

Subsequent PRs will use this module to have the option to pin critical threads to available CPUs.

### Changes
 * Added JNI module to call `sched_setaffinity()` to pin a thread to a particular CPU
 * Automatically discover available isolated CPUs
 * Acquire file-based locks to allow multiple processes on same machine to acquire CPUs independently.

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1641 from merlimat/cpu-affinity
TREE:tree 0cd336efc8542c61c4b71cab992281f96300a74f ------
TIME:11/13/2018 19:35:24

COMMIT:[BRANCH 4.8] Fix compilation issue introduced by issue #1791



Descriptions of the changes in this PR:

*Motivation*

when #1791 is cherry-picked into branch-4.8, it breaks the build.

*Changes*

Fix the compilation issue.

Related Issue: #1791 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1802 from sijie/fix_branch48, closes #1791
TREE:tree 9fc4a2a41469a329c920cb7ff7b6930b45865c7f ------
TIME:11/13/2018 17:06:51

COMMIT:Updated site at revision 1590ca3

TREE:tree a11dac3fe8d3dc360cb548a55225c1373ce1b021 ------
TIME:11/13/2018 10:22:57

COMMIT:[STATS] introduce `StatsDoc` annotation for better documenting metrics exposed by bookkeeper

Descriptions of the changes in this PR:



### Motivation

A common ask from people using bookkeeper is how they can monitor bookies and bookkeeper clients, what kind of metrics that bookkeeper exposes
and what are the important metrics. Currently bookkeeper doesn't provide any metrics page for guiding people on monitoring bookkeeper services.

In order to help people on this, we need to provide a few documentation pages about metrics. However if we just write such pages, those pages
can quickly get out-of-dated when code is changed.

### Changes

- Introduce an annotation `StatsDoc` for annotating the counters/gauges/opstats in the source code.
- Provide a tool to generate the stats and their documentation into a yaml file.

The yaml file will be used by the website for rendering a metrics reference page.

### Results

```
"server":
  "bookie_BOOKIE_READ_ENTRY_BYTES":
    "description": |-
      bytes stats of ReadEntry on a bookie
    "type": |-
      OPSTATS
  "bookie_WRITE_BYTES":
    "description": |-
      total bytes written to a bookie
    "type": |-
      COUNTER
  "bookie_BOOKIE_ADD_ENTRY":
    "description": |-
      operations stats of AddEntry on a bookie
    "type": |-
      OPSTATS
  "bookie_BOOKIE_RECOVERY_ADD_ENTRY":
    "description": |-
      operation stats of RecoveryAddEntry on a bookie
    "type": |-
      OPSTATS
  "bookie_BOOKIE_ADD_ENTRY_BYTES":
    "description": |-
      bytes stats of AddEntry on a bookie
    "type": |-
      OPSTATS
  "bookie_BOOKIE_FORCE_LEDGER":
    "description": |-
      total force operations occurred on a bookie
    "type": |-
      COUNTER
  "bookie_READ_BYTES":
    "description": |-
      total bytes read from a bookie
    "type": |-
      COUNTER
  "bookie_BOOKIE_READ_ENTRY":
    "description": |-
      operation stats of ReadEntry on a bookie
    "type": |-
      OPSTATS
```

Master Issue: #1786




Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1787 from sijie/stats_generator
TREE:tree ebe9bed240ed39e4b49a5425aee8dce19e488dc7 ------
TIME:11/13/2018 09:54:56

COMMIT:BP-36: Stats documentation annotation



Descriptions of the changes in this PR:

*Motivation*

A common ask from people using bookkeeper is how they can monitor bookies and bookkeeper clients, what kind of metrics that bookkeeper exposes
and what are the important metrics. Currently bookkeeper doesn't provide any metrics page for guiding people on monitoring bookkeeper services.

In order to help people on this, we need to provide a few documentation pages about metrics. However if we just write such pages, those pages
can quickly get out-of-dated when code is changed. The proposal here is to seek a programming way for generating metrics related pages.

Master Issue: #1785




Reviewers: Sijie Guo <sijie@apache.org>, Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>

This closes #1786 from sijie/bp_stats_generator
TREE:tree ac20969c1d13e000beb0402671738cb16f15498f ------
TIME:11/13/2018 09:53:33

COMMIT:Updated site at revision 9fd28d0

TREE:tree 036d1210fb2e2747e03c3151fdb9f1bd58f2910a ------
TIME:11/12/2018 21:40:35

COMMIT:Move version out of LedgerMetadata

The version is a property of the metadata store and not of the
LedgerMetadata object itself. Putting it in the LedgerMetadata forces
that LedgerMetadata to be mutable, as it needs to be updated before
being sent to the LedgerManager.

This change moves version out of LedgerMetadata and modifies the
LedgerManager to use Versioned<LedgerMetadata>.

This is a large change, but almost purely mechanical.

TestHttpService has been modified to remove a preexisting flake in a
test which had to be modified for this change.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1797 from ivankelly/kill-set-version
TREE:tree 87b020cab5542e18b772e2ee357f25660f41ad49 ------
TIME:11/12/2018 21:11:59

COMMIT:Updated site at revision 8ad1e90

TREE:tree 2c996a1ceefec2657f4000f656feecd4a0466095 ------
TIME:11/12/2018 14:41:39

COMMIT:[tools] package bookkeeper tools into a separated distribution

Descriptions of the changes in this PR:

*Motivation*

Server distribution contains a lot of stuffs that doesn’t need to run bkctl and bookkeeper shell, such as stats providers, http servers and many other dependencies.

At many environments, you want to deliver a set of tools to your customers to interact with or operate bookkeeper clusters. They don’t care about server side stuffs and ask them to use a server package to run a tool makes things confused.

*changes*

Create a new ‘bkctl’ package that only contains bookkeeper shell and new cli.





Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1798 from sijie/package_bookkeeper_tool
TREE:tree c4b86ed71e2357d13af80b494cee908ec825491f ------
TIME:11/12/2018 13:54:34

COMMIT:ISSUE #1799: bkctl is broken with default build options

Descriptions of the changes in this PR:

*Motivation*

`bkctl` is designed in a modularized way for extensibility.
it loads command groups via ServiceLoader. However current build
profile doesn't leverage this extensibility. Instead it hardcodes
all the commands in one service load file. So if `bkctl` is built
without `-Dstream`, it will broke.

*Changes*

- move `ledger` related commands to `tools/ledger`
- generate the service load file by concating `commands` files from each module's resources directory.

*Results*

bkctl works for all build profiles.

- without `-Dstream`

```
$ bin/bkctl

bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie      Commands on operating a single bookie
    bookies     Commands on operating a cluster of bookies
    cookie      Commands on operating cookies
    ledger      Commands on interacting with ledgers

    help        Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

- with `-Dstream`

```
$ bin/bkctl

bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters
    cookie          Commands on operating cookies
    ledger          Commands on interacting with ledgers
    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

    help            Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

Master Issue: #1799 




Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1800 from sijie/refactor_bkctl, closes #1799
TREE:tree b9f137dc8d570428714d5f4108c5c95e44ef2d1e ------
TIME:11/12/2018 13:42:59

COMMIT:Updated site at revision 3cc261a

TREE:tree ddd4b3d15d657adce78a8fce3eb7df22c6cbbc39 ------
TIME:11/11/2018 22:56:59

COMMIT:Fix bugs in DefaultEnsemblePlacementPolicy

Descriptions of the changes in this PR:

- bookieInfoMap is not initialized and newEnsemble will throws BKNotEnoughBookiesException if
diskWeightBasedPlacement is enabled
- add test coverage for DefaultEnsemblePlacementPolicy with diskWeightBasedPlacement enabled

Reviewers: Sijie Guo <sijie@apache.org>, Andrey Yegorov <None>

This closes #1788 from reddycharan/defaultplacementfix

(cherry picked from commit 398aa4cdc4b168f76d453fd74eda66182e24b21f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 251bfcc848c84acba0bbffbde4052ce732a17078 ------
TIME:11/11/2018 22:30:15

COMMIT:Fix bugs in DefaultEnsemblePlacementPolicy

Descriptions of the changes in this PR:

- bookieInfoMap is not initialized and newEnsemble will throws BKNotEnoughBookiesException if
diskWeightBasedPlacement is enabled
- add test coverage for DefaultEnsemblePlacementPolicy with diskWeightBasedPlacement enabled

Reviewers: Sijie Guo <sijie@apache.org>, Andrey Yegorov <None>

This closes #1788 from reddycharan/defaultplacementfix

(cherry picked from commit 398aa4cdc4b168f76d453fd74eda66182e24b21f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree c29b15200e9a3ec37f4738fc016870d94159dbc9 ------
TIME:11/11/2018 22:30:15

COMMIT:Fix bugs in DefaultEnsemblePlacementPolicy


Descriptions of the changes in this PR:

- bookieInfoMap is not initialized and newEnsemble will throws BKNotEnoughBookiesException if
diskWeightBasedPlacement is enabled
- add test coverage for DefaultEnsemblePlacementPolicy with diskWeightBasedPlacement enabled



Reviewers: Sijie Guo <sijie@apache.org>, Andrey Yegorov <None>

This closes #1788 from reddycharan/defaultplacementfix
TREE:tree 9c95d501d952c9d7c4d849629b4ba78115935128 ------
TIME:11/11/2018 22:30:15

COMMIT:Fix indentation in BP-34 doc


Descriptions of the changes in this PR:

- just indentation fix



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1803 from reddycharan/bp34fix
TREE:tree 6ebd53742b6b8c4089746447e6b09495f3d2a707 ------
TIME:11/11/2018 22:28:58

COMMIT:Fixed Auth with v2 protocol

### Motivation

BK auth framework is currently broken when using v2 protocol.

### Changes

 * Fixed auth when using V2 protocol
 * Made sure a client with authentication enabled can talk to a bookie without authentication. This is required in any case when enabling/disabling authentication on a live cluster.
 * Run all auth tests against both v2 and v3 protocol.

This should be included in 4.7.2 to give a path to upgrade.

cc/ rdhabalia

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1805 from merlimat/fix-v2-auth

(cherry picked from commit dc2aaaa070d9a8d393409b69c80ad668b70f6d2b)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5566cf52b6c92df318e0ed3de5706d32343a48a8 ------
TIME:11/11/2018 19:42:32

COMMIT:Fixed Auth with v2 protocol

### Motivation

BK auth framework is currently broken when using v2 protocol.

### Changes

 * Fixed auth when using V2 protocol
 * Made sure a client with authentication enabled can talk to a bookie without authentication. This is required in any case when enabling/disabling authentication on a live cluster.
 * Run all auth tests against both v2 and v3 protocol.

This should be included in 4.7.2 to give a path to upgrade.

cc/ rdhabalia

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1805 from merlimat/fix-v2-auth

(cherry picked from commit dc2aaaa070d9a8d393409b69c80ad668b70f6d2b)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 4990d86486860b5542f55aa5a1382c67f5c4ce4a ------
TIME:11/11/2018 19:42:32

COMMIT:Fixed Auth with v2 protocol

### Motivation

BK auth framework is currently broken when using v2 protocol.

### Changes

 * Fixed auth when using V2 protocol
 * Made sure a client with authentication enabled can talk to a bookie without authentication. This is required in any case when enabling/disabling authentication on a live cluster.
 * Run all auth tests against both v2 and v3 protocol.

This should be included in 4.7.2 to give a path to upgrade.

cc/ rdhabalia 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1805 from merlimat/fix-v2-auth
TREE:tree d5156a643b0c9e5b77068287bb9b375466cdca74 ------
TIME:11/11/2018 19:42:32

COMMIT:[BUILD] Ignore `versionsBackup` file generated by `mvn versions:set`


Descriptions of the changes in this PR:

*Motivation*

`mvn versions:set` will generate files suffixed with `.versionsBackup`





Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1801 from sijie/exclude_versionsbackup
TREE:tree 2ba8f4f2a977dd97820f5c9ab13b3faf98b341bf ------
TIME:11/10/2018 10:34:57

COMMIT:[TOOLS] improve bkctl help message

Descriptions of the changes in this PR:

*Motivation*

Currently `bin/bktcl help` will output all command groups all together.
It is a bit hard to tell what command groups to use, especially some
commands are used for table service.

*Changes*

Introduce `category` in the cli spec to define which category that a
command group belongs to. So when it prints out the help message, it
can use that information to categorize the command groups together
to provide better user experience.

*Results*

```
$ bin/bkctl help
bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Infrastructure commands :

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters

Ledger service commands :

    ledger          Commands on interacting with ledgers

Table service commands :

    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

Other commands :

    help            Display help information about it
```

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1793 from sijie/add_groups

(cherry picked from commit 843c0cc2fe73fc59d743e41dde81178608a29b8e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 9dd2a49284873ca729f78c19ef59eade032901cf ------
TIME:11/10/2018 01:32:37

COMMIT:[TOOLS] improve bkctl help message



Descriptions of the changes in this PR:

*Motivation*

Currently `bin/bktcl help` will output all command groups all together.
It is a bit hard to tell what command groups to use, especially some
commands are used for table service.

*Changes*

Introduce `category` in the cli spec to define which category that a
command group belongs to. So when it prints out the help message, it
can use that information to categorize the command groups together
to provide better user experience.

*Results*

```
$ bin/bkctl help
bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Infrastructure commands :

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters

Ledger service commands :

    ledger          Commands on interacting with ledgers

Table service commands :

    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

Other commands :

    help            Display help information about it
```




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1793 from sijie/add_groups
TREE:tree b27faf1e29d966f856b6f0934d661a83b967faa8 ------
TIME:11/10/2018 01:32:37

COMMIT:[TOOLS] add cookie related commands

Descriptions of the changes in this PR:

*Motivation*

In some use cases, you need cookie related tools to create/delete/update/get cookie when handling production issues.
Currently bookkeeper doesn't provide such commands.

*Changes*

Add cookie related commands

- create
- delete
- get
- update
- generate

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1794 from sijie/add_cookie_commands

(cherry picked from commit e31e844505c59a9c119c6896a7f789db8f432dc2)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree e9d16125a7499012ec249c4e5b1dc6e3d15e6d52 ------
TIME:11/09/2018 06:47:12

COMMIT:[TOOLS] add cookie related commands



Descriptions of the changes in this PR:

*Motivation*

In some use cases, you need cookie related tools to create/delete/update/get cookie when handling production issues.
Currently bookkeeper doesn't provide such commands.

*Changes*

Add cookie related commands

- create
- delete
- get
- update
- generate




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1794 from sijie/add_cookie_commands
TREE:tree af2a13c46ddc623d0cae25272a75c2a2fecc7921 ------
TIME:11/09/2018 06:47:12

COMMIT:Issue #1791: Read Submission should bypass OSE Threads

Profiling of our Bookkeeper Client code for read requests shows that client threads spend half of their time in dispatching requests to OrderedExecutors (just the dispatch itself, not the execution inside OSE): 54% of their CPU time is spent in OrderedExecutor.executeOrdered() (called by LedgerHandle.readEntriesInternalAsync()). The high time spend in request submission to OSE is largely caused by Linux scheduling cost, that is the cost of dispatching the OSE thread to CPU: 42% of total time (3/4th of executeOrdered() time), threads spend in Unsafe.unpark(), which is essentially Linux scheduling/dispatching of another thread.

This change executes read submissions (PendingReadOp) on read-only ledger handles directly inside the client thread instead of submitting them to Ordered Executors.

Tests with a prototype have shown significant improvements in both overall CPU consumption as well as read latency. The additional work client threads have to do (the dispatch of the read requests to netty) is roughly the same as the (saved) dispatch cost to OSE, so the change turns out to be neutral for CPU consumption of client threads. In some experiments, the savings even exceed the additional work, and client threads consume less cpu even though they "do more". It also frees up lots of resources in OSE threads. Since it eliminates one context-switch in read submission and also avoids serialization of reads to the same ledger (or ledgers hashing to the same OSE), it also reduces read latency. For a mixed read-write workload (14,000 reads/sec on read-only ledgers, 4,000 writes/sec on another set of ledgers), this change has reduced CPU consumption of OSE threads by 25%, kept CPU consumption of client (and Netty) threads the same, and yielded a 6% improvement of read latency (as measured by BK Client).

Master Issue: #1791: Read Submission should bypass OSE Threads

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1792 from nicmichael/DirectRead, closes #1791

TREE:tree fe6024fcfbc8af10d71c54db2d6aa6869cf94450 ------
TIME:11/08/2018 17:51:10

COMMIT:Issue #1791: Read Submission should bypass OSE Threads

### Motivation

Profiling of our Bookkeeper Client code for read requests shows that client threads spend half of their time in dispatching requests to OrderedExecutors (just the dispatch itself, not the execution inside OSE): 54% of their CPU time is spent in OrderedExecutor.executeOrdered() (called by LedgerHandle.readEntriesInternalAsync()). The high time spend in request submission to OSE is largely caused by Linux scheduling cost, that is the cost of dispatching the OSE thread to CPU: 42% of total time (3/4th of executeOrdered() time), threads spend in Unsafe.unpark(), which is essentially Linux scheduling/dispatching of another thread.

### Changes

This change executes read submissions (PendingReadOp) on read-only ledger handles directly inside the client thread instead of submitting them to Ordered Executors.

Tests with a prototype have shown significant improvements in both overall CPU consumption as well as read latency. The additional work client threads have to do (the dispatch of the read requests to netty) is roughly the same as the (saved) dispatch cost to OSE, so the change turns out to be neutral for CPU consumption of client threads. In some experiments, the savings even exceed the additional work, and client threads consume less cpu even though they "do more". It also frees up lots of resources in OSE threads. Since it eliminates one context-switch in read submission and also avoids serialization of reads to the same ledger (or ledgers hashing to the same OSE), it also reduces read latency. For a mixed read-write workload (14,000 reads/sec on read-only ledgers, 4,000 writes/sec on another set of ledgers), this change has reduced CPU consumption of OSE threads by 25%, kept CPU consumption of client (and Netty) threads the same, and yielded a 6% improvement of read latency (as measured by BK Client).

Master Issue: #1791: Read Submission should bypass OSE Threads


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1792 from nicmichael/DirectRead, closes #1791
TREE:tree 3d3675db88832f651330ed6964d9b4434940120f ------
TIME:11/08/2018 17:51:10

COMMIT:Cache InetSocketAddress if hostname is IPAddress

Descriptions of the changes in this PR:

- in BookieSocketAddress if IPAddress is hostname then it is okay
to cache InetSocketAddress, since the canonicalhostname of the node
dont change.

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Andrey Yegorov <None>

This closes #1789 from reddycharan/bookieaddressonlywhenhostname

(cherry picked from commit 102475a954eb0c00c1cc2ccf022db4b7c0bb9eea)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 4185f6569b08b89018e871fec630ce9a961e5f9f ------
TIME:11/08/2018 17:49:32

COMMIT:Cache InetSocketAddress if hostname is IPAddress

Descriptions of the changes in this PR:

- in BookieSocketAddress if IPAddress is hostname then it is okay
to cache InetSocketAddress, since the canonicalhostname of the node
dont change.

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Andrey Yegorov <None>

This closes #1789 from reddycharan/bookieaddressonlywhenhostname

(cherry picked from commit 102475a954eb0c00c1cc2ccf022db4b7c0bb9eea)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree df5b163d1bc15e10136440960a771a8ae394b301 ------
TIME:11/08/2018 17:49:32

COMMIT:Cache InetSocketAddress if hostname is IPAddress



Descriptions of the changes in this PR:

- in BookieSocketAddress if IPAddress is hostname then it is okay
to cache InetSocketAddress, since the canonicalhostname of the node
dont change.



Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Andrey Yegorov <None>

This closes #1789 from reddycharan/bookieaddressonlywhenhostname
TREE:tree 6a32034441dc72f690c76adda5f7add6fa1b6d3e ------
TIME:11/08/2018 17:49:32

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.8.1-rc0

TREE:tree 2d6811d5575fa6a7e306ade47b0232644b8c535e ------
TIME:11/08/2018 09:04:12

COMMIT:[maven-release-plugin] prepare release v4.8.1-rc0

TREE:tree 66cebf32fa6444ca0efb2dc83f986acedf572205 ------
TIME:11/08/2018 09:03:52

COMMIT:Bump branch-4.8 to 4.8.1-SNAPSHOT
During the release process of 4.8.0 the release branch was not updated correctly, this fixes the status of the branch, in preparation of 4.8.1 release

TREE:tree 2d6811d5575fa6a7e306ade47b0232644b8c535e ------
TIME:11/08/2018 08:41:50

COMMIT:Upgrade to Netty 4.1.31 and use individual dependencies

### Motivation

 * Upgrade to latest Netty version which brings in perf improvements and some new features (eg: https://github.com/netty/netty/pull/8267) 

 * Broke down the dependencies from `netty-all` into individual components, as discussed at https://github.com/apache/bookkeeper/pull/1755#discussion_r228449352



Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1784 from merlimat/netty-4.1.31
TREE:tree 698250f4b5dffdb43aa5e974559837a850dcb22a ------
TIME:11/06/2018 21:22:23

COMMIT:Use default metric registry in Prometheus exporter

### Motivation

Currently the Prometheus exporter is using a private metrics register. This doesn't work well for BK client where we want to expose in the same registry of application, or when we want to interact with other tools that use the default static registry (eg: log4j, jetty integrations for prometheus).


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1765 from merlimat/prometheus
TREE:tree a37d23b2e8060d8f799c72924eb11639e4a8e9a6 ------
TIME:11/03/2018 18:42:49

COMMIT:Use default metric registry in Prometheus exporter

### Motivation

Currently the Prometheus exporter is using a private metrics register. This doesn't work well for BK client where we want to expose in the same registry of application, or when we want to interact with other tools that use the default static registry (eg: log4j, jetty integrations for prometheus).


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1765 from merlimat/prometheus
TREE:tree ec3ad0814a1f84cd27813e6edf573ed0fd30a5a7 ------
TIME:11/03/2018 18:42:49

COMMIT:Use default metric registry in Prometheus exporter

### Motivation

Currently the Prometheus exporter is using a private metrics register. This doesn't work well for BK client where we want to expose in the same registry of application, or when we want to interact with other tools that use the default static registry (eg: log4j, jetty integrations for prometheus).


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1765 from merlimat/prometheus
TREE:tree 929a78edc8a937c5136b48a4b57ae2ad1fdc789e ------
TIME:11/03/2018 18:42:49

COMMIT:ISSUE #1767: security vulnerabilities in 3rd party dependencies

Descriptions of the changes in this PR:

Upgraded jline and jackson to remove security vulnerabilities mentioned in #1767 

### Motivation

Remove security vulnerabilities mentioned in #1767 

### Changes

Upgraded jline and jackson 3rd party dependencies

Master Issue: #1767 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1777 from mptap/fix-1767-remove-vulnerabilities, closes #1767
TREE:tree 982a2e3448f5cc537497641ee6d1238218a809e5 ------
TIME:11/03/2018 18:41:19

COMMIT:[TABLE SERVICE] [PYTHON] add default port to service hosts

Descriptions of the changes in this PR:

*Motivation*

Similar as #1778, add default port to service hosts if port is missing.

*Changes*

add default port to service hosts if they miss ports

Related Issue: #1778




Reviewers: Jia Zhai <None>

This closes #1780 from sijie/fix_python_service_uri
TREE:tree cfd048e698b79ea7e612bd3f82f4bd5da80cc27c ------
TIME:11/03/2018 01:47:37

COMMIT:[TABLE SERVICE] add default port to service hosts


Descriptions of the changes in this PR:

*Motivation*

Currently we have to add `4181` in the service uri in order to make it work.
Ideally it would be great that the system can fill the default port if port is missing.

*Changes*

add default port when parsing `ServiceURI`





Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1778 from sijie/add_default_port
TREE:tree 1f89f7673aaa2c2d10086d3e499bdc0b54525b64 ------
TIME:11/02/2018 22:41:09

COMMIT:[TESTS] Issue #1752: disable etcd tests in normal builds



Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1766 attempts to disable etcd tests in normal builds.
however it only added the `integrationTests` profile but didn't disable tests
in normal builds.

*Changes*

Disable etcd tests in normal builds

Master Issue: #1752 




Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1779 from sijie/run_etcd_tests_on_integrationtests, closes #1752
TREE:tree 3cffd74f97cd9e86044b0bfc69197bd6b0ffc28c ------
TIME:11/02/2018 17:59:38

COMMIT:ISSUE #1757: prevent race between flush and delete from recreating index

IndexPersistencManager.flushLedgerHandle can race with delete by
obtaining a FileInfo just prior to delete and then proceeding to rewrite
the file info resurrecting it.  FileInfo provides a convenient point of
synchronization for avoinding this race.  FileInfo.moveLedgerIndexFile,
FileInfo.flushHeader, and FileInfo.delete() are synchronized already, so
this patch simply adds a deleted flag to the FileInfo object to indicate
that the FileInfo has become invalid.  checkOpen is called in every
method and will now throw FileInfoDeleted if delete has been called.
IndexPersistenceManager can catch it and deal with it appropriately in
flush (which generally means moving onto the next ledger).

This patch also eliminates ledgersToFlush and ledgersFlushing.  Their
purpose appears to be to allow delete to avoid flushing a ledger which
has been selected for flushing but not flushed yet avoiding the above
race.  It's not sufficient, however, because IndexInMemPageMgr calls
IndexPersistenceManager.flushLedgerHeader, which can obtain a FileInfo
for the ledger prior to the deletion and then call
relocateIndexFileAndFlushHeader afterwards.

Also, if the purpose was to avoid concurrent calls into
flushSpecificLedger on the same ledger, it's wrong because of the
following sequence:

t0: thread 0 calls flushOneOrMoreLedgers
t1: thread 0 place ledger 10 into ledgersFlushing and completes
flushSpecificLedger
t2: thread 2 performs a write to ledger 10
t3: thread 1 calls flushOneOrMoreLedgers skipping ledger 10
t4: thread 0 releases ledger 10 from ledgersFlushing
t5: thread 1 completes flushOneOrMoreLedgers

Although thread 1 begins to flush after the write to ledger 10, it won't
capture the write rendering the flush incorrect.  I don't think it's
actually worth avoiding overlapping flushes here because both FileInfo
and LedgerEntryPage track dirty state.  As such, it seems simpler to
just get rid of them.

This patch also adds a more agressive version of testFlushDeleteRace to
test the new behavior.  Testing with multiple flushers turned up a bug
with LedgerEntryPage.getPageToWrite where didn't return a buffer with
independent read pointers, so this patch addresses that as well.

(bug W-5549455)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>
(cherry picked from commit 7b5ac3d5e76ac4df618764cafe80aef2994703ec)


Author: 

Reviewers: Enrico Olivelli <eolivelligmail.com>, Sijie Guo <sijieapache.org>

This closes #1769 from athanatos/forupstream/wip-1757, closes #1757

(cherry picked from commit 41e4bccb9694e1f373e919f6891b8e88b2232c5e)

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1775 from athanatos/forupstream/wip-1757-4.8, closes #1757
TREE:tree e0388b5ed7dd3c294283fd3d2783e15c665aa0b7 ------
TIME:10/31/2018 09:21:46

COMMIT:ISSUE #1757: prevent race between flush and delete from recreating index

IndexPersistencManager.flushLedgerHandle can race with delete by
obtaining a FileInfo just prior to delete and then proceeding to rewrite
the file info resurrecting it.  FileInfo provides a convenient point of
synchronization for avoinding this race.  FileInfo.moveLedgerIndexFile,
FileInfo.flushHeader, and FileInfo.delete() are synchronized already, so
this patch simply adds a deleted flag to the FileInfo object to indicate
that the FileInfo has become invalid.  checkOpen is called in every
method and will now throw FileInfoDeleted if delete has been called.
IndexPersistenceManager can catch it and deal with it appropriately in
flush (which generally means moving onto the next ledger).

This patch also eliminates ledgersToFlush and ledgersFlushing.  Their
purpose appears to be to allow delete to avoid flushing a ledger which
has been selected for flushing but not flushed yet avoiding the above
race.  It's not sufficient, however, because IndexInMemPageMgr calls
IndexPersistenceManager.flushLedgerHeader, which can obtain a FileInfo
for the ledger prior to the deletion and then call
relocateIndexFileAndFlushHeader afterwards.

Also, if the purpose was to avoid concurrent calls into
flushSpecificLedger on the same ledger, it's wrong because of the
following sequence:

t0: thread 0 calls flushOneOrMoreLedgers
t1: thread 0 place ledger 10 into ledgersFlushing and completes
flushSpecificLedger
t2: thread 2 performs a write to ledger 10
t3: thread 1 calls flushOneOrMoreLedgers skipping ledger 10
t4: thread 0 releases ledger 10 from ledgersFlushing
t5: thread 1 completes flushOneOrMoreLedgers

Although thread 1 begins to flush after the write to ledger 10, it won't
capture the write rendering the flush incorrect.  I don't think it's
actually worth avoiding overlapping flushes here because both FileInfo
and LedgerEntryPage track dirty state.  As such, it seems simpler to
just get rid of them.

This patch also adds a more agressive version of testFlushDeleteRace to
test the new behavior.  Testing with multiple flushers turned up a bug
with LedgerEntryPage.getPageToWrite where didn't return a buffer with
independent read pointers, so this patch addresses that as well.

(bug W-5549455)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>
(cherry picked from commit 7b5ac3d5e76ac4df618764cafe80aef2994703ec)

Author:

Reviewers: Enrico Olivelli <eolivelligmail.com>, Sijie Guo <sijieapache.org>

This closes #1769 from athanatos/forupstream/wip-1757, closes #1757

(cherry picked from commit 41e4bccb9694e1f373e919f6891b8e88b2232c5e)

Conflicts:
    bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java

Minor conflict over fileInfoVersionToWrite from the explicit lac patch.

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1774 from athanatos/forupstream/wip-1757-4.7, closes #1757
TREE:tree 01fe1d736369336539d808f89e6496a7918987d5 ------
TIME:10/31/2018 09:20:30

COMMIT:Reduce stack traces in logs for common cases

### Motivation

For common "error" conditions the exception message is the only important bit while the stack traces are just adding clutter the logs files.

Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1776 from merlimat/master

(cherry picked from commit b17b1657e938aa41d747fd49537559c4f29860de)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree d21c336c0c6bc96640b6bffe67a6296894548f65 ------
TIME:10/31/2018 09:18:57

COMMIT:Reduce stack traces in logs for common cases

### Motivation

For common "error" conditions the exception message is the only important bit while the stack traces are just adding clutter the logs files.

Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1776 from merlimat/master

(cherry picked from commit b17b1657e938aa41d747fd49537559c4f29860de)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6d6f91fd9ce767e1a878ad7f095cdfaf86f99d90 ------
TIME:10/31/2018 09:18:57

COMMIT:Reduce stack traces in logs for common cases

### Motivation

For common "error" conditions the exception message is the only important bit while the stack traces are just adding clutter the logs files. 



Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1776 from merlimat/master
TREE:tree 941a9c72ec1301797a1dded8bea426477950b5c6 ------
TIME:10/31/2018 09:18:57

COMMIT:[TABLE SERVICE] Fix python client can't read keys written by java clients

Descriptions of the changes in this PR:

*Motivation*

Python client is a thin table service client. So it relies on storage container
intercepting the requests to attach routing header. It attaches the routing header
if the requests are needed to route to remote containers; however for the local containers
it doesn't attach the right routing header.

*Changes*

Fix `StorageContainerImpl` to use proxy routing interceptor to intercept requests to attach routing header.

*Tests*

Add integration tests in python client & add test for python clients reading key/value pairs written by java clients.




Reviewers: Jia Zhai <None>

This closes #1771 from sijie/remove_python23_incompatible_changes
TREE:tree 905f734ca82b640b450e3750f9a31f2c9fb6d88b ------
TIME:10/30/2018 19:47:54

COMMIT:[TESTS] Fix integration test TestCompatUpgradeYahooCustom.testUpgradeYahooCustom

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1749 fixes bash script issue but it introduced `set -e` which
will fail `bin/bookkeeper` if grepping configuration file failed.

*Changes*

`set -e` is useful to fail fast if anything fails in the bash script. This change
is to mask exit code of `grep` operation, since the bash script already handle
the grep result.

*Tests*

Manually verified the change works. And the existing TestCompatUpgradeYahooCustom.testUpgradeYahooCustom
integration tests would also verify if the change fixes the problem or not.




Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Ivan Kelly <ivank@apache.org>

This closes #1772 from sijie/fix_common_scripts
TREE:tree afc67a3bb8bc7bca28dd02eff60bf97d5c010fd1 ------
TIME:10/30/2018 19:46:31

COMMIT:ISSUE #1757: prevent race between flush and delete from recreating index

IndexPersistencManager.flushLedgerHandle can race with delete by
obtaining a FileInfo just prior to delete and then proceeding to rewrite
the file info resurrecting it.  FileInfo provides a convenient point of
synchronization for avoinding this race.  FileInfo.moveLedgerIndexFile,
FileInfo.flushHeader, and FileInfo.delete() are synchronized already, so
this patch simply adds a deleted flag to the FileInfo object to indicate
that the FileInfo has become invalid.  checkOpen is called in every
method and will now throw FileInfoDeleted if delete has been called.
IndexPersistenceManager can catch it and deal with it appropriately in
flush (which generally means moving onto the next ledger).

This patch also eliminates ledgersToFlush and ledgersFlushing.  Their
purpose appears to be to allow delete to avoid flushing a ledger which
has been selected for flushing but not flushed yet avoiding the above
race.  It's not sufficient, however, because IndexInMemPageMgr calls
IndexPersistenceManager.flushLedgerHeader, which can obtain a FileInfo
for the ledger prior to the deletion and then call
relocateIndexFileAndFlushHeader afterwards.

Also, if the purpose was to avoid concurrent calls into
flushSpecificLedger on the same ledger, it's wrong because of the
following sequence:

t0: thread 0 calls flushOneOrMoreLedgers
t1: thread 0 place ledger 10 into ledgersFlushing and completes
flushSpecificLedger
t2: thread 2 performs a write to ledger 10
t3: thread 1 calls flushOneOrMoreLedgers skipping ledger 10
t4: thread 0 releases ledger 10 from ledgersFlushing
t5: thread 1 completes flushOneOrMoreLedgers

Although thread 1 begins to flush after the write to ledger 10, it won't
capture the write rendering the flush incorrect.  I don't think it's
actually worth avoiding overlapping flushes here because both FileInfo
and LedgerEntryPage track dirty state.  As such, it seems simpler to
just get rid of them.

This patch also adds a more agressive version of testFlushDeleteRace to
test the new behavior.  Testing with multiple flushers turned up a bug
with LedgerEntryPage.getPageToWrite where didn't return a buffer with
independent read pointers, so this patch addresses that as well.

(bug W-5549455)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>
(cherry picked from commit 7b5ac3d5e76ac4df618764cafe80aef2994703ec)


Author: 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1769 from athanatos/forupstream/wip-1757, closes #1757
TREE:tree c23adf11a9f147d08e077573dc08aa27eef864fc ------
TIME:10/30/2018 19:26:50

COMMIT:Issue #1752: Etcd docker based tests are running on wrong jobs on CI



Descriptions of the changes in this PR:

*Motivation*

Fixes #1752 

Etcd metadata driver is using testcontainer to run Etcd in containers for integration tests.
However this job is running as part normal build, which can cause container image being deleted
due to concurrent builds.

*Changes*

Move etcd metadata driver tests to be as part of `integrationTests`

Master Issue: #1752 



Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1766 from codingwangqi/move_etcd_to_integration_tests, closes #1752
TREE:tree 6c88a16aed63ad1279ac063655fdc9f50941c2b0 ------
TIME:10/30/2018 02:53:19

COMMIT:Updated site at revision d9444ba

TREE:tree cfb5d8478e63ad730b0f86d6ab61dce3add323d0 ------
TIME:10/28/2018 15:23:26

COMMIT:Updated site at revision fcd63f9

TREE:tree 518a940b416158886448d620aa63217e9bc28a5f ------
TIME:10/28/2018 14:54:02

COMMIT:[WEBSITE] Fix broken link to ledger-api#example-application

Link should be to a section in same page

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1764 from merlimat/fix-docs-link
TREE:tree 66c83461e68a37b72a09e5af7d0646022a20ee8a ------
TIME:10/28/2018 14:30:23

COMMIT:Kill LedgerMetadata#isConflictWith

It doesn't make sense anymore, as local copies of the metadata are
never modified, only updated with the latest version from the metadata
store.

In effect, this logic has been broken out to the places where we try
to update the metadata store copy. Each time we try to update the
metadata store, we ensure that the update we are applying still makes
sense with regard to the copy of the metadata we are updating.

Master issue: #281


Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1760 from ivankelly/kill-is-conflict-with
TREE:tree 4e153fbe26f1eb9ab701150964b83d4c1c41a6bd ------
TIME:10/28/2018 14:06:18

COMMIT:[MERGE SCRIPT] remove authors section



Descriptions of the changes in this PR:

*Motivation*

We are using github api to merge pull requests now.
So the authors section is not correct, remove that section and rely on github merge api.

*Changes*

remove authors section in the commit log.





Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1758 from sijie/fix_merge_scripts
TREE:tree e0b94d14fb30f6a6b4348c85c5382d7cebecbb0b ------
TIME:10/28/2018 14:05:28

COMMIT:Don't cache Bookie hostname DNS resolution forever

### Motivation

`BookieSocketAddress` is resolving the bookie DNS name in its constructor and then using the already resolved `InetSocketAddress` instance.

If the IP of a bookie changes, the BK client will continue to use the old IP address.

### Changes

Construct a new `InetSocketAddress` each time `getSocketAddress()` gets called (eg: each time we attempt to make a new connection) so that we're making sure to get the right IP.

I cannot think of a good way to add unit test for this at this point, suggestions are welcome. 

I think this should be included in a patch release as well 4.7.3 or 4.8.1

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>

This closes #1762 from merlimat/fix-dns
TREE:tree 6a7f43b1c14687c16182407ea1effcf0cdb483e0 ------
TIME:10/28/2018 13:56:47

COMMIT:Don't cache Bookie hostname DNS resolution forever

### Motivation

`BookieSocketAddress` is resolving the bookie DNS name in its constructor and then using the already resolved `InetSocketAddress` instance.

If the IP of a bookie changes, the BK client will continue to use the old IP address.

### Changes

Construct a new `InetSocketAddress` each time `getSocketAddress()` gets called (eg: each time we attempt to make a new connection) so that we're making sure to get the right IP.

I cannot think of a good way to add unit test for this at this point, suggestions are welcome.

I think this should be included in a patch release as well 4.7.3 or 4.8.1

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>

This closes #1762 from merlimat/fix-dns

(cherry picked from commit 3d8bad44a40ce5cb173df5dfd7cb06d81bed26e1)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a208488ca9bcb439da08260b5911b3cb7647c4ed ------
TIME:10/28/2018 13:56:47

COMMIT:Don't cache Bookie hostname DNS resolution forever

### Motivation

`BookieSocketAddress` is resolving the bookie DNS name in its constructor and then using the already resolved `InetSocketAddress` instance.

If the IP of a bookie changes, the BK client will continue to use the old IP address.

### Changes

Construct a new `InetSocketAddress` each time `getSocketAddress()` gets called (eg: each time we attempt to make a new connection) so that we're making sure to get the right IP.

I cannot think of a good way to add unit test for this at this point, suggestions are welcome. 

I think this should be included in a patch release as well 4.7.3 or 4.8.1

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>

This closes #1762 from merlimat/fix-dns
TREE:tree a9f32d30abf9746b715887d3cb1965fe73064bc5 ------
TIME:10/28/2018 13:56:47

COMMIT:Remove LedgerMetadata#getEnsembles in favour of #getAllEnsembles

They do the same thing except that #getEnsembles returns a TreeMap
while #getAllEnsembles returns a NavigableMap.

LedgerMetadata#getAllEnsembles is part of the api interface.

Master issue: #281


Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1759 from ivankelly/remove-get-ensembles
TREE:tree af98329bee72a237fd0cc5e576b31d48281c9bf9 ------
TIME:10/28/2018 13:54:53

COMMIT:Updated site at revision 6bf6971

TREE:tree 40d662af6045341cf467a186fde3b34c13a36da9 ------
TIME:10/25/2018 15:06:25

COMMIT:Use immutable metadata in LedgerHandle

Which means that for the two LedgerHandle operations that mutate the
metadata, ensemble change and closing, ensure that metadata is written
to the metadata store before the client ever uses it.

Master issue: #281

Author: Ivan Kelly <ivank@apache.org>
Author: Sijie Guo <guosijie@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>, Samuel Just <sjust@salesforce.com>

This closes #1646 from ivankelly/immutable-handle-failures
TREE:tree 0ef370c56ba57c76f92fd04d18e2b8d2da85ccc2 ------
TIME:10/25/2018 14:28:57

COMMIT:Modules dependencies do not need to be included in checksum Jar

The current assembly configuration is including the jars of the modules dependency inside its own jar.

These jars are completely ignored, but they take up non trivial space.

With this change the size of `circe-checksum.jar` goes from 2.8 MB to 62 KB.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1751 from merlimat/master
TREE:tree 79b24b7f46434cfe6588c455f1427b25f3cff9a1 ------
TIME:10/25/2018 14:15:18

COMMIT:Adding multi-node ZKCluster test util class



Descriptions of the changes in this PR:

- adding multi-node ZKCluster util class
- adding new interface for ZKCluster util and having separate implementaions for
single node ZKCluster and multi-node ZKCluster

### Motivation

This helps in adding more test coverage to Zookeeper aspects.

Author: Sijie Guo <guosijie@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1753 from reddycharan/multinodezkcluster
TREE:tree 249fe045f8d7fb0cd24a14cdb8626f96adc0fded ------
TIME:10/25/2018 14:12:27

COMMIT:Netty allocator wrapper

### Motivation

Configuring the correct JVM memory settings and cache sizes for a BookKeeper cluster should be simplified.

There are currently many knobs in Netty or JVM flags for different components and while with a good setup the systems is very stable, it's easy to setup non-optimal configurations which might result in OutOfMemory errors under load.

Ideally, there should be very minimal configuration required to bring up a BookKeeper cluster that can work under a wide set of traffic loads. In any case, we should prefer to automatically fallback to slower alternatives, when possible, instead of throwing OOM exceptions.

 * Provide a wrapper to have a single unified configuration point for Netty allocator configuration.
 * Provide fallback policy when dealing with direct memory OOM errors

### Changes

 * This is the first PR. It only contains the allocator wrapper implementation. Subsequent PR will add the changes to use it.
 * Added `bookkeeper-common-allocator` module to have a no-dependencues module that can be used directly from Pulsar client library too (which doesn't depend on BK).


Author: Sijie Guo <guosijie@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Matteo Merli <mmerli@apache.org>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Samuel Just <sjust@salesforce.com>

Reviewers: Qi Wang <None>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1754 from merlimat/allocator
TREE:tree 7f3c163f6649ac6b984dd2c3278e1a56f3ee43a8 ------
TIME:10/25/2018 14:06:58

COMMIT:Updated site at revision 7016d0a

TREE:tree 369859437218cdde0ac92f08af55fa7487a31c36 ------
TIME:10/19/2018 03:03:52

COMMIT:[BUILD] Fix build & bash script error when not using `stream` profile

Descriptions of the changes in this PR:

*Motivation*

There are two issues in current master when building without stream

- build `bkperf` failed
- bin/bookkeeper is using the wrong module

*Changes*

- build `bkperf` module as part of `stream` profile
- fix the problem in `bin/bookkeeper` locating the right module
- add two tests in travis to test builds without `stream` profile







Author: Sijie Guo <guosijie@gmail.com>
Author: Sijie Guo <sijie@apache.org>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1749 from sijie/fix_build_without_stream_profile
TREE:tree ba1b5358071ce16b38f5bbc11886bdc6082af363 ------
TIME:10/19/2018 02:33:30

COMMIT:Set ConnectionExpired Listener to MetadataClientDriver in AR


Descriptions of the changes in this PR:

- add setConnectionExpiredListener method to MetadataClientDriver interface.
- add listener to shutdown AR in the case of metadata connection expiry


### Motivation

This commit - 4f0d2a195bd9be3788876b47813cee1440cf005c, has removed the shutdown logic in AutoRecoveryMain incase of ZK client session expiry, with the following reason "which doesn't make any sense for current retryable zookeeper". But if the ZK session has expired then it is not completely correct to let AutoRecoveryMain to continue to run in that state.

Author: Sijie Guo <guosijie@gmail.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1747 from reddycharan/conexpirylisten
TREE:tree b3a35acc6a5347ba44245694497e3524b3a53e7d ------
TIME:10/17/2018 12:56:41

COMMIT:[TABLE SERVICE] [CLIENT] storage client can open tables on a different namespace

Descriptions of the changes in this PR:


*Motivation*

In some cases, we are using same storage client for opening tables under different namespaces.
It would be good that a client instance can do that.

*Changes*

- Add methods to `StorageClient` to open tables under different namespaces
- Add `asClient` to `StorageAdminClient` to convert admin client to storage client





Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1733 from sijie/improve_client_interface
TREE:tree 2be897ba3c7efdee0cea18131f04528b93a9e0ca ------
TIME:10/09/2018 03:02:35

COMMIT:ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer.

Descriptions of the changes in this PR:

- ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer,
which is not owned by the callback.

### Motivation

with the following change, Per channel bookie clients owns the buffer for read responses. So it is not correct for ReadEntryCallback in ReadLedgerEntriesCmd to release buffer
https://github.com/apache/bookkeeper/commit/8d048abce486c63d428041f77ee9a506756f4d1e#diff-e50ee2c1aec1539ea185a94605b0e550R1611

because of this issue I'm seeing following error with ReadLedgerEntriesCmd
```
/Workspace/SFStorage/bookkeeper/bookkeeper-server/bin$ ./bookkeeper shell -localbookie readledger -bookie ****  -ledgerid 00000000-0000-0000-0000-000000000003 -firstentryid 1 -lastentryid 3
JAVA_HOME not set, using java from PATH. (/usr/bin/java)

--------- Lid=00000000-0000-0000-0000-000000000003, Eid=1 ---------
18:32:03,724 ERROR Unexpected throwable caught
io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]

--------- Lid=00000000-0000-0000-0000-000000000003, Eid=2 ---------

18:32:03,733 ERROR Unexpected throwable caught
io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]
```

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>

This closes #1736 from reddycharan/readledgerfix

(cherry picked from commit 5fe5a6277ccb2dd63b7ac84c03c6c3042a9c2c1c)

Signed-off-by: Sijie Guo <sijie@apache.org>

Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree cb006b3c1a4a3ec5e86431b7178976efe0dc5025 ------
TIME:10/09/2018 02:54:30

COMMIT:ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer.



Descriptions of the changes in this PR:

- ReadEntryCallback in ReadLedgerEntriesCmd shouldn't release buffer,
which is not owned by the callback.

### Motivation

with the following change, Per channel bookie clients owns the buffer for read responses. So it is not correct for ReadEntryCallback in ReadLedgerEntriesCmd to release buffer
https://github.com/apache/bookkeeper/commit/8d048abce486c63d428041f77ee9a506756f4d1e#diff-e50ee2c1aec1539ea185a94605b0e550R1611

because of this issue I'm seeing following error with ReadLedgerEntriesCmd
```
/Workspace/SFStorage/bookkeeper/bookkeeper-server/bin$ ./bookkeeper shell -localbookie readledger -bookie ****  -ledgerid 00000000-0000-0000-0000-000000000003 -firstentryid 1 -lastentryid 3
JAVA_HOME not set, using java from PATH. (/usr/bin/java)

--------- Lid=00000000-0000-0000-0000-000000000003, Eid=1 ---------
18:32:03,724 ERROR Unexpected throwable caught 
io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]

--------- Lid=00000000-0000-0000-0000-000000000003, Eid=2 ---------

18:32:03,733 ERROR Unexpected throwable caught 
io.netty.util.IllegalReferenceCountException: refCnt: 0, increment: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:100) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:84) ~[netty-all-4.1.22.Final.jar:4.1.22.Final]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$ReadCompletion.handleV3Response(PerChannelBookieClient.java:1699) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.proto.PerChannelBookieClient$3.safeRun(PerChannelBookieClient.java:1286) ~[bookkeeper-server-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.common.util.SafeRunnable.run(SafeRunnable.java:36) [bookkeeper-common-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.22.Final.jar:4.1.22.Final]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]
```

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>

This closes #1736 from reddycharan/readledgerfix
TREE:tree 4f50c22d2b20fa933bc1cc4d25b4d954365924da ------
TIME:10/09/2018 02:54:30

COMMIT:ISSUE #1737: EntryMemTable.newEntry: always make a copy

Retaining a reference to that array assumes that the caller
won't reuse the array for something else -- an assumption
violated by Journal.scanJournal and probably other callers.

(bug W-5499346)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: 

Reviewers: Enrico Olivelli <eolivelligmail.com>, Matteo Merli <mmerliapache.org>, Sijie Guo <sijieapache.org>

This closes #1744 from athanatos/forupstream/wip-1737, closes #1737

(cherry picked from commit df6595804cb1d78f5b531ae2db3a7c751439eb1c)

Author: Sijie Guo <sijie@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>
Author: Matteo Merli <mmerli@apache.org>
Author: Samuel Just <sjust@salesforce.com>
Author: Nicolas Michael <nmichael@salesforce.com>
Author: Jia Zhai <zhaijia@apache.org>
Author: Sijie Guo <guosijie@gmail.com>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Ivan Kelly <ivank@apache.org>
Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Ivan Kelly <ivan@ivankelly.net>
Author: Ethan Li <ethanopensource@gmail.com>
Author: arunlakshman <arunmuthuravi@gmail.com>
Author: Qi Wang <codingwangqi@gmail.com>
Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1746 from athanatos/forupstream/wip-1744-4.7, closes #1737
TREE:tree 89d0f1eeda1934cea36c69b429166f0e52f77f25 ------
TIME:10/09/2018 02:53:24

COMMIT:ISSUE #1737: EntryMemTable.newEntry: always make a copy

Retaining a reference to that array assumes that the caller
won't reuse the array for something else -- an assumption
violated by Journal.scanJournal and probably other callers.

(bug W-5499346)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: 

Reviewers: Enrico Olivelli <eolivelligmail.com>, Matteo Merli <mmerliapache.org>, Sijie Guo <sijieapache.org>

This closes #1744 from athanatos/forupstream/wip-1737, closes #1737

(cherry picked from commit df6595804cb1d78f5b531ae2db3a7c751439eb1c)

Author: Enrico Olivelli <eolivelli@apache.org>
Author: Matteo Merli <mmerli@apache.org>
Author: Sijie Guo <sijie@apache.org>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Qi Wang <codingwangqi@gmail.com>
Author: Ivan Kelly <ivank@apache.org>
Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Andrey Yegorov <ayegorov@salesforce.com>
Author: Samuel Just <sjust@salesforce.com>
Author: Enrico Olivelli <eolivelli@gmail.com>
Author: Khurrum Nasimm <khurrumnasimm@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1745 from athanatos/forupstream/wip-1744-4.8, closes #1737
TREE:tree 991ecb93806e26ddc1172a8606372c52f2aa97a1 ------
TIME:10/09/2018 02:49:20

COMMIT:ISSUE #1737: EntryMemTable.newEntry: always make a copy

Retaining a reference to that array assumes that the caller
won't reuse the array for something else -- an assumption
violated by Journal.scanJournal and probably other callers.

(bug W-5499346)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1744 from athanatos/forupstream/wip-1737, closes #1737
TREE:tree 05aaf13dc4fcda2b2f5d5decb01aba04687eeb83 ------
TIME:10/08/2018 19:35:25

COMMIT:[BUILD] Fix checkstyle issues on branch47

Descriptions of the changes in this PR:

*Motivation*

I saw all CI jobs are failing when changes are cherry-picked for 4.7.3.
It turns about some cherry-picks broke the build before.

*Changes*

Fix the checkstyle issues on branch47





Author: Sijie Guo <sijie@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>
Author: Matteo Merli <mmerli@apache.org>
Author: Nicolas Michael <nmichael@salesforce.com>
Author: Jia Zhai <zhaijia@apache.org>
Author: Samuel Just <sjust@salesforce.com>
Author: Ethan Li <ethanopensource@gmail.com>
Author: arunlakshman <arunmuthuravi@gmail.com>
Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Ivan Kelly <ivank@apache.org>
Author: Andrey Yegorov <ayegorov@salesforce.com>
Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Qi Wang <codingwangqi@gmail.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Matteo Merli <mmerli@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1743 from sijie/fix_checkstyle_in_branch47
TREE:tree 5705e53712ca01324d17db3f3a78d9631c701f95 ------
TIME:10/06/2018 19:28:28

COMMIT:[TABLE SERVICE] [TESTS] add integration tests for python clients

Descriptions of the changes in this PR:

*Motivation*

We need have test coverage for python clients.

*Changes*

- add scripts to run python client tests for different python versions
- make sure the client can be built on both python2 and python3
- add a postcommit job to run python tests




Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1742 from sijie/python_integration_tests
TREE:tree 1d97d5476d22159835049ce09294ac77389d1147 ------
TIME:10/06/2018 00:38:53

COMMIT:ISSUE #1703: IllegalReferenceCountException at closing EntryLogManagerForSingleEntryLog

Descriptions of the changes in this PR:

*Motivation*

Fixes #1703.

The active entry log channel in EntryLogManagerForSingleEntryLog is closed twice during shutdown.
One is by EntryLogManagerForSingleEntryLog#close and the other one is EntryLogManagerForSingleEntryLog#forceClose().

*Changes*

This change is adding logic in BufferedChannel to make sure BufferedChannel can be closed multiple times.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>

This closes #1735 from sijie/issue_1703, closes #1703

(cherry picked from commit ba6d3ee3d0005c809d926f952b1c1b4d33215dd5)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ce7fc57343fc69104605f58e1b0d51c16891d2c4 ------
TIME:10/06/2018 00:36:00

COMMIT:ISSUE #1703: IllegalReferenceCountException at closing EntryLogManagerForSingleEntryLog

Descriptions of the changes in this PR:

*Motivation*

Fixes #1703.

The active entry log channel in EntryLogManagerForSingleEntryLog is closed twice during shutdown.
One is by EntryLogManagerForSingleEntryLog#close and the other one is EntryLogManagerForSingleEntryLog#forceClose().

*Changes*

This change is adding logic in BufferedChannel to make sure BufferedChannel can be closed multiple times.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Andrey Yegorov <None>

This closes #1735 from sijie/issue_1703, closes #1703
TREE:tree 5d8fc328417a5185f2f4d60a1d894fb6b9eda5db ------
TIME:10/06/2018 00:36:00

COMMIT:Issue #1738: Journal: add a metric for the time ForceWriteRequest spent in the queue

### Motivation

Investigated latency spike in one of the bookie clusters.
At some point the question at hands was "how much time ForceWriteRequests spend in the queue in this case".
There is no metric to answer this question.

### Changes

Added new metric.

Master Issue: #1738 




Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1739 from dlg99/fix/forcewrite-metric, closes #1738
TREE:tree ea29f9476cb6fa34a0e0112a57dda2a579b4e6dc ------
TIME:10/06/2018 00:34:32

COMMIT:Issue #1740: IOUtils.close() only accepts Closeable as a vararg which results in unnecessary Object[] created if only one Closeable passed there

Descriptions of the changes in this PR:

added close() variant that takes one Closeable.

### Motivation

100% of close() usage is with one Closeable.

### Changes

light refactoring.

Master Issue: #1740

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1741 from dlg99/nit/ioutils, closes #1740

(cherry picked from commit 117ba4d7e2965f520d98a96a6ada7af54d9947ce)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 92336853dd6c0963e9c4a759c5cc3df33fe693bd ------
TIME:10/06/2018 00:31:28

COMMIT:Issue #1740: IOUtils.close() only accepts Closeable as a vararg which results in unnecessary Object[] created if only one Closeable passed there

Descriptions of the changes in this PR:

added close() variant that takes one Closeable.

### Motivation

100% of close() usage is with one Closeable.

### Changes

light refactoring.

Master Issue: #1740

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1741 from dlg99/nit/ioutils, closes #1740

(cherry picked from commit 117ba4d7e2965f520d98a96a6ada7af54d9947ce)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f0cffd17b448e876e157c2acceddfd6085e01f9d ------
TIME:10/06/2018 00:31:28

COMMIT:Issue #1740: IOUtils.close() only accepts Closeable as a vararg which results in unnecessary Object[] created if only one Closeable passed there

Descriptions of the changes in this PR:

added close() variant that takes one Closeable.

### Motivation

100% of close() usage is with one Closeable.

### Changes

light refactoring.

Master Issue: #1740 




Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1741 from dlg99/nit/ioutils, closes #1740
TREE:tree 01f9da156a6b5fc6e92449dedbb2425b982f63e3 ------
TIME:10/06/2018 00:31:28

COMMIT:[TABLE SERVICE] [CLIENT] provide scripts for uploading python clients to pypi

Descriptions of the changes in this PR:

*Motivation*

make the python client available for usage

*Changes*

- update README and setup.py
- set the client version to `4.9.0-alpha-0`
- scripts to build python client and upload it to pypi

*Result*

https://pypi.org/project/apache-bookkeeper-client/4.9.0a0/




Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1734 from sijie/upload_python_client
TREE:tree 793c2966198fdd2cdec279f60422f07add648f3b ------
TIME:10/04/2018 11:20:58

COMMIT:Introduce lifecycle components for managing components in AutoRecovery


Descriptions of the changes in this PR:


- lifecycle components for managing components in AutoRecovery
- expose metrics of AR in the same http admin endpoint


Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1726 from reddycharan/stackar
TREE:tree b1cc5eb4fa65d3d7e2a7818f7cf71713e066143e ------
TIME:10/04/2018 11:16:47

COMMIT:[TABLE SERVICE] [STATS] enable stats for grpc calls on both client and server

Descriptions of the changes in this PR:

*Motivation*

We need visibility on both client and server on table service.

*Changes*

- introduce grpc monitoring interceptors for both client and server
- enable monitoring interceptors on both client and server




Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1731 from sijie/grpc_stats
TREE:tree 281cc5b94ce50cc4b0dff298d3665876e97eea3e ------
TIME:10/03/2018 17:30:42

COMMIT:[TABLE SERVICE] [CLI] improve table service related cli commands

Descriptions of the changes in this PR:

*Motivation*

Add missing commands for table service related operations.

*Changes*

- Add missing commands such as get/delete
- Fill the default service uri if it is not provided
- Define the command ops in `Commands` util class




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1724 from sijie/improve_console
TREE:tree de14fdacd4d662b8eb3941429488310e79355193 ------
TIME:10/03/2018 17:29:52

COMMIT:Add Oracle JDK11 to Travis CI build

Descriptions of the changes in this PR:

### Motivation

Start testing builds on JDK11, as it is the latest available version of Java 

### Changes

Add Oracle JDK 11 to Travis configuration file

Master Issue: #1710




Author: 

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1732 from eolivelli/fix/travis-jdk11
TREE:tree b06c4ff88c6c6c7f2165dc2f2d39af0dce482b6a ------
TIME:10/03/2018 10:34:44

COMMIT:[TABLE SERVICE] [STORAGE] improve the logic on creating the meta range for a table

Descriptions of the changes in this PR:

*Motivation*

Currently the creation of meta range for table is deferred until we first try to use it.
The propagation of stream properties is carried by the client.

*Changes*

Improve the creation logic to fetch stream properties from the root range.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1730 from sijie/cache_stream_props
TREE:tree 9fe0826d605a6fcec83876c8f928446326f5c4de ------
TIME:10/03/2018 10:31:58

COMMIT:Fix Kerberos tests on JDK11:


Descriptions of the changes in this PR:
- move to Kerby (MiniKDC code copied from Apache ZooKeeper repository)
- adapt tests to run with new KDC
- force TCP on krb5.conf for tests (this is needed for Kerby, which opens only TCP by default config)


Master Issue: #1710 




Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1716 from eolivelli/fix/kerby-11
TREE:tree f007c1e51483bf0003d2fcc462eae27ab782d85e ------
TIME:10/03/2018 08:15:35

COMMIT:Enhance Auditor


Descriptions of the changes in this PR:

- store last checkAllLedgers executed time in metadataserver.
- use that value for determining the initialDelay of checkAllLedgers call
- add dedicated metric for bookieCheck
- add more log lines in Auditor


### Motivation

In Auditor checkAllLedgers is scheduled to run for every ‘auditorPeriodicCheckInterval’ and with initial delay of ‘auditorPeriodicCheckInterval’. But the problem is if Auditor role keeps transforming to another AR process, it might not get chance to do ‘checkAllLedgers’ task. Considering default value for 'auditorPeriodicCheckInterval' is 1 week, it is not uncommon situation.

### Changes

Thats why I'm planning to persist last successful checkAllLedgers execution ctime in ZK, so that next time when a new AR becomes Auditor, it would use that as reference to decide the initial delay value.


Author: cguttapalem <cguttapalem@salesforce.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1683 from reddycharan/auditormetricslogs
TREE:tree 9ea52e8c3db43e67400eda24e3999bf9baa22c42 ------
TIME:10/03/2018 07:03:28

COMMIT:[TABLE SERVICES] [PERF] Provides a simple perf tool for testing put and inc performance

Descriptions of the changes in this PR:

*Motivation*

Need to know what is the performance of table service.

*Changes*

Provide a simple perf tool following what RocksDB is doing. Currently support simple testing for put and inc operations.





Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1727 from sijie/async_benchmark
TREE:tree db2fb0f892dc5780df9d21047d1f5bcc0888b1a9 ------
TIME:10/03/2018 00:00:19

COMMIT:Decorate OrderedExecutor threads rather than runnables

Actually, decorate the runnables too, but apply the decoration in a
decorator on the thread so that if a runnable/callable is passed to
the thread, the decoration will be applied.

This allows users of OrderedExecutor/Scheduler to use
executor.chooseThread() for CompletableFuture async handlers and still
get things like the MDC context.


Author: 

Reviewers: Andrey Yegorov <None>, Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1729 from ivankelly/decorate-exec
TREE:tree 2933e444e08c82437327beb07a2659387c2c46e1 ------
TIME:10/02/2018 20:52:18

COMMIT:[TABLE SERVICE] [CLIENT] Implement the python client to access tables

Descriptions of the changes in this PR:

*Motivation*

Providing a python client to access tables

Fixes #1690

*Changes*

Implement the python client to access tables using the table grpc requests




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1723 from sijie/python_client
TREE:tree e45e6128ab9208a96f7ed6d8987fa27f15f8ff8a ------
TIME:10/02/2018 20:35:47

COMMIT:[TABLE SERVICE] [CLIENT] Provide a simple version of storage clients

Descriptions of the changes in this PR:

*Motivation*

The PR #1721 provides a routing service for proxying grpc requests
to the correct storage container. That means that the storage client
can be implemented using simple grpc calls since all containers can
serve same grpc requests.

*Changes*

Implement a simple version of storage clients by using server-side
routing to route grpc requests to the correct storage containers.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1722 from sijie/proxy_table_requests2
TREE:tree a6dc930d0a165567af5530ee991398be100686f8 ------
TIME:10/02/2018 17:33:58

COMMIT:Add optional compile time only annotations-api dependency dropped in JDK11

Descriptions of the changes in this PR:

### Motivation

Java Annotations API has been dropped from JRE since JDK11. We should add it explicitly at compile time.
As we are using only the 'Generated' annotation, which has "source" retention when can add the dependency as 'optional'.
We are not re-distributing the JAR in binary packages.

### Changes

Add 'optional' dependency wherever it is needed (all GRPC artifacts for instance)

Master Issue: #1710




Author: Sijie Guo <guosijie@gmail.com>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1725 from eolivelli/fix/jdk11-add-annotations-api
TREE:tree f1a19705593a72e0f518a0e08ea060eae1a8e310 ------
TIME:10/02/2018 13:28:59

COMMIT:[TABLE SERVICE] [STORAGE] add routing table for proxying table service requests

Descriptions of the changes in this PR:

*Motivation*

In order to implement non-java clients and avoid the complexity in the client implementation.
We need to proxy a routing table in the server side for proxying table service requests.

*Changes*

Add routing table in the service side to proxy grpc requests to the right storage containers.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1721 from sijie/add_routing_table
TREE:tree b3cff8542f52bd042b25c1a23dc882ab601d3dec ------
TIME:10/01/2018 20:12:05

COMMIT:[TABLE SERVICE] Intercepted storage server channel should shutdown the underlying managed channel

Descriptions of the changes in this PR:

*Motivation*

When a storage server channel is intercepted, the underlying channel will not be `ManagedChannel`
any more. so closing storage server channel will never close the underlying managed channel.

*Changes*

StorageServerChannel#intercept should keep reference to the original storage server channel.
so when closing the intercepted channel, it can close the original channel.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1720 from sijie/close_intercepted_channel
TREE:tree 9b1de6e51393155d39be68d0503b2668516c235e ------
TIME:10/01/2018 17:17:36

COMMIT:[TABLE SERVICE] [COMMON] add BytesHashRouter

Descriptions of the changes in this PR:

*Motivation*

Currently the hash router takes `ByteBuf`. At some cases,
we need to compute the hash of bytes array directly.

*Changes*

Add `BytesHashRouter` to compute hash value of bytes array directly,
avoiding wrapping bytes into `ByteBuf`




Author: Sijie Guo <guosijie@gmail.com>
Author: Enrico Olivelli <eolivelli@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1719 from sijie/bytes_hash_router
TREE:tree ab558cbb1b385db31c4d541f4105b266aab073d1 ------
TIME:09/30/2018 20:39:08

COMMIT:[INTEGRATION TESTS] Dump container logs before stopping tests

Descriptions of the changes in this PR:

*Motivation*

For debugging purpose, it would be great to dump container logs before
stopping tests.

*Changes*

Copying container and bookkeeper logs before stopping the tests.





Author: Sijie Guo <guosijie@gmail.com>
Author: Enrico Olivelli <eolivelli@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1718 from sijie/dump_container_logs
TREE:tree 7805cd69b94669bce634ed95ae5f5265e54af0da ------
TIME:09/30/2018 20:37:41

COMMIT:Updated site at revision 0c4accb

TREE:tree 769300bd3bbc9da317022fc75d26b99306154742 ------
TIME:09/30/2018 06:23:01

COMMIT:[TABLE SERVICE] [CLIENT] Provide a timeout mechanism on closing the client

Descriptions of the changes in this PR:

### Motivation

Closing the storage client sometime takes long time. And closing the client typically happens at the last step. So we don't necessarily to be blocking at waiting it to complete.

### Changes

Provide a timeout version of sync close. And timeout the closing operation if it doesn't complete within 1 second.




Author: 

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1717 from sijie/close_storage_client
TREE:tree 520aca37041efad362defc92e8c2c77fab0b22cd ------
TIME:09/30/2018 05:53:34

COMMIT:[TOOLS] [PERF] Add a `segread` perf command to read distributedlog streams in segment splits

Descriptions of the changes in this PR:

*Motivation*

Find what is the bottleneck/throughput limit of reading a single ledger.

*Changes*

Provide a `segread` perf command to split a stream into a list of segments and split segments into splits,
and test reading segment splits in parallel.




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1713 from sijie/segment_readers
TREE:tree 546b010e92cfd80807724d92ffa405ccc4bcb2cd ------
TIME:09/30/2018 03:10:27

COMMIT:Fix release notes for 4.8.0

Descriptions of the changes in this PR:

- Fix a bunch of typos and indentation issues on 4.8.0 release page
- Fix releases.md





Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1714 from eolivelli/fix/release-notes-480-2
TREE:tree c3b066c703cf307e1fcd61054a33fa8377fdcb83 ------
TIME:09/28/2018 21:05:38

COMMIT:[LOGGING] PendingReadOp should log the error code when failing requests

Descriptions of the changes in this PR:

*Motivation*

Currently when a request is failed, bookkeeper client logs the error message. However the log
message doesn't include error code. It makes debugging hard.

*Changes*

Improve the log message to include error code





Author: 

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1709 from sijie/improve_error_logging
TREE:tree b6685f1b931c3a4a118a077ce4be3f9220d4bbe6 ------
TIME:09/27/2018 19:46:05

COMMIT:Rebuild website

TREE:tree f3c8878a8b9961a82ae947112ea68f8c32991914 ------
TIME:09/27/2018 17:33:21

COMMIT:Upgrade Mockito to 2.22.0 in order to support build on JDK11

Descriptions of the changes in this PR:

### Motivation

Running tests on JDK11 requires a new version of Mockito, because in JDK11 they dropped Unsafe.defineClass.

### Changes

Upgrade Mockito

Master Issue: #1710

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1711 from eolivelli/fix/upgrade-mockito

(cherry picked from commit 1f0bc8cabd7fd25af142f4963310b5205b146ceb)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 19d27436c30f7c576e6ca513ea104d4b0f1e29be ------
TIME:09/27/2018 10:56:58

COMMIT:Upgrade Mockito to 2.22.0 in order to support build on JDK11

Descriptions of the changes in this PR:



### Motivation

Running tests on JDK11 requires a new version of Mockito, because in JDK11 they dropped Unsafe.defineClass.

### Changes

Upgrade Mockito

Master Issue: #1710




Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1711 from eolivelli/fix/upgrade-mockito
TREE:tree 0ddca003d8c3609b3b59a12f450a0c2dfa14326f ------
TIME:09/27/2018 10:56:58

COMMIT:Updated site at revision 7d7c88e

TREE:tree f3c8878a8b9961a82ae947112ea68f8c32991914 ------
TIME:09/26/2018 20:55:01

COMMIT:[TABLE SERVICE] introduce a client interceptor to attach routing information for table service rpc calls


Descriptions of the changes in this PR:

*Motivation*

Currently java client deals with request routing and attach routing information before sending the request.
If we try to apply same mechanism for non-java language clients, it requires implementing this complex
routing logic for every non-java language client, which is not a desirable solution.

So we should move the request routing to the server side, which can simplify the implementation of non-java
language client.

*Changes*

Introduce a client interceptor which intercepts table service rpc calls and mutating the rpc request with
correct routing information. This interceptor can be used at server side for proxying grpc requests.




Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Sijie Guo <sijie@apache.org>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Jia Zhai <None>

This closes #1708 from sijie/proxy_requests
TREE:tree 46465ad2f3b060e52d031d5b0099dd0f7725e15e ------
TIME:09/26/2018 20:27:06

COMMIT:Issue #1696: fixed potential ConcurrentModificationException in mock in MdcContextTest

Descriptions of the changes in this PR:

Changed LinkedList to ConcurrentLinkedQueue to avoid potential ConcurrentModificationException in callbacks.

### Motivation

Test flapped.

### Changes

(Describe: what changes you have made)

Master Issue: #1696 




Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Venkateswararao Jujjuri (JV) <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1699 from dlg99/fix/issue_1696_MdcContextTest, closes #1696
TREE:tree 690dd148a36c0fe197b28de923789ff9f5244ea4 ------
TIME:09/26/2018 20:25:40

COMMIT:Update Docker File to use 4.8.0 and signature from eolivelli@apache.org

Descriptions of the changes in this PR:

Update docker image to latest and greatest BookKeeper version

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1707 from eolivelli/fix/update-docker-480

(cherry picked from commit 890808a765e2869289104cc9c332eb6d2f539fb4)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 47b7dc479d3905b75fdce72bf98f5f88b2d5db03 ------
TIME:09/26/2018 13:22:32

COMMIT:Update Docker File to use 4.8.0 and signature from eolivelli@apache.org

Descriptions of the changes in this PR:

Update docker image to latest and greatest BookKeeper version





Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1707 from eolivelli/fix/update-docker-480
TREE:tree 1bc14bc5c6f011b8e84ed743c23529081c26b188 ------
TIME:09/26/2018 13:22:32

COMMIT:Release notes for Apache BookKeeper 4.8.0

Update the website with the releases notes for Apache BookKeeper 4.8.0




Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1676 from eolivelli/fix/release-notes-480
TREE:tree 32f0971ec5844355cc32d755656c797f43805825 ------
TIME:09/26/2018 13:20:21

COMMIT:[TABLE SERVICE] improve the bookkeeper script to better detect whether table service is enabled or not

Descriptions of the changes in this PR:


*motivation*

Currently `bin/bookkeeper` automatically choose modules based on the command.
However it would be much better to detect which module to use by checking the bookkeeper configuration settings.

*changes*

Improve `bin/bookkeeper` to better detect which module to use based on bookkeeper server configuration.
Additionally adding dlog related settings in the server configuration file.





Author: Sijie Guo <guosijie@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1705 from sijie/improve_bookkeeper_scripts
TREE:tree df8d857ffe3085e8c6fbdf4bb26b4847945da71f ------
TIME:09/26/2018 11:44:42

COMMIT:[TABLE SERVICE] [LOGGING] improve logging at zk storage container manager

Descriptions of the changes in this PR:

*Motivation*

the storage container manager probes containers to ensure containers are started and stopped to reflect to topology change.
however the logging can be very annoying if there is no topology changed.

*Changes*

Improve the logic to only log the message when topology is changed.




Author: Sijie Guo <guosijie@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Sijie Guo <sijie@apache.org>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1704 from sijie/reducing_logging_storage_containers
TREE:tree 4d29777c0fcb10afcae9c45deb019a7d13383c25 ------
TIME:09/26/2018 11:43:57

COMMIT:autorecovery-use-metadata-driver (part 3) : remove zookeeper from Auditor class

Descriptions of the changes in this PR:

This is the 3rd change to remove zookeeper from Auditor. It also changes how
we construct metadata driver from AutoRecoveryMain. Since we are using bookkeeper client
and admin across auditor and replication. So change the AutoRecoveryMain to construct
the bookkeeper client from client configuration and pass bookkeeper client down to
replication worker and auditor.




Author: Qi Wang <codingwangqi@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1695 from codingwangqi/autorecovery_metadata_part3
TREE:tree a116b93ebe20ba473132e358bd88fc9c08c83b19 ------
TIME:09/26/2018 11:42:51

COMMIT:Issue #1700: fixed: TimedRunnable does not anticipate exception from wrapped runnable

Descriptions of the changes in this PR:

added try/finally around runnable.run()

### Motivation

To correctly track (metrics/log) runnable that throw unexpected exception.

### Changes

added try/finally around runnable.run()

Master Issue: #1700 




Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1702 from dlg99/fix/issue_1700_timedrunnable, closes #1700
TREE:tree dc2c6577eb79b8416e8eb1659495122b1931bd4c ------
TIME:09/26/2018 11:41:42

COMMIT:[BUILD] Ignore pid files


Descriptions of the changes in this PR:


*Motivation*

when running bookkeeper servers using `bin/bookkeeper-daemon`, `pid` files
will be added in current directory.

*Changes*

Add `.pid` in `.gitignore`, so those pid files will be ignored.




Author: Sijie Guo <guosijie@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1706 from sijie/ignore_pid_files
TREE:tree 1b91ba79002d762ae935ead81691e26cd53faa67 ------
TIME:09/26/2018 11:39:32

COMMIT:[TOOLS] Add a perf tool for benchmarking bookkeeper

Descriptions of the changes in this PR:

### Motivation

when investigating performance on scanning entries in bookkeeper, it is hard to know what is the expectation of what kind of throughput that application can get. we need a perf tool to understand the baseline of performance that bookkeeper can provide.

### Changes

this tool is following what pulsar perf tool is doing and using dlog library for evaluating the write and read throughput on bookkeeper using one (or a few) dlog streams.




Author: Sijie Guo <sijie@apache.org>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1697 from sijie/bkperf
TREE:tree 89cc20c3e24133ea053ee888021616ce646b92bd ------
TIME:09/25/2018 19:38:12

COMMIT:[TABLE SERVICE] [PYTHON] add hash router for computing the hash routing value for a given key

Descriptions of the changes in this PR:

*Motivation*

As part of implementing python client for #1690, we need a hash router to compute the hash routing value
for a given key.

*Changes*

- Murmur2 is not well supported in python 3. so standarized hash computation in using Murmur3.
- Change java hash router to use Murmur3
- Add python hash router
- Add unit tests to cover the hash value computation and make sure it is consistent across java and python

Master Issue: #1690 




Author: 

Reviewers: Jia Zhai <None>

This closes #1698 from sijie/message_router
TREE:tree f91d06d1b5b171993120002962e022e72c4eed1e ------
TIME:09/25/2018 19:10:37

COMMIT:autorecovery-use-metadata-driver (part 2) : remove ZooKeeper from ReplicationWorker

Descriptions of the changes in this PR:

*Changes*

This is the second part of changing AutoRecovery to use metadata driver. It removes
the zookeeper reference from ReplicationWorker, because the zookeeper instance is not
used anyway

This change is based on #1693 



Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: Qi Wang <codingwangqi@gmail.com>
Author: Sijie Guo <guosijie@gmail.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1694 from codingwangqi/autorecovery_metadata_part2
TREE:tree a33a42b37a019c0ecce912563d9525fcc7595c38 ------
TIME:09/25/2018 04:15:33

COMMIT:Updated site at revision af24652

TREE:tree 080c12475bb107982c9b7f20bfd6cebd4e9cfdc0 ------
TIME:09/24/2018 09:43:39

COMMIT:Enable storeSystemTimeAsLedgerUnderreplicatedMarkTime



Descriptions of the changes in this PR:

- Enable the Auditor to use system time as underreplicated ledger mark time.
If this is enabled, Auditor will write a ctime field into the
underreplicated ledger znode.

https://github.com/apache/bookkeeper/commit/f4094c4992d5b22630fa633085a00a9152b87ffe introduced feature to Record ctime for underreplicated ledger mark time.

Author: Sijie Guo <guosijie@gmail.com>
Author: Qi Wang <42832902+codingwangqi@users.noreply.github.com>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1692 from reddycharan/enablectime
TREE:tree e6985f3bc2b5bba92a6d5a2bcc6d1775223fd4f4 ------
TIME:09/24/2018 09:18:21

COMMIT:autorecovery-use-metadata-driver (part 1) : move AutoRecoveryMain to use MetadataBookieDriver


Descriptions of the changes in this PR:

### Motivation

We are introducing Etcd as the metadata storage. However AutoRecovery currently is still tied to zookeeper. In order to use Etcd as the metadata storage, we have to move AutoRecovery related classes to use metadata driver API.

### Changes

This is the first change for changing AutoRecovery to use metadata driver. It changed AutoRecoveryMain to use metadata driver api and also removed the shutdown logic on session expired, which doesn't make any sense for current retryable zookeeper.





Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1693 from codingwangqi/autorecovery_metadata
TREE:tree 71733f727cf0e2acf4b7eced5a51c7ebaf63cdf0 ------
TIME:09/24/2018 08:09:37

COMMIT:[TABLE SERVICE] [PYTHON] introduce a python client for table service

Descriptions of the changes in this PR:

*Motivation*

We need a python client for accessing table service.

*Changes*

This is the first change for introducing a python client for table service.

- setup the directory structure for the python client
- setup build, lint, test for the client
- implement the admin client for creating/deleting/getting namespaces/streams
- add examples for admin client

Master Issue: #1690




Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1691 from sijie/stream_python_client
TREE:tree 18f53a13b92cfef68d810c238c371d0d9f96f0ce ------
TIME:09/24/2018 08:08:42

COMMIT:Issue #1639: Etcd based metadata driver implementation

Descriptions of the changes in this PR:

Provide a metadata driver based on Etcd. The changes were based on sijie's prototype at #1114 

Master Issue: #1639 



Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1640 from codingwangqi/etcd_metadata_driver, closes #1639
TREE:tree dda900f4a1b63a08de471fb71abd6537b76d7eb7 ------
TIME:09/24/2018 01:37:58

COMMIT:Updated site at revision 72331e2

TREE:tree a010b27ddaac6daf4628ba1b608a0e97753125ec ------
TIME:09/21/2018 17:55:09

COMMIT:Bump journal and fileinfo version.



Descriptions of the changes in this PR:


- As part of ISSUE #1527, new versions of 'journalFormatVersionToWrite'
and 'fileInfoFormatVersionToWrite' are introduced. Since 4.8 release version
is created, default values of these versions should be bumped.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1689 from reddycharan/bumpjournalversion
TREE:tree a61c17768e4e3af377ccfca903d1b35dee254bb4 ------
TIME:09/21/2018 17:28:51

COMMIT:[TABLE SERVICE] remove build warnings "Import xxx.proto but not used"

Descriptions of the changes in this PR:

*Motivation*

There are build warnings about `Import xyz.proto but not used`. for example:

```
cluster.proto: warning: Import common.proto but not used.
kv_store.proto: warning: Import kv.proto but not used.
```

*Changes*

Remove unused imports





Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1685 from sijie/remove_warnings
TREE:tree 44de3acd52d16aed309586188d0e798a78e88169 ------
TIME:09/20/2018 19:09:30

COMMIT:Shutdown appropriate EntryLogger instance.

Descriptions of the changes in this PR:

- EntryLogger's instance shutdown method should be called
- Otherwise test would flap, since in tearDown method, FileUtils.deleteDirectory can fail because of EntryLogFile PreAllocation task.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1686 from reddycharan/entrylogtest

(cherry picked from commit 04edde0668c30b79391f9d00ded0494bbc9aca08)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 9270beec74e3f85182fce41c2ff38a83a1ffa8ff ------
TIME:09/20/2018 19:04:51

COMMIT:Shutdown appropriate EntryLogger instance.


Descriptions of the changes in this PR:

- EntryLogger's instance shutdown method should be called
- Otherwise test would flap, since in tearDown method, FileUtils.deleteDirectory can fail because of EntryLogFile PreAllocation task.


Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1686 from reddycharan/entrylogtest
TREE:tree de7e64d8daf4ab526eb5188494c4265a13192593 ------
TIME:09/20/2018 19:04:51

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.8.0-rc1

TREE:tree bfd24f230ebf12d860dd5c82dc150eb8f9914894 ------
TIME:09/20/2018 12:34:34

COMMIT:[maven-release-plugin] prepare release v4.8.0-rc1

TREE:tree f1e4494e5db0360bd15b23fff953c00931f50719 ------
TIME:09/20/2018 12:34:15

COMMIT:ISSUE #1687: Using eval instead of exec to handle quotes in healtcheck.sh

Descriptions of the changes in this PR:

Fixes https://github.com/apache/bookkeeper/issues/1687


### Motivation

https://github.com/apache/bookkeeper/issues/1687

### Changes
Using eval instead of exec to run the health check script.

Master Issue: #1687 




Author: matevarga <mate@monadic.hu>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1688 from matevarga/master, closes #1687
TREE:tree 59e89043358ec8c2d556aba775c302887f1b859b ------
TIME:09/20/2018 10:08:33

COMMIT:Fix license issues in master

The only blocking error is that the GRPC NOTICE had not been bubbled
up to our notice.

The links for common-lang 3.6 and jackson 1.9.11 were also wrong, and
while these aren't required in license files, bad links makes it
harder to check if a dependency has been correct noted in the LICENSE
and NOTICE.

Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Ivan Kelly <ivank@apache.org>
Author: SongWang <aCoder2013@users.noreply.github.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1684 from ivankelly/v48-license

(cherry picked from commit a9665f8494ae7e6fb6066ebfb652e72228fb677b)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree bfd24f230ebf12d860dd5c82dc150eb8f9914894 ------
TIME:09/18/2018 19:42:52

COMMIT:Fix license issues in master

The only blocking error is that the GRPC NOTICE had not been bubbled
up to our notice.

The links for common-lang 3.6 and jackson 1.9.11 were also wrong, and
while these aren't required in license files, bad links makes it
harder to check if a dependency has been correct noted in the LICENSE
and NOTICE.


Author: Andrey Yegorov <dlg99@users.noreply.github.com>
Author: Ivan Kelly <ivank@apache.org>
Author: SongWang <aCoder2013@users.noreply.github.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1684 from ivankelly/v48-license
TREE:tree e2b97bc58e02244ce3ba16a10f6cb439f82a1391 ------
TIME:09/18/2018 19:42:52

COMMIT:Issue #1679 : Fix build failure due to javadoc

Descriptions of the changes in this PR:



### Motivation

Fix build failure due to javadoc, additionalOptions' type is  an array .
### Changes

correct assignment strategy of additionalOptions to avoid type mismatch

Master Issue: #1679 


Author: songsong <songsong@taovip.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1681 from aCoder2013/fix-javadoc-build, closes #1679
TREE:tree f437b2e4c12d55caec679729d12d131ac6344b89 ------
TIME:09/18/2018 11:25:03

COMMIT:Updated site at revision c9dc301f

TREE:tree ce2def473c6ea63032e5cec8bfc1f50a48accf5a ------
TIME:09/17/2018 10:32:57

COMMIT:Issue #850: Added request context across client and bookies.

Descriptions of the changes in this PR:

 - MDC context is passed to runnables, callables etc.
 - protocol extended, context is sent to bookie servers, restored there and back on client with the response.
   Hopefully did not miss some nuance on the server side, largely rely on changes in ordered executors to do all the magic.
 - did microbenchmarking of the protocol changes (strings added to protobuf, MDC context preserved/restored). Looks ok.
 - added unit tests.

(bug W-5291641) 
(bug W-5291648)


### Motivation

Troubleshooting of request-level failures/errors can be simplified if request id was passed through all the stages of the request, from threadpools on the client to bookies to the response back on the client. 
Log4j/Slf4j allows logging of MDC data so it makes sense to use this functionality for logging.

### Changes

 - MDC context is passed to runnables, callables etc.
 - protocol extended, context is sent to bookie servers, restored there and back on client with the response.
   Hopefully did not miss some nuance on the server side, largely rely on changes in ordered executors to do all the magic.
 - did microbenchmarking of the protocol changes (strings added to protobuf, MDC context preserved/restored). Looks ok.
 - added unit tests.

Master Issue: #850 




Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

This closes #1672 from dlg99/feature/correlation_id, closes #850
TREE:tree ea64df2ef9dc3c17d395d26a5884132544879707 ------
TIME:09/17/2018 10:06:45

COMMIT:[DEV] make merge script work with python 3

Descriptions of the changes in this PR:

### Motivation

make sure the script works for python 3 as well.

### Changes

since python2 and python3 have different syntax and library, make a copy of the merge script for python3.




Author: 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1677 from sijie/make_merge_script_works_for_37
TREE:tree 4b01ae7d9a6128cb7027f8ba13d137f6d3c6ad3a ------
TIME:09/14/2018 19:33:17

COMMIT:Utility to dump/restore ledger metadata to/from file

Dumping will dump the serialized metadata to a file. Restoring will
parse the metadata from the file and write it to the metadata store.

Also changes the LedgerIdFormatter to default to long formatter (it
was UUID before, and we don't even currently support UUID ledger ids).

This fixes #1604


Author: Ivan Kelly <ivank@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>
Author: cguttapalem <cguttapalem@salesforce.com>
Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Jia Zhai <None>

This closes #1667 from ivankelly/dump-metadata-to-from-file
TREE:tree c473ea65d992ca04f9aef0bab68210d62b63a9cc ------
TIME:09/14/2018 08:47:26

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.8.0-rc0

TREE:tree 15a56d5fb94daab0207bc0d11a614383760f4eac ------
TIME:09/12/2018 10:08:54

COMMIT:[maven-release-plugin] prepare release v4.8.0-rc0

TREE:tree 4be1d0566f81d4093f03d78df5c8c29b6fbdd8db ------
TIME:09/12/2018 10:08:35

COMMIT:Release script: swap mapping of directories

The script assumed that the layout of /home on the host machine is the same as in the container.
This change makes the script work even on machines in which the HOME is /home/xxxx/username and not simply /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1675 from eolivelli/fix/invert-mapping

(cherry picked from commit 5a818b226bf2c3e3d9d649ffe1e690af5ec2f794)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree fe86254b6944291b04393c2b5e9ef8b6408167fa ------
TIME:09/12/2018 10:00:53

COMMIT:Release script: swap mapping of directories

The script assumed that the layout of /home on the host machine is the same as in the container.
This change makes the script work even on machines in which the HOME is /home/xxxx/username and not simply /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1675 from eolivelli/fix/invert-mapping

(cherry picked from commit 5a818b226bf2c3e3d9d649ffe1e690af5ec2f794)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree a6b84b6e180780f75a846e0b80bec1eb2875c9bf ------
TIME:09/12/2018 10:00:53

COMMIT:Release script: swap mapping of directories

The script assumed that the layout of /home on the host machine is the same as in the container.
This change makes the script work even on machines in which the HOME is /home/xxxx/username and not simply /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1675 from eolivelli/fix/invert-mapping

TREE:tree 320c38c419d83a1aea7068b4e3a96a6538b06f72 ------
TIME:09/12/2018 10:00:53

COMMIT:Release script: Use realpath() to map to current user home

This change enables to run the release scripts on linux boxes in which the user's home is not at /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1674 from eolivelli/fix/better-userland-mapping

(cherry picked from commit d8f2cd1b88a144b6a00c5b8d68c8071d014f5ece)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 548c739cdf736eb7be6198768fa163732bdfe04e ------
TIME:09/11/2018 19:57:26

COMMIT:Release script: Use realpath() to map to current user home

This change enables to run the release scripts on linux boxes in which the user's home is not at /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1674 from eolivelli/fix/better-userland-mapping

(cherry picked from commit d8f2cd1b88a144b6a00c5b8d68c8071d014f5ece)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 6ed3c58edd467354a1000430a5a3ba81deb1a639 ------
TIME:09/11/2018 19:57:26

COMMIT:Release script: Use realpath() to map to current user home

This change enables to run the release scripts on linux boxes in which the user's home is not at /home/username

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1674 from eolivelli/fix/better-userland-mapping

TREE:tree d49ef9a3090e8d34e2f61c5f812bed7d11d774e5 ------
TIME:09/11/2018 19:57:26

COMMIT:Updated site at revision c420b39

TREE:tree a00e325ceee500912ddc8273beb8c42d90b9cdee ------
TIME:09/11/2018 17:55:24

COMMIT:Use useradd -l option for docker scripts

This is a workaround for the Docker issue https://github.com/moby/moby/issues/5419

If you run the scripts with an very large uid the script hangs and it fills up the disk which contains /var/lib/docker

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1673 from eolivelli/fix/docker-large-uid

(cherry picked from commit c420b39a3dab4e9f8896c59d92cbfe4e9a7a0d30)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 61512a25b98b8b4e0baa0234f1e5da8ceec7b1de ------
TIME:09/11/2018 17:25:23

COMMIT:Use useradd -l option for docker scripts

This is a workaround for the Docker issue https://github.com/moby/moby/issues/5419

If you run the scripts with an very large uid the script hangs and it fills up the disk which contains /var/lib/docker

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1673 from eolivelli/fix/docker-large-uid

(cherry picked from commit c420b39a3dab4e9f8896c59d92cbfe4e9a7a0d30)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 79b7435b16fabedf2552588f2f513f092cf2d637 ------
TIME:09/11/2018 17:25:23

COMMIT:Use useradd -l option for docker scripts

This is a workaround for the Docker issue https://github.com/moby/moby/issues/5419

If you run the scripts with an very large uid the script hangs and it fills up the disk which contains /var/lib/docker

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1673 from eolivelli/fix/docker-large-uid

TREE:tree 8f4b8ea22afb0da97985cc138379008daea2e5e2 ------
TIME:09/11/2018 17:25:23

COMMIT:Updated site at revision 052908e

TREE:tree 64e736b2567a11640bcbca2bfb8738e04cc839c2 ------
TIME:09/10/2018 22:52:04

COMMIT:Updated site at revision cdd6594

TREE:tree 84f4d70b9794c5308926f4d4b76d7eae489fa7ef ------
TIME:09/10/2018 22:26:22

COMMIT:Issue #1660: Bookie can't start using 4.7.2 docker image (for branch-4.7)

Descriptions of the changes in this PR:

*Motivation*

zookeeper cli always returns '0' as return code no matter the command succeeds or not.

*Changes*

Switch to use a zookeeper python cli.

**NOTE**: this fix attempts to fix from docker scripts without touching any bookkeeper code.

Master Issue: #1660

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1666 from sijie/fix_docker_image, closes #1660

TREE:tree aea2cbcc773b7a1ea88705d7da70b1c4bb7dc9c0 ------
TIME:09/10/2018 22:22:14

COMMIT:Issue #1660: Bookie can't start using 4.7.2 docker image (for branch-4.7)

Descriptions of the changes in this PR:

*Motivation*

zookeeper cli always returns '0' as return code no matter the command succeeds or not.

*Changes*

Switch to use a zookeeper python cli.

**NOTE**: this fix attempts to fix from docker scripts without touching any bookkeeper code.

Master Issue: #1660

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1666 from sijie/fix_docker_image, closes #1660

TREE:tree 31092ddadd2b266d11e81a8fe606cf9c8323871b ------
TIME:09/10/2018 22:22:14

COMMIT:Remove unnecessary log statement in LedgerDirsManager.getWritableLedgerDirs

Descriptions of the changes in this PR:

### Motivation

- when Bookie reaches diskusage threshold, LedgerDirsMonitor for every diskCheckInterval it logs NoWritableLedgerDirException call stack and message "All ledger directories are non writable".

### Changes

So remove unneccessary log statement in LedgerDirsManager.getWritableLedgerDirs and let the caller deal with the thrown exception.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1670 from reddycharan/fixdirsmonitorlog

(cherry picked from commit 052908ef30818d9f1e6be56bf3a3e3083c5bd6fb)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b729dbc8286e2a1ab18d5199314ceb5334bb8a04 ------
TIME:09/10/2018 22:20:45

COMMIT:Remove unnecessary log statement in LedgerDirsManager.getWritableLedgerDirs

Descriptions of the changes in this PR:

### Motivation

- when Bookie reaches diskusage threshold, LedgerDirsMonitor for every diskCheckInterval it logs NoWritableLedgerDirException call stack and message "All ledger directories are non writable".

### Changes

So remove unneccessary log statement in LedgerDirsManager.getWritableLedgerDirs and let the caller deal with the thrown exception.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1670 from reddycharan/fixdirsmonitorlog

TREE:tree 8ac802d301f1a6eefc151c7824bc712949d899cf ------
TIME:09/10/2018 22:20:45

COMMIT:BookieWatcherImpl doesn't initCause when throwing MetaStoreException

Descriptions of the changes in this PR:

 ### Motivation

when BookieWatcherImpl throws MetaStoreException, it doesn't provide the cause. so when the exception is logged, we can't tell the actual failure cause.

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1637 from codingwangqi/fill_cause_in_exception

(cherry picked from commit 0446c823e36c762479cde9f69883175f8b140074)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 7313d704388011beda3482dcd11c46a1d09b05c2 ------
TIME:09/10/2018 22:14:08

COMMIT:BookieWatcherImpl doesn't initCause when throwing MetaStoreException

Descriptions of the changes in this PR:

### Motivation

when BookieWatcherImpl throws MetaStoreException, it doesn't provide the cause. so when the exception is logged, we can't tell the actual failure cause.

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1637 from codingwangqi/fill_cause_in_exception

TREE:tree 37863640df17d926768a4d567b8d09ff6361ed01 ------
TIME:09/10/2018 22:14:08

COMMIT:Issue #1664 Cancel Scheduled SpeculativeReads

Descriptions of the changes in this PR:

If configured every read request schedules a Future task
to send speculative reads on speculativeReadTimeout.
When the read is completed successfully, this task must be
canceled otherwise it leads to memory consumption and under
heavy load the tasks get accumulated which forces lengthy
GC cycles. These lengthy GC cycles may cause ZK lease expiry
and all other sorts of problems eventually resulting in application
errors.

This fix makes sure that the scheduled Futures are cancelled
at the end of read task.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
(ref Andrey)

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1665 from jvrao/ups_speculative_cancel, closes #1664

(cherry picked from commit cdd659471e1fb75aaf7738302dbf0dfaf44a9127)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6ac7ef293d283777dc3cb5fa2a1a06bacf7de78c ------
TIME:09/10/2018 21:58:47

COMMIT:Issue #1664 Cancel Scheduled SpeculativeReads

Descriptions of the changes in this PR:

If configured every read request schedules a Future task
to send speculative reads on speculativeReadTimeout.
When the read is completed successfully, this task must be
canceled otherwise it leads to memory consumption and under
heavy load the tasks get accumulated which forces lengthy
GC cycles. These lengthy GC cycles may cause ZK lease expiry
and all other sorts of problems eventually resulting in application
errors.

This fix makes sure that the scheduled Futures are cancelled
at the end of read task.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
(ref Andrey)

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1665 from jvrao/ups_speculative_cancel, closes #1664

(cherry picked from commit cdd659471e1fb75aaf7738302dbf0dfaf44a9127)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 85134f7a6d5333d1054b829c62862ed7c5fae8b1 ------
TIME:09/10/2018 21:58:47

COMMIT:Issue #1664 Cancel Scheduled SpeculativeReads

If configured every read request schedules a Future task
to send speculative reads on speculativeReadTimeout.
When the read is completed successfully, this task must be
canceled otherwise it leads to memory consumption and under
heavy load the tasks get accumulated which forces lengthy
GC cycles. These lengthy GC cycles may cause ZK lease expiry
and all other sorts of problems eventually resulting in application
errors.

This fix makes sure that the scheduled Futures are cancelled
at the end of read task.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
(ref Andrey)

Descriptions of the changes in this PR:

### Motivation

(Explain: why you're making that change, what is the problem you're trying to solve)

### Changes

(Describe: what changes you have made)

Master Issue: #<master-issue-number>

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1665 from jvrao/ups_speculative_cancel, closes #1664

TREE:tree 8c2596efa8e2f56caa347d2971e7a68dd1a36347 ------
TIME:09/10/2018 21:58:47

COMMIT:Updated site at revision 74bd926

TREE:tree f52d51d8571b23e6bf7392461b08163127d41cba ------
TIME:09/08/2018 00:58:33

COMMIT:ISSUE #1662: LocalBookKeeper use layout manager and ledger path configs

The URI patch had a side effect of causing LocalBookKeeper to always
use a URI string of the form zk:// which defaults to HLM.  This
patch updates LocalBookKeeper to generate zk+<layout>:// based on
the legacy LEDGER_MANAGER_FACTORY_CLASS config when present.  +null
will be used otherwise and defaults to HLM.  Further, use the
(admittedly deprecated) zkLedgerRootPath config to determine the
ledger path (defaults to /ledger, so the behavior will be unchanged
if unspecified).

(bug W-5415276)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1669 from athanatos/forupstream/wip-1662, closes #1662
TREE:tree cfeaa6e194ea1941d4828c4d1e104e8822dbdf78 ------
TIME:09/08/2018 00:08:57

COMMIT:ISSUE #1653: Clients with zk:// uri's should read layout from store

zk+null:// will cause the layout to be read from the store.  This patch
updates zk:// to do the same.  This matches past behavior with an
unspecified ledgerManagerFactoryClass.

Some tests needed to be updated with the new behavior.

(bug W-5415120)
(rev cguttapalem)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1668 from athanatos/forupstream/wip-1653, closes #1653
TREE:tree 36fffd7798f4bc32995c4da58fc12a28b57fcb6e ------
TIME:09/08/2018 00:07:18

COMMIT:[DEV] clean up merge script

Descriptions of the changes in this PR:

 ### Motivation

The development of bookkeeper has been moved from JIRA to Github.
So we can clean up the merge script to remove those instructions
assuming we are still on apache mirror and JIRA.

 ### Changes

This change follows the changes that I have adjusted at apache/incubator-pulsar#2526

- remove related logic about JIRA from merge script
- change merge script to use github merge api



Author: 

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1663 from sijie/improve_merge_script_2
TREE:tree cf520324a616a7c09e3488f44cfeaf96b74c29cf ------
TIME:09/07/2018 20:42:11

COMMIT:Updated site at revision 992db73

TREE:tree 1352c4fbb5392d4d00d032f39fd0283a50dc3710 ------
TIME:09/07/2018 07:30:26

COMMIT:BP-35: 128 bits support

Descriptions of the changes in this PR:

### Motivation

BookKeeper coordinates with a metadata store to generate a cluster wide `ledgerId`.
Currently this is a signed `64 bit` number (effectively 63 bits). This method works
great because we have a centralized metadata store for coordinating the id generation.
However this method may not scale as the cluster size and number of ledgers grow.

[Universally unique identifier - Wikipedia](https://en.wikipedia.org/wiki/Globally_unique_identifier)
is a preferred way to generate decentralized globally unique IDs and it takes `128 bits`.
This method can scale well as it doesn't need a centralized coordination.

This BP proposes the changes for increasing ledger id from `63 bits` to `128 bits`.

Master Issue: #603



Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Venkateswararao Jujjuri (JV) <None>

This closes #1611 from sijie/bp_35_128bits
TREE:tree d8b523a63d5878d13454b55c6b031e4289cc206a ------
TIME:09/07/2018 07:02:04

COMMIT:Utility to rebuild interleaved storage index files

We came across a case where the a ledger had been deleted from
zookeeper accidently. It was possible to recover the ledger metadata
from the zookeeper journal and old snapshots, but the bookies had
deleted the indices by this time. However, even if the index is
deleted, the data still exists in the entrylog.

This utility scans the entrylog to rebuild the index, thereby making
the ledger available again.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1642 from ivankelly/regen-from-entrylogger

TREE:tree e875c34a0d655900d9f5585d7bd406874c9f8664 ------
TIME:09/07/2018 06:40:10

COMMIT:Updated site at revision 40185e1

TREE:tree 04e1eed8d41659d66a8b4c60992d7b9e9300e484 ------
TIME:09/06/2018 23:40:42

COMMIT:Open ledger returns no ledger exception if ledger id is negative

Descriptions of the changes in this PR:

### Motivation

if I open a ledger with negative value, bookkeeper client responds 'NoSuchLedgerException'. But I think it should return `IllegalOpException`, because it is an illegal exception.

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1638 from codingwangqi/fix_return_code

(cherry picked from commit 40185e1f39fafd0c796cec38d463ebd55edaa250)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 4da320d5cc7a32f9a9646ca21de6221b6fdca275 ------
TIME:09/06/2018 23:14:13

COMMIT:Open ledger returns no ledger exception if ledger id is negative

Descriptions of the changes in this PR:

### Motivation

if I open a ledger with negative value, bookkeeper client responds 'NoSuchLedgerException'. But I think it should return `IllegalOpException`, because it is an illegal exception.

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1638 from codingwangqi/fix_return_code

TREE:tree 02b373c6955a36d20c1c0be0aadbe6e809b862cb ------
TIME:09/06/2018 23:14:13

COMMIT:Updated site at revision 83aae33

TREE:tree 10688a383dcaa35b45a7c8c631979a58b9141463 ------
TIME:09/06/2018 20:43:03

COMMIT:[WEBSITE] Issue #1652: fix anchor links at download page

Descriptions of the changes in this PR:

As reported in #1652, the anchor links at download page are broken.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1656 from sijie/fix_download_links_2, closes #1652

TREE:tree 5125fe8fd00335367e7d672486cffce4e1c7c342 ------
TIME:09/06/2018 20:16:09

COMMIT:ISSUE #1658: License file: typo "Google Protocal Buffers" instead of "Google Protocol Buffers"

Fix a typo in LICENSE files for binary distributions.

Master issue #1658

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1659 from eolivelli/fix/protocal-typo, closes #1658

(cherry picked from commit d7c99f86dd60534739c9eec1c826b4736c38c162)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 7d37c42f1ab658c9c9fb73d0a388cdc48cdefdbb ------
TIME:09/06/2018 10:10:38

COMMIT:ISSUE #1658: License file: typo "Google Protocal Buffers" instead of "Google Protocol Buffers"

Fix a typo in LICENSE files for binary distributions.

Master issue #1658

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1659 from eolivelli/fix/protocal-typo, closes #1658

TREE:tree 63ab4f3a5efef5a97ceeb490b693a764a58ca3b9 ------
TIME:09/06/2018 10:10:38

COMMIT:Updated site at revision a031e0e

TREE:tree 233c3377375109dbd3ca8524ebf56dc84421cc49 ------
TIME:09/06/2018 10:00:39

COMMIT:Make LedgerFragmentReplicator use MetadataUpdateLoop

Master Issue: #281

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1645 from ivankelly/ledger-fragment-immutable-metadata2

TREE:tree 1fa448c2669439abc4d9203396f352db4cf7d12d ------
TIME:09/06/2018 09:34:23

COMMIT:Updated site at revision 5d0d056

TREE:tree 264a383b1d13bbea24f78dae422e0f18148e2726 ------
TIME:09/05/2018 22:02:48

COMMIT:[WEBSITE] fix download link to allow user choosing mirror site

Address the download link according to https://www.apache.org/dev/release-distribution#download-links

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1650 from sijie/fix_download_links

TREE:tree 4f55f776ce7b999ab4b73e7fcc7b970ca0f04a65 ------
TIME:09/05/2018 21:11:58

COMMIT:ISSUE #1630: TestHttpService#testWhoIsAuditorService is flaky

Descriptions of the changes in this PR:

 ### Motivation

Fixes #1630. The problem is auditor elector was started async, the test itself doesn't wait until election completed.
so the test can be running before auditor runs elector.

 ### Changes

The fix is simple, just wait until auditor completes election.

Master Issue: #1630

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1649 from codingwangqi/issue_1630, closes #1630

(cherry picked from commit 18a40787930df990e9e3ac3aad58011dc65b1b9f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 8951dbbab7d588c3fcdd56a39bea676efe1b46e6 ------
TIME:09/05/2018 21:07:29

COMMIT:ISSUE #1630: TestHttpService#testWhoIsAuditorService is flaky

Descriptions of the changes in this PR:

 ### Motivation

Fixes #1630. The problem is auditor elector was started async, the test itself doesn't wait until election completed.
so the test can be running before auditor runs elector.

 ### Changes

The fix is simple, just wait until auditor completes election.

Master Issue: #1630

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1649 from codingwangqi/issue_1630, closes #1630

(cherry picked from commit 18a40787930df990e9e3ac3aad58011dc65b1b9f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a355931a4255b5629ab08e31e9feddf0e0e47a89 ------
TIME:09/05/2018 21:07:29

COMMIT:ISSUE #1630: TestHttpService#testWhoIsAuditorService is flaky

Descriptions of the changes in this PR:

 ### Motivation

Fixes #1630. The problem is auditor elector was started async, the test itself doesn't wait until election completed.
so the test can be running before auditor runs elector.

 ### Changes

The fix is simple, just wait until auditor completes election.

Master Issue: #1630

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1649 from codingwangqi/issue_1630, closes #1630

TREE:tree 89d830f4a383fa047ba1512300054bcda30dff2a ------
TIME:09/05/2018 21:07:29

COMMIT:Avoid releasing sent buffer to early in BookieClient mock

Cherry pick tp branch-4.8 commit https://github.com/apache/bookkeeper/commit/6b9cbf2052b27f331553f2738483ae21bf12b49c from Ivan Kelly

If the buffer was sent to more than one bookie with the mock, it would
be released after being sent to the first one. Each write should
retain a refCount themselves, and then release when done.

Author: Ivan Kelly <ivankapache.org>

Relates to #1598, closes #1643

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1651 from eolivelli/fix/cherry-pick-mock-client-tests-errors

TREE:tree df8ab9d82b33e273f62edddd624d602605cd0b9f ------
TIME:09/05/2018 14:54:32

COMMIT:Updated site at revision 1db41ac

TREE:tree f7493e4e57138b99af95e8688d7bf9644069bf9c ------
TIME:09/05/2018 00:22:55

COMMIT:[WEBSITE] 4.7.2 only has sha512 file not sha1 file

Descriptions of the changes in this PR:

*Motivation*

Since 4.7.2 bookkeeper releases only provide sha512 file, not sha1 file.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1647 from sijie/update_website_472

TREE:tree e6bdcf0194b1afc1cff6b4809b03da085a09ba74 ------
TIME:09/04/2018 23:54:05

COMMIT:[DOCKER] update package to 4.7.2 in dockerfile

Descriptions of the changes in this PR:

### Motivation

We need to generate 4.7.2 docker image.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1644 from sijie/update_docker_image_47

(cherry picked from commit 8326b3033390d649261aae2f3576bb7f922f1f3e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a4823c396df2da58af88a664b995ba3d8f67f63c ------
TIME:09/04/2018 22:40:05

COMMIT:[DOCKER] update package to 4.7.2 in dockerfile

Descriptions of the changes in this PR:

### Motivation

We need to generate 4.7.2 docker image.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1644 from sijie/update_docker_image_47

(cherry picked from commit 8326b3033390d649261aae2f3576bb7f922f1f3e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 948c1de4bb93cd7238d48c48eb9468715938153e ------
TIME:09/04/2018 22:40:05

COMMIT:[DOCKER] update package to 4.7.2 in dockerfile

Descriptions of the changes in this PR:

### Motivation

We need to generate 4.7.2 docker image.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1644 from sijie/update_docker_image_47

(cherry picked from commit 8326b3033390d649261aae2f3576bb7f922f1f3e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6ca422d70ff74385c2f28bd83eeb14863a78a31f ------
TIME:09/04/2018 22:40:05

COMMIT:[DOCKER] update package to 4.7.2 in dockerfile

Descriptions of the changes in this PR:

### Motivation

We need to generate 4.7.2 docker image.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1644 from sijie/update_docker_image_47

TREE:tree 027127d30c5b5be8a135c612e546dd753e77783c ------
TIME:09/04/2018 22:40:05

COMMIT:Updated site at revision c766575

TREE:tree 8ee4cd27841ace20cd2960d44cb09f1776cf9f1d ------
TIME:09/04/2018 22:23:02

COMMIT:ISSUE #1623: ReadOnlyLedgerHandle: don't schedule monitorPendingAddOps()

The LedgerHandle constructor schedules an addEntryQuorumTimeout check
with the bk client scheduler. However, the only place this callback is
canceled is in the closeAsync (the one which returns a future, not to be
confused with asyncClose) method. asyncClose and close() both leak this
callback. Moreover, ReadOnlyLedgerHandle invokes the LedgerHandle
constructor and so also creates this callback, but it overrides close()
and asyncClose() without passing them through.

ReadOnlyLedgerHandle already overrides
initializeExplicitLacFlushPolicy() to avoid write specific state.  This
patch generalizes that hack to initializeWriteHandleState() and the
cleanup to tearDownWriteHandleState().  tearDownWriteHandleState() is
moved into doAsyncClose(), which appears to be called for closes in
general.

(rev cguttapalem)
(bug W-5362724)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjustsalesforce.com>

Reviewers: Ivan Kelly <ivankapache.org>, Enrico Olivelli <eolivelligmail.com>, Sijie Guo <sijieapache.org>

This closes #1624 from athanatos/forupstream/wip-1623, closes #1623

(cherry picked from commit 9279dcc13b95406dbcb7a333fcb8a8961f52bf16)

Conflicts:
	bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java

Conflicts mainly revolved around refactors in LedgerHandle to remove the
explicit bkclient.

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1632 from athanatos/forupstream/wip-1623-4.8, closes #1623

TREE:tree a19faa8d57f1751daad9b304734dafa887fc564c ------
TIME:09/04/2018 21:32:17

COMMIT:Recovery uses immutable metadata

And MetadataUpdateLoop to update it.

Master issue: #281

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1621 from ivankelly/recovery-immutable

TREE:tree 88b6dc2eca81bee0d5cb10a858507606396117ba ------
TIME:09/04/2018 21:31:15

COMMIT:Fix EntryLoggerAllocator.stop

Descriptions of the changes in this PR:

- make sure EntryLoggerAllocator.stop terminates pending allocatorExecutor's task.
Otherwise tests would flap, since even after EntryLoggerAllocator.stop, there is
possibility of new entrylog creation, which is not expected.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1627 from reddycharan/entryalocshut

(cherry picked from commit af9d4c312ef1640fbbfb6765943c9a83242a4f37)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 006d947b30e4abab866dd6c5e8ae53002a598b7c ------
TIME:09/04/2018 21:29:51

COMMIT:Fix EntryLoggerAllocator.stop

Descriptions of the changes in this PR:

- make sure EntryLoggerAllocator.stop terminates pending allocatorExecutor's task.
Otherwise tests would flap, since even after EntryLoggerAllocator.stop, there is
possibility of new entrylog creation, which is not expected.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1627 from reddycharan/entryalocshut

TREE:tree fb5b1530a8b81b2d7698db923b922e19848894e4 ------
TIME:09/04/2018 21:29:51

COMMIT:Updated site at revision 04ce76a

TREE:tree 80e00b910f557bbf787128d82ac1836c0473a51a ------
TIME:08/31/2018 18:10:01

COMMIT:[RELEASE] Release Notes for 4.7.2

Descriptions of the changes in this PR:

Add the release notes for 4.7.2 release

Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1628 from sijie/release_notes_472

TREE:tree 8fc8e3544772525d2639ee9a1925626884a3ca8e ------
TIME:08/31/2018 17:43:38

COMMIT:Updated site at revision fa498fc

TREE:tree a0cf7ae36b066f7cfaa110aedf0805382f2e15c9 ------
TIME:08/31/2018 08:57:44

COMMIT:[RELEASE] [WEBSITE] Create documentation for release 4.7.2

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1634 from sijie/website_472

TREE:tree 066926ad47266c8b2126f49ae726971d0bcca6f1 ------
TIME:08/31/2018 08:31:02

COMMIT:[RELEASE] bump branch-4.7 development version to 4.7.3-SNAPSHOT

Descriptions of the changes in this PR:

Bump the development version to 4.7.3-SNAPSHOT

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1635 from sijie/bump_473_snapshot

TREE:tree 329a076d13e5182067a79e87d7d0b48989add034 ------
TIME:08/30/2018 20:25:47

COMMIT:Update testcontainers to latest version

Descriptions of the changes in this PR:

### Motivation

the latest version of testcontainers provides a `doStart` method to allow adding logic before `doStart`.

Author: Qi Wang <codingwangqi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1636 from codingwangqi/update_testcontainers

TREE:tree e82282f37ebb32d373e75cf6a3ae9dfa4fe1e828 ------
TIME:08/30/2018 20:24:54

COMMIT:[RELEASE] update release script to generate sha512 instead of sha1

*Motivation*

According to [checksums requirements](http://www.apache.org/dev/release-distribution#sigs-and-sums),
the project should supply a sha256 and/or sha512 checksum file, and should not supply a MD5 and sha1 checksum file.

*Changes*

Update the release script to generate sha512 files

Descriptions of the changes in this PR:

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1631 from sijie/sha512_files

(cherry picked from commit 4f70973aef55813ffccb6eb312e3fc6cb089207f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ec696d74886165013f170d7e2e25d1e4285ef2c6 ------
TIME:08/29/2018 19:37:30

COMMIT:[RELEASE] update release script to generate sha512 instead of sha1

*Motivation*

According to [checksums requirements](http://www.apache.org/dev/release-distribution#sigs-and-sums),
the project should supply a sha256 and/or sha512 checksum file, and should not supply a MD5 and sha1 checksum file.

*Changes*

Update the release script to generate sha512 files

Descriptions of the changes in this PR:

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1631 from sijie/sha512_files

(cherry picked from commit 4f70973aef55813ffccb6eb312e3fc6cb089207f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 88f9035acf1efcb478f0b785a2c135dccce005ee ------
TIME:08/29/2018 19:37:30

COMMIT:[RELEASE] update release script to generate sha512 instead of sha1

*Motivation*

According to [checksums requirements](http://www.apache.org/dev/release-distribution#sigs-and-sums),
the project should supply a sha256 and/or sha512 checksum file, and should not supply a MD5 and sha1 checksum file.

*Changes*

Update the release script to generate sha512 files

Descriptions of the changes in this PR:

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1631 from sijie/sha512_files

TREE:tree aa24edb1c21aeb3598a6a0247a28078a1b368e06 ------
TIME:08/29/2018 19:37:30

COMMIT:ISSUE #1623: ReadOnlyLedgerHandle: don't schedule monitorPendingAddOps()

The LedgerHandle constructor schedules an addEntryQuorumTimeout check
with the bk client scheduler. However, the only place this callback is
canceled is in the closeAsync (the one which returns a future, not to be
confused with asyncClose) method. asyncClose and close() both leak this
callback. Moreover, ReadOnlyLedgerHandle invokes the LedgerHandle
constructor and so also creates this callback, but it overrides close()
and asyncClose() without passing them through.

ReadOnlyLedgerHandle already overrides
initializeExplicitLacFlushPolicy() to avoid write specific state.  This
patch generalizes that hack to initializeWriteHandleState() and the
cleanup to tearDownWriteHandleState().  tearDownWriteHandleState() is
moved into doAsyncClose(), which appears to be called for closes in
general.

(rev cguttapalem)
(bug W-5362724)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjustsalesforce.com>

Reviewers: Ivan Kelly <ivankapache.org>, Enrico Olivelli <eolivelligmail.com>, Sijie Guo <sijieapache.org>

This closes #1624 from athanatos/forupstream/wip-1623, closes #1623

(cherry picked from commit 9279dcc13b95406dbcb7a333fcb8a8961f52bf16)

Conflicts:
	bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java

Conflicts mainly revolved around refactors in LedgerHandle to remove the
explicit bkclient.

(cherry picked from commit e58e0747e93bed3c4bff5a2b866986fdba621c4e)

Conflicts:
	bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1633 from athanatos/forupstream/wip-1623-4.7, closes #1623

TREE:tree 6b4f2eeac82c23bb70bb53973cd94d0adad5c66d ------
TIME:08/29/2018 19:35:17

COMMIT:Allow construction of mock client context from scratch

So that ledger handle functionality can be tested without
instantiating a BookKeeper client.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1625 from ivankelly/mock-client-context

TREE:tree d62a494c67fa9a54e880260c6f38d50bea6ab451 ------
TIME:08/28/2018 15:42:54

COMMIT:Updated site at revision 9279dcc

TREE:tree 5a1bc92e8d97e848471ba47fb4c64212aa452114 ------
TIME:08/28/2018 08:00:33

COMMIT:ISSUE #1623: ReadOnlyLedgerHandle: don't schedule monitorPendingAddOps()

The LedgerHandle constructor schedules an addEntryQuorumTimeout check
with the bk client scheduler. However, the only place this callback is
canceled is in the closeAsync (the one which returns a future, not to be
confused with asyncClose) method. asyncClose and close() both leak this
callback. Moreover, ReadOnlyLedgerHandle invokes the LedgerHandle
constructor and so also creates this callback, but it overrides close()
and asyncClose() without passing them through.

ReadOnlyLedgerHandle already overrides
initializeExplicitLacFlushPolicy() to avoid write specific state.  This
patch generalizes that hack to initializeWriteHandleState() and the
cleanup to tearDownWriteHandleState().  tearDownWriteHandleState() is
moved into doAsyncClose(), which appears to be called for closes in
general.

(rev cguttapalem)
(bug W-5362724)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1624 from athanatos/forupstream/wip-1623, closes #1623

TREE:tree 72f6d667d049e0073b1a8397edb96f77a77a7859 ------
TIME:08/28/2018 07:40:27

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.7.2-rc0

TREE:tree 6c89d964b08f4c32e232ee9ea8edde6628bebf5a ------
TIME:08/27/2018 09:03:40

COMMIT:[maven-release-plugin] prepare release v4.7.2-rc0

TREE:tree dd8eaa47f01589c9722afcdee092becf8d2db29c ------
TIME:08/27/2018 08:59:06

COMMIT:Provide async version of markLedgerUnderreplicated for LedgerUnderreplicationManager

Descriptions of the changes in this PR:

 ### Motivation

Auditor has multiple places calling sync methods in async callbacks.
This raises the possibility hitting deadlock. Issue #1578 is one of the examples.

After looking into the `LedgerUnderreplicationManager`, `markLedgerUnderreplicated`
is the only interface that will be called in async callbacks. This change is
to provide an async version of `markLedgerUnderreplicated`.

 ### Changes

- add `markLedgerUnderreplicatedAsync` interface in `LedgerUnderreplicationManager`.
- implement the logic of `markLedgerUnderreplicated` using async callbacks
- use `markLedgerUnderreplicatedAsync` in the Auditor

Related Issues: #1578
Master Issue: #1617

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1619 from sijie/async_sync_autorecovery

TREE:tree 6c89d964b08f4c32e232ee9ea8edde6628bebf5a ------
TIME:08/27/2018 04:51:08

COMMIT:Updated site at revision 73b428c

TREE:tree 756425cd205b2490ee7d32eb8a34d9de4ea36b9d ------
TIME:08/27/2018 05:14:10

COMMIT:Provide async version of markLedgerUnderreplicated for LedgerUnderreplicationManager

Descriptions of the changes in this PR:

 ### Motivation

Auditor has multiple places calling sync methods in async callbacks.
This raises the possibility hitting deadlock. Issue #1578 is one of the examples.

After looking into the `LedgerUnderreplicationManager`, `markLedgerUnderreplicated`
is the only interface that will be called in async callbacks. This change is
to provide an async version of `markLedgerUnderreplicated`.

 ### Changes

- add `markLedgerUnderreplicatedAsync` interface in `LedgerUnderreplicationManager`.
- implement the logic of `markLedgerUnderreplicated` using async callbacks
- use `markLedgerUnderreplicatedAsync` in the Auditor

Related Issues: #1578
Master Issue: #1617

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1619 from sijie/async_sync_autorecovery

(cherry picked from commit 73b428c7975c975f25956815670493a7093441ec)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fbac10ab2159510a49be9b34711c640c92d8f4c6 ------
TIME:08/27/2018 04:51:08

COMMIT:Provide async version of markLedgerUnderreplicated for LedgerUnderreplicationManager

Descriptions of the changes in this PR:

 ### Motivation

Auditor has multiple places calling sync methods in async callbacks.
This raises the possibility hitting deadlock. Issue #1578 is one of the examples.

After looking into the `LedgerUnderreplicationManager`, `markLedgerUnderreplicated`
is the only interface that will be called in async callbacks. This change is
to provide an async version of `markLedgerUnderreplicated`.

 ### Changes

- add `markLedgerUnderreplicatedAsync` interface in `LedgerUnderreplicationManager`.
- implement the logic of `markLedgerUnderreplicated` using async callbacks
- use `markLedgerUnderreplicatedAsync` in the Auditor

Related Issues: #1578
Master Issue: #1617

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1619 from sijie/async_sync_autorecovery

TREE:tree 494bf141020b991b068fac5165150422cdda85b2 ------
TIME:08/27/2018 04:51:08

COMMIT:Add mock registration client

For testing the client without having to boot zookeeper.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1622 from ivankelly/mock-reg-client

TREE:tree eae6ebe7360fadff39423da4eb27447bdc628d4f ------
TIME:08/24/2018 14:36:31

COMMIT:Avoid usage of RocksDB deleteRange() in DbLedgerStorage

### Motivation

There are few issues that are reconducible to a performance degradation in RocksDB when using deleteRange() feature (eg: https://github.com/apache/incubator-pulsar/issues/1737 and others).

There is some discussion going on RocksDB to address this issue: https://github.com/facebook/rocksdb/issues/3959

In the meantime, we should rollback the change and don't use deleteRange until these issues are resolved.

### Changes

This PR is essentially reverting back the commit https://github.com/yahoo/bookkeeper/commit/4b849904bcd65b49cf963e6508dc7fb745f56294 from Yahoo branch (which was squashed when merging back to apache).
The only addition here is to use `DELETE_ENTRIES_BATCH_SIZE` to amortize the cost of `batch.flush()` when there are many ledgers with few entries.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1620 from merlimat/rollback-delete-range

(cherry picked from commit dca471dfddbdbdea3dac029ddd76958340fa6629)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f0929c64b37b93cc8772af114e1e78f4a78cb7ea ------
TIME:08/23/2018 19:19:02

COMMIT:Avoid usage of RocksDB deleteRange() in DbLedgerStorage

### Motivation

There are few issues that are reconducible to a performance degradation in RocksDB when using deleteRange() feature (eg: https://github.com/apache/incubator-pulsar/issues/1737 and others).

There is some discussion going on RocksDB to address this issue: https://github.com/facebook/rocksdb/issues/3959

In the meantime, we should rollback the change and don't use deleteRange until these issues are resolved.

### Changes

This PR is essentially reverting back the commit https://github.com/yahoo/bookkeeper/commit/4b849904bcd65b49cf963e6508dc7fb745f56294 from Yahoo branch (which was squashed when merging back to apache).
The only addition here is to use `DELETE_ENTRIES_BATCH_SIZE` to amortize the cost of `batch.flush()` when there are many ledgers with few entries.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1620 from merlimat/rollback-delete-range

(cherry picked from commit dca471dfddbdbdea3dac029ddd76958340fa6629)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 191e094ee05ebf66aaf23acb9f05636f7e05abe9 ------
TIME:08/23/2018 19:19:02

COMMIT:Avoid usage of RocksDB deleteRange() in DbLedgerStorage

### Motivation

There are few issues that are reconducible to a performance degradation in RocksDB when using deleteRange() feature (eg: https://github.com/apache/incubator-pulsar/issues/1737 and others).

There is some discussion going on RocksDB to address this issue: https://github.com/facebook/rocksdb/issues/3959

In the meantime, we should rollback the change and don't use deleteRange until these issues are resolved.

### Changes

This PR is essentially reverting back the commit https://github.com/yahoo/bookkeeper/commit/4b849904bcd65b49cf963e6508dc7fb745f56294 from Yahoo branch (which was squashed when merging back to apache).
The only addition here is to use `DELETE_ENTRIES_BATCH_SIZE` to amortize the cost of `batch.flush()` when there are many ledgers with few entries.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1620 from merlimat/rollback-delete-range

TREE:tree 2d29ede48d7c92bb2cec134f413c993494c9d13b ------
TIME:08/23/2018 19:19:02

COMMIT:Updated site at revision a5b4b93

TREE:tree 1e6ddfa6cdc8e2b747e9ddab4c8180113d0e6764 ------
TIME:08/23/2018 10:14:30

COMMIT:UpdateLedgerOp uses MetadataUpdateLoop

Also refactored a lot of things around the operation that didn't make
sense, like the executor.

Master issue: #281

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1587 from ivankelly/update-ledger-op

TREE:tree ab7307e18f5ac91dd679f65085a199a6aaebf9f3 ------
TIME:08/23/2018 09:51:45

COMMIT:Replace guava multimap in PCBC with custom impl (Cherry-pick)

Descriptions of the changes in this PR:

(cherry-pick #1569)

For a long time PerChannelBookieClient has used guava
LinkedListMultiMap to store conflicting V2 completion keys and
values. This is problematic though. Completion keys are pooled
objects. When a key-value pair is stored in a LinkedListMultiMap, if
it is the first value for that key, a collection is created for the
values, and added to a top-level map using the key, and then the key
and the value are added to the collection. When a second value is
added for the same key, the key and value are simply added to the
collection. The problem occurs when the first key is removed. PBCB
will recycle the key object, but this object is still being used in
the multimap in the top-level map. This causes all sorts of fun like
NullPointerException and IllegalStateException.

Because of this, this patch introduces a very simple multimap
implementation that only stores the key one time (in the collection)
and uses the hashCode of the key to separate the collections into
buckets. It's pretty inefficient, but this code it only hit in the
rare case where a client is trying to read or write the same entry
from the same ledger more than once at the same time.

Author: Ivan Kelly <ivanivankelly.net>

Reviewers: Enrico Olivelli <eolivelligmail.com>

This closes #1569 from ivankelly/conc-test-flake

Master Issue: #1569

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1618 from sijie/cherry-pick-pcbc

TREE:tree 5273ad27890b296a4a34e9595bdfe4425801bec1 ------
TIME:08/22/2018 18:26:24

COMMIT:Updated site at revision 77b7fb8

TREE:tree f3495a6745612fb0caf9a95127cbe37d2d88cac4 ------
TIME:08/22/2018 14:36:38

COMMIT:Get currentEnsemble from ledger rather than directly from metadata

This will allow us to override the currentEnsemble being used during
recovery without modifying the metadata itself.

Master issue: #281

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1586 from ivankelly/current-ensemble

TREE:tree f81297177be163976df20034c099e5a23ef6a9ad ------
TIME:08/22/2018 14:14:29

COMMIT:Updated site at revision b9916d3

TREE:tree 2b0c69f56b344edb971a2b6ae98da523f5036587 ------
TIME:08/22/2018 00:57:15

COMMIT:Allow to configure num of Netty IO threads in client and bookie

Currently the number of IO threads for client and bookie are set to `2 *  Runtime.getRuntime().availableProcessors()`. Added configuration options to tune it.

Author: Matteo Merli <mmerli@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1612 from merlimat/configure-io-threads

(cherry picked from commit b9916d3d87208af36be6a7b061a594a33c897271)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 883806e76b635c5a839924c62ab60d7e50bb7ced ------
TIME:08/22/2018 00:12:21

COMMIT:Allow to configure num of Netty IO threads in client and bookie

### Motivation

Currently the number of IO threads for client and bookie are set to `2 *  Runtime.getRuntime().availableProcessors()`. Added configuration options to tune it.

Author: Matteo Merli <mmerli@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1612 from merlimat/configure-io-threads

TREE:tree 9f33a5cde1bb5df2fc8d10528a3129cfc1b8ddb9 ------
TIME:08/22/2018 00:12:21

COMMIT:Index for lockarray should be non-negative

Descriptions of the changes in this PR:

Make sure lockIndex is non-negative.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1616 from reddycharan/modfix

(cherry picked from commit 4eec3ce0f3dcd16b5ff84f14a95f9acc1d78e552)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 1a3267aa6d7fe8891057249b5f614bbb6eee9873 ------
TIME:08/22/2018 00:11:10

COMMIT:Index for lockarray should be non-negative

Descriptions of the changes in this PR:

Make sure lockIndex is non-negative.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1616 from reddycharan/modfix

TREE:tree 75ced9681ca617d3c44ad488d614cc6084c4974b ------
TIME:08/22/2018 00:11:10

COMMIT:Issue #1610: netty leak detector logs 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' in unit tests

Descriptions of the changes in this PR:

Enabled netty's paranoid leak detection for tests.
Fixed most of the 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' issues. Did not fix ones produced by AuditorElector. In long term we should fix these, ByteBuf leaks in BufferedChannel and whatever else we find and make tests fail if netty logs a leak.

I used to have random test timeouts/failures caused by delayed bookie shutdown when I built repo with OpenJDK 8 but ran tests after switching to Oracle JDK 8 (or vice versa). After these changes tests did not fail in these runs.

Made bk/bkadmin/auditor close resources properly in the tests and shutdown calls.
Changed order of initialization in Bookkeeper so it creates HashedWheelTimer after bookie client, in case bookie client creation fails due to misconfiguration.

Master Issue: #1610

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1613 from dlg99/fix/issue_1610_hashedwheeltimer, closes #1610

(cherry picked from commit 5f2d45c8fa0619d50423f1672303fea2d1a59238)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 67d42338895630ab0dc3d46b56412264827298d3 ------
TIME:08/21/2018 23:08:14

COMMIT:Issue #1610: netty leak detector logs 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' in unit tests

Descriptions of the changes in this PR:

Enabled netty's paranoid leak detection for tests.
Fixed most of the 'LEAK: HashedWheelTimer.release() was not called before it's garbage-collected.' issues. Did not fix ones produced by AuditorElector. In long term we should fix these, ByteBuf leaks in BufferedChannel and whatever else we find and make tests fail if netty logs a leak.

### Motivation

I used to have random test timeouts/failures caused by delayed bookie shutdown when I built repo with OpenJDK 8 but ran tests after switching to Oracle JDK 8 (or vice versa). After these changes tests did not fail in these runs.

### Changes

Made bk/bkadmin/auditor close resources properly in the tests and shutdown calls.
Changed order of initialization in Bookkeeper so it creates HashedWheelTimer after bookie client, in case bookie client creation fails due to misconfiguration.

Master Issue: #1610

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1613 from dlg99/fix/issue_1610_hashedwheeltimer, closes #1610

TREE:tree 843ce70d13ee6f14e0d8034c4506657b0b32d6af ------
TIME:08/21/2018 23:08:14

COMMIT:ISSUE #1578: Fixed deadlock in auditor blocking ZK thread

### Motivation

Fixes #1578

After getting ZK callback from ZK event thread, we need to jump to a background thread before doing synchronous call to `admin.openLedgerNoRecovery(ledgerId);` which will try to make a ZK request a wait for a response (which would be coming through same ZK event thread currently blocked..)

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1608 from merlimat/fix-auditor-deadlock, closes #1578

(cherry picked from commit f782a9d818a12479d08c580a68b2566715da4c89)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6962974a97527ffbacb7ef54b5d9048be3425e87 ------
TIME:08/21/2018 20:42:14

COMMIT:ISSUE #1578: Fixed deadlock in auditor blocking ZK thread

### Motivation

Fixes #1578

After getting ZK callback from ZK event thread, we need to jump to a background thread before doing synchronous call to `admin.openLedgerNoRecovery(ledgerId);` which will try to make a ZK request a wait for a response (which would be coming through same ZK event thread currently blocked..)

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1608 from merlimat/fix-auditor-deadlock, closes #1578

(cherry picked from commit f782a9d818a12479d08c580a68b2566715da4c89)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 2004767dd85850ffb4285ebef4d9f9722b1864a8 ------
TIME:08/21/2018 20:42:14

COMMIT:ISSUE #1578: Fixed deadlock in auditor blocking ZK thread

### Motivation

Fixes #1578

After getting ZK callback from ZK event thread, we need to jump to a background thread before doing synchronous call to `admin.openLedgerNoRecovery(ledgerId);` which will try to make a ZK request a wait for a response (which would be coming through same ZK event thread currently blocked..)

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1608 from merlimat/fix-auditor-deadlock, closes #1578

TREE:tree d6b3ab489cd24e3a09eccf30aee06fa96749e59e ------
TIME:08/21/2018 20:42:14

COMMIT:Ensure BufferedChannel instance is properly closed

Whenever the the `EntryLogger` is closing the `BufferedChannel` instance (the channel used for writing) it is closing the file descriptor but it's not calling `close()` on the object itself.

This causes a small mem leak for each log file, because the `writeBuffer` from `BufferedChannel` is never released.

I think this should be considered for a 4.7.1 release.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1414 from merlimat/fix-entry-log-leak

TREE:tree 81e03305f348dd98fb0704ea9a69cde909c9a299 ------
TIME:08/21/2018 20:15:14

COMMIT:Ensure BufferedChannel instance is properly closed

Whenever the the `EntryLogger` is closing the `BufferedChannel` instance (the channel used for writing) it is closing the file descriptor but it's not calling `close()` on the object itself.

This causes a small mem leak for each log file, because the `writeBuffer` from `BufferedChannel` is never released.

I think this should be considered for a 4.7.1 release.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1414 from merlimat/fix-entry-log-leak

TREE:tree a7361cbe81a4659f04109ab8d1642a3f02b2246a ------
TIME:08/21/2018 20:15:14

COMMIT:Updated site at revision 8e10328

TREE:tree 1b3ff0d710dbb53057aff372b0087fe523de9818 ------
TIME:08/21/2018 13:45:31

COMMIT:Make LedgerHandle injectable

This patch removes the hard dependency of LedgerHandle on BookKeeper.
This allows us to create an instance of LedgerHandle independently,
with a fully mocked BookieClient or LedgerManager and be clear on
where the objects used by the LedgerHandle are coming from.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1589 from ivankelly/injectable-lh

TREE:tree 00424a7b976534267fe77d6f85bff11ca1cbe578 ------
TIME:08/21/2018 13:23:12

COMMIT:Updated site at revision 299fb58

TREE:tree 2c3260d9c33597f3226522d770447e1fae28fce6 ------
TIME:08/21/2018 08:53:55

COMMIT:Issue #1584: LedgerHandleAdv should expose asyncAddEntry variant that takes ByteBuf (LedgerHandle exposes it as public)

Descriptions of the changes in this PR:

- exposed asyncAddEntry as public, similarly to other variants.
- fixed ByteBuf retention

### Motivation

It's useful to have this exposed as public for clients to make use of netty's allocator and pass ByteBuf directly.

### Changes

exposed asyncAddEntry as public, similarly to other variants.

Master Issue: #1584

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1585 from dlg99/feature/issue-1584-LedgerHandleAdv-public-addEntry-bytebuff, closes #1584

(cherry picked from commit 299fb58deed3dc284342716d52b7f918cc6cefc4)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5a15b720c8f8580d75d066bcbaeb50a95b745725 ------
TIME:08/21/2018 08:30:52

COMMIT:Issue #1584: LedgerHandleAdv should expose asyncAddEntry variant that takes ByteBuf (LedgerHandle exposes it as public)

Descriptions of the changes in this PR:

- exposed asyncAddEntry as public, similarly to other variants.
- fixed ByteBuf retention

### Motivation

It's useful to have this exposed as public for clients to make use of netty's allocator and pass ByteBuf directly.

### Changes

exposed asyncAddEntry as public, similarly to other variants.

Master Issue: #1584

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1585 from dlg99/feature/issue-1584-LedgerHandleAdv-public-addEntry-bytebuff, closes #1584

TREE:tree 62b3ecc82bd6dde2a1212251a061320b04783f7c ------
TIME:08/21/2018 08:30:52

COMMIT:Updated site at revision f5474b1

TREE:tree 83ab686d7dae15ea76713860e56cbdcd12c0bb20 ------
TIME:08/17/2018 22:27:48

COMMIT:Downgraded ZK version to 3.4.13

BK 4.7 has shipped with newer ZooKeeper client 3.5.3-beta. In many cases, there has been concerns regarding having a dependency on a "beta" release. Irrespective of the seriousness of these concerns for the specific case of ZK which has been in alpha/beta for a very long time, we should not have dependency on versions of software for which the team itself has marked as "not yet stable".

Adding to that, there is no clear roadmap or ETA for when final 3.5.x stable release will be available.

 * Downgraded ZK to latest stable version 3.4.13
 * Adjusted few usages of new client APIs that were introduced in 3.5.x

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1601 from merlimat/downgrade-zk

(cherry picked from commit f5474b1380b73819ba9f85b42d006f9ad7e45aa5)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree a72295a1d12393eae801a155adb3d17f624291ef ------
TIME:08/17/2018 22:04:22

COMMIT:Downgraded ZK version to 3.4.13

### Motivation

BK 4.7 has shipped with newer ZooKeeper client 3.5.3-beta. In many cases, there has been concerns regarding having a dependency on a "beta" release. Irrespective of the seriousness of these concerns for the specific case of ZK which has been in alpha/beta for a very long time, we should not have dependency on versions of software for which the team itself has marked as "not yet stable".

Adding to that, there is no clear roadmap or ETA for when final 3.5.x stable release will be available.

### Changes

 * Downgraded ZK to latest stable version 3.4.13
 * Adjusted few usages of new client APIs that were introduced in 3.5.x

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1601 from merlimat/downgrade-zk

(cherry picked from commit f5474b1380b73819ba9f85b42d006f9ad7e45aa5)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree 7965e0aea777586cb89e8c8aaed89eb83b27f430 ------
TIME:08/17/2018 22:04:22

COMMIT:Downgraded ZK version to 3.4.13

### Motivation

BK 4.7 has shipped with newer ZooKeeper client 3.5.3-beta. In many cases, there has been concerns regarding having a dependency on a "beta" release. Irrespective of the seriousness of these concerns for the specific case of ZK which has been in alpha/beta for a very long time, we should not have dependency on versions of software for which the team itself has marked as "not yet stable".

Adding to that, there is no clear roadmap or ETA for when final 3.5.x stable release will be available.

### Changes

 * Downgraded ZK to latest stable version 3.4.13
 * Adjusted few usages of new client APIs that were introduced in 3.5.x

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1601 from merlimat/downgrade-zk

TREE:tree 54b51ca94bb87370b600c64e24d34bbc2790f445 ------
TIME:08/17/2018 22:04:22

COMMIT:Updated site at revision bf7e15e

TREE:tree e64fe5e9c49117ab9df2ba8b9353edd700aa7a56 ------
TIME:08/17/2018 18:37:21

COMMIT:BP-34: Cluster metadata checker

Descriptions of the changes in this PR:

- BP for cluster metadata checker

Master Issue: #1602

Author: cguttapalem <cguttapalem@salesforce.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1603 from reddycharan/checkerbp

TREE:tree fbe888ea289e72cef7828bf421b5c92c6b64775a ------
TIME:08/17/2018 17:57:18

COMMIT:[BOOKIE] Avoid throwing exceptions if a loopback address is returned from the possible ip check

Descriptions of the changes in this PR:

 ### Motivation

At some network environment, a loopback address might be returned by default. However when you
want to specify `advertisedAddress` to avoid the loopback address, it still throws exception as
following:

```
17:23:35.696 [main] ERROR org.apache.bookkeeper.server.Main - Failed to build bookie server
org.apache.bookkeeper.bookie.BookieException$UnknownBookieIdException: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:325) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironmentWithStorageExpansion(Bookie.java:415) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:256) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:627) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.newBookie(BookieServer.java:115) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:96) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.service.BookieService.<init>(BookieService.java:42) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.buildBookieServer(Main.java:299) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.doMain(Main.java:219) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.main(Main.java:201) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:252) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
Caused by: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.getBookieAddress(Bookie.java:564) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:315) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	... 10 more
```

The exception is thrown on `possibleBookieIds` check. However we don't need to throw exception on `possibleBookieIds` check
if it is a loopback address. We can defer the exception until bookie attempts to listen on the loopback address.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1609 from sijie/avoid_exceptions_on_possible_ips

(cherry picked from commit 0459d673891c911ba8ed8e83a90f083b71a9d413)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b333616b4a7184e1831f5c2f11c30fbc754490cf ------
TIME:08/17/2018 17:53:13

COMMIT:[BOOKIE] Avoid throwing exceptions if a loopback address is returned from the possible ip check

Descriptions of the changes in this PR:

 ### Motivation

At some network environment, a loopback address might be returned by default. However when you
want to specify `advertisedAddress` to avoid the loopback address, it still throws exception as
following:

```
17:23:35.696 [main] ERROR org.apache.bookkeeper.server.Main - Failed to build bookie server
org.apache.bookkeeper.bookie.BookieException$UnknownBookieIdException: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:325) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironmentWithStorageExpansion(Bookie.java:415) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:256) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:627) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.newBookie(BookieServer.java:115) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:96) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.service.BookieService.<init>(BookieService.java:42) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.buildBookieServer(Main.java:299) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.doMain(Main.java:219) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.main(Main.java:201) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:252) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
Caused by: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.getBookieAddress(Bookie.java:564) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:315) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	... 10 more
```

The exception is thrown on `possibleBookieIds` check. However we don't need to throw exception on `possibleBookieIds` check
if it is a loopback address. We can defer the exception until bookie attempts to listen on the loopback address.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1609 from sijie/avoid_exceptions_on_possible_ips

(cherry picked from commit 0459d673891c911ba8ed8e83a90f083b71a9d413)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree bb4648c13ebeede909dc62e051d0a1b97f2e31f3 ------
TIME:08/17/2018 17:53:13

COMMIT:[BOOKIE] Avoid throwing exceptions if a loopback address is returned from the possible ip check

Descriptions of the changes in this PR:

 ### Motivation

At some network environment, a loopback address might be returned by default. However when you
want to specify `advertisedAddress` to avoid the loopback address, it still throws exception as
following:

```
17:23:35.696 [main] ERROR org.apache.bookkeeper.server.Main - Failed to build bookie server
org.apache.bookkeeper.bookie.BookieException$UnknownBookieIdException: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:325) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironmentWithStorageExpansion(Bookie.java:415) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:256) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:627) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.newBookie(BookieServer.java:115) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.<init>(BookieServer.java:96) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.service.BookieService.<init>(BookieService.java:42) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.buildBookieServer(Main.java:299) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.doMain(Main.java:219) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.server.Main.main(Main.java:201) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.proto.BookieServer.main(BookieServer.java:252) [org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
Caused by: java.net.UnknownHostException: Trying to listen on loopback address, 127.0.0.1:3181 but this is forbidden by default (see ServerConfiguration#getAllowLoopback())
	at org.apache.bookkeeper.bookie.Bookie.getBookieAddress(Bookie.java:564) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	at org.apache.bookkeeper.bookie.Bookie.possibleBookieIds(Bookie.java:315) ~[org.apache.bookkeeper-bookkeeper-server-4.7.1.jar:4.7.1]
	... 10 more
```

The exception is thrown on `possibleBookieIds` check. However we don't need to throw exception on `possibleBookieIds` check
if it is a loopback address. We can defer the exception until bookie attempts to listen on the loopback address.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1609 from sijie/avoid_exceptions_on_possible_ips

TREE:tree 900304b39db3d8eab54de7e9bc4b6674756cefe2 ------
TIME:08/17/2018 17:53:13

COMMIT:Typo in bookie request processor read handling

The response in the case of overload should take the ledgerId and
entryId from the read request.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1590 from ivankelly/request-processor-typo

(cherry picked from commit 987f8046d9f253354c512bd2aa32307ff9ed1019)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree db0ad5fcbab826340fac8e9e112187b15e054295 ------
TIME:08/17/2018 03:42:10

COMMIT:Typo in bookie request processor read handling

The response in the case of overload should take the ledgerId and
entryId from the read request.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1590 from ivankelly/request-processor-typo

(cherry picked from commit 987f8046d9f253354c512bd2aa32307ff9ed1019)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 0f9927e84ca92cbbdfd95d271133c8465c6d1c6c ------
TIME:08/17/2018 03:42:10

COMMIT:Typo in bookie request processor read handling

The response in the case of overload should take the ledgerId and
entryId from the read request.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1590 from ivankelly/request-processor-typo

TREE:tree fed55048e5a48dd4ffd7215d704cd276b577e91a ------
TIME:08/17/2018 03:42:10

COMMIT:ISSUE #1528: logging "No network topology script is found when using script based DNS resolver" can be noisy and misleading.

Descriptions of the changes in this PR:

 ### Motivation

"No network topology script is found when using script based DNS resolver" is misleading and noisy.

 ### Changes

Only log the error message but not the stack trace.

Master Issue: #1528

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1605 from sijie/fix_log_message, closes #1528

(cherry picked from commit d57cc6679b4181e514d04e8f3f1d7e598308d78f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree c279db09eaeeb3c307da9be28cb470b0259a1bd2 ------
TIME:08/17/2018 03:40:18

COMMIT:ISSUE #1528: logging "No network topology script is found when using script based DNS resolver" can be noisy and misleading.

Descriptions of the changes in this PR:

 ### Motivation

"No network topology script is found when using script based DNS resolver" is misleading and noisy.

 ### Changes

Only log the error message but not the stack trace.

Master Issue: #1528

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1605 from sijie/fix_log_message, closes #1528

(cherry picked from commit d57cc6679b4181e514d04e8f3f1d7e598308d78f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree cce79f80a26b0acc1996b6d4753e02c891ad9c00 ------
TIME:08/17/2018 03:40:18

COMMIT:ISSUE #1528: logging "No network topology script is found when using script based DNS resolver" can be noisy and misleading.

Descriptions of the changes in this PR:

 ### Motivation

"No network topology script is found when using script based DNS resolver" is misleading and noisy.

 ### Changes

Only log the error message but not the stack trace.

Master Issue: #1528

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1605 from sijie/fix_log_message, closes #1528

TREE:tree 0240271ed7a2d1412b6bfdd2035704910b6182fb ------
TIME:08/17/2018 03:40:18

COMMIT:ISSUE #1606: Fixed race condition during expansion of concurrent open hash maps

### Motivation

As reported in #1606, there is a race condition in the concurrent open hash maps implementation. The race happens when the maps gets re-hashed after the expansion and the new arrays are substituting the old ones.

The race itself is that a thread doing a `get()` on the map is first checking the current `capacity` of the map, uses that to get the bucket and then tries to do optimistic read of the value in that bucket.

This assumes `capacity` update is visible only after the `values` array is already swapped, but that is not always the case in current code.

### Changes
 * Use `volatile` qualifier for `capacity` and `values` arrays to ensure ordering of memory read is respected by compiler
 * In rehashing, update `capacity` after `values`

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1607 from merlimat/fix-concurrent-maps, closes #1606

(cherry picked from commit a7e66e1dd84ff17c918dbbf54e5baa18ff9c9c9b)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree d93cabc9038b94010fc73f1e193ce3129d4bac23 ------
TIME:08/16/2018 18:53:57

COMMIT:ISSUE #1606: Fixed race condition during expansion of concurrent open hash maps

### Motivation

As reported in #1606, there is a race condition in the concurrent open hash maps implementation. The race happens when the maps gets re-hashed after the expansion and the new arrays are substituting the old ones.

The race itself is that a thread doing a `get()` on the map is first checking the current `capacity` of the map, uses that to get the bucket and then tries to do optimistic read of the value in that bucket.

This assumes `capacity` update is visible only after the `values` array is already swapped, but that is not always the case in current code.

### Changes
 * Use `volatile` qualifier for `capacity` and `values` arrays to ensure ordering of memory read is respected by compiler
 * In rehashing, update `capacity` after `values`

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1607 from merlimat/fix-concurrent-maps, closes #1606

(cherry picked from commit a7e66e1dd84ff17c918dbbf54e5baa18ff9c9c9b)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree 5f5d9d7ee2cbf45bc7ec222334f52411c5cfa91c ------
TIME:08/16/2018 18:53:57

COMMIT:ISSUE #1606: Fixed race condition during expansion of concurrent open hash maps

### Motivation

As reported in #1606, there is a race condition in the concurrent open hash maps implementation. The race happens when the maps gets re-hashed after the expansion and the new arrays are substituting the old ones.

The race itself is that a thread doing a `get()` on the map is first checking the current `capacity` of the map, uses that to get the bucket and then tries to do optimistic read of the value in that bucket.

This assumes `capacity` update is visible only after the `values` array is already swapped, but that is not always the case in current code.

### Changes
 * Use `volatile` qualifier for `capacity` and `values` arrays to ensure ordering of memory read is respected by compiler
 * In rehashing, update `capacity` after `values`

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1607 from merlimat/fix-concurrent-maps, closes #1606

TREE:tree 2d5e37d6fd5149283e693da82d759e5f49f4dcab ------
TIME:08/16/2018 18:53:57

COMMIT:Provide consistent locking mechanism in EntryLogManagerForEntryLogPerLedger

Descriptions of the changes in this PR:

Assumption: The lock stored alongside the EntryLog in this map is meant
to be used to ensure that no two threads can be writing to the same
ledger at the same time.

The above invariant can be violated if the EntryLogAndLockTuple
object is evicted from the cache while in a critical section nominally
protected by the contained lock.

The conditions required for this to happen would be pretty odd --
there needs to be a huge amount of cache churn during one of
the protected operations.

The fix for this issue is to allocate in the constructor a fixed array of locks and select
for each EntryLogAndLockTuple a lock from that array
deterministically by ledgerId such that the same ledgerId
will always get the same lock.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1600 from reddycharan/elmlock

(cherry picked from commit b0c04dffdf0c6f243ef9f17326c9e5ad83d20544)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree e3aa6f848783cbe9706ab43b9172af340f64d73b ------
TIME:08/15/2018 09:36:23

COMMIT:Provide consistent locking mechanism in EntryLogManagerForEntryLogPerLedger

Descriptions of the changes in this PR:

Assumption: The lock stored alongside the EntryLog in this map is meant
to be used to ensure that no two threads can be writing to the same
ledger at the same time.

The above invariant can be violated if the EntryLogAndLockTuple
object is evicted from the cache while in a critical section nominally
protected by the contained lock.

The conditions required for this to happen would be pretty odd --
there needs to be a huge amount of cache churn during one of
the protected operations.

The fix for this issue is to allocate in the constructor a fixed array of locks and select
for each EntryLogAndLockTuple a lock from that array
deterministically by ledgerId such that the same ledgerId
will always get the same lock.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1600 from reddycharan/elmlock

TREE:tree 6e5dc4ec474e7c0b158778636a0a382a3deedd9a ------
TIME:08/15/2018 09:36:23

COMMIT:Updated site at revision 36d8590

TREE:tree 7e99ddf227f6cf272ff57b01391420eeefb3e80f ------
TIME:08/14/2018 12:18:53

COMMIT:Make bookie client an interface

So that it can be mocked easily for testing.
This patch also contains a simple mock.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1595 from ivankelly/bookie-client-iface

TREE:tree 3d7a79d370b420bf2ff55afe1532f7c2a2ba655a ------
TIME:08/14/2018 11:56:15

COMMIT:Updated site at revision 511fc81

TREE:tree a01dafb7567249040c545322ab878fad68873ee0 ------
TIME:08/13/2018 23:12:59

COMMIT:Make bookie watcher an interface

So that it can be mocked out easily for testing.
This patch also contains a simple mock.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1594 from ivankelly/bookie-watcher-iface

TREE:tree eba69923aa054ea69bb19e19d40392e84fb35687 ------
TIME:08/13/2018 22:51:07

COMMIT:Create CI jobs for branch-4.8

In order to ensure quality on branh-4.8 we need to create CI jobs which run periodically QA tests

Author: Sijie Guo <sijie@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1593 from eolivelli/ci_jobs_for_48

TREE:tree c90d39920c43184fb448fae6d645f63e8383c660 ------
TIME:08/13/2018 22:18:43

COMMIT:Add a deployment method using docker-compose

Descriptions of the changes in this PR:

### Motivation

Provide a deployment method using docker-compose.

### Changes

- Use helm as the template engine to generate docker compose file
- Deploy zookeeper in cluster mode in docker-compose
- Manages port mapping to make it able to access out side of the docker-composed cluster.

Author: Khurrum Nasimm <khurrumnasimm@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1530 from khurrumnasimm/docker_compose

(cherry picked from commit 83f78c3b8187f7f0e4a93c50055e2e08b0bdd4e3)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree c572b82ea6b840d30a76ddf359a521b9d071fe74 ------
TIME:08/13/2018 20:11:36

COMMIT:Add a deployment method using docker-compose

Descriptions of the changes in this PR:

### Motivation

Provide a deployment method using docker-compose.

### Changes

- Use helm as the template engine to generate docker compose file
- Deploy zookeeper in cluster mode in docker-compose
- Manages port mapping to make it able to access out side of the docker-composed cluster.

Author: Khurrum Nasimm <khurrumnasimm@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1530 from khurrumnasimm/docker_compose

TREE:tree 97b957833b7ae2e226402fa86c18bf5e2bbbb1a5 ------
TIME:08/13/2018 20:11:36

COMMIT:Delayed write ensemble change may cause dataloss

Descriptions of the changes in this PR:

The Original intent of this change is to do a best-effort ensemble change.
But this is not possible until the local metadata is completely immutable.
Until the feature "Make LedgerMetadata Immutable #610" Is complete we will use
handleBookieFailure() to handle delayed writes as regular bookie failures.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1591
Relate Issue: #1395

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1592 from jvrao/datalossbug

(cherry picked from commit 3ab6e9253555d013a8c6eb3b90cddffa090fcaee)
Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 9afc8814c971a5055c9173e5928b41946d442be6 ------
TIME:08/13/2018 15:00:02

COMMIT:Delayed write ensemble change may cause dataloss

Descriptions of the changes in this PR:

The Original intent of this change is to do a best-effort ensemble change.
But this is not possible until the local metadata is completely immutable.
Until the feature "Make LedgerMetadata Immutable #610" Is complete we will use
handleBookieFailure() to handle delayed writes as regular bookie failures.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1591
Relate Issue: #1395

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1592 from jvrao/datalossbug

TREE:tree 6f4f222e69114e700c0f61a4c8f4fce1ed89a002 ------
TIME:08/13/2018 15:00:02

COMMIT:Avoid releasing sent buffer to early in BookieClient mock

If the buffer was sent to more than one bookie with the mock, it would
be released after being sent to the first one. Each write should
retain a refCount themselves, and then release when done.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1598 from ivankelly/double-rel-mock

TREE:tree c4bdf52a7c5844881ed1aab6929e877bce2d5fec ------
TIME:08/13/2018 10:39:36

COMMIT:Move GenericCallbackFuture so it can be used in production code

It's a useful utility to have when dealing with callbacks.

Author: Ivan Kelly <ivank@apache.org>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1597 from ivankelly/gen-cb-future

TREE:tree 765869f574905ebad12d231b17585f59ff1b70e2 ------
TIME:08/13/2018 10:37:34

COMMIT:Move MockLedgerManager out of MetadataUpdateLoopTest

This mock is useful for other tests, so move it out.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1596 from ivankelly/mocklm-common

TREE:tree c714b91ca9c71e545ec57df993b442b45d78f132 ------
TIME:08/12/2018 22:43:03

COMMIT:Fix master versions (4.8.0-SNAPSHOT->4.9.0-SNAPSHOT)

Some pom versions and the versions in bk_test_bin_common.sh were
missed when the version was bumped to 4.9.0-SNAPSHOT, which is killing
all builds.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1599 from ivankelly/broken-master

TREE:tree dc5e715f934c934fb4ff180c8d22f4358816ae2f ------
TIME:08/12/2018 17:09:47

COMMIT:Updated site at revision 9cd1048

TREE:tree 9b3a67bf00364eb3bd8a5e8d375c05e53ec8e9c2 ------
TIME:08/10/2018 12:11:09

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree fa3ead1013f5422116884ac908e7ecd470c95a62 ------
TIME:08/10/2018 11:49:01

COMMIT:[maven-release-plugin] prepare branch branch-4.8

TREE:tree 9952dc2a36759b4599919f8973daebd239d6ff83 ------
TIME:08/10/2018 11:48:54

COMMIT:Updated site at revision f4094c4

TREE:tree 22d4154c9bd47ffae4f5f5fbeda44a66121cc6e8 ------
TIME:08/08/2018 20:27:31

COMMIT:Record ctime for underreplicated ledger mark time.

Descriptions of the changes in this PR:

Enable the Auditor to use system time as underreplicated ledger mark time.
If this is enabled, Auditor will write a ctime field into the
underreplicated ledger znode. This would be useful in knowing when the
ledger is marked underreplicated, using BookieShell commands and also later
we can add alerts/metrics on under replicated ledgers which remained under
replicated for more than acceptable duration.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1576 from reddycharan/urlctime

TREE:tree 37188549a5f24bb499bae4a2a7573c71b2510be6 ------
TIME:08/08/2018 20:04:43

COMMIT:Updated site at revision 123ceab

TREE:tree 586a1317be17980b9c3d0d4e58f569df0485b019 ------
TIME:08/07/2018 17:56:32

COMMIT:Metadata Update mechanism

This patch introduces a metadata update mechanism for the client which
will be used in all places where metadata is updated.

The mechanism takes a bunch of predicates and functions, and runs a
loop again the ledger manager, attempting to apply the mutation
required as specified.

It assumes that the ledger metadata objects on the client side are
immutable and that any metadata object read reflects state that exists
on the metadata store. This isn't the case right now, but as the
current metadata updates are changed to use this, it will be the case.

This patch also introduces a limited LedgerMetadataBuilder, though
only the fields required for testing at mutable.

Master Issue: #281

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1577 from ivankelly/ledger-fragment-immutable-metadata

TREE:tree 4233d1a7bf32c39d63b61709fdf5689e9cb21d2b ------
TIME:08/07/2018 17:33:09

COMMIT:Enhancing DecommissionBookieCmd

Descriptions of the changes in this PR:

- adding bookieid option to DecommissionBookieCmd, to enable decommissioning remote
bookie. This might be needed because, in an extreme scenario Bookie node might not
be completely accessible and hence we might need to decommission a Bookie remotely.
- also DecommissionBookieCmd should delete the cookie of the decommissioned Bookie.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1582 from reddycharan/decomfix

TREE:tree e5f1744b7e4a61a21be8c50ce3a8b42651fd5453 ------
TIME:08/07/2018 00:34:03

COMMIT:Updated site at revision 2b14458

TREE:tree be4ce0ce948c633a37fb24edda1f7327364f20dd ------
TIME:08/01/2018 11:53:26

COMMIT:Make each ensemble in ensemble list immutable

Previously, the ensemble list was a Map<Long, ArrayList<BookieSocketAddress>>.
ArrayList is by definition mutable, so ensemble passed to metadata users are
always mutable.

This patch changes in ensembles in the list to be immutable. We were also leaking
the implementation of ledger metadata to the placement policy, so this has been
modified to use List<BookieSocketAddress> also.

Master issue: #281

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1575 from ivankelly/ledger-fragment-immutable-metadata and squashes the following commits:

14977a242 [Ivan Kelly] fix dlog
bdaef31e8 [Ivan Kelly] checkstyle
6e3431118 [Ivan Kelly] Make each ensemble in ensemble list immutable

TREE:tree 58e0ad8b8e7da2204957f08221a8de36112fdced ------
TIME:08/01/2018 11:29:41

COMMIT:Updated site at revision 7ec1966

TREE:tree 9b47fd265f08eafb2fa7b9a63c4ee6ca807baf01 ------
TIME:07/31/2018 19:47:42

COMMIT:Disallow direct access to LedgerHandle#metadata

This object has been accessed and mutated all over the client, which
makes it hard to do anything with the object. This patch removes the
direct accesses, so the object can only be accessed through an
accessor.

Master issue: #281

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1574 from ivankelly/onlyaccessmdthroughaccessor

TREE:tree 467289ca5e86da906b7a445dbde553806c4ce60c ------
TIME:07/31/2018 19:25:59

COMMIT:Updated site at revision 130cccb

TREE:tree beb6f65f855065d18f3d0e298d2da02df4b274e4 ------
TIME:07/31/2018 13:13:40

COMMIT:LedgerManager should return the metadata just written

First part of changes to make ledger metadata immutable. The client
should only act on metadata which has been written to zookeeper. To
this end, we need to be able to get back from the ledger manager what
has been written to zookeeper (with the version number updated).

Master issue: #281

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1573 from ivankelly/ledger-manager-returns-ledgermeta

TREE:tree 5f3a9694def73eac9c3f87804ba9c42499e47b71 ------
TIME:07/31/2018 12:50:50

COMMIT:Updated site at revision e0d8280

TREE:tree 132eee4a2f00f21704cba18e69d3ff427c929ea2 ------
TIME:07/30/2018 09:13:05

COMMIT:Updated site at revision f40a29d

TREE:tree 65aa2f22c18a7c7b085bf046ca948fc87e9de81a ------
TIME:07/30/2018 08:51:34

COMMIT:ISSUE #1559: Fix for moveLedgerIndexFile logic in relocateIndexFileAndFlushHeader

Descriptions of the changes in this PR:

- In IndexPersistenceMgr.relocateIndexFileAndFlushHeader, if the
currentDir is full and if it is the only indexDir which is
eligible for newIndexFile creation then instead of failing with
NoWritableLedgerDirException it should flushHeader without trying
to move LedgerIndexFile.

Master Issue: #1559

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1560 from reddycharan/fixfileinfomove, closes #1559

TREE:tree ae7c45b0f3ba12a1f2431466c8e82498096d08ef ------
TIME:07/30/2018 08:45:21

COMMIT:ISSUE #1565: Update 'upgrade' doc for 4.8 release

Descriptions of the changes in this PR:

Update 'upgrade' doc by adding an entry
"4.7.x to 4.8.0 upgrade" for ExplicitLac persistence

Master Issue: #1565

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1568 from reddycharan/upgradenote, closes #1565

TREE:tree 549710c489e39e83b75e6dc4bd9b33f729f5c355 ------
TIME:07/30/2018 08:44:26

COMMIT:Write DEFERRED_SYNC docs

Write a little documentation about DEFERRED_SYNC WriteFlag and force() API

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1571 from eolivelli/fix/bp14-docs

TREE:tree 5e4924bf3ec4b3a5748a0592357c4e9002e213a0 ------
TIME:07/30/2018 08:29:32

COMMIT:Flag to disable test reruns from the commandline

Useful when trying to hunt down flakes.

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1570 from ivankelly/retryFlag

TREE:tree 90f905b1f4dc2b9a19d33691df5cde707bd8013d ------
TIME:07/27/2018 10:59:07

COMMIT:Replace guava multimap in PCBC with custom impl

For a long time PerChannelBookieClient has used guava
LinkedListMultiMap to store conflicting V2 completion keys and
values. This is problematic though. Completion keys are pooled
objects. When a key-value pair is stored in a LinkedListMultiMap, if
it is the first value for that key, a collection is created for the
values, and added to a top-level map using the key, and then the key
and the value are added to the collection. When a second value is
added for the same key, the key and value are simply added to the
collection. The problem occurs when the first key is removed. PBCB
will recycle the key object, but this object is still being used in
the multimap in the top-level map. This causes all sorts of fun like
NullPointerException and IllegalStateException.

Because of this, this patch introduces a very simple multimap
implementation that only stores the key one time (in the collection)
and uses the hashCode of the key to separate the collections into
buckets. It's pretty inefficient, but this code it only hit in the
rare case where a client is trying to read or write the same entry
from the same ledger more than once at the same time.

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1569 from ivankelly/conc-test-flake

TREE:tree b5aa06c293571c3ff67e5028b03199440ce3f99c ------
TIME:07/27/2018 10:16:07

COMMIT:Updated site at revision 1655305

TREE:tree 4e54bd7695a211ac035be88f0522999437f83b35 ------
TIME:07/24/2018 14:27:56

COMMIT:ISSUE #1538: Expose MetricsServer in http server

Descriptions of the changes in this PR:

Expose MetricsServer in  http server under `/metrics`

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1546 from jiazhai/issue_1538, closes #1538

TREE:tree fa0ebd7eca3e86d8914941f2b43681a88878f334 ------
TIME:07/24/2018 14:06:08

COMMIT:Updated site at revision 3ddbaac

TREE:tree 1f8873391aaf4fde0f1c2918cfddb737d2b48a5d ------
TIME:07/24/2018 13:32:06

COMMIT:[TABLE SERVICE] Set storage type on creating tables

Descriptions of the changes in this PR:

*Motivation*

We are using same metadata objects for both streams and tables. and we are
using a storage model to distinguish them. We need to make sure we setting the storage
model when creating tables.

*Changes*

Set storage type on creating tables.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1551 from sijie/set_storage_type

TREE:tree 67b0a06159669bc29cb44d20adef5eb5e41eac7e ------
TIME:07/24/2018 13:11:39

COMMIT:Provide BookieId option for listledgers command

Descriptions of the changes in this PR:

### Motivation

While diagnosing/analyzing/debugging cluster, sometimes it would be helpful to know the list of the ledgers residing in a particular bookie. Currently there is no simple way (BookieShell command) to find out that.

### Changes

For listledgers BookieShell command, provide bookieid option, which helps us in knowing list of ledgers residing in this particular Bookie.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1555 from reddycharan/printledgersofbookie

TREE:tree 421ba86c467db78739507396dd82c2677fd58dee ------
TIME:07/24/2018 13:10:04

COMMIT:Updated site at revision 21f125d

TREE:tree 0ee5b20ee62e2a46d66d8910738666b6c4432f65 ------
TIME:07/23/2018 23:42:48

COMMIT:ISSUE #1527: Make ExplicitLAC persistent

Descriptions of the changes in this PR:

For persisting explicitLAC, we can follow the
same approach as followed in persisting
fencing information / stateBits (d69986c)
in FileInfo file and special marker entry
in Journal.

### Motivation

ExplicitLAC is kept in the memory and it can be lost in bookie reboot.
Though it is an extreme corner case scenario, it can break one of the BK guarantees.
" If you read once you can always read it".
If all the bookies of the Write stripe were rebooted, it can loose its explicitLAC value and the client
which was able to read the entry before the reboot, can't read it anymore.

Master Issue: #1527

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1532 from reddycharan/storeexplicitlac, closes #1527

TREE:tree e38f3f80359bb82f949478436950961a3e109af0 ------
TIME:07/23/2018 23:21:24

COMMIT:Provide utils to dump component configuration as json string (#1552)



*Motivation*

It is useful to dump configuration during service components started.
Bookie server already did that.

*Changes*

- Move JsonUtil to bookkeeper-common module to make it available to other modules.
- Add toJson method to ComponentConfiguration


TREE:tree dc4f6821b278b5ffbfa2ea3b35de094a93724c5c ------
TIME:07/23/2018 22:15:32

COMMIT:ISSUE #1563: Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger

Descriptions of the changes in this PR:
### Motivation

In case of an empty ledger the bookie floods the disk with an useless message.

### Changes

Make that line "No ledger found while reading entry" to be logged at 'debug' level.

Master issue #1563

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1564 from eolivelli/fix/1563-logs, closes #1563 and squashes the following commits:

f66a9b8c0 [Enrico Olivelli] only skip logging for LastAddConfirmed Entry
83f6217a0 [Enrico Olivelli] Issue-1563 Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger

(cherry picked from commit 573e86b6c13a106d748c01778dcaeee9d45c39c4)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 02c93aeb2972682ce9e60b66512fcaf36ea6eb77 ------
TIME:07/23/2018 20:11:18

COMMIT:ISSUE #1563: Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger

Descriptions of the changes in this PR:
### Motivation

In case of an empty ledger the bookie floods the disk with an useless message.

### Changes

Make that line "No ledger found while reading entry" to be logged at 'debug' level.

Master issue #1563

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1564 from eolivelli/fix/1563-logs, closes #1563 and squashes the following commits:

f66a9b8c0 [Enrico Olivelli] only skip logging for LastAddConfirmed Entry
83f6217a0 [Enrico Olivelli] Issue-1563 Spammy logs on Bookie in ReadEntryProcessorV3 in case of tailing reader on empty ledger

TREE:tree dc4f6821b278b5ffbfa2ea3b35de094a93724c5c ------
TIME:07/23/2018 20:11:18

COMMIT:ISSUE #1544: [DLOG] ConcurrentModificationException with nonblocking logReader.readNext(true)

Descriptions of the changes in this PR:

*Motivation*

Fixes #1544. ConcurrentModificationException is thrown when trying to access a non-thread-safe hashmap from different threads.

*Changes*

Make sure accessing to this non-thread-safe hashmap is under synchronized block.

*Tests*

It is a bit tricky to reproduce this race condition in a unit test or an integration test. so not going to attempt adding any tests.

Master Issue: #1544

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1558 from sijie/issue_1544, closes #1544

(cherry picked from commit ec7fb62f025a3b03b42fd92b38bc836515310fad)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 02cc330b8643e693bb09f9844e28e3705984ee5b ------
TIME:07/23/2018 20:04:33

COMMIT:ISSUE #1544: [DLOG] ConcurrentModificationException with nonblocking logReader.readNext(true)

Descriptions of the changes in this PR:

*Motivation*

Fixes #1544. ConcurrentModificationException is thrown when trying to access a non-thread-safe hashmap from different threads.

*Changes*

Make sure accessing to this non-thread-safe hashmap is under synchronized block.

*Tests*

It is a bit tricky to reproduce this race condition in a unit test or an integration test. so not going to attempt adding any tests.

Master Issue: #1544

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1558 from sijie/issue_1544, closes #1544

TREE:tree a26e7f747eff406874381ed0035bcbc497d2821b ------
TIME:07/23/2018 20:04:33

COMMIT:ISSUE #1540: Bookie/BookieServer components shutdown will fail to end exit the BookieProcess

Descriptions of the changes in this PR:

 ### Motivation

Fixes the issue at #1540.

If Bookie/BookieServer components are shutdown internally because of any fatal errors
(ExitCode - INVALID_CONF, SERVER_EXCEPTION, ZK_EXPIRED, ZK_REG_FAIL, BOOKIE_EXCEPTION) then
it will go through shutdown method logic and shutdowns components internal to Bookie/BookieServer
but it will not succeed in bringing down the bookie process.

This is because in BookieServer.main / server.Main.doMain it would wait for the startComponent
future to complete
http://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/server/Main.java#L227 .
The startComponent future will be market complete only in runtime shutdownhook -
https://github.com/apache/bookkeeper/blob/master/bookkeeper-common/src/main/java/org/apache/bookkeeper/common/component/ComponentStarter.java#L66.

But the problem is nowhere in Bookie/BookieProcess shutdown we are calling System.exit() and hence
the runtime shutdownhook is not executed to mark the startComponent future to complete. Hence
Main.doMain will wait forever on this future though Bookie/BookieServer components are shutdown
because of known fatal errors.

 ### Regression

Issue #508 introduced this regression. Before this change, the main thread is blocking using `BookieServer#join()`.
When bookie is dead for any reason, the DeathWatchThread will kill the bookie and bookie server. so the main thread will quite.
However after #508 is introduced, the lifecycle management is disconnected from the bookie and bookie server. so when they are dead,
lifecycle management is unaware of the situation and the main thread doesn't quite.

 ### Changes

- Add `UncaughtExceptionHandler` to lifecycle components
- When a lifecycle component hits an error, it can use `UncaughtExceptionHandler` to notify lifecycle component stack to shutdown the whole stack

Master Issue: #1540

Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1543 from sijie/fix_lifcycle_components, closes #1540

(cherry picked from commit 50f29ed9425095e2115b7c18518b8e9a81c204e9)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5416bc03cfd26a521b41614657274510b4a96d1c ------
TIME:07/23/2018 20:02:36

COMMIT:ISSUE #1540: Bookie/BookieServer components shutdown will fail to end exit the BookieProcess

Descriptions of the changes in this PR:

 ### Motivation

Fixes the issue at #1540.

If Bookie/BookieServer components are shutdown internally because of any fatal errors
(ExitCode - INVALID_CONF, SERVER_EXCEPTION, ZK_EXPIRED, ZK_REG_FAIL, BOOKIE_EXCEPTION) then
it will go through shutdown method logic and shutdowns components internal to Bookie/BookieServer
but it will not succeed in bringing down the bookie process.

This is because in BookieServer.main / server.Main.doMain it would wait for the startComponent
future to complete
http://github.com/apache/bookkeeper/blob/master/bookkeeper-server/src/main/java/org/apache/bookkeeper/server/Main.java#L227 .
The startComponent future will be market complete only in runtime shutdownhook -
https://github.com/apache/bookkeeper/blob/master/bookkeeper-common/src/main/java/org/apache/bookkeeper/common/component/ComponentStarter.java#L66.

But the problem is nowhere in Bookie/BookieProcess shutdown we are calling System.exit() and hence
the runtime shutdownhook is not executed to mark the startComponent future to complete. Hence
Main.doMain will wait forever on this future though Bookie/BookieServer components are shutdown
because of known fatal errors.

 ### Regression

Issue #508 introduced this regression. Before this change, the main thread is blocking using `BookieServer#join()`.
When bookie is dead for any reason, the DeathWatchThread will kill the bookie and bookie server. so the main thread will quite.
However after #508 is introduced, the lifecycle management is disconnected from the bookie and bookie server. so when they are dead,
lifecycle management is unaware of the situation and the main thread doesn't quite.

 ### Changes

- Add `UncaughtExceptionHandler` to lifecycle components
- When a lifecycle component hits an error, it can use `UncaughtExceptionHandler` to notify lifecycle component stack to shutdown the whole stack

Master Issue: #1540

Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1543 from sijie/fix_lifcycle_components, closes #1540

TREE:tree db0efccb68301a63ee6926e1d2d6dedb3b6b0802 ------
TIME:07/23/2018 20:02:36

COMMIT:Updated site at revision 424204e

TREE:tree 86303f4cc181bd5f6c652321a404e08434297635 ------
TIME:07/23/2018 17:20:01

COMMIT:Allow concurrent write requests for same entry in V2 protocol

With the V2 protocol we have previously allowed a single client to
issue concurrent read requests for the same entry. We didn't allow the
same for write requests, as we always assume single writer. This
assumption isn't absolutely correct though. When opening a ledger, the
recovery process will rewrite entries after the LAC. To
PerChannelBookieClient these look no different to normal writes.

If a client tries to open a ledger multiple times concurrently,
currently some of the attempts can hang forever since there is no
support for concurrent writes.

This patch adds support for concurrent writes, so multiple concurrent
ledger open attempts will always complete (though some may fail for
unrelated reasons).

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1547 from ivankelly/conc-open

TREE:tree cf653384ec4e675c484fac3c51ee1ffc2c1daa28 ------
TIME:07/23/2018 16:39:46

COMMIT:[TABLE SERVICE] Improve bin/bookkeeper standalone to start all available service components

Descriptions of the changes in this PR:

*Motivation*

Currently `bin/bookkeeper standalone` simply starts local bookies. It is not very useful when using
standalone for local development for other service components.

*Changes*

- change `bin/bookkeeper standalone` to start a cluster of zookeeper, bookkeeper and table service containers
- add `bin/standalone.process` to start a cluster of zookeeper, bookkeeper and table service containers in one process
- change `bin/standalone` to support both process and docker-compose

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1553 from sijie/improve_bk_standalone

TREE:tree 5ba28faae23c9a50956e10557a7f70bad7919b52 ------
TIME:07/23/2018 16:36:20

COMMIT:ISSUE #1541: Fix ReadOnlyBookie constructor

Descriptions of the changes in this PR:

### Motivation

ReadOnlyBookie doesn't sets shutdownHandler to its statemanager.

There are couple of issues with how 'stateManager' is handled in ReadOnlyBookie,

- ReadOnlyBookie creates its own stateManager in its constructor but it does not sets shutdownHandler.
- Also, it is not correct to create stateManager instance in Bookie constructor and then again in ReadOnlyBookie constructor and override the instance created in super constructor.

### Changes

- move initializeStateManager logic to a method and override it in ReadOnlyBookie.

Master Issue: #1541

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1557 from reddycharan/readonlybookiefix, closes #1541

TREE:tree a2da10057b8183cf6a9f822b6afd935a755e850e ------
TIME:07/23/2018 16:35:02

COMMIT:[CI] Cleanup workspace before build

Descriptions of the changes in this PR:

*Motivation*

A lot of CI jobs failed due to gitlock file left in the workspace

*Changes*

Cleanup workspace before build

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1566 from sijie/cleanup_workspace

TREE:tree 3ab461c408ffdcd110fed181902750a73ac45053 ------
TIME:07/23/2018 07:53:38

COMMIT:Disable testConcurrentWriteAndReadCalls in EntryLogTest

Descriptions of the changes in this PR:

*Motivation*

Those tests passed locally. However they are taking very long time to complete and cause all CI jobs become very flaky.
In order to unblock all PRs, disable these tests in EntryLogTest.

*Changes*

Marked 4 tests in EntryLogTest as `FlakyTest`.

Relate Issue: #1516

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1561 from sijie/disable_some_entrylog_test

TREE:tree cf0e1104cf3e42424dcda3c97d30c85c84ccb42b ------
TIME:07/20/2018 13:51:48

COMMIT:Updated site at revision f4ef21f

TREE:tree ef202226ae17376619dd23b88caf911edf613da0 ------
TIME:07/20/2018 03:38:48

COMMIT:[TABLE SERVICE] Fix Journal replay issue on range deletion

Descriptions of the changes in this PR:

*Motivation*

We use `\000` as an indicator for null key in the protobuf delete operation.
However when we convert the protobuf delete request to an delete operation,
we didn't take `\000` into account.

*Changes*

- Fix ProtoDeleteOpImpl and ProtoRangeOpImpl to handle '\000'

(have a separated PR for an integration test to ensure this work)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1554 from sijie/fix_journal_replay

TREE:tree e62b8da7f804c37d25511230cd648d55fc9ef067 ------
TIME:07/18/2018 09:15:05

COMMIT:[TABLE SERVICE] Support getStreamById in root range store.

Descriptions of the changes in this PR:

*Motivation*

Stream readers need to fetch metadata information by quering its metadata using stream id.

*Changes*

Add support in root range to get stream properties using stream id.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1550 from sijie/add_get_stream_by_id

TREE:tree 76b45a9d4e5420c20fca2cc868f007ce3287e1ac ------
TIME:07/18/2018 09:14:19

COMMIT:ISSUE #1534: LedgerCache should be flushed

Descriptions of the changes in this PR:

### Motivation

EntryLogComparator.CompactionScannerFactory.flush just calls "ledgerStorage.updateEntriesLocations(offsets);" but not "ledgerStorage.flushEntriesLocationsIndex()".

Because of this, EntryLogCompactor.compact method would remove compacted entryLog without updated offsets/locations getting flushed/persisted/fsynced to LedgerCache (Index/FileInfo files). This could lead to data corruption/loss if Bookie is broughtdown/killed before those updated offsets/locations are flushed/persisted/fsynced.
### Changes

In EntryLogComparator, before removing compacted entryLog, LedgerCache (IndexInMemPageMgr and Index files) should be flushed, just like EntryLogger.

Master Issue: #1534

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1536 from reddycharan/compactfix, closes #1534

TREE:tree 64e05f39a11357e2936b764059d1574576aff714 ------
TIME:07/17/2018 09:36:30

COMMIT:ISSUE #1537: fix distributedlog incubator link

Descriptions of the changes in this PR:
### Motivation

In bookkeeper website, we are still using incubator locations for dlog references. we should change it to http://bookkeeper.apache.org/distributedlog

### Changes
change links from
`https://distributedlog.incubator.apache.org`
to
`https://bookkeeper.apache.org/distributedlog`

Master Issue: #1537

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1545 from jiazhai/issue_1537, closes #1537

TREE:tree 4ecff4ff631957c25076b6a302b83a2395348036 ------
TIME:07/17/2018 09:34:27

COMMIT:ISSUE #1542: Unable to run 'bookkeeper' shell script from /bookkeeper/bin folder

Descriptions of the changes in this PR:

*Bug*

```
Getting NoClassDefFoundError while trying to run 'bookkeeper' shell script from 'bin' folder. Issue seems to be related with classpath (cached classpath file - cached_classpath.txt)

~/Workspace/Community/bookkeeper/bin$ ./bookkeeper shell
JAVA_HOME not set, using java from PATH. (/usr/bin/java)
cat: bookkeeper-server/target/cached_classpath.txt: No such file or directory
Error: A JNI error has occurred, please check your installation and try again
Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/commons/configuration/Configuration
at java.lang.Class.getDeclaredMethods0(Native Method)
at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
at java.lang.Class.privateGetMethodRecursive(Class.java:3048)
at java.lang.Class.getMethod0(Class.java:3018)
at java.lang.Class.getMethod(Class.java:1784)
at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
Caused by: java.lang.ClassNotFoundException: org.apache.commons.configuration.Configuration
at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 7 more
```

*Motivation*

Fixes #1542

*Problem*

`bin/common.sh` uses a relative path for caching classpath and locating the pom file.

*Changes*

- change to use full path for cached classpath file and the module pom file
- add a test case to cover this problem

Master Issue: #1542

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1548 from sijie/fix_issue_1542, closes #1542

TREE:tree 65d262c432ff15f9a65dfa260b43a0577cca15f1 ------
TIME:07/17/2018 09:32:27

COMMIT:Updated site at revision 30175bf

TREE:tree ce6ee9765626433d1443657f17761be6113b296d ------
TIME:07/11/2018 18:43:38

COMMIT:Website - Add other usecases to the overview page

Add Twitter Manhattan and Herddb.org Distributed Databases usecases for BookKeeper as Write-Ahead-Log

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1539 from eolivelli/fix/websiteusacase

TREE:tree a9983c848aa2be8c3aeacef8f552834c46388318 ------
TIME:07/11/2018 07:32:14

COMMIT:[RELEASE] Bump bk version to 4.7.1 in docker file

Descriptions of the changes in this PR:

Bump bk version to 4.7.1 to build docker image for `4.7.1`

Author: Sijie Guo <sijieapache.org>

Reviewers: Jia Zhai <None>

This closes #1523 from sijie/bump_docker_version

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1529 from sijie/cherry-pick_docker_change

TREE:tree ede6633f19403a4ad6f4ff3f6d5ed07b0dfde588 ------
TIME:06/26/2018 23:23:43

COMMIT:Updated site at revision 28dee84

TREE:tree bf04d45a8708ce75d86540d211d36de7962ff7a6 ------
TIME:06/20/2018 17:58:38

COMMIT:LedgerManagerIteratorTest: avoid ledger collision

For the non-LHLM managers, the ledger space seems to be small enough to
allow collisions to occasionally cause a test failure.  Remember
created ledgers to avoid collisions.

(bug W-5104859)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1526 from athanatos/forupstream/wip-ledger-manager-iterator-test

TREE:tree d772f07536f141f23544dbdbf0de16f07f6f3f16 ------
TIME:06/20/2018 17:36:51

COMMIT:[RELEASE] Bump development version for branch-4.7 to 4.7.2-SNAPSHOT

Descriptions of the changes in this PR:

Signed-off-by: Sijie Guo <sijieapache.org>

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1521 from sijie/bump_development_version

TREE:tree c26dc1e241d551db80f07ffc182581cb3a676c82 ------
TIME:06/20/2018 17:34:58

COMMIT:Updated site at revision cf89f25

TREE:tree 84bbb84ffd70ea18c8daf09fe99c5e66ba3a5d0b ------
TIME:06/20/2018 03:50:14

COMMIT:Updated site at revision 10c5103

TREE:tree ac2af7f1f35ced2f8deb5c8740b63c7ae3663c39 ------
TIME:06/20/2018 03:29:51

COMMIT:[WEBSITE] update release guide to reflect current release process

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1525 from sijie/fix_release_guide

TREE:tree 6c872ff21b725ba21e5ec9d0fa174406e65be076 ------
TIME:06/20/2018 03:13:09

COMMIT:ISSUE #1495: Option to enforce minNumRacksPerWriteQuorum

Descriptions of the changes in this PR:

Provide an option to enforce the guarantee of minNumRacksPerWriteQuorum
if it is enabled. If it cann't find a bookie to enforce the guarantee
then the API in RackawareEnsemblePlacementPolicy should throw
BKNotEnoughBookiesException.

Master Issue: #1495

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1496 from reddycharan/enforceminracks, closes #1495

TREE:tree 664b5ae49a2f7d3451cfa835f638af80e03e7b28 ------
TIME:06/20/2018 03:08:26

COMMIT:Updated site at revision bdfe229

TREE:tree 24c9ce76f59211d08bf786ca9068111e6e796250 ------
TIME:06/19/2018 23:31:07

COMMIT:[RELEASE] update website with 4.7.1 documentation

Descriptions of the changes in this PR:

Signed-off-by: Sijie Guo <sijieapache.org>

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1522 from sijie/update_website

TREE:tree b3a553e6acaa47e375f77a8186408d98c9921bb9 ------
TIME:06/19/2018 23:10:14

COMMIT:Updated site at revision 7204d37

TREE:tree 1566cac8bbbef0cdbfd2f401cf9c1f818dbd1aae ------
TIME:06/19/2018 20:35:19

COMMIT:ISSUE #705: add site/scripts/release_minor.sh for minor releases

Descriptions of the changes in this PR:

*Motivation*

Currently `site/scripts/release.sh` only supports major releases.

*Changes*

Added a similar `release_minor.sh` to support minor releases.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1524 from sijie/provide_script_release_minor, closes #705

TREE:tree 0187a065e0ee932cd4fef715027caae8c41669ef ------
TIME:06/19/2018 20:15:53

COMMIT:[RELEASE] Release Notes for Release 4.7.1

Descriptions of the changes in this PR:

Release Notes for release 4.7.1

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1518 from sijie/release_notes_471

TREE:tree 9795cb1a860e546f38ce0ce1b5217d80382ba46b ------
TIME:06/19/2018 20:13:37

COMMIT:[RELEASE] Bump bk version to 4.7.1 in docker file

Descriptions of the changes in this PR:

Bump bk version to 4.7.1 to build docker image for `4.7.1`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1523 from sijie/bump_docker_version

TREE:tree 1cb7f7aa2ea7dc811c61143084b35fdf0848e0ea ------
TIME:06/19/2018 20:10:59

COMMIT:Fix typo in bk_server.conf

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1520 from ivankelly/ivankelly-patch-1

TREE:tree cb9dcd3f201b6e81ca46ebf81bf01a7c9d95c3c6 ------
TIME:06/18/2018 20:16:15

COMMIT:Updated site at revision f7dce11

TREE:tree 3bc01a8535a42731c7a7ae77c384c469b2b62c47 ------
TIME:06/18/2018 09:23:56

COMMIT:BP-14 force() API - client side implementation

- Introduce the client side force() API
- Implementation on the client side wire protocol for FORCE_LEDGER RPC
- Disable ensemble changes for DEFERRED_SYNC writers
- Prevent v2 client from using force() API.

The force() API enables the client (usually with DEFERRED_SYNC write flags) to require a point of synchronization with all the bookies in the ensemble, to have guarantees about durability of previously written entries (and ackknowledgerd), this way LastAddConfirmed is able to advance.

For DEFERRED_SYNC writers LastAddConfirmed will advance only using this API

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1436 from eolivelli/bp14-force-client-api

TREE:tree 25f7300f1655ef0758da1d585defffae050bb8c8 ------
TIME:06/18/2018 09:05:11

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.7.1-rc0

TREE:tree 25dec3a177f4d15fbd44f69121fbf815b4aadac0 ------
TIME:06/14/2018 20:40:52

COMMIT:[maven-release-plugin] prepare release v4.7.1-rc0

TREE:tree 93ab4d4ea0338757c0176fb450f39595907e6b1c ------
TIME:06/14/2018 20:40:16

COMMIT:Update release procedure to use candidate tags for voting

Descriptions of the changes in this PR:

*Motivation*

We used final release tag during release voting procedure. However there might be changes
happen between different candidate votes. So we ended up retagging the release tag for
different votes.

*Solution*

Use a candidate tag for voting. After a release is approved, create the final release tag.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1451 from sijie/update_release_guid

TREE:tree bcf3e18e70597497014f333c73b463960d48974c ------
TIME:05/30/2018 09:56:40

COMMIT:ISSUE #1246: Scripting the whole release procedure

Descriptions of the changes in this PR:

*Motivation*

Releasing bookkeeper becomes tricky after introducing `circe-checksum`, since we need to ensure linux jni library is shipped as part of `circe-checksum`.

*Solution*

- switch to use docker for generating bookkeeper release
- scripting the whole release procedure as many as possible

Master Issue: #1246

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1329 from sijie/release_scripts, closes #1246

TREE:tree 34758f3516cdcd06ab30e0e2e328e9dbf14cded5 ------
TIME:04/19/2018 09:09:12

COMMIT:Move TimedOutTestsListener from dlog to bookkeeper-common

Descriptions of the changes in this PR:

This PR is to debug CI problems observed at #1516

### Motivation

dlog uses a `TimedOutTestsListener` to dump the jvm stack when a junit test timed out.
move this class to bookkeeper-common and built with `test-jar`, so it can be used across the project.

### Changes

relocate `TimedOutTestsListener` and its related classes from distributedlog-common to bookkeeper-common.

Related Issue: #1516

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1517 from sijie/add_test_timedout_listener

TREE:tree cc3f23598a3f179793f35d4c071894927e9ae10c ------
TIME:06/14/2018 16:57:33

COMMIT:Updated site at revision 6476fc3

TREE:tree 9a25b479bf187f67c99d9fbf788922783dac3f8e ------
TIME:06/14/2018 11:31:41

COMMIT:ISSUE #1476: LedgerEntry is recycled twice at ReadLastConfirmedAndEntryOp

Descriptions of the changes in this PR:

The issue #1476 is caused by peculative reads with object recycling, same request object will be added to the CompletionObjects multiple times with different txnid.  In fact the logic of process the request already take this into account, only on place inside `ReadLastConfirmedAndEntryOp.requestComplete` forget to check requestComplete before calling `submitCallback` which in turn call request.close.

### Motivation

to fix #1476

### Changes

check `requestComplete` before `submitCallback` in `ReadLastConfirmedAndEntryOp.requestComplete`

Master Issue: #1476

Author: Sijie Guo <sijie@apache.org>
Author: infodog <infodog@hotmail.com>
Author: zhengxiangyang <zxy@xinshi.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1509 from infodog/issue1476, closes #1476

(cherry picked from commit 6476fc323fffd328ed9620d9aa39c4c232f8d2be)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 475b6ba6b08abb3f93f20ec4557f52f751b57063 ------
TIME:06/14/2018 11:13:22

COMMIT:ISSUE #1476: LedgerEntry is recycled twice at ReadLastConfirmedAndEntryOp

Descriptions of the changes in this PR:

The issue #1476 is caused by peculative reads with object recycling, same request object will be added to the CompletionObjects multiple times with different txnid.  In fact the logic of process the request already take this into account, only on place inside `ReadLastConfirmedAndEntryOp.requestComplete` forget to check requestComplete before calling `submitCallback` which in turn call request.close.

### Motivation

to fix #1476

### Changes

check `requestComplete` before `submitCallback` in `ReadLastConfirmedAndEntryOp.requestComplete`

Master Issue: #1476

Author: Sijie Guo <sijie@apache.org>
Author: infodog <infodog@hotmail.com>
Author: zhengxiangyang <zxy@xinshi.net>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1509 from infodog/issue1476, closes #1476

TREE:tree d8fae52b5f1856bcfc6759ed3939f05e4d38f119 ------
TIME:06/14/2018 11:13:22

COMMIT:Updated site at revision 134a6c2

TREE:tree 0cbb7ddcd87af5b03db5c61629cf7f4b01cb43ae ------
TIME:06/14/2018 03:11:17

COMMIT:Issue #1489: Better Prevent Read Outliers during short-term Bookie Slow-Down

### Motivation

Bookies can temporarily be slow for a large number of reasons, often for just a brief time of few milliseconds to seconds such as during Java Garbage Collection or EntryLog compaction. For writes, latencies of individual bookies are masked by acknowledging the client after a quorum of bookies have replied. However for reads, we don't have any equivalent feature to mask short-term latencies of individual bookies yet (in case of SequenceReadRequests). This PR implements such a feature by reordering reads to prefer bookies with a high probability of being fast over bookies that are potentially slow.

### Changes
This change implements a configurable reordering of read requests in Bokkeeper client based on the number of pending requests to each bookie that could service the request. The intention is to mask the latency of one bookie by directing a read request to another bookie that could potentially service the request faster. This should help prevent read time outliers due to bookies that temporarily are responsing slow, for example due to Java garbage collection, compaction, or any other kind of hickup. Unlike the implementation for Issue #709, this algorithm quickly reacts to both an or decrease increase in queue length of a bookie relative to others, and allows to redirect requests long before they would hit the speculativeReadTimeout. Once the problem is resolved (e.g. Java GC finished), it will quickly direct requests to the previously "slow" bookie as its queue length decreases.

Reordering of reads is based on a threshold of relative queue length to other bookies. Setting the threshold very low will more frequently reorder the read set and potentially result in better latency, but will also reduce data affinity of reads. Reads send to other than the preferred bookie have a low chance to be served from file system cache on that bookie, and will likely result in a physical read. Small thresholds therefore shuffle read requests more among bookies and may lead to reduced file system cache reach and increased physical reads on disks. A larger timeout will maintain data affinity and avoid above problems, but only kick in once a bookie has built-up a considerable queue of requests. It therefore masks only slightly larger outliers, and leads to overall better efficiency.

Master Issue: #1489

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1504 from nicmichael/ReadReordering, closes #1489

TREE:tree e22cfac8749bcddae6e9b3fa13008109ad118f03 ------
TIME:06/14/2018 02:41:02

COMMIT:Allow to configure read-only mode in ZooKeeperClient

Underlying `Zookeeper` instance has an option to specify the client is fine to remain connected when the ZK quorum is lost, just in read-only mode.

We should expose the "allow read-only mode" option in `ZooKeeperClient`.

One example of use case for this flag is when connecting to a ZK ensemble that is just used for configuration/metadata store, in which no ephemeral nodes are used. It's therefore better to keep the connection with ZK and be able to keep reading (possibly stale) data from ZK rather than no read at all. Concrete use case is for ZK session for Pulsar global ZK ensemble, where we read configuration data and we don't really need to have a valid session when brokers are trying to read.

Author: Sijie Guo <sijie@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1344 from merlimat/zk-client-read-only

(cherry picked from commit 9f55f78815c80d6b335d8e1cf6fd91196aeb8cff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 64c2f7b72ac4b1b99e5ff4bb47f272a46f7a7715 ------
TIME:06/14/2018 02:35:34

COMMIT:Allow to configure read-only mode in ZooKeeperClient

Underlying `Zookeeper` instance has an option to specify the client is fine to remain connected when the ZK quorum is lost, just in read-only mode.

We should expose the "allow read-only mode" option in `ZooKeeperClient`.

One example of use case for this flag is when connecting to a ZK ensemble that is just used for configuration/metadata store, in which no ephemeral nodes are used. It's therefore better to keep the connection with ZK and be able to keep reading (possibly stale) data from ZK rather than no read at all. Concrete use case is for ZK session for Pulsar global ZK ensemble, where we read configuration data and we don't really need to have a valid session when brokers are trying to read.

Author: Sijie Guo <sijie@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1344 from merlimat/zk-client-read-only

TREE:tree 69feddddffd4956e9a1de90e1a6d546430bc9bbc ------
TIME:06/14/2018 02:35:34

COMMIT:Issue #1511: Upgrade nokogiri to version 1.8.2

Version <1.8.2 contain a security vulnerability.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1515 from ivankelly/nokogiri, closes #1511

TREE:tree a151cb12ab5e968640a88632b2aac5c6153aba27 ------
TIME:06/13/2018 10:42:46

COMMIT:ISSUE #1490: BookieJournalForceTest is flaky

Descriptions of the changes in this PR:

### Motivation

The test cases in BookieJournalForceTest check if the forceWriteQueue is empty after everything is flushed.
However if `adaptiveGroupWrites` is enabled, the forceWrite thread will insert a marker entry into force write queue,
this will fail the forceWriteQueue length checking.

### Changes

Disable `adaptiveGroupWrites` in BookieJournalForceTest

Master Issue: #1490

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1512 from sijie/fix_journalforcetest, closes #1490

TREE:tree d27a8bfad918528abd1744cab25bf50fda4d436a ------
TIME:06/13/2018 04:29:15

COMMIT:[TABLE SERVICE] replaying TxnRequest is not implemented

*Motivation*

when enabling table service for pulsar at apache/incubator-pulsar#1922, I noticed that replaying TxnRequest is missed somehow.

*Solution*

This PR implements the replaying TxnRequest logic in the command process.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1505 from sijie/replay_txn_request

(cherry picked from commit b65fa438d6212eb4a89a848b4f2642ba2ad573da)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 7a3af5c60353b902b68a77fbafbc98e4d3dee970 ------
TIME:06/12/2018 06:48:02

COMMIT:[TABLE SERVICE] replaying TxnRequest is not implemented

*Motivation*

when enabling table service for pulsar at apache/incubator-pulsar#1922, I noticed that replaying TxnRequest is missed somehow.

*Solution*

This PR implements the replaying TxnRequest logic in the command process.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1505 from sijie/replay_txn_request

TREE:tree 65dc960a898f6bbbab3bb02618c25c8391b59a6f ------
TIME:06/12/2018 06:48:02

COMMIT:[TABLE SERVICE] Fix StringUtf8Coder and add VarIntCoder

Descriptions of the changes in this PR:

*Motivation*

The getSerializeLen() returned by StringUtf8Coder is different from the serialized buffer size.

*Changes*

- Fix StringUtf8Coder
- Add tests to coders
- Add a VarIntCoder

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1507 from sijie/fix_string_coder

(cherry picked from commit 42f6ea63ce6cd00cc699ff54272437aebbb985ca)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree c585e8b49431396c162f2c156cc77ff068cfabbb ------
TIME:06/11/2018 19:41:31

COMMIT:[TABLE SERVICE] Fix StringUtf8Coder and add VarIntCoder

Descriptions of the changes in this PR:

*Motivation*

The getSerializeLen() returned by StringUtf8Coder is different from the serialized buffer size.

*Changes*

- Fix StringUtf8Coder
- Add tests to coders
- Add a VarIntCoder

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1507 from sijie/fix_string_coder

TREE:tree 4f5ad982adc4349ed1b803e79da40ec2e854087c ------
TIME:06/11/2018 19:41:31

COMMIT:Issue #1500: PendingReadOp.logErrorAndReattemptRead logs errors with debug level, some of them useful for troubleshooting at info/warn level

(bug W-3976846)

Descriptions of the changes in this PR:

Changed log level of one line from debug to info

### Motivation

Useful for troubleshooting of prod issue, don't want to have debug log enabled in prod all the time.

### Changes

Changed log level of one line from debug to info

Master Issue: #1500

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1501 from dlg99/fix/pendingreadop-log, closes #1500

TREE:tree 65cef2713f7dd9a56d15fe17d6ab9bb14c80d07e ------
TIME:06/11/2018 19:08:03

COMMIT:[TABLE SERVICE] Fix ZkClusterMetadataStoreTest

Descriptions of the changes in this PR:

### Motivation

initialize signature was changed. but the test was not changed.

### Changes

Fix the test case.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1506 from sijie/fix_zk_cluster_initialize

TREE:tree bb0ae91e29c7721d7fabb7be9d8ccc28c452d114 ------
TIME:06/10/2018 21:13:50

COMMIT:Issue #1498: Log messages/exception text in DiskChecker shows 'used <threshold' in 'used > threshold' situations

(bug W-3812505)

Descriptions of the changes in this PR:

Fixed log/exception text.

### Motivation

Reduced confusion when debugging an issue/going through the logs.

### Changes

replaced '<' with '>'

Master Issue: #1498

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1499 from dlg99/fix/diskchecker-log, closes #1498

TREE:tree 487b51d72235fc42fc4196d1dd641cc005512d01 ------
TIME:06/08/2018 04:20:11

COMMIT:Updated site at revision 5b8614f

TREE:tree 18786f48eaddfea3584f3958326f2f0f61f8d877 ------
TIME:06/08/2018 04:00:59

COMMIT:[DEVTOOLS] Use ASF Jenkins API properly

Descriptions of the changes in this PR:

According to https://cwiki.apache.org/confluence/display/INFRA/Using+the+ASF+Jenkins+API,
we need to include 'tree' or 'depth' when using ASF jenkins API.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1503 from sijie/access_jenkins_apis_should_include_depth

TREE:tree 931bccabbbbf0318bc1042a56c8066d55943fc2a ------
TIME:06/08/2018 03:45:30

COMMIT:[WEBSITE] Include trademark attribution in footer

Descriptions of the changes in this PR:

According to http://www.apache.org/foundation/marks/pmcs#attributions, include trademark attribution in the footer.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1502 from sijie/update_trademarks

TREE:tree 7507c1070151c0e400c2de35dc07c5909732fa66 ------
TIME:06/08/2018 03:43:07

COMMIT:Updated site at revision 2b66cb1

TREE:tree 5533cced1bbdf341842ef6d2512b97db1bb92464 ------
TIME:06/07/2018 08:36:17

COMMIT:[BOOKIE] [DBLEDGERSTORAGE] fix illegal reference count exception on filling read cache

Descriptions of the changes in this PR:

*Problem*

ByteBuf is released at a finally block. DbLedgerStorage doesn't have to release it on return. If it does so, that will cause
double-release and it will throw IllegalReferenceCountException.

*Solution*

Remove `ByteBuf.release` at return.

Related Issue: #1487

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1488 from sijie/fix_double_release_on_db_ledgerstorage

(cherry picked from commit 4764c7637ecdcadfaddac74244d5c78449589c07)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 746eb5bffa22a5cb4f7604674ab5a9adcd413c5e ------
TIME:06/07/2018 08:20:38

COMMIT:[BOOKIE] [DBLEDGERSTORAGE] fix illegal reference count exception on filling read cache

Descriptions of the changes in this PR:

*Problem*

ByteBuf is released at a finally block. DbLedgerStorage doesn't have to release it on return. If it does so, that will cause
double-release and it will throw IllegalReferenceCountException.

*Solution*

Remove `ByteBuf.release` at return.

Related Issue: #1487

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1488 from sijie/fix_double_release_on_db_ledgerstorage

TREE:tree 38018b3ea07b7e3bbf0155f6955130012f5cd102 ------
TIME:06/07/2018 08:20:38

COMMIT:[CI] Allow selecting a list of precommit checks to skip in the pull request description.

Descriptions of the changes in this PR:

*Motivation*

precommit checks are good. however sometime it takes a long time to wait for precommit checks to complete,
for trivial changes (e.g. documentation, ci jenkins files, scripts, proposals).

*Changes*

This PR updates the PULL_REQUEST_TEMPLATE.md to provide a list of precommit checks to be allowed to skip.
So people can choose skip some precommit checks when filing a pull request.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1494 from sijie/skip_tests_is_too_general

TREE:tree e2bdc83b83b2cac03babdc64650d48c4faf0400b ------
TIME:06/07/2018 08:17:00

COMMIT:[TABLE SERVICE] Move table service cli to bookkeeper-tools

Descriptions of the changes in this PR:

*Motivation*

This PR follows #1478  to move table service cli to bookkeeper-tools.
So different service components are now available in one cli tool.

*Changes*

- move stream/cli module to tools/stream module
- organize the table service commands as groups:

* cluster
* namespace
* table
* tables

*Output*

Example output:

```
$ bin/bkctl
bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters
    ledger          Commands on interacting with ledgers
    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

    help            Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1485 from sijie/stream_cli

TREE:tree 8d0fdc82d638a0abeb66e425dd48a9de4caa70be ------
TIME:06/07/2018 08:10:18

COMMIT:ISSUE #1491: fix GLIBC_2.14 dep issue for protoc-3.5.1-linux-x86_64

Descriptions of the changes in this PR:

I tried to build the bookkeeper branch-4.7 on RHEL6 and ran into:

```
 /lib64/libc.so.6: version `GLIBC_2.14' not found (required by bookkeeper-proto/target/protoc-plugins/protoc-3.5.1-linux-x86_64.exe)
```
This is similar to google/protobuf#4109 and it's related to google/protobuf#4138

We can take advantage of pulsar's fix apache/incubator-pulsar#1914 here

Master Issue:  https://github.com/apache/bookkeeper/issues/1491

Author: Ethan Li <ethanopensource@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1492 from Ethanlm/ISSUE-1491, closes #1491

TREE:tree 56eb47acb28ec8bec075fc3a47d7797ddbd62cec ------
TIME:06/07/2018 08:06:23

COMMIT:ISSUE #1491: fix GLIBC_2.14 dep issue for protoc-3.5.1-linux-x86_64

Descriptions of the changes in this PR:

I tried to build the bookkeeper branch-4.7 on RHEL6 and ran into:

```
 /lib64/libc.so.6: version `GLIBC_2.14' not found (required by bookkeeper-proto/target/protoc-plugins/protoc-3.5.1-linux-x86_64.exe)
```
This is similar to google/protobuf#4109 and it's related to google/protobuf#4138

We can take advantage of pulsar's fix apache/incubator-pulsar#1914 here

Master Issue:  https://github.com/apache/bookkeeper/issues/1491

Author: Ethan Li <ethanopensource@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1492 from Ethanlm/ISSUE-1491, closes #1491

TREE:tree d484435a21dbf65e7f035d8dc7abdd5b486df028 ------
TIME:06/07/2018 08:06:23

COMMIT:RegionAwareEnsemblePlacementPolicy class should use super class's minNumRacksPerWriteQuorum variable

Descriptions of the changes in this PR:

RegionAwareEnsemblePlacementPolicy class should use minNumRacksPerWriteQuorum
variable which is declared in its super class - RackawareEnsemblePlacementPolicyImpl,
since it is related to its super class.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1484 from reddycharan/fixregpp

TREE:tree e9d29a438dc95562194e74efa272b2c073583dce ------
TIME:06/07/2018 08:05:07

COMMIT:[TABLE SERVICE] dlog configuration settings are not propagated

Descriptions of the changes in this PR:

*Motivation*

When stream storage server starts the bookie watcher service, it waits for at least `ensembleSize` bookies
available before starting other components. However the dlog settings are not propagated correctly. so when
using this component in an environment that only has 1 bookie (e.g. pulsar standalone). Startup will be hanging
on waiting 3 bookies.

*Solution*

load the dlog settings from the base configuration.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1486 from sijie/fix_loading_dlog_configuration

(cherry picked from commit 3a663e491e92c4f329dfde091f937f41dbb2cace)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 3d39f79c6c518f89aa26ef0804668bd41373847d ------
TIME:06/07/2018 08:03:48

COMMIT:[TABLE SERVICE] dlog configuration settings are not propagated

Descriptions of the changes in this PR:

*Motivation*

When stream storage server starts the bookie watcher service, it waits for at least `ensembleSize` bookies
available before starting other components. However the dlog settings are not propagated correctly. so when
using this component in an environment that only has 1 bookie (e.g. pulsar standalone). Startup will be hanging
on waiting 3 bookies.

*Solution*

load the dlog settings from the base configuration.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1486 from sijie/fix_loading_dlog_configuration

TREE:tree c8ad84fd654835793e6f1028a9e7089eabc9028c ------
TIME:06/07/2018 08:03:48

COMMIT:[TABLE SERVICE] Improve logging message on initializing table range stores.

Descriptions of the changes in this PR:

*Motivation*

Exceptions might be throwing on starting/stopping table ranges. It would be good to have logging messages about the state transition for debugging purpose.

*Build*

Only touch following stream modules, skip bookkeeper-server related tests:

[skip tests]

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1493 from sijie/improve_logging

(cherry picked from commit 798e6b8f3f26d55eef7ee50e8a4abe12db477e57)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 85dbd9f619fddba83be6d8d47598098ebea60a45 ------
TIME:06/07/2018 08:02:52

COMMIT:[TABLE SERVICE] Improve logging message on initializing table range stores.

Descriptions of the changes in this PR:

*Motivation*

Exceptions might be throwing on starting/stopping table ranges. It would be good to have logging messages about the state transition for debugging purpose.

*Build*

Only touch following stream modules, skip bookkeeper-server related tests:

[skip tests]

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1493 from sijie/improve_logging

TREE:tree 02ce2352ad81880843f5b340ff41d9900a5fd9d9 ------
TIME:06/07/2018 08:02:52

COMMIT:Improve merge script on checking the statuses of github checks (missing commit)

    Descriptions of the changes in this PR:

    *Motivation*

    Sometimes Jenkins CI job might already succeed, however they failed on publishing the build status
    to Github due to timeout (one example is attached below). In this case, we don't need to rerun the jenkins check again.

    ```
    Setting status of 55c1d54f3293e5166c59f238afd3fb3d98c7eb67 to SUCCESS with url https://builds.apache.org/job/bookkeeper_precommit_client_tests/21/ and message: 'SUCCESS
     '
    Using context: Jenkins: Client Tests
    Could not update commit status of the Pull Request on GitHub.
    org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: https://api.github.com/repos/apache/bookkeeper/statuses/55c1d54f3293e5166c59f238afd3fb3d98c7eb67
            at org.kohsuke.github.Requester.parse(Requester.java:633)
            at org.kohsuke.github.Requester.parse(Requester.java:631)
            at org.kohsuke.github.Requester.parse(Requester.java:631)
            at org.kohsuke.github.Requester.parse(Requester.java:594)
            at org.kohsuke.github.Requester._to(Requester.java:272)
            at org.kohsuke.github.Requester.to(Requester.java:234)
            at org.kohsuke.github.GHRepository.createCommitStatus(GHRepository.java:1075)
            at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.createCommitStatus(GhprbSimpleStatus.java:281)
            at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.onBuildComplete(GhprbSimpleStatus.java:239)
            at org.jenkinsci.plugins.ghprb.GhprbBuilds.onCompleted(GhprbBuilds.java:205)
            at org.jenkinsci.plugins.ghprb.GhprbBuildListener.onCompleted(GhprbBuildListener.java:28)
            at hudson.model.listeners.RunListener.fireCompleted(RunListener.java:211)
            at hudson.model.Run.execute(Run.java:1769)
            at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
            at hudson.model.ResourceController.execute(ResourceController.java:97)
            at hudson.model.Executor.run(Executor.java:429)
    Caused by: java.net.SocketTimeoutException: Read timed out
            at sun.reflect.GeneratedConstructorAccessor10056.newInstance(Unknown Source)
            at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
            at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
            at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1944)
            at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1939)
            at java.security.AccessController.doPrivileged(Native Method)
            at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1938)
            at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1508)
            at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
            at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
            at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)
            at org.kohsuke.github.Requester.parse(Requester.java:602)
            ... 15 more
    Caused by: java.net.SocketTimeoutException: Read timed out
            at java.net.SocketInputStream.socketRead0(Native Method)
            at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
            at java.net.SocketInputStream.read(SocketInputStream.java:171)
            at java.net.SocketInputStream.read(SocketInputStream.java:141)
            at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
            at sun.security.ssl.InputRecord.read(InputRecord.java:503)
            at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)
            at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:940)
            at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
            at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
            at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
            at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
            at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
            at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
            at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
            at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
            at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
            at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)
            at org.kohsuke.github.Requester.parse(Requester.java:602)
            ... 13 more
    Finished: SUCCESS
    ```

    *Changes*

    Improve the merge script to check jenkins status before treating the checks as failed.

    Author: Sijie Guo <sijie@apache.org>

    Reviewers: Enrico Olivelli <eolivelli@gmail.com>

    This closes #1497 from sijie/improve_merge_script

TREE:tree 4909bc3ea567495b371b3b1b58cb698f0d40ba90 ------
TIME:06/07/2018 07:40:33

COMMIT:Improve merge script on checking the statuses of github checks

Descriptions of the changes in this PR:

*Motivation*

Sometimes Jenkins CI job might already succeed, however they failed on publishing the build status
to Github due to timeout (one example is attached below). In this case, we don't need to rerun the jenkins check again.

```
Setting status of 55c1d54f3293e5166c59f238afd3fb3d98c7eb67 to SUCCESS with url https://builds.apache.org/job/bookkeeper_precommit_client_tests/21/ and message: 'SUCCESS
 '
Using context: Jenkins: Client Tests
Could not update commit status of the Pull Request on GitHub.
org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: https://api.github.com/repos/apache/bookkeeper/statuses/55c1d54f3293e5166c59f238afd3fb3d98c7eb67
	at org.kohsuke.github.Requester.parse(Requester.java:633)
	at org.kohsuke.github.Requester.parse(Requester.java:631)
	at org.kohsuke.github.Requester.parse(Requester.java:631)
	at org.kohsuke.github.Requester.parse(Requester.java:594)
	at org.kohsuke.github.Requester._to(Requester.java:272)
	at org.kohsuke.github.Requester.to(Requester.java:234)
	at org.kohsuke.github.GHRepository.createCommitStatus(GHRepository.java:1075)
	at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.createCommitStatus(GhprbSimpleStatus.java:281)
	at org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus.onBuildComplete(GhprbSimpleStatus.java:239)
	at org.jenkinsci.plugins.ghprb.GhprbBuilds.onCompleted(GhprbBuilds.java:205)
	at org.jenkinsci.plugins.ghprb.GhprbBuildListener.onCompleted(GhprbBuildListener.java:28)
	at hudson.model.listeners.RunListener.fireCompleted(RunListener.java:211)
	at hudson.model.Run.execute(Run.java:1769)
	at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
	at hudson.model.ResourceController.execute(ResourceController.java:97)
	at hudson.model.Executor.run(Executor.java:429)
Caused by: java.net.SocketTimeoutException: Read timed out
	at sun.reflect.GeneratedConstructorAccessor10056.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1944)
	at sun.net.www.protocol.http.HttpURLConnection$10.run(HttpURLConnection.java:1939)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.protocol.http.HttpURLConnection.getChainedException(HttpURLConnection.java:1938)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1508)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)
	at org.kohsuke.github.Requester.parse(Requester.java:602)
	... 15 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
	at sun.security.ssl.InputRecord.read(InputRecord.java:503)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:983)
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:940)
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:347)
	at org.kohsuke.github.Requester.parse(Requester.java:602)
	... 13 more
Finished: SUCCESS
```

*Changes*

Improve the merge script to check jenkins status before treating the checks as failed.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1497 from sijie/improve_merge_script

TREE:tree 94bf0fb33879dd3eed27cb6710761967762be2ca ------
TIME:06/07/2018 07:32:39

COMMIT:Remove phrase trigger on post commit jobs

Descriptions of the changes in this PR:

*Problem*

After enabling phrase trigger on precommit jobs to allow rerun individual precommit jobs, "retest this please" will run all the jobs including postcommit jobs.

*Solution*

Running postcommit jobs on pull requests doesn't make sense. This PR removes all the phrase trigger from postcommit jobs.

Additionally, fixes typos and also increases the timeout for integration tests.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1482 from sijie/fix_typoes

TREE:tree 8e46076e4b7c99cee1c1b402eaf44c03ede47519 ------
TIME:06/06/2018 08:57:38

COMMIT:Fix checkstyle in EntryLogTest

Descriptions of the changes in this PR:

*Problem*

PR #1465 introduces a checkstyle error, but somehow it wasn't caught by CI jobs.

*Solution*

Fix the checkstyle error and bring master back to normal.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1483 from sijie/fix_checkstyle_complains_entrylogtest

TREE:tree af85d29c9a8cbcf45d6a5721979072d73dff3867 ------
TIME:06/06/2018 08:55:34

COMMIT:Upgrade RocksDB to 5.13.1

Upgrade RocksDB version to include a fix for empty SSTs written by flushing with deleteRange() operations that cause assertion failures on DB open.

Description can be found at : facebook/rocksdb#2717

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1466 from merlimat/upgrade-rocksdb

(cherry picked from commit 7bbd3dee4e060046fcdf06294bb9d18bb22b41b9)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 14267d77ed5f1099c93f16d4ce14efc4279255a2 ------
TIME:06/06/2018 08:53:27

COMMIT:Upgrade RocksDB to 5.13.1

Upgrade RocksDB version to include a fix for empty SSTs written by flushing with deleteRange() operations that cause assertion failures on DB open.

Description can be found at : facebook/rocksdb#2717

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1466 from merlimat/upgrade-rocksdb

TREE:tree 16ed0f11859df007713fc806776d44ccfd5c0c39 ------
TIME:06/06/2018 08:53:27

COMMIT:Updated site at revision bfa4f9d

TREE:tree 23433dbfa3914cf59ca7df1ccd8d60d2ae6f508f ------
TIME:06/06/2018 00:15:26

COMMIT:Metrics for EntryLogManagerForEntryLogPerLedger.

Descriptions of the changes in this PR:

Add counters/statsloggers for EntryLogManagerForEntryLogPerLedger.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1460 from reddycharan/elmmetrics

TREE:tree 637697292a00791816dd70b34c087e5ee7fa6ed9 ------
TIME:06/05/2018 23:45:33

COMMIT:Update the new bookkeeper tools to use the new framework

Descriptions of the changes in this PR:

*Motivation*

#1471  introduces a new tools framework based on jcommander. This PR is changing the new bookkeeper-tools to leverage that framework.

*Solution*

- Changed the related classes to use the new framework.
- Rename `BookKeeperCLI` to `BKCtl` and `bookkeeper-cli` to `bkctl`
- Use service loader to load command groups to allow better extensibility
- Rename command group `cluster` to `bookies`

*Results*

Example output of this change:

```
$ bin/bkctl
bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie      Commands on operating a single bookie
    bookies     Commands on operating a cluster of bookies
    ledger      Commands on interacting with ledgers

    help        Display help information about it

Flags:

    -c, --conf
        Configuration file

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

*sub command*
```
$ bin/bkctl help bookie
Commands on operating a single bookie

Usage:  bkctl bookie [command] [command options]

Commands:

    lastmark        Print last log marker

    help            Display help information about it

Use "bkctl bookie [command] --help" or "bkctl bookie help [command]" for more
information about a command
```

*sub-sub command*

```
$ bin/bkctl bookie help lastmark
Print last log marker

Usage:  bkctl bookie lastmark [flags]

Flags:

    -h, --help
        Display help information
```

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1478 from sijie/bkctl_tools

TREE:tree ef56d1a50f2de922d754282baa2fabc4ef2d8024 ------
TIME:06/05/2018 23:39:52

COMMIT:Append ledgersMap when entrylog is removed from cache.

Descriptions of the changes in this PR:

In EntryLogManagerForEntryLogPerLedger when ledger-entrylog
entry is removed from cache, it will be moved to
rotatedEntryLogs list. Before moving it to rotatedEntryLogs,
ledgersMap should be appended.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1465 from reddycharan/fixappendledgersmap

TREE:tree 4e04b04d7c0b5b47b0e6a703a199b7eb18472a44 ------
TIME:06/05/2018 22:04:38

COMMIT:Improve precommit build time

Descriptions of the changes in this PR:

*Motivation*

The build/test time of `bookkeeper-server` is almost close to or more than 1 hr.

*Solution*

Split the precommit jobs into multiple jobs:

- *PR Validation* : run `apache-rat:check`, `checkstyle:check`, to ensure codestyle and license headers
- *Build (Java x)* : run `package` `spotbugs:check`, to ensure PR can be compiled and tested on different java environments. No spotbugs errors. `bookkeeper-server` tests are skipped.
- *Integration Tests* : run integration tests with docker environment
- *bookkeeper-server Tests* : tests `bookkeeper-server` on certain packages:
  - bookie: `org.apache.bookkeeper.bookie`
  - client: `org.apache.bookkeeper.client`
  - replication: `org.apache.bookkeeper.replication`
  - tls: `org.apache.bookkeeper.tls`
  - all others: all other tests in `bookkeeper-server` module

Each job can be triggered and skipped individually.

- *PR Validation* : "(re)run pr validation" | "" (unskippable)
- *Build (Java x)* : "(re)build java(8|9)" | "skip build java(8|9)"
  - "(re)build" to build on both java8 and java9
  - "skip build" to skip building jobs on both java8 and java9
- *Integration Tests* : "(re)run integration tests" | "skip integration tests"
- *bookkeeper-server tests* : "(re)run (bookie|client|replication|tls|remaining) tests" | "skip (bookie|client|replication|tls|remaining) tests"
  - "(re)run tests" to run all bookkeeper-server test jobs
  - "skip tests" to skip all bookkeeper-server test jobs

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1481 from sijie/improve_build_time

TREE:tree 898c978dc92ae9d1e95838f192c81fa1ab44e800 ------
TIME:06/05/2018 19:59:17

COMMIT:Throttle integration tests to run 1 build per host

Descriptions of the changes in this PR:

If running multiple integration tests build on same host, they will be conflicting on installing docker images. So throttle integration tests to run max 1 build per host.

See discussions at : http://mail-archives.apache.org/mod_mbox/pulsar-dev/201806.mbox/%3CCAJdLeK0nj9n-TKC4t43Nyc8bO9UUW17wM%2By_fF68EgFL6Fpo8w%40mail.gmail.com%3E

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1480 from sijie/disable_concurrent_builds

TREE:tree acac5fefd54e36d7ac23a87d0bc984d89c6d14d4 ------
TIME:06/05/2018 08:53:16

COMMIT:Fix issues for cherry-picks from master to branch-4.7

Descriptions of the changes in this PR:

There are some versioning issues after cherry-picking changes from master to branch-4.7.
This PR addresses those issues.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1479 from sijie/fix_branch_47

TREE:tree 4620ceb49c1bde99ab24ac38e984c36e386e6cbe ------
TIME:06/05/2018 08:52:02

COMMIT:ISSUE #1472: [TABLE SERVICE] TestStorageClientBuilder.testBuildClientInvalidNamespaceName failed

Descriptions of the changes in this PR:

*Problem*

 #1457 changed the validation of namespace/stream name. so "-" is a valid character.

*Solution*

Fix the test.

Master Issue: #1472

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1473 from sijie/fix_storage_client_builder, closes #1472

TREE:tree 3611b3400a5b47e49444ebd3643e8580d9b06eb9 ------
TIME:06/04/2018 09:57:09

COMMIT:[TABLE SERVICE] cleanup : provide unified service uri for resolving service endpoints

Descriptions of the changes in this PR:

*Motivation*

Currently there are multiple settings in `StorageClientSettings` on configuring how to resolve
service endpoints to find the services. It is a bit inconvinient and confusing

*Solution*

Provide a class `ServiceURI` for parsing service uri to retrieve common informations including:

- serviceName
- serviceInfos
- serviceUser
- serviceHosts
- servicePath

It extends the java.net.URI and does parsing and validation in the same place. Then it can be used
by the grpc name resolver to resolve service endpoints.

Also update dlog to use it for resolving its namespace uri.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1459 from sijie/name_resolver

TREE:tree 06e6060d65348a6ea5d81fcbedb451f04ade633c ------
TIME:06/01/2018 08:24:02

COMMIT:[TABLE SERVICE] cleanup : cleanup protobuf definitions

Descriptions of the changes in this PR:

*Motivation*

There are some unused fields and some fields that were not renamed correctly from col to namespace.

*Solution*

This is a cleanup PR to remove unused fields and rename "col" to "ns" or "namespace".

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1457 from sijie/cleanup_fields

TREE:tree c7a970cc492b72166feeab1419dfe97131bfa399 ------
TIME:05/31/2018 08:26:08

COMMIT:[TABLE SERVICE] remove StorageContainerRequest and StorageContainerResponse

Descriptions of the changes in this PR:

*Motivation*

 #1448 uses reverse proxy for serving storage container requests and responses. so the `StorageContainerRequest` and `StorageContainerResponse`
 become redundant.

*Solution*

removes `StorageContainerRequest` and `StorageContainerResponse`

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1452 from sijie/remove_storage_container_request_response

TREE:tree d94bc906d3d1af9cdd71ca5476c8d8a637a46fbf ------
TIME:05/30/2018 19:18:15

COMMIT:[TABLE SERVICE] use grpc reverse proxy to serve storage container requests

Descriptions of the changes in this PR:

*Motivation*

*Changes*

**Client Changes**

Changed `StorageContainerChannel` to add client interceptor to stamp storage container id into the the requests' metadata.

**Server Changes**

- moved the stream storage logic out of storage containers to a `service` package. the main logic will be kept in `RangeStoreService` and `RangeStoreServiceFactory`.
- make the storage container logic for hosting `StorageContainerService`.
- Each storage container will run an inprogress grpc server for serving the grpc services registered to the container and provide an `channel` for accessing those grpc service.
- Changed the server to use reverse proxy for serving/proxying storage container requests.

*NOTE*

This change doesn't directly remove `StorageContainerRequest` and `StorageContainerResponse`.  It would be done in a subsequent change.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1448 from sijie/storage_container_channel

TREE:tree c8854186c04d9691bdc5309fcdd412b5e932c88c ------
TIME:05/29/2018 03:29:09

COMMIT:Include stream modules in bookkeeper distributions only when `-Dstream` is specified

Descriptions of the changes in this PR:

*Motivation*

stream modules are only built when `-Dstream` is specified. so if we want to include
binary distribution, `-Dstream` is needed. This updates those modules with profiles
that enabled when `-Dstream` is specified.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1447 from sijie/fix_stream_module

TREE:tree cf2e42d5b67873034e040c64ebcc593e2e1c86c7 ------
TIME:05/28/2018 07:57:22

COMMIT:[TABLE] mark TableClientTest & TableClientSimpleTest as FlakyTest

Descriptions of the changes in this PR:

*Motivation*

These two integration tests are flaky on shutting down. Mark them as `FlakyTest` to make CI stable while investigating the issue.

*Changes*

Move `FlakyTest` annotation from bookkeeper-server test jar to bookkeeper-common test jar. So it can be used across multiple modules.

At the same time, remove redundant `FlakyTest` annotation at distributedlog-core module.

Related Issue: #1440

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1445 from sijie/mark_two_integration_tests_as_flaky

TREE:tree 6b9add75906272eb54f55e3ae965f6004bd0fcbe ------
TIME:05/26/2018 05:52:50

COMMIT:Update bookkeeper dependencies : netty/protobuf/grpc

Descriptions of the changes in this PR:

*Motivation*

The netty version in bookkeeper is a bit dated than the version in pulsar.
Hence the grpc version is limited to the version that use same netty version.
It causes issues at pulsar using bookkeeper, because pulsar has been using
a newer version for longer time. This causes conflicts when pulsar client and
grpc are used together without proper shading.

*Solution*

Upgrade netty/protobuf/grpc dependencies.

- update netty from `4.1.12` to `4.1.22`, which is the one grpc is using and closer to the one that pulsar is using.
- update grpc from `1.5.0` to `1.12.0`, which is using netty `4.1.22` and protobuf `3.5.1`.
- update protobuf from `3.4.0` to `3.5.1`

Related Issue: apache/pulsar#1844

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1441 from sijie/bump_grpc_version

TREE:tree b6a5fd48fde4c159b68a89789771c1ee11a88c0d ------
TIME:05/26/2018 00:02:03

COMMIT:Provide the flag to allow ignoring startup failures on loading extra server components

Descriptions of the changes in this PR:

Addressed the comments in apache/bookkeeper#1420

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1426 from sijie/flag_to_allow_silent_failures

TREE:tree 92e46dcf2b5ccf7fc6382c66836b1d1556350144 ------
TIME:05/25/2018 20:10:22

COMMIT:Fix checkstyle warnings

Descriptions of the changes in this PR:

*Motivation*

There were two concurrent PRs merged at the same time.

apache/bookkeeper#1435 (checkstyle changes) was merged before apache/bookkeeper#1430. so checkstyle warnings
introduced by apache/bookkeeper#1430 were not caught by any CI jobs.

*Solution*

Address the checkstyle warnings introduced by apache/bookkeeper#1430

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1444 from sijie/fix_checkstyle_issue

TREE:tree 3133c78866462b2ef035c977a71ab191864d64f1 ------
TIME:05/25/2018 19:49:57

COMMIT:[TABLE SERVICE] client interceptor and storage container grpc proxy

Descriptions of the changes in this PR:

This is a subsequent change after apache/bookkeeper#1428.

*Motivation*

Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses
are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc
services.

*Changes*

To simplify things, this PR introduces two functionalities for simplifying dispatching container requests/responses.

1) *StorageContainerClientInterceptor*: A grpc `ClientInterceptor` that stamps container information (currently is `scId`) into the requests' metadata before sending the requests to the wire.

2) A simple grpc reverse proxy to dispatch grpc requests to the channels provided by a `ChannelFinder`.

*Tests*

1. Existing unit tests covered client interceptor changes.
2. Introduced a `stream-storage-tests-common` module to include common classes that would be used for testing.
3. Introduced a `PingPongService` for testing reverse proxy : unary/client-streaming/server-streaming/bidi-streaming.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1430 from sijie/interceptor_container_requests

TREE:tree ca944b463e0265754b798c891bdba4a9db424b8a ------
TIME:05/25/2018 10:02:06

COMMIT:Use maven-exec-plugin to get the maven project version for CI jobs

Descriptions of the changes in this PR:

*Motivation*

The current approach to get project version isn't reliable on CI environment. It might have garbage output (e.g. exceptions).

*Solution*

Changed to use `exec-maven-plugin` to echo `${project.vesion}`. It provides a more reliable approach to get version on CI environments.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1437 from sijie/fix_getversion_problem

TREE:tree 7ae57e7461d14c2c385d8c191c300ecf8a524c3c ------
TIME:05/25/2018 00:48:59

COMMIT:Fix bookkeeper post commit CI

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1422 includes stream storage integration tests in tests/integration.
so we need to include `-Dstream` on building the tests.

*Solution*

Update the bookkeeper post commit CI jobs to include `-Dstream`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1429 from sijie/fix_post_commit_ci

TREE:tree accc9edb8f9c96bcf35123d7df298927925c451e ------
TIME:05/24/2018 00:42:02

COMMIT:[TABLE SERVICE] Move grpc services from server module to storage module

Descriptions of the changes in this PR:

*Motivation*

Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses
are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc
services.

To simplify things, we can use grpc ClientInterceptor to stamp container information (e.g. scId)
into the request metadata and write a grpc service registry to take the container information from
request metadata and dispatch requests to containers.

In order to achieve it, we need to move the grpc services to storage container.

*Solution*

This PR moves grpc services from server module to storage module, so we can simplify the wire protocols.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1428 from sijie/move_grpc_service_to_storage

TREE:tree f6a5627611b2dd376cc57bf88f2c0971ad25b8ff ------
TIME:05/23/2018 19:56:58

COMMIT:Publish bookkeeper dev image to docker hub

Descriptions of the changes in this PR:

*Motivation*

We built a `bookkeeper-current` image that reflects latest master for integration tests. However currently we don't publish this docker image to any docker registry. So it is inconvenient to test latest master in dockerized environments.

*Solution*

- Add a dev script to publish `bookkeeper-current` image to configured docker registry specified at `DOCKER_REGISTRY`
- Update the nightly snapshot job to publish generated `bookkeeper-current` image to docker hub `apachebookkeeper`
- Add `bin/standalone` script to use `docker-compose` to launch a 3-nodes bookkeeper cluster locally. The script generates docker-compose.yml and handles mounting local volumes and port forwarding. so developers can use that for quick development.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1427 from sijie/push_current_docker_image

TREE:tree ef62158c4435c607ef68de487df1f2b79c51ac39 ------
TIME:05/23/2018 19:56:04

COMMIT:[TABLE SERVICE] Move integration tests under `stream/tests/integration` to `tests/integration/cluster`

Descriptions of the changes in this PR:

The original integration tests were written based a non-dockerized standalone stream cluster. Moved them to use
the dockerized integration test framework. So all the integration tests are actually testing the table service run as part of bookies.

This change is based on #1422 .
a371ff2 is the change in this PR to be reviewed.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1423 from sijie/move_more_stream_it_tests

TREE:tree 90484f6e793cebf5bbe8ead8f0bc67deb1c113cf ------
TIME:05/23/2018 04:11:16

COMMIT:[TABLE SERVICE] start table service as an extra component of bookie

Descriptions of the changes in this PR:

*Motivation*

table service was built over bookkeeper ledgers. it is an extension to bookies' functionalities, so it is much convenient to start the service as one additional component with bookie, just like how we start `AutoRecovery` along with bookie.

*Solution*

- include `stream/server` module as part of bookkeeper server/all binary distributions
- abstract `StorageServer` to allow controlling whether to start bookie or not
- provide a ServerLifecycleComponent of `StorageServer`, so it can be used as an extra component of bookie

*Tests*

- improve the integration tests to start table service as part of bookie containers
- move `LocationClientTest` to container based integration tests

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1422 from sijie/start_table_service

TREE:tree 12a24e1e301b3d5bd4ff751fdc1dd70f5f0498c0 ------
TIME:05/22/2018 20:43:31

COMMIT:Allow bookie to start if failed to load extra server components

Descriptions of the changes in this PR:

*Motivation*

`extraServerComponents` provides the flexibility to allow bookie to start with extra server components.
It acts as a plugin mechanism to extend the functionality of bookies. However it is okay to allow bookie
start up when failed to load extra server components.

This is a change for allowing starting table service as extra components in bookies.

*Solution*

Catch the exception and log it when failed to load extra server components.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1420 from sijie/allow_start_bookie

TREE:tree 9d72426d1b2abcbdd318ecdc2760b497e62bda79 ------
TIME:05/22/2018 10:43:46

COMMIT:Build stream modules for integration tests

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1422 adds table service as part of integration tests. so we need to build stream modules
in order to run integration tests for apache/bookkeeper#1422

*Solution*

Add "-Dstream" in the maven commands for `precommit-integrationtests` CI job.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1424 from sijie/compile_stream_module

TREE:tree b210ca4e8fa91d0b50a7f3663879d41068a9f792 ------
TIME:05/22/2018 09:27:46

COMMIT:Provide a util method to run functions with metadata client driver

Descriptions of the changes in this PR:

*Motivation*

Currently `MetadataDrivers` provides util methods to run functions with metadata bookie driver.
It is convinient to provide a util method to run functions with metadata client driver as well.

*Solution*

Provide a util method `runFunctionWithMetadataClientDriver` to run functions with metadata client driver.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1421 from sijie/utils_to_run_client_driver

TREE:tree 0ce6592fddba8ad791254951e0ca66cdfaf94339 ------
TIME:05/22/2018 07:39:40

COMMIT:Provide zookeeper startup script

Descriptions of the changes in this PR:

*Motivation*

ZooKeeper is a dependency of bookkeeper shipped along with bookkeeper dist package. However we never provide any script to startup zookeeper in the bookkeeper binary package and never test the zookeeper version shipped along with bookkeeper

*Solution*

- add zookeeper in `bin/bookeeper` scripts to start zookeeper using bookkeeper scripts
- refactor bookkeeper docker scripts to start bookie/zookeeper/standalone
- use zk adminPort for health check, since 4letters commands are explicitly disabled at 3.5

*Tests*

Existing integration tests test the docker scripts and the bash script changes to start zookeeper.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1416 from sijie/package_zookeeper

TREE:tree bd32ae0481ceb523a006c49782c5104ea5475c85 ------
TIME:05/21/2018 23:54:52

COMMIT:Add a docker based `BookKeeperClusterTestBase` for failure related integration tests

Descriptions of the changes in this PR:

*Motivation*

Currently we don't have any failure related testing for table service. Since we are using docker as the integration testing infrastructure,
It is better to use container for those failure testings, rather than going down the path as what we did before.

*Solution*

This change provides the basic test base for bookkeeper cluster using dockers. `BookKeeperClusterTestBase` provides the similar functionalities
to start/stop bookies as what we did in the unit test.

`bookkeeper/tests/containers` in `integration-tests-topologies` provides all the basic containers used for testing.
`tests/integration/cluster` and `tests/integration/topologies` provides the test base for writing tests using dockerized bookkeeper cluster.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1412 from sijie/docker_cluster_dev

TREE:tree 04052aff307853618cec6a8f08e6003f14d8ae6d ------
TIME:05/18/2018 21:49:31

COMMIT:Add a test docker image for current version only

Descriptions of the changes in this PR:

*Motivation*

The current test images don't use any scripts that shipped with official docker image.
We basically don't have any test coverage on the official docker image we shipped for each release.

*Solution*

Introduce a `bookkeeper-current` image representing an image for latest master.

Use `apachebookkeeper/all-versions-image` for BC tests, use `apachebookkeeper/bookkeeper-current` as tests only needs latest master image.

Add an integration test to test standalone mode using the `bookkeeper-current` image

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1408 from sijie/docker_dev

TREE:tree 8d1468380a4ccf3844f2c2d27ce4c38e10d07ad7 ------
TIME:05/17/2018 10:39:04

COMMIT:Refactor bookkeeper bash scripts and move dlog script to root bin directory

Descriptions of the changes in this PR:

*Motivation*

Since 4.7, we have moved bash scripts and configuration to the root directory. However the scripts and configurations for dlog and table-service modules are still in their own modules. It is inconvenient and confusing. This change mainly refactor current bookkeeper script to make it reusable for other modules.

*Code Change*

The main changes are:

- abstract the common logic in `bin/bookkeeper` to `bin/common.sh`. These common logics include:
   * common definitions on environment variables, such jvm settings, bk conf, log4j conf, classpath and such.
   * common functions can be reusable, such as find jars, add maven dependencies.
- simplify `bin/bookkeeper` and `bin/bookkeeper-cli` by reusing `bin/common.sh`
- remove `stream/distributedlog/core/bin/dlog` to `bin/dlog` and simplify it by reusing `bin/common.sh`

*Tests*

Most of the changes in this PR are tests to ensure this script refactor is done correctly.

- introduced a module `tests/scripts` for testing all the bash scripts in bookkeeper project. This module uses [shUnit2](https://github.com/kward/shunit2) for testing bash scripts. This gives a good test coverage on `bin/common.sh`.

- add a few CLI smoketests under `tests/integration/smoke` to smoke test all CLI tools, including `bin/bookkeeper shell`, `bin/bookkeeper-cli` and `bin/dlog`. This makes sure all the CLI scripts work well after refactor.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1407 from sijie/include_dlog_library

TREE:tree bd10f8c5d1d043db4a206492842959157c4c4b5d ------
TIME:05/17/2018 06:00:42

COMMIT:Issue #1396: Export metrics in same http server

Descriptions of the changes in this PR:

*Motivation*

Currently metrics provider and http admin endpoint are isolated due to the way how things are modularized.
This requires two ports to be used, one is for metrics provider to expose metrics, while the other one is used by
http admin endpoint for expose admin endpoints.

When implementing a bookkeeper operator on k8s, it becomes confusing on managing those ports and do health checks.
It would be good to allow export metrics in same http admin endpoint if it is enabled.

*Solution*

- Introduce a method `writeAllMetrics` in stats provider to allow stats provider exporting metrics.
- Add a `MetricsService` in bookie http service and export stats provider's metrics under `/metrics` endpoint.

This fixes #1396

Master Issue: #1396

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1399 from sijie/same_http_metrics_port, closes #1396

TREE:tree ccb9ea05bf349da1f49fc81493d963ef7b94a532 ------
TIME:05/14/2018 22:03:54

COMMIT:ISSUE #1339: Cleanup the directories created by DbLedgerStorageTest

Descriptions of the changes in this PR:

  Cleaned up the directories `dir1` and `dir2` left behind by the test `DbLedgerStorageTest`

Master Issue: #1339

Author: arunlakshman <arunmuthuravi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1398 from arunlakshman/issue1339, closes #1339

TREE:tree 7e0d70ad7e1b2698ca531281b6a75e7c60051453 ------
TIME:05/12/2018 05:13:29

COMMIT:[TABLE SERVICE] a zk based storage container controller

Descriptions of the changes in this PR:

*Motivation*

The original storage container "controller" was written in helix. The helix controller's placement is kind of not assuming any properties of shared storage. however the table service is leverage bookkeeper's as its segment/log store. the table service is built in a more `stateless` way, where a storage container can be moved between servers in a much lightweight way.

Also helix codebase is a bit large, if we eventually going to eliminate zookeeper, the cost of switching it off helix will be much expensive. so this PR is introducing a simple zk based controller for assigning storage containers to servers.

*Solution*

In this zk base solution, it is comprised of 3 parts: server registration, cluster & storage controller, storage container manager.

**registration**

this solution leverages existing registration client/manager interfaces. so each storage server registers itself under `/stream/servers/available`.

**cluster & storage controller**

A storage server is elected as a the leader, which runs a ClusterController. The cluster controller reads cluster metadata from zookeeper (the cluster metadata includes like how many containers available in the cluster), and use a storage controller to compute an assignment plan as the ideal state for container assignment mapping, and then update the assignment mapping to zookeeper under `/stream/assignment`.

**storage container manager**

Each storage server runs a storage container manager, which watches the assignment plan in zookeeper. The cluster controller updates the assignment plan. Once it receives watches/updates from the assignment plan that computed by cluster controller, the storage container manager will align itself to the ideal assignment map by starting/stopping storage containers.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1392 from sijie/table_service_manager

TREE:tree eb49844bea9715b67de5771c6e926cc1476b147b ------
TIME:05/07/2018 10:50:29

COMMIT:Make bookie state manager & registration manager reusable outside of bookie

Descriptions of the changes in this PR:

*Motivation*

Since 4.6.0, we have already abstracted a pretty good interfaces around registration service and state management. Most of the classes can actually be reused for use cases that have similar service discovery and writable/readonly state transition management.

*Solution*

The change is try to cleanup `BookieStateManager` and `ZKRegistrationManager` to make them more generic and can be reused for other usage.

*Result*

Registration Interfaces and StateManager can be used outside of bookie.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1373 from sijie/refactor_bookie_state_manager

TREE:tree 0929f35f6fc3b358e580c7812bfff66ad8f14ffb ------
TIME:05/04/2018 04:09:15

COMMIT:[TABLE SERVICE] [DLOG] Fix `ConcurrentModificationException` on accessing component configuration

Descriptions of the changes in this PR:

*Motiviation*

Currently when running table service in standalone mode, it occasionally throws `ConcurrentModificationException`. Because
multiple components are sharing same underlying composite configuration. It causes the contention between copying keys and retrieving keys.

*Solution*

Change the component configuration to use a concurrent hashmap based configuration. Also changed the `loadConf` behavior to copy the keys / sub-keys
into the component configuration. This prevents components sharing same underlying composite configuration.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1378 from sijie/fix_conf

TREE:tree 81a4a89f6313d4ef0772d768d7b7e84038b2f86e ------
TIME:05/04/2018 04:08:35

COMMIT:ISSUE #1384: Bump checkstyle version

Descriptions of the changes in this PR:

*Motivation*

mvn build fails on a centos/7 box. Exceptions are thrown as below:

```
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (checkstyle) on project circe-checksum: Execution checkstyle of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check: java.lang.NoSuchMethodError: org.slf4j.spi.LocationAwareLogger.log(Lorg/slf4j/Marker;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
```

*Solution*

The problem was addressed in https://issues.apache.org/jira/browse/MCHECKSTYLE-335. We need to bump the checkstyle plugin version to `3.0.0`

Master Issue: #1384

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1385 from sijie/vagrant_files, closes #1384

TREE:tree 4701df6b7b49b087106a8e9089c2a8975d0be672 ------
TIME:05/03/2018 21:30:54

COMMIT:[TABLE SERVICE] apply backoff policy to rpc requests if storage container is not found

Descriptions of the changes in this PR:

*Motivation*

A storage container can move between servers due to failures, or it can take time to start on a server. During that short period of time, it is "unavailable" and clients will receive `Status.NOT_FOUND` from grpc channels. The client should retry on this error and attempt to re-locate the storage container again.

*Modification*

- add backoff policy in client settings
- apply the backoff policy at storage container channel. if it receives `NOT_FOUND` grpc exception, it will reset the server channel, so subsequent requests will re-attempt to relocate the storage container.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1379 from sijie/rpc_backoffs

TREE:tree fa39c2fe24192e9417125dea9c8edd3a9d87ed76 ------
TIME:05/03/2018 06:19:42

COMMIT:[TABLE SERVICE] Dlog based checkpoint store

*Motivation*

Currently the table range stores are using local filesystem as a checkpoint store. It is okay for running as standalone mode.
But it doesn't work to run in a distributed mode. This change is introducing a dlog based checkpoint store to make sure all
the sst files of table ranges are durably checkpointed into bookkeeper itself.

*Solution*

Introduced a dlog based checkpoint store.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1366 from sijie/dlog_checkpoint_manager

TREE:tree e89e363ade1bf35ef9bdf928aa58bbb4d4e2d433 ------
TIME:04/25/2018 11:13:28

COMMIT:Abstract the tools framework to allow merging multiple CLI tools together

Descriptions of the changes in this PR:

*Motivation*

There are multiple CLI tools spreading across multiple places, e.g. new bookkeeper cli, stream storage cli and dlog. There have similar implementations. It would be better to consolidate all these tools in one place `bookkeeper-tools`.

This is a PR to prepare moving `stream/cli` to be part of bookkeeper-tools.

*Solution*

- Abstract the CLI logic in bookkeeper-tools into a simple tools framework that can be reused in a extensible way to unify multiple tools together.
- organize the tools module into tools/framework and tools/all

*Result*

Example output of the tool using this framework is listed as below:

```
$ bin/bkctl
bkctl interacts and operates Apache BookKeeper clusters

Usage:  bkctl [flags] [command group] [commands]

Commands:

    bookie          Commands on operating a single bookie
    bookies         Commands on operating a cluster of bookies
    cluster         Commands on administrating bookkeeper clusters
    ledger          Commands on interacting with ledgers
    namespace       Commands on operating namespaces
    table           Commands on interacting with tables
    tables          Commands on operating tables

    help            Display help information about it

Flags:

    -c, --conf
        Configuration file

    -n, --namespace
        Namespace scope to run commands (only valid for table service for now)

    -u, --service-uri
        Service Uri

    -h, --help
        Display help information

Use "bkctl [command] --help" or "bkctl help [command]" for more information
about a command
```

*result from help sub-command*

```
$ bin/bkctl help table
Commands on interacting with tables

Usage:  bkctl table [command] [command options]

Commands:

    get         Get key/value pair from a table
    inc         Increment the amount of a key in a table
    put         Put key/value pair to a table

    help        Display help information about it

Use "bkctl table [command] --help" or "bkctl table help [command]" for more
information about a command
```

*result from help sub-sub-command*

```
$ bin/bkctl table help inc
Increment the amount of a key in a table

Usage:  bkctl table inc [flags] <table> <key> <amount>

Flags:

    -h, --help
        Display help information
```

Master Issue: #1000

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1471 from sijie/tools_framework

TREE:tree 6d13a7d9bd6adf53d28500f7fada8d6ebcd43659 ------
TIME:06/04/2018 22:30:43

COMMIT:Use unpooled buffers in BufferedChannel

This is a safer fix for #1414 to be included in 4.7.1.

Use unpooled buffer to avoid mem leak in entry log rotation.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1469 from merlimat/fix-entry-log-rotation

TREE:tree 2a5f7959ee40c0c8e30b94cbfc0d47fd26bc1343 ------
TIME:06/04/2018 22:11:44

COMMIT:Improve precommit CI jobs on handling PRs made to branches

Descriptions of the changes in this PR:

*Motivation*

Current precommit CI jobs uses `master` as target branch for applying the pull requests.
However pull requests might be made against branches. e.g. #1469, precommit jobs can't run properly on those pull requests. This PR tends to address the problem.

*Solution*

Use `ghprbTargetBranch` as the build branch for precommit jobs.

Besides that, split the validation goals (e.g. checkstyle, apache-rat) from build/test goals (package, spotbugs), this reduces build time for different jdk versions and address problem when running checkstyle:check with other goals (e.g. deploy).

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1475 from sijie/run_precommit_jobs_over_target_branches

TREE:tree 8f8adf887e4e5942052fcaf6bf3941fd192d6f26 ------
TIME:06/04/2018 22:07:42

COMMIT:Improve merge script to merge PRs based on branches

Descriptions of the changes in this PR:

*Motivation*

Merge script doesn't handle well on handling PRs based on branches. So committers ended up
using merge button to merge PRs. so we lose a lot of informations such as descriptions, reviewers
in the commit message.

*Solution*

This PR fixes the problems on handling merging PRs based on branches.

This allows us merging #1469 using merge script.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1477 from sijie/merge_pull_request_from_branch

TREE:tree 88ff77acbce57e4842c722c2a3c93d451f2f4bc6 ------
TIME:06/04/2018 22:00:04

COMMIT:Support build on JDK10

- switch to "javac -h" in circe-checksum instead of 'javah' because in JDK10 javah has been dropped (see http://openjdk.java.net/jeps/313)
- add openjdk10 to Travis-CI

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1470 from eolivelli/nar-jdk10

TREE:tree eac514a837497b39c84e9bec23010043c9db9ee7 ------
TIME:06/04/2018 15:46:33

COMMIT:ISSUE #1472: [TABLE SERVICE] TestStorageClientBuilder.testBuildClientInvalidNamespaceName failed

Descriptions of the changes in this PR:

*Problem*

 #1457 changed the validation of namespace/stream name. so "-" is a valid character.

*Solution*

Fix the test.

Master Issue: #1472

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1473 from sijie/fix_storage_client_builder, closes #1472

TREE:tree 8ae87a97690038ea59e493da0c718feb9f66fd7b ------
TIME:06/04/2018 09:57:09

COMMIT:Updated site at revision 9472596

TREE:tree b6ff440639c10568965648804edf5cd78ec67224 ------
TIME:06/02/2018 07:26:21

COMMIT:Issue #1467: build failing with MavenReportException: Error while generating Javadoc. (#1468)


TREE:tree f6e645b02e14c16bea217a6e0910ffcb7dc72d17 ------
TIME:06/02/2018 07:08:46

COMMIT:Issue #1409: Added server side backpressure (@bug W-3651831@) (#1410)

(@bug W-3651831@) backpressure: server-side backpressure
TREE:tree d812c55105910983bbab2666db460bf4b69801cb ------
TIME:06/02/2018 01:28:17

COMMIT:Updated site at revision 9b1cffd

TREE:tree 0579e996b8c0fa4f1c9475678abf36235ca6d876 ------
TIME:06/01/2018 19:07:07

COMMIT:Updated site at revision cf6d8b4

TREE:tree f7b45ffed247a67fca7d1e3640304060fc05976f ------
TIME:06/01/2018 18:48:57

COMMIT:[CI] Run integration tests concurrently if possible

Descriptions of the changes in this PR:

Execute integration tests concurrently if necessary.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1463 from sijie/concurrent_builds

TREE:tree f47c122d84f3f4a504e50569dcd55bf40850023a ------
TIME:06/01/2018 18:42:20

COMMIT:ISSUE #1455: Revert ": Unable to process suppressions file during checkstyle execution"

Descriptions of the changes in this PR:

This reverts commit 4bc021a438ca1e5acff23f7e3cb6cdb6984c1066 to address the issue we saw in #1461

Related Issue: #1456

This fixes #1461

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1462 from sijie/fix_maven_builds, closes #1455

TREE:tree c594c12641b0104ff95dcafd69d39cb242c1302e ------
TIME:06/01/2018 18:32:57

COMMIT:ISSUE #1458: [CI] Fix bookkeeper-seed CI Job

Descriptions of the changes in this PR:

*Motivation*

Issue #1454 introduced a typo, which cause the seed job can not parse groovy DSL files.

*Solution*

Fix the typo.

Master Issue: #1458

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1464 from sijie/fix_job_seed, closes #1458

TREE:tree 5742f724625adb719cacbf77ab21659e6dc3ff9a ------
TIME:06/01/2018 18:30:49

COMMIT:Updated site at revision a804fae

TREE:tree 83612647f1213ce845280bec0b48985faf8873b0 ------
TIME:06/01/2018 08:59:27

COMMIT:Updated site at revision 24e097f

TREE:tree c2736c69ef6dc54468dc60a76a2117f7d475c31f ------
TIME:06/01/2018 08:42:11

COMMIT:BP-33: Move releasing official docker images out of main repo

Descriptions of the changes in this PR:

*Motivation*

Current bookkeeper docker images are auto-built by apache docker account. However it becomes problematic in the release process:

Docker autobuild uses release tag for labeling the versions for docker images. But the Dockerfile can only be updated after a release is successfully made. So we have to retag a release after a release, in order to update Dockerfile to build the docker images.

Master Issue: #1449

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1450 from sijie/official_docker_images

TREE:tree cc2eeb20469c8f2d7a8db7e947f17d9e467e4b49 ------
TIME:06/01/2018 08:26:04

COMMIT:[TABLE SERVICE] cleanup : provide unified service uri for resolving service endpoints

Descriptions of the changes in this PR:

*Motivation*

Currently there are multiple settings in `StorageClientSettings` on configuring how to resolve
service endpoints to find the services. It is a bit inconvinient and confusing

*Solution*

Provide a class `ServiceURI` for parsing service uri to retrieve common informations including:

- serviceName
- serviceInfos
- serviceUser
- serviceHosts
- servicePath

It extends the java.net.URI and does parsing and validation in the same place. Then it can be used
by the grpc name resolver to resolve service endpoints.

Also update dlog to use it for resolving its namespace uri.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1459 from sijie/name_resolver

TREE:tree 854b55f3761684b610903e7df54bccdd05292f4a ------
TIME:06/01/2018 08:24:02

COMMIT:Updated site at revision 5521a9f

TREE:tree 7bcf4c5a88565c62a153867092503640f1fc318b ------
TIME:05/31/2018 11:04:19

COMMIT:Make bookkeeper-server module buildable on jdk10

Upgrade lombok and javadoc plugin to latest versions.
This way it is possible to work on most of the modules using JDK10.

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1453 from eolivelli/fix/build-jdk10

TREE:tree 554ee8fec737fc2e388897c41b9d6859afa24dad ------
TIME:05/31/2018 10:45:59

COMMIT:[TABLE SERVICE] cleanup : cleanup protobuf definitions

Descriptions of the changes in this PR:

*Motivation*

There are some unused fields and some fields that were not renamed correctly from col to namespace.

*Solution*

This is a cleanup PR to remove unused fields and rename "col" to "ns" or "namespace".

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1457 from sijie/cleanup_fields

TREE:tree e8d8a2dea52b69487276171faeb84f516ae35823 ------
TIME:05/31/2018 08:26:08

COMMIT:[TABLE SERVICE] remove StorageContainerRequest and StorageContainerResponse

Descriptions of the changes in this PR:

*Motivation*

 #1448 uses reverse proxy for serving storage container requests and responses. so the `StorageContainerRequest` and `StorageContainerResponse`
 become redundant.

*Solution*

removes `StorageContainerRequest` and `StorageContainerResponse`

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1452 from sijie/remove_storage_container_request_response

TREE:tree f63d8e23750f44a40733a52c07367cb1c2c4c89d ------
TIME:05/30/2018 19:18:15

COMMIT:Issue 1455: Unable to process suppressions file during checkstyle execution

Descriptions of the changes in this PR:

*Motivation*

Failed to run `mvn clean apache-rat:check checkstyle:check install -DskipTests`

```
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (default-cli) on project bookkeeper-stats-api: Failed during checkstyle execution: Unable to process suppressions file location: bookkeeper/suppressions.xml: Cannot create file-based resource:invalid block type -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :bookkeeper-stats-api
```

*Solution*

- Make `buildtools` not inherit from bookkeeper root pom.
- Make bookkeeper root pom includes `buildtools` as a `provided` dependency for each module.

Master Issue: #1455
Related Issues: #1435

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1456 from sijie/fix_ci_failure

TREE:tree cfe3280b2af61a43707f06951e0dcde7c681e3dd ------
TIME:05/30/2018 13:14:32

COMMIT:Updated site at revision 254b446

TREE:tree ce9ad03678f2dce945c029511e2d24932f8ebff8 ------
TIME:05/30/2018 10:31:25

COMMIT:Update release procedure to use candidate tags for voting

Descriptions of the changes in this PR:

*Motivation*

We used final release tag during release voting procedure. However there might be changes
happen between different candidate votes. So we ended up retagging the release tag for
different votes.

*Solution*

Use a candidate tag for voting. After a release is approved, create the final release tag.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1451 from sijie/update_release_guid

TREE:tree 61862c382c173bf8d9e164a3a0e783c1a82d0dfa ------
TIME:05/30/2018 09:56:40

COMMIT:Allow CI to publish a snapshot version with gitsha information

Descriptions of the changes in this PR:

*Motivation*

Currently bookkeeper publishes a snapshot release nightly to maven artifacts. It provides a convenient solution for people to try out new bookkeeper releases as soon as the changes land in master branch. However sometime it is also problematic when you reference this snapshot version in other projects, subsequent changes in bookkeeper might potentially break those projects.

*Solution*

Update the CI to provide a mechanism to publish a snapshot version with gitsha information. so it can publish a snapshot version that is pinned to the given gitsha. so the projects can safely use a snapshot version for development without worrying bookkeeper changes break it.

*NOTES*

The mechanism is a manual operation. It should be used when it is needed.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1454 from sijie/publish_snapshot_with_gitsha

TREE:tree c8c5a201c8ef355af40a315149917db1e0b6766f ------
TIME:05/30/2018 09:55:27

COMMIT:[TABLE SERVICE] use grpc reverse proxy to serve storage container requests

Descriptions of the changes in this PR:

*Motivation*

#1430 introduced client interceptor and grpc reverse proxy for storage container requests. This PR is the subsequent change to leverage client interceptor and reverse proxy for storage container requests.

*Changes*

**Client Changes**

Changed `StorageContainerChannel` to add client interceptor to stamp storage container id into the the requests' metadata.

**Server Changes**

- moved the stream storage logic out of storage containers to a `service` package. the main logic will be kept in `RangeStoreService` and `RangeStoreServiceFactory`.
- make the storage container logic for hosting `StorageContainerService`.
- Each storage container will run an inprogress grpc server for serving the grpc services registered to the container and provide an `channel` for accessing those grpc service.
- Changed the server to use reverse proxy for serving/proxying storage container requests.

*NOTE*

This change doesn't directly remove `StorageContainerRequest` and `StorageContainerResponse`.  It would be done in a subsequent change.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1448 from sijie/storage_container_channel

TREE:tree 8cf442ea33b497267ce9c6b1ceb04266f5dcf7c4 ------
TIME:05/29/2018 03:29:09

COMMIT:Updated site at revision ed895a1

TREE:tree 488179d529f852f6490b0601b7474a4f527dea5b ------
TIME:05/28/2018 08:31:05

COMMIT:Include stream modules in bookkeeper distributions only when `-Dstream` is specified

Descriptions of the changes in this PR:

*Motivation*

stream modules are only built when `-Dstream` is specified. so if we want to include
binary distribution, `-Dstream` is needed. This updates those modules with profiles
that enabled when `-Dstream` is specified.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1447 from sijie/fix_stream_module

TREE:tree 1f1a285ebb6f29c17366932e4d9f3feeeddeeeb0 ------
TIME:05/28/2018 07:57:22

COMMIT:Add printreplicationworkerid option to ListUnderreplicatedCmd.

Descriptions of the changes in this PR:

Add printreplicationworkerid option to ListUnderreplicatedCmd.
This helps in knowing who is holding lock on UnderReplicated ledger,
and diagnosing that ReplicationWorker if we are seeing any issues in
rereplication.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1446 from reddycharan/printreplicationworkerid

TREE:tree ced37aad0735b93f4deb6c6bc885677fd462d85c ------
TIME:05/28/2018 07:56:33

COMMIT:[TABLE] mark TableClientTest & TableClientSimpleTest as FlakyTest

Descriptions of the changes in this PR:

*Motivation*

These two integration tests are flaky on shutting down. Mark them as `FlakyTest` to make CI stable while investigating the issue.

*Changes*

Move `FlakyTest` annotation from bookkeeper-server test jar to bookkeeper-common test jar. So it can be used across multiple modules.

At the same time, remove redundant `FlakyTest` annotation at distributedlog-core module.

Related Issue: #1440

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1445 from sijie/mark_two_integration_tests_as_flaky

TREE:tree 0e9d9c60ef07ac3b9018109e76a4145804d4840d ------
TIME:05/26/2018 05:52:50

COMMIT:Update bookkeeper dependencies : netty/protobuf/grpc

Descriptions of the changes in this PR:

*Motivation*

The netty version in bookkeeper is a bit dated than the version in pulsar.
Hence the grpc version is limited to the version that use same netty version.
It causes issues at pulsar using bookkeeper, because pulsar has been using
a newer version for longer time. This causes conflicts when pulsar client and
grpc are used together without proper shading.

*Solution*

Upgrade netty/protobuf/grpc dependencies.

- update netty from `4.1.12` to `4.1.22`, which is the one grpc is using and closer to the one that pulsar is using.
- update grpc from `1.5.0` to `1.12.0`, which is using netty `4.1.22` and protobuf `3.5.1`.
- update protobuf from `3.4.0` to `3.5.1`

Related Issue: apache/pulsar#1844

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1441 from sijie/bump_grpc_version

TREE:tree e76e1d78a09327da5f7b0d03fb8378a4296b75b7 ------
TIME:05/26/2018 00:02:03

COMMIT:Updated site at revision 5fb4112

TREE:tree 53da0e7cc3cfe72eea8a39c66adea8d1f112aead ------
TIME:05/25/2018 20:37:58

COMMIT:Provide the flag to allow ignoring startup failures on loading extra server components

Descriptions of the changes in this PR:

Addressed the comments in apache/bookkeeper#1420

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1426 from sijie/flag_to_allow_silent_failures

TREE:tree dedaf842c069014705648baa4941ac3fb2c6850f ------
TIME:05/25/2018 20:10:22

COMMIT:ISSUE #1442: Assembly descriptor contains a filesystem-root relative reference '/'

Descriptions of the changes in this PR:

*Motivation*

Warnings on buidling bookkeeper dist packages. See #1442.

*Solution*

Remove "/" from the relative reference.

See https://lonelycoding.com/maven-assembly-plugin-warning-the-assembly-descriptor-contains-a-filesystem-root-relative-reference/ for details.

Master Issue: #1442

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1443 from sijie/address_assembly_warnings, closes #1442

TREE:tree 462cc1692d1eff59e395883fa13fca6afa6bd318 ------
TIME:05/25/2018 19:52:13

COMMIT:Fix checkstyle warnings

Descriptions of the changes in this PR:

*Motivation*

There were two concurrent PRs merged at the same time.

apache/bookkeeper#1435 (checkstyle changes) was merged before apache/bookkeeper#1430. so checkstyle warnings
introduced by apache/bookkeeper#1430 were not caught by any CI jobs.

*Solution*

Address the checkstyle warnings introduced by apache/bookkeeper#1430

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1444 from sijie/fix_checkstyle_issue

TREE:tree db2fb91973dcba1c89ad8c1cd6ea5b4ae74b9f1b ------
TIME:05/25/2018 19:49:57

COMMIT:[TABLE SERVICE] client interceptor and storage container grpc proxy

Descriptions of the changes in this PR:

This is a subsequent change after apache/bookkeeper#1428.

*Motivation*

Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses
are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc
services.

*Changes*

To simplify things, this PR introduces two functionalities for simplifying dispatching container requests/responses.

1) *StorageContainerClientInterceptor*: A grpc `ClientInterceptor` that stamps container information (currently is `scId`) into the requests' metadata before sending the requests to the wire.

2) A simple grpc reverse proxy to dispatch grpc requests to the channels provided by a `ChannelFinder`.

*Tests*

1. Existing unit tests covered client interceptor changes.
2. Introduced a `stream-storage-tests-common` module to include common classes that would be used for testing.
3. Introduced a `PingPongService` for testing reverse proxy : unary/client-streaming/server-streaming/bidi-streaming.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1430 from sijie/interceptor_container_requests

TREE:tree 7c77be2cf0166f50ceaa889e000dbb7437ed9be1 ------
TIME:05/25/2018 10:02:06

COMMIT:Issue #1434: Checkstyle is not executed at some modules

Descriptions of the changes in this PR:

*Motivation*

Checkstyle was supposed to run at `validate` phase for every modules. However checkstyle is not running at some modules.
This introduces inconsistency between modules.

*Changes*

- Fix Checkstyle warnings.
- Remove `checkstyle` plugins from modules, only leave it at root pom file or modules that have overrides. This improves default build time.
- Add `checkstyle:check` to CI jobs.

*NOTES*

`microbenchmarks` has too many checkstyle volations. so skip checkstyle for this PR.

Master Issue: #1434

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1435 from sijie/checkstyle_tests, closes #1434

TREE:tree 724fa6995e5bb79f0e4d76c51854da960593b818 ------
TIME:05/25/2018 09:58:26

COMMIT:Use maven-exec-plugin to get the maven project version for CI jobs

Descriptions of the changes in this PR:

*Motivation*

The current approach to get project version isn't reliable on CI environment. It might have garbage output (e.g. exceptions).

*Solution*

Changed to use `exec-maven-plugin` to echo `${project.vesion}`. It provides a more reliable approach to get version on CI environments.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1437 from sijie/fix_getversion_problem

TREE:tree a99a1d8ce70c85151a5b1134622a65958877df69 ------
TIME:05/25/2018 00:48:59

COMMIT:ISSUE #1438: BookKeeperVerifierMain: fix typo for drain_timeout argument

(bug W-5025785)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1439 from athanatos/forupstream/wip-1438, closes #1438

(cherry picked from commit 3aeda6fc98f379e4fa663807c3fd9d75e6092b2a)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 855bf51e6451df31cbc99b698145af5d70efdb5c ------
TIME:05/25/2018 00:45:47

COMMIT:ISSUE #1438: BookKeeperVerifierMain: fix typo for drain_timeout argument

(bug W-5025785)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1439 from athanatos/forupstream/wip-1438, closes #1438

TREE:tree 9405fe567a9d0852ca7b3371e761c34ba1a3dbba ------
TIME:05/25/2018 00:45:47

COMMIT:Allow overriding `redirectTestOutputToFile` with environment settings

Descriptions of the changes in this PR:

Some modules (e.g. `tests/integration`) are allowed to override `redirectTestOutputToFile` behavior; while some are disallowed.

This PR is to make all modules are allowed to override that setting.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1432 from sijie/make_redirectTestOutputToFile_configurable

TREE:tree 9771cec3399f02a9ebf3d228aa00ab14a9dca6b2 ------
TIME:05/24/2018 17:36:11

COMMIT:Exclude `.vagrant` from apache-rat:check

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1401 provides a `Vagrantfile` for running integration tests on linux vm.
A `.vagrant` directory will be left under `dev` directory, which it will fail `apache-rat:check`.

*Solution*

Exclude `.vagrant` directory from apache-rat check

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1431 from sijie/fix_apache_rat_check

TREE:tree 9b82bf6f8c54797c87e21eb212564cdf9f436d4a ------
TIME:05/24/2018 17:35:33

COMMIT:Fix bookkeeper post commit CI

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1422 includes stream storage integration tests in tests/integration.
so we need to include `-Dstream` on building the tests.

*Solution*

Update the bookkeeper post commit CI jobs to include `-Dstream`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1429 from sijie/fix_post_commit_ci

TREE:tree 9e5c7fd4aea4911b6ee45787ebd558322f70bd83 ------
TIME:05/24/2018 00:42:02

COMMIT:[TABLE SERVICE] Move grpc services from server module to storage module

Descriptions of the changes in this PR:

*Motivation*

Current almost every grpc requests are wrapped into `StorageContainerRequest` and their responses
are wrapped into `StorageContainerResponse`. It makes things a bit complicated on adding new grpc
services.

To simplify things, we can use grpc ClientInterceptor to stamp container information (e.g. scId)
into the request metadata and write a grpc service registry to take the container information from
request metadata and dispatch requests to containers.

In order to achieve it, we need to move the grpc services to storage container.

*Solution*

This PR moves grpc services from server module to storage module, so we can simplify the wire protocols.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1428 from sijie/move_grpc_service_to_storage

TREE:tree 069b5f88acce48d2b74c6f9ab643eaec495d71bf ------
TIME:05/23/2018 19:56:58

COMMIT:Publish bookkeeper dev image to docker hub

Descriptions of the changes in this PR:

*Motivation*

We built a `bookkeeper-current` image that reflects latest master for integration tests. However currently we don't publish this docker image to any docker registry. So it is inconvenient to test latest master in dockerized environments.

*Solution*

- Add a dev script to publish `bookkeeper-current` image to configured docker registry specified at `DOCKER_REGISTRY`
- Update the nightly snapshot job to publish generated `bookkeeper-current` image to docker hub `apachebookkeeper`
- Add `bin/standalone` script to use `docker-compose` to launch a 3-nodes bookkeeper cluster locally. The script generates docker-compose.yml and handles mounting local volumes and port forwarding. so developers can use that for quick development.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1427 from sijie/push_current_docker_image

TREE:tree 516a389ad69bbb15e2e0d1211f62a59d51f41337 ------
TIME:05/23/2018 19:56:04

COMMIT:[TABLE SERVICE] Move integration tests under `stream/tests/integration` to `tests/integration/cluster`

Descriptions of the changes in this PR:

The original integration tests were written based a non-dockerized standalone stream cluster. Moved them to use
the dockerized integration test framework. So all the integration tests are actually testing the table service run as part of bookies.

This change is based on #1422 .
a371ff2 is the change in this PR to be reviewed.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1423 from sijie/move_more_stream_it_tests

TREE:tree 85773207d4883249dd7343d2978571f3c00f0c10 ------
TIME:05/23/2018 04:11:16

COMMIT:ISSUE #1415: [DLOG] org.apache.distributedlog.fs.TestDLFileSystem fails on CI

Use a generated tempDir for DL FS tests instead of using an hard coded /tmp path

Fix for #1415

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1417 from eolivelli/fix/no-tmpdir-fsdl, closes #1415

(cherry picked from commit 206443dff3fde2ca2eaa355b9799ecc6d5100988)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree aaccdb9db15f258963bac55ad0601bbd558663c1 ------
TIME:05/23/2018 04:09:08

COMMIT:ISSUE #1415: [DLOG] org.apache.distributedlog.fs.TestDLFileSystem fails on CI

Use a generated tempDir for DL FS tests instead of using an hard coded /tmp path

Fix for #1415

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1417 from eolivelli/fix/no-tmpdir-fsdl, closes #1415

TREE:tree 56ba582b5c24c8ed3318fa54717163bcb736c45b ------
TIME:05/23/2018 04:09:08

COMMIT:[TABLE SERVICE] start table service as an extra component of bookie

Descriptions of the changes in this PR:

*Motivation*

table service was built over bookkeeper ledgers. it is an extension to bookies' functionalities, so it is much convenient to start the service as one additional component with bookie, just like how we start `AutoRecovery` along with bookie.

*Solution*

- include `stream/server` module as part of bookkeeper server/all binary distributions
- abstract `StorageServer` to allow controlling whether to start bookie or not
- provide a ServerLifecycleComponent of `StorageServer`, so it can be used as an extra component of bookie

*Tests*

- improve the integration tests to start table service as part of bookie containers
- move `LocationClientTest` to container based integration tests

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1422 from sijie/start_table_service

TREE:tree 33e04bd968045fffa38c97e5f12a69b8d5a0d40e ------
TIME:05/22/2018 20:43:31

COMMIT:Updated site at revision 9655943

TREE:tree c23856369b215edb10c184d2eb5d2ca496273746 ------
TIME:05/22/2018 16:23:04

COMMIT:BP-14 WriteFlag DEFERRED_SYNC Client Side Implementation

Introduce implementation of WriteFlag#DEFERRED_SYNC on LedgerHandle (purely client-side).

Tests are only on the client-side (with Mockito), there is no implementation on the bookie side. Most significant tests will come with the force() API, at this point we can only test that we have not broken the LAC advance mechanism.

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV)

This closes #853 from eolivelli/bp14-deferred-force-write-client-side

TREE:tree 38b87871d822dfb77dbd2512235128786ea8897f ------
TIME:05/22/2018 16:05:07

COMMIT:Allow bookie to start if failed to load extra server components

Descriptions of the changes in this PR:

*Motivation*

`extraServerComponents` provides the flexibility to allow bookie to start with extra server components.
It acts as a plugin mechanism to extend the functionality of bookies. However it is okay to allow bookie
start up when failed to load extra server components.

This is a change for allowing starting table service as extra components in bookies.

*Solution*

Catch the exception and log it when failed to load extra server components.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1420 from sijie/allow_start_bookie

TREE:tree 0f0ab1be9b299c8230fe48f85a4ed3bbd501cc2a ------
TIME:05/22/2018 10:43:46

COMMIT:Build stream modules for integration tests

Descriptions of the changes in this PR:

*Motivation*

apache/bookkeeper#1422 adds table service as part of integration tests. so we need to build stream modules
in order to run integration tests for apache/bookkeeper#1422

*Solution*

Add "-Dstream" in the maven commands for `precommit-integrationtests` CI job.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1424 from sijie/compile_stream_module

TREE:tree 1669290ec11dcd17cd1d0b6db951ba1cf962be57 ------
TIME:05/22/2018 09:27:46

COMMIT:Provide a util method to run functions with metadata client driver

Descriptions of the changes in this PR:

*Motivation*

Currently `MetadataDrivers` provides util methods to run functions with metadata bookie driver.
It is convinient to provide a util method to run functions with metadata client driver as well.

*Solution*

Provide a util method `runFunctionWithMetadataClientDriver` to run functions with metadata client driver.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1421 from sijie/utils_to_run_client_driver

TREE:tree a22657e02b1d9d72c840ccd4aa74d713100cf0c3 ------
TIME:05/22/2018 07:39:40

COMMIT:Fix dev/check-binary-license on macOS

Descriptions of the changes in this PR:

*Motivation*

`dev/check-binary-license` is used for checking whether LICENSE files are updated to reflect the dependencies included in the distribution packages.
However this script doesn't work on macOS, which makes the development on macOS inconvinient.

*Solution*

The change removes `--wildcards` from tar command. The option only works on linux machines.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1418 from sijie/fix_check_license_script_master

TREE:tree 82b316b29458042ab51bb5ff567b6cc909d5c938 ------
TIME:05/22/2018 07:38:52

COMMIT:Updated site at revision 916cd66

TREE:tree 39aa86c7ee41a978f4d38a319127453d496877a1 ------
TIME:05/22/2018 04:20:59

COMMIT:Issue #570: EntryLogManagerForEntryLogPerLedger implementation

Descriptions of the changes in this PR:

This is < sub-task6  > of Issue #570

introducing EntryLogManagerForEntryLogPerLedger, which is the
implementation of EntryLogManager for entrylog per ledger
feature.

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Andrey Yegorov <None>, Sijie Guo <sijie@apache.org>

This closes #1391 from reddycharan/entrylogmanagerentrylogperledger, closes #570

TREE:tree 4f5fe9fd6686bca6458ce1b183f25022797b31d5 ------
TIME:05/22/2018 04:02:35

COMMIT:Updated site at revision 9ba4c4e

TREE:tree acae664590b0226faef23a7259c6e0d026b4d84c ------
TIME:05/22/2018 00:13:08

COMMIT:Provide zookeeper startup script

Descriptions of the changes in this PR:

*Motivation*

ZooKeeper is a dependency of bookkeeper shipped along with bookkeeper dist package. However we never provide any script to startup zookeeper in the bookkeeper binary package and never test the zookeeper version shipped along with bookkeeper

*Solution*

- add zookeeper in `bin/bookeeper` scripts to start zookeeper using bookkeeper scripts
- refactor bookkeeper docker scripts to start bookie/zookeeper/standalone
- use zk adminPort for health check, since 4letters commands are explicitly disabled at 3.5

*Tests*

Existing integration tests test the docker scripts and the bash script changes to start zookeeper.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1416 from sijie/package_zookeeper

TREE:tree 6043fe0b50c4cbc32d6a84b345348cdf837f9c72 ------
TIME:05/21/2018 23:54:52

COMMIT:Bookies should be from different racks in a Writequorum.

Descriptions of the changes in this PR:

Ideally RackAwareEnsemblePlacementPolicy should try to select
bookies from different racks for a write quorum. So in a
WriteQuorum, bookies should be from WriteQuorum number of racks,
provided there are sufficient number of available racks and
bookies.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1397 from reddycharan/configracks

TREE:tree 43cb42d5b79b3ab371feae4e383797231856890c ------
TIME:05/21/2018 23:53:43

COMMIT:Add a docker based `BookKeeperClusterTestBase` for failure related integration tests

Descriptions of the changes in this PR:

*Motivation*

Currently we don't have any failure related testing for table service. Since we are using docker as the integration testing infrastructure,
It is better to use container for those failure testings, rather than going down the path as what we did before.

*Solution*

This change provides the basic test base for bookkeeper cluster using dockers. `BookKeeperClusterTestBase` provides the similar functionalities
to start/stop bookies as what we did in the unit test.

`bookkeeper/tests/containers` in `integration-tests-topologies` provides all the basic containers used for testing.
`tests/integration/cluster` and `tests/integration/topologies` provides the test base for writing tests using dockerized bookkeeper cluster.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1412 from sijie/docker_cluster_dev

TREE:tree 788a6766c9a5a964e6e80ea2ce2c0dedcb362376 ------
TIME:05/18/2018 21:49:31

COMMIT:Updated site at revision 2414ce0

TREE:tree ca9c42d4f76af784a866734caed1a8796a0ba70e ------
TIME:05/17/2018 11:18:53

COMMIT:Updated site at revision a267478

TREE:tree 92bdeb3d3a72c77415c55dfda14ac913366a3f34 ------
TIME:05/17/2018 10:57:33

COMMIT:Add a test docker image for current version only

Descriptions of the changes in this PR:

*Motivation*

The current test images don't use any scripts that shipped with official docker image.
We basically don't have any test coverage on the official docker image we shipped for each release.

*Solution*

Introduce a `bookkeeper-current` image representing an image for latest master.

Use `apachebookkeeper/all-versions-image` for BC tests, use `apachebookkeeper/bookkeeper-current` as tests only needs latest master image.

Add an integration test to test standalone mode using the `bookkeeper-current` image

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1408 from sijie/docker_dev

TREE:tree 94d0cf15fcfc2f6a625f85d86f231d1955e50f74 ------
TIME:05/17/2018 10:39:04

COMMIT:Issue #1405: ReplicationWorker should back-off retrying.

Descriptions of the changes in this PR:

ReplicationWorker should backoff replication
after threshold number of replication failures of a ledger.

Currently ReplicationWorker will do busy retrials if
replication is failed for a ledger, instead it should
backoff if replication had failed for threshold
number of times. This can be done by deferring
releasing of underreplicated lock by
'lockReleaseOfFailedLedgerGracePeriod' amount
of time.

Master Issue: #1405

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1406 from reddycharan/fixreplicator, closes #1405

TREE:tree bbf63c20229ecc3aee2b892bf97cbd9a77c15f4a ------
TIME:05/17/2018 10:38:20

COMMIT:ISSUE #1390 Ensemble change on delayed write error

Error on delayed writes are dropped if the addEntry
is in complete state (ack quorum satisfied).
This change records the delayed write failure and forces
ensemble change onthe next write. This saves from having
extended under replicated status on the ledger and also
avoids unnecessary build up at PCBC channel.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Descriptions of the changes in this PR:

(PR description content here)...

Master Issue: #<master-issue-number>

Author: JV Jujjuri <vjujjuri@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1395 from jvrao/bk-issue-1390-delayedWriteError, closes #1390

TREE:tree d53717bafa75748dcfb3dd57a0213b2f5a5b96d0 ------
TIME:05/17/2018 10:37:28

COMMIT:Refactor bookkeeper bash scripts and move dlog script to root bin directory

Descriptions of the changes in this PR:

*Motivation*

Since 4.7, we have moved bash scripts and configuration to the root directory. However the scripts and configurations for dlog and table-service modules are still in their own modules. It is inconvenient and confusing. This change mainly refactor current bookkeeper script to make it reusable for other modules.

*Code Change*

The main changes are:

- abstract the common logic in `bin/bookkeeper` to `bin/common.sh`. These common logics include:
   * common definitions on environment variables, such jvm settings, bk conf, log4j conf, classpath and such.
   * common functions can be reusable, such as find jars, add maven dependencies.
- simplify `bin/bookkeeper` and `bin/bookkeeper-cli` by reusing `bin/common.sh`
- remove `stream/distributedlog/core/bin/dlog` to `bin/dlog` and simplify it by reusing `bin/common.sh`

*Tests*

Most of the changes in this PR are tests to ensure this script refactor is done correctly.

- introduced a module `tests/scripts` for testing all the bash scripts in bookkeeper project. This module uses [shUnit2](https://github.com/kward/shunit2) for testing bash scripts. This gives a good test coverage on `bin/common.sh`.

- add a few CLI smoketests under `tests/integration/smoke` to smoke test all CLI tools, including `bin/bookkeeper shell`, `bin/bookkeeper-cli` and `bin/dlog`. This makes sure all the CLI scripts work well after refactor.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1407 from sijie/include_dlog_library

TREE:tree aed837a794eae71e320326e211ffeeb0ac4eebd9 ------
TIME:05/17/2018 06:00:42

COMMIT:Updated site at revision 9259173

TREE:tree fdabdea16ba439fcb4e98158484b975aed6773c5 ------
TIME:05/15/2018 20:30:56

COMMIT:ISSUE #1403: ArrayIndexOutOfBoundsException is thrown on readLastAddConfirmedAndEntry

Descriptions of the changes in this PR:

*Motivation*

There are two bugs in `ReadLastAddConfirmedAndEntry`:

1) a regression was introduced by #657. the long poll read op is attempting to long-poll reading lac. since lac is stored across ensemble, so the retry logic assumes it will attempt over all the bookies in the ensemble. however #657 use a `write-quorum-size` write set for tracking those attempts. this leads to ArrayIndexOutOfBoundsException reported at #1403. The integrate tests added in this PR can easily reproduce this issue.

2) there was a bug on retry logic when a ledger whose ensemble size is larger than write quorum size. when this happens, it will claim lac is not advanced prior to attempt the bookie in the ensemble. so the client will never know lac is advanced if using long poll reads on such ledgers. The integrate tests added in this PR can also catch this issue.

disclaim: twitter uses long poll reads but never uses `ensembleSize > writeQuorumSize`. so this is not a problem for dlog users.

*Solution*

- introduce a `getWriteSetForLongPoll` call that uses `ensembleSize` for building the write set. this would address problem 1)
- fix the assignment of `numEmptyResponsesAllowed`, so the long poll reads can work with `ensembleSize > writeQuorumSize`
- add integration tests for long polling reads

at the same time, also add an integration test for normal tailing reads with

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1404 from sijie/longpoll_tests, closes #1403

(cherry picked from commit 92591733c8b778f63cd71a00b2c7ed2c69c41312)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 86bb3185edfbe7b58048bc9eec19e2d9006a3c7a ------
TIME:05/15/2018 20:12:54

COMMIT:ISSUE #1403: ArrayIndexOutOfBoundsException is thrown on readLastAddConfirmedAndEntry

Descriptions of the changes in this PR:

*Motivation*

There are two bugs in `ReadLastAddConfirmedAndEntry`:

1) a regression was introduced by #657. the long poll read op is attempting to long-poll reading lac. since lac is stored across ensemble, so the retry logic assumes it will attempt over all the bookies in the ensemble. however #657 use a `write-quorum-size` write set for tracking those attempts. this leads to ArrayIndexOutOfBoundsException reported at #1403. The integrate tests added in this PR can easily reproduce this issue.

2) there was a bug on retry logic when a ledger whose ensemble size is larger than write quorum size. when this happens, it will claim lac is not advanced prior to attempt the bookie in the ensemble. so the client will never know lac is advanced if using long poll reads on such ledgers. The integrate tests added in this PR can also catch this issue.

disclaim: twitter uses long poll reads but never uses `ensembleSize > writeQuorumSize`. so this is not a problem for dlog users.

*Solution*

- introduce a `getWriteSetForLongPoll` call that uses `ensembleSize` for building the write set. this would address problem 1)
- fix the assignment of `numEmptyResponsesAllowed`, so the long poll reads can work with `ensembleSize > writeQuorumSize`
- add integration tests for long polling reads

at the same time, also add an integration test for normal tailing reads with

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1404 from sijie/longpoll_tests, closes #1403

TREE:tree e9ff034b65b23f0a1ed287c2032aaf89d7094e27 ------
TIME:05/15/2018 20:12:54

COMMIT:Use isEmpty method instead of size check

In HTTP ListLedgerService use is Empty instead of size check.

Author: Ali Ahmed <alahmed.se@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1371 from aahmed-se/minorRefactor

TREE:tree 2716ff9210e3fa09e20ae48a560c2758ec91935c ------
TIME:05/15/2018 13:55:36

COMMIT:Updated site at revision 6a48cd5

TREE:tree 73e5b7318d70c16c6dc3dad9cfe8685a0096003a ------
TIME:05/14/2018 22:22:37

COMMIT:Issue #1396: Export metrics in same http server

Descriptions of the changes in this PR:

*Motivation*

Currently metrics provider and http admin endpoint are isolated due to the way how things are modularized.
This requires two ports to be used, one is for metrics provider to expose metrics, while the other one is used by
http admin endpoint for expose admin endpoints.

When implementing a bookkeeper operator on k8s, it becomes confusing on managing those ports and do health checks.
It would be good to allow export metrics in same http admin endpoint if it is enabled.

*Solution*

- Introduce a method `writeAllMetrics` in stats provider to allow stats provider exporting metrics.
- Add a `MetricsService` in bookie http service and export stats provider's metrics under `/metrics` endpoint.

This fixes #1396

Master Issue: #1396

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1399 from sijie/same_http_metrics_port, closes #1396

TREE:tree d2afdbd3ff302f907eaeb36d73dfa90e85273161 ------
TIME:05/14/2018 22:03:54

COMMIT:BP-14 forceLedger wire protocol server side implementation

Implementation of the wire protocol for the BP-14 force ledger API on bookie side

Author: Enrico Olivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>,  Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>

This closes #1393 from eolivelli/bp14-simple-force-ledger-proto

TREE:tree 818f69a66381907604ed44be85ee391a14f164bf ------
TIME:05/14/2018 08:16:22

COMMIT:Fix TestSmoke#testTailingReads

Descriptions of the changes in this PR:

*Motivation*

TestSmoke#testTailingReads is testing the tailing behavior at bookkeeper. However the current testing logic is a bit
problematic on checking whether the reader has caught up with the expected last add confirmed. so the read logic break
earlier before reading the expectedLastConfirmedEntry.

*Solution*

Fix the checking logic on breaking the read loop.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1402 from sijie/fix_integration_tests

(cherry picked from commit cd71e0981dffa92edf51f9665117a30265b1cf4a)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a0cab806e63f9b8a3b981a43aef56b54b94272a7 ------
TIME:05/12/2018 13:32:57

COMMIT:Fix TestSmoke#testTailingReads

Descriptions of the changes in this PR:

*Motivation*

TestSmoke#testTailingReads is testing the tailing behavior at bookkeeper. However the current testing logic is a bit
problematic on checking whether the reader has caught up with the expected last add confirmed. so the read logic break
earlier before reading the expectedLastConfirmedEntry.

*Solution*

Fix the checking logic on breaking the read loop.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1402 from sijie/fix_integration_tests

TREE:tree 221602c8ddb5e96a2f4bdb5ce4e72af95b55a6be ------
TIME:05/12/2018 13:32:57

COMMIT:Add smoke tests for LedgerHandleAdv and TailingReads

Descriptions of the changes in this PR:

Add two tests:

- basic writes/reads with LedgerHandleAdv
- tailing reads with LedgerHandle

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1389 from sijie/more_integration_tests

TREE:tree b92d475cf97cbbc60864863176364f5d3965048c ------
TIME:05/06/2018 14:06:24

COMMIT:Provide a vagrantfile to launch a linux vm for running integration tests

Descriptions of the changes in this PR:

*Motivation*

Currently all bookkeeper's integration tests and bc tests are docker based and written
using arquillian framework. Due to the network issues in docker and the way how bookies
advertise themselves in the cluster, we can *ONLY* run integration tests in a linux
environment. It is inconvinient to people who is using macOS as the development environment.

*Solution*

This PR is providing a Vagrantfile to lanuch a dev vm that contains all the tools required
for running integration tests and bc tests. So people can actually debug and test integration
tests locally using a linux vm.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1401 from sijie/vagrant_files

TREE:tree 44c0fba0363c2ca2b591e531cdd1ecec15bb708e ------
TIME:05/12/2018 08:45:25

COMMIT:ISSUE #1339: Cleanup the directories created by DbLedgerStorageTest

Descriptions of the changes in this PR:

  Cleaned up the directories `dir1` and `dir2` left behind by the test `DbLedgerStorageTest`

Master Issue: #1339

Author: arunlakshman <arunmuthuravi@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1398 from arunlakshman/issue1339, closes #1339

TREE:tree 4784a6868b50f0520340790add49a26cc6778d47 ------
TIME:05/12/2018 05:13:29

COMMIT:BP14 - forceLedger bookie side implementation

This is the bookie side implementation of the force() API as defined in BP-14, without the wire protocol handler.
We will introduce a new RPC which allows the client to ensure that all data sent for a  given ledger is persisted durably to the bookie, this is useful for DEFERRED_SYNC writers. In this case we are simulating a regular sync'd write to the journal choosen for the ledger.

Author: Enrico Olivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, JV Jujjuri <vjujjuri@salesforce.com>

This closes #1375 from eolivelli/bp14-simple-forceledger

TREE:tree 546606a9ad1fb7bcfebcc449ccfa80fc6a764532 ------
TIME:05/08/2018 11:21:41

COMMIT:Updated site at revision 0ccde17

TREE:tree 2c510b63966b45661342f3eabd04f2c39f4b179b ------
TIME:05/07/2018 11:04:13

COMMIT:[TABLE SERVICE] a zk based storage container controller

Descriptions of the changes in this PR:

*Motivation*

The original storage container "controller" was written in helix. The helix controller's placement is kind of not assuming any properties of shared storage. however the table service is leverage bookkeeper's as its segment/log store. the table service is built in a more `stateless` way, where a storage container can be moved between servers in a much lightweight way.

Also helix codebase is a bit large, if we eventually going to eliminate zookeeper, the cost of switching it off helix will be much expensive. so this PR is introducing a simple zk based controller for assigning storage containers to servers.

*Solution*

In this zk base solution, it is comprised of 3 parts: server registration, cluster & storage controller, storage container manager.

**registration**

this solution leverages existing registration client/manager interfaces. so each storage server registers itself under `/stream/servers/available`.

**cluster & storage controller**

A storage server is elected as a the leader, which runs a ClusterController. The cluster controller reads cluster metadata from zookeeper (the cluster metadata includes like how many containers available in the cluster), and use a storage controller to compute an assignment plan as the ideal state for container assignment mapping, and then update the assignment mapping to zookeeper under `/stream/assignment`.

**storage container manager**

Each storage server runs a storage container manager, which watches the assignment plan in zookeeper. The cluster controller updates the assignment plan. Once it receives watches/updates from the assignment plan that computed by cluster controller, the storage container manager will align itself to the ideal assignment map by starting/stopping storage containers.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1392 from sijie/table_service_manager

TREE:tree 2745829fedc824afd4e19959ff902087fe8fa9aa ------
TIME:05/07/2018 10:50:29

COMMIT:Enable Prometheus stats provider to use custom http container

This change enable Prometheus stats provider to:
- use an user supplied registry
- do not start internal Jetty server

The context is to run the Bookie inside a process together with a servlet container (like Apache Tomcat) and use the existing web endpoint instead of opening another http (plain) port

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1394 from eolivelli/prom-use-servlet

(cherry picked from commit 0ccde17214168ec1f87741d1053ef66ce2344fff)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6878fd054e1a72f5b55d24b7721e8dc77f5bad33 ------
TIME:05/07/2018 10:46:30

COMMIT:Enable Prometheus stats provider to use custom http container

This change enable Prometheus stats provider to:
- use an user supplied registry
- do not start internal Jetty server

The context is to run the Bookie inside a process together with a servlet container (like Apache Tomcat) and use the existing web endpoint instead of opening another http (plain) port

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1394 from eolivelli/prom-use-servlet

TREE:tree 1c4e2e523c26a442f359fe2f93b87cf0817f9a19 ------
TIME:05/07/2018 10:46:30

COMMIT:Add smoke tests for LedgerHandleAdv and TailingReads

Descriptions of the changes in this PR:

Add two tests:

- basic writes/reads with LedgerHandleAdv
- tailing reads with LedgerHandle

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1389 from sijie/more_integration_tests

TREE:tree c91e3c1b528f0cc63e9086d8ca520291c73796db ------
TIME:05/06/2018 14:06:24

COMMIT:Make bookie state manager & registration manager reusable outside of bookie

Descriptions of the changes in this PR:

*Motivation*

Since 4.6.0, we have already abstracted a pretty good interfaces around registration service and state management. Most of the classes can actually be reused for use cases that have similar service discovery and writable/readonly state transition management.

*Solution*

The change is try to cleanup `BookieStateManager` and `ZKRegistrationManager` to make them more generic and can be reused for other usage.

*Result*

Registration Interfaces and StateManager can be used outside of bookie.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1373 from sijie/refactor_bookie_state_manager

TREE:tree fe31d140c16317d66daae1e73c15d58ec5a652cd ------
TIME:05/04/2018 04:09:15

COMMIT:[TABLE SERVICE] [DLOG] Fix `ConcurrentModificationException` on accessing component configuration

Descriptions of the changes in this PR:

*Motiviation*

Currently when running table service in standalone mode, it occasionally throws `ConcurrentModificationException`. Because
multiple components are sharing same underlying composite configuration. It causes the contention between copying keys and retrieving keys.

*Solution*

Change the component configuration to use a concurrent hashmap based configuration. Also changed the `loadConf` behavior to copy the keys / sub-keys
into the component configuration. This prevents components sharing same underlying composite configuration.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1378 from sijie/fix_conf

TREE:tree 9bb11e084eab7d33d4095a39c984e5b6c7ffdb03 ------
TIME:05/04/2018 04:08:35

COMMIT:ISSUE #1387: added unit test for LedgerHandleAdv handling of attempts to use LedgerHandle's specific API calls (add without specifying entry id)

Descriptions of the changes in this PR:

- added unit test.

Master Issue: #1387

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1388 from dlg99/fix/ISSUE-1387_LedgerHandleAdv_with_nonAdv_usage, closes #1387

(cherry picked from commit 20e3f6c3e16e409b03d3d0fefad699c856ca3b49)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree df06abb536cd5d39fd54f0332bcc893cb787b1a4 ------
TIME:05/04/2018 04:07:27

COMMIT:ISSUE #1387: added unit test for LedgerHandleAdv handling of attempts to use LedgerHandle's specific API calls (add without specifying entry id)

Descriptions of the changes in this PR:

- added unit test.

Master Issue: #1387

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1388 from dlg99/fix/ISSUE-1387_LedgerHandleAdv_with_nonAdv_usage, closes #1387

TREE:tree 8bb8c8a5e190956b33ec01eec0704a004522bbac ------
TIME:05/04/2018 04:07:27

COMMIT:Refactor EntryLogger class

Descriptions of the changes in this PR:

- Split EntryLogger class into multiple classes.
- create separate classes for EntryLogManager, EntryLoggerAllocator and EntryLogManagerForSingleEntryLog.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1365 from reddycharan/refactorentrylogger

TREE:tree c08379ab29ba153ebef4eac96c829cbd921956f6 ------
TIME:05/04/2018 00:49:30

COMMIT:Fix TestCompatUpgrade

Descriptions of the changes in this PR:

*Motivation*

 #1352 update the BC tests to include newer versions, however it removes the flags that used for 4.6.0 to handle badly shutdown.
 This change makes the BC tests become very flaky.

*Solution*

- apply `badlyshutdown` flag to both from 4.6.0 to 4.6.1 and from 4.6.1 to 4.6.2 upgrade

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1386 from sijie/vagrant_files

(cherry picked from commit 92525c2ae30f41badb3986e3bc69de3aceb67e2d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ffbc9d24539b67d581bf506e12b738477a9f9216 ------
TIME:05/04/2018 00:47:46

COMMIT:Fix TestCompatUpgrade

Descriptions of the changes in this PR:

*Motivation*

 #1352 update the BC tests to include newer versions, however it removes the flags that used for 4.6.0 to handle badly shutdown.
 This change makes the BC tests become very flaky.

*Solution*

- apply `badlyshutdown` flag to both from 4.6.0 to 4.6.1 and from 4.6.1 to 4.6.2 upgrade

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1386 from sijie/vagrant_files

TREE:tree 9e3ed67ea7c923a5b66d82de7306e01eae3bf644 ------
TIME:05/04/2018 00:47:46

COMMIT:Updated site at revision 0b01c12

TREE:tree ab1234a39b8e3ea5d831f045d2da9a415446ffbe ------
TIME:05/03/2018 22:07:04

COMMIT:Fix format problem of BP-32

Also mark BP-32 as accepted.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1383 from sijie/fix_typos

TREE:tree 14641ce9a15773b7455b24e9745e2e527d7971d8 ------
TIME:05/03/2018 21:31:34

COMMIT:ISSUE #1384: Bump checkstyle version

Descriptions of the changes in this PR:

*Motivation*

mvn build fails on a centos/7 box. Exceptions are thrown as below:

```
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check (checkstyle) on project circe-checksum: Execution checkstyle of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-checkstyle-plugin:2.17:check: java.lang.NoSuchMethodError: org.slf4j.spi.LocationAwareLogger.log(Lorg/slf4j/Marker;Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
```

*Solution*

The problem was addressed in https://issues.apache.org/jira/browse/MCHECKSTYLE-335. We need to bump the checkstyle plugin version to `3.0.0`

Master Issue: #1384

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1385 from sijie/vagrant_files, closes #1384

TREE:tree 9966dc1388b8d42417908757d30b8bddaae741e4 ------
TIME:05/03/2018 21:30:54

COMMIT:ZKLedgerManager.writeLedgerMetadata should return appropriate error.

Descriptions of the changes in this PR:

ZKLedgerManager.writeLedgerMetadata should return
NoSuchLedgerExistsException error in the case it
gets KeeperException.Code.NONODE rc value from ZK.
ZKLedgerManager.removeLedgerMetadata does that as well.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1382 from reddycharan/abstractzkledgermanagerissue

(cherry picked from commit 7580ce9dd8449f777e35b580bb6786f12d7703bc)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f29a38e61559b41db4b796179cc844b693b1acc7 ------
TIME:05/03/2018 08:38:10

COMMIT:ZKLedgerManager.writeLedgerMetadata should return appropriate error.

Descriptions of the changes in this PR:

ZKLedgerManager.writeLedgerMetadata should return
NoSuchLedgerExistsException error in the case it
gets KeeperException.Code.NONODE rc value from ZK.
ZKLedgerManager.removeLedgerMetadata does that as well.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1382 from reddycharan/abstractzkledgermanagerissue

TREE:tree b6a52cbeda9ddaa2f2eae852d0e83a8415d52e05 ------
TIME:05/03/2018 08:38:10

COMMIT:Updated site at revision c4af734

TREE:tree 44e189884f3195d3963147dcb5e13ad079a29d5f ------
TIME:05/03/2018 06:20:41

COMMIT:[TABLE SERVICE] apply backoff policy to rpc requests if storage container is not found

Descriptions of the changes in this PR:

*Motivation*

A storage container can move between servers due to failures, or it can take time to start on a server. During that short period of time, it is "unavailable" and clients will receive `Status.NOT_FOUND` from grpc channels. The client should retry on this error and attempt to re-locate the storage container again.

*Modification*

- add backoff policy in client settings
- apply the backoff policy at storage container channel. if it receives `NOT_FOUND` grpc exception, it will reset the server channel, so subsequent requests will re-attempt to relocate the storage container.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1379 from sijie/rpc_backoffs

TREE:tree 933d44a1d040fdaa49bfbd3cc1ffd95195e91813 ------
TIME:05/03/2018 06:19:42

COMMIT:BP-32: Advisory (optimistic) write close

Descriptions of the changes in this PR:

initial proposal for Advisory (optimisitic) write close

Master Issue: #1343

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1374 from reddycharan/advwriteclosebp

TREE:tree 03b078f34ba157eafb3511434bbb6f96ba7354e2 ------
TIME:05/03/2018 05:59:04

COMMIT:OrderedScheduler#chooseThread(key) handle null key

Descriptions of the changes in this PR:

*Motivation*

It is more convenient if OrderedScheduler#chooseThread(key) can handle null key. so the applications who is using #chooseThread don't need to worry which method to choose - `chooseThread()` vs `chooseThread(key)`.

*Solution*

in `chooseThread(key)`, fallback to randomly pickup a thread if key is null.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1372 from sijie/order_scheduler_null_key

(cherry picked from commit 1f0f92c0c0cfc0cafe0cab976d8c5fbdf34c10d3)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ec76d294b86bf64926763b565f4543a3f56a3c62 ------
TIME:05/01/2018 01:29:08

COMMIT:OrderedScheduler#chooseThread(key) handle null key

Descriptions of the changes in this PR:

*Motivation*

It is more convenient if OrderedScheduler#chooseThread(key) can handle null key. so the applications who is using #chooseThread don't need to worry which method to choose - `chooseThread()` vs `chooseThread(key)`.

*Solution*

in `chooseThread(key)`, fallback to randomly pickup a thread if key is null.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1372 from sijie/order_scheduler_null_key

TREE:tree 0d5777f165ffdd9f7009393957ee3984b7dbcc05 ------
TIME:05/01/2018 01:29:08

COMMIT:Updated site at revision a3c141e

TREE:tree 0637b762bd21d1c7b91e9f13446a1cc56545a6d8 ------
TIME:04/28/2018 01:54:12

COMMIT:Issue #570: Introduce EntryMemTableWithParallelFlusher

Descriptions of the changes in this PR:

This is < sub-task4  > of Issue #570

When there is going to be entrylog per ledger, then for
better utilizing the availability of multiple entrylogs,
parallel flush of entrymemtable can be done. In this
sub-task EntryMemTableWithParallelFlusher is introduced,
which uses OrderedExecutor with "numOfMemtableFlushThreads"
number of threads.

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1358 from reddycharan/memtableparallel, closes #570

TREE:tree d62286dc203f9b8f09b3245276ed3c82f3e1b16c ------
TIME:04/28/2018 01:33:49

COMMIT:Updated site at revision 9c3e8c9

TREE:tree 59f134a555d685e07603afa7e06a714db94a298e ------
TIME:04/27/2018 05:30:48

COMMIT:ISSUE #1086 (@bug W-4146427@) Client-side backpressure in netty (Fixes: io.netty.util.internal.OutOfDirectMemoryError under continuous heavy load) (#1088)

* ISSUE #1086 (@bug W-4146427@) Client-side backpressure in netty (Fixes: io.netty.util.internal.OutOfDirectMemoryError under continuous heavy load)
TREE:tree bca5c549815cfb8da16092cec30d1c59cd009e45 ------
TIME:04/27/2018 05:12:47

COMMIT:Updated site at revision ed3b010

TREE:tree aea597849ab936bd33ee3bd9ba40be338ad0a418 ------
TIME:04/25/2018 11:28:53

COMMIT:[TABLE SERVICE] Dlog based checkpoint store

*Motivation*

Currently the table range stores are using local filesystem as a checkpoint store. It is okay for running as standalone mode.
But it doesn't work to run in a distributed mode. This change is introducing a dlog based checkpoint store to make sure all
the sst files of table ranges are durably checkpointed into bookkeeper itself.

*Solution*

Introduced a dlog based checkpoint store.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1366 from sijie/dlog_checkpoint_manager

TREE:tree e97c35b9294522e015a0f785f903eb0e03903742 ------
TIME:04/25/2018 11:13:28

COMMIT:Issue #1345: entrylogger.flush should flush currentlog first.

Descriptions of the changes in this PR:

It is incorrect to call flushrotatedlogs first and
then flushcurrentlogs in the EntryLogger
(EntryLogManager) flush method. It should be other way around.

Master Issue: #1345

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1360 from reddycharan/elmflushorder, closes #1345

TREE:tree 451d08eedfd4da7770583b1995c425e85f10fffb ------
TIME:04/25/2018 11:11:46

COMMIT:Issue #1363: Fast and Garbage-Free Codahale Statistics Timers

This change introduces a new Codahale-based metrics provider "FastCodahaleMetricsProvider" in the codahale-metrics-provider artifact, which can be activated through the "statsProviderClass" config parameter (no changes made to the existing "CodahaleMetricsProvider"). This new "FastCodahaleMetricsProvider" brings a new timer implementation "FastTimer", which extends Codahale's Timer class, provides an identical API, is registered in Codahale's timer registry, and can be queried through the existing JettyServices implementation. FastTimer provides similar functionality as Codahale's default timer, but is significantly faster and (nearly) garbage free.

The improvements of FastTimer over Codahale default Timer with ExponentiallyDecayingReservoirs are:
* entirely garbage-free Timer updates (only snapshot creations when querying a timer allocate a small number of Java objects)
* 3x faster Timer updates (i.e. 3x shorter code-path to update a timer)
* half the memory footprint (in default configuration)

FastTimer reduces GC pause times in our experiments as described in Issue 1363 by half (same as entirely deactivating all timers).

The primary functional differences between FastTimer and Codahale default Timer with ExponentiallyDecayingReservoirs are:
* FastTimer keeps values for a fixed, configurable time period (default: 60 seconds) rather than exponentially decaying them
* FastTimer bucketizes event times rather than storing discrete values. Percentile values depend on the bucket resolution.

Design Considerations
---------------------

The design goals of this timer implementation are for it to be
 - fast (i.e. few instructions to update a timer)
 - scalable (i.e. little synchronization cost for concurrent timer updates)
 - garbage-free for timer updates (i.e. no object allocation for timer updates)
 - space-efficient (i.e. as little memory footprint as possible while achieving first three goals)
 - provide similar functionality as Codahale's default timers with ExponentiallyDecayingReservoirs

This implementation provides rate and response times over a configurable sliding time window. Data
is stored in upfront allocated circular arrays, in which each array element holds data
for one second. Data is overwritten in a circular fashion without the allocation of new data
structures and is therefore garbage-free for all timer updates.

This implementation does not store individual response times, but instead allocates bucketized counters
upfront, which are incremented for any event falling into a particular response time bucket. A
fine-grained bucket definition (intended for capturing successsful events) and a coarse-grained
bucket definition (intended to capture failure or timed-out events) are provided.

To improve scalability of concurrent timer updates, most data structures are replicated HASH_SIZE
times, and calling threads updating a timer are hashed to individual instances. Performance tests
(see below) have shown that this implementation is light-weight enough to achieve slightly better
scalability than Codahale's default timers even without hashing, and can further improve scalability
if hashing is used.

Trading off performance and scalability vs. memory footprint, we need to be conservative in the hash
size we chose. Different flavors of this timer implementation have been evaluated using JMH
micro-benchmarks (see microbenchmarks/src/main/java/org/apache/bookkeeper/stats/TimerBenchmark.java),
comparing implementations of FastTimer with a time window of 60 seconds and
- (DEV1)   a HASH_SIZE of 3 for all data structures (meters, counters, min/max, and response time buckets)
- (DEV2)   a HASH_SIZE of 1 for all data structures (meters, counters, min/max, and response time buckets)
- (FINAL)  a HASH_SIZE of 3 for meters, counters, min/max, and no hashing for response time buckets
to the default timer implementation
- (BASE-E) Codahale Timer with ExponentiallyDecayingReservoir (default as used by bookkeeper code)
- (BASE-T) Codahale Timer with SlidingTimeWindowReservoir configured to 60 seconds
- (BASE-S) Codahale Timer with SlidingWindowReservoir configured to hold 100,000 events.

Based on results below, implementation (FINAL) was chosen as the final FastTimer implementation, as it
achieves nearly the same throughput as (DEV1) at nearly the same memory footprint as (DEV2), and
ultimately achieves roughly 3x higher throughput and scalability that Codahale's default implementation
at around half the memory footprint.

The following results have been collected on an eight core x86 server running at 3.2 GHz (updated
timers are shared across 4 threads):

```
Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op   Kb/TimerPair
----------------------------------------------------------------------------------------
 DEV1    FastTimer (Hash 3)          1         4   11487.904        0                253
 DEV1    FastTimer (Hash 3)         10         4   22621.702        0                253
 DEV1    FastTimer (Hash 3)        100         4   21781.319        0                253
 DEV2    FastTimer (Hash 1)          1         4    5138.143        0                 88
 DEV2    FastTimer (Hash 1)         10         4   22902.195        0                 88
 DEV2    FastTimer (Hash 1)        100         4   19173.085        0                 88
 FINAL   FastTimer (Hash 3/1)        1         4    9291.002        0                 99
 FINAL   FastTimer (Hash 3/1)       10         4   16379.940        0                 99
 FINAL   FastTimer (Hash 3/1)      100         4   16751.020        0                 99
 BASE-E  CodahaleTimer               1         4    3845.187       82.609            189
 BASE-E  CodahaleTimer              10         4    7262.445       35.035            189
 BASE-E  CodahaleTimer             100         4    7051.77        32.843            189
 BASE-T  CodahaleTimer/TimeWindow    1         4     102.479       90.851            174
 BASE-T  CodahaleTimer/TimeWindow   10         4      68.852       84.812            174
 BASE-T  CodahaleTimer/TimeWindow  100         4     153.444      136.436            174
 BASE-S  CodahaleTimer/SlidingWdw    1         4    4670.543        0               2103
 BASE-S  CodahaleTimer/SlidingWdw   10         4   13696.168        0               2103
 BASE-S  CodahaleTimer/SlidingWdw  100         4   12541.936        0               2103
```

- ops/ms is the number of timer updates per millisecond.
- Alloc B/op is the number of bytes allocated per timer update
- Kb/TimerPair is the heap footprint per pair of timers (one with fine-grained, one with coarse-grained buckets)

The following test results include snapshot creation every 109 timer updates (typically, we would assume
snapshot creation to be much less frequent), and show that also with snapshots in the mix, FastTimer outperforms
Codahale default Timers both with respect to throughput and scalability as well as object allocation:

```
Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op
-------------------------------------------------------------------------
 FINAL   FastTimer (Hash 3/1)        1         4    1569.953       23.707
 FINAL   FastTimer (Hash 3/1)       10         4    7316.794       24.073
 FINAL   FastTimer (Hash 3/1)      100         4    6498.215       24.073
 BASE-E  CodahaleTimer               1         4     246.953      481.771
 BASE-E  CodahaleTimer              10         4    1989.134      476.807
 BASE-E  CodahaleTimer             100         4    1514.729      468.624
 BASE-T  CodahaleTimer/TimeWindow    1         4       6.063    43795.810
 BASE-T  CodahaleTimer/TimeWindow   10         4      44.651    33916.315
 BASE-T  CodahaleTimer/TimeWindow  100         4     180.431    12330.939
 BASE-S  CodahaleTimer/SlidingWdw    1         4      17.439    14683.756
 BASE-S  CodahaleTimer/SlidingWdw   10         4     107.257    14683.745
 BASE-S  CodahaleTimer/SlidingWdw  100         4     236.538     9767.106
```

Unfortunately Codahale does not have a Timer interface we can implement, and some Codahale
base classes are assuming instances of Timer (for example, our JettyServices instantiate a
Codahale MetricsServlet, which instantiates a Codahale MetricsModule, which only serializes
timers that are instances of Timer class into the json output stream). Unless we wanted to
reimplement or override all these base classes, we can't just implement Codahale's Metered and Sampling
interfaces. Instead we have to extend its Timer class, even though we're not using any of its
inherited functionality or data structures. The inherited (unused) member variables of Codahale Timer
consume slightly less than 512 byte per FastTimer (measured around 425 byte in Codahale 3.1).
Above memory footprint results include ~ 1 kb of inherited (unused) data structures, which comprise
around 1% of FastTimer's overall memory footprint.

In terms of functionality, FastTimer provides the same functionality as Codahale's timers
(in default configuration with ExponentiallyDecayingReservoirs), with the following exceptions:
- Statistics are kept for a fixed amount of time (rather than exponentially decayed), by
  default 60 seconds. As a consequence, getMeanRate(), getOneMinuteRate(),  getFiveMinuteRate()
  and getFifteenMinuteRate() all return the same value if FastTimer is configured to use a
  60 second time window.
- FastTimer and FastSnapshot only record bucketized instead of discrete response times. As a
  consequence, the accuracy of percentiles depends on bucket granularity. FastSnapshot also
  can't return discrete values: getValues() returns an empty array, and size returns 0.

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1364 from nicmichael/FastTimer, closes #1363

(cherry picked from commit ed3b0105d0e1adbb118641cc39f886659d140361)

Signed-off-by: Sijie Guo <sijie@apache.org>

Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree aca0f23d0445df67a903e4affa1736e5b8c0238f ------
TIME:04/25/2018 11:09:36

COMMIT:Issue #1363: Fast and Garbage-Free Codahale Statistics Timers

This change introduces a new Codahale-based metrics provider "FastCodahaleMetricsProvider" in the codahale-metrics-provider artifact, which can be activated through the "statsProviderClass" config parameter (no changes made to the existing "CodahaleMetricsProvider"). This new "FastCodahaleMetricsProvider" brings a new timer implementation "FastTimer", which extends Codahale's Timer class, provides an identical API, is registered in Codahale's timer registry, and can be queried through the existing JettyServices implementation. FastTimer provides similar functionality as Codahale's default timer, but is significantly faster and (nearly) garbage free.

The improvements of FastTimer over Codahale default Timer with ExponentiallyDecayingReservoirs are:
* entirely garbage-free Timer updates (only snapshot creations when querying a timer allocate a small number of Java objects)
* 3x faster Timer updates (i.e. 3x shorter code-path to update a timer)
* half the memory footprint (in default configuration)

FastTimer reduces GC pause times in our experiments as described in Issue 1363 by half (same as entirely deactivating all timers).

The primary functional differences between FastTimer and Codahale default Timer with ExponentiallyDecayingReservoirs are:
* FastTimer keeps values for a fixed, configurable time period (default: 60 seconds) rather than exponentially decaying them
* FastTimer bucketizes event times rather than storing discrete values. Percentile values depend on the bucket resolution.

Design Considerations
---------------------

The design goals of this timer implementation are for it to be
 - fast (i.e. few instructions to update a timer)
 - scalable (i.e. little synchronization cost for concurrent timer updates)
 - garbage-free for timer updates (i.e. no object allocation for timer updates)
 - space-efficient (i.e. as little memory footprint as possible while achieving first three goals)
 - provide similar functionality as Codahale's default timers with ExponentiallyDecayingReservoirs

This implementation provides rate and response times over a configurable sliding time window. Data
is stored in upfront allocated circular arrays, in which each array element holds data
for one second. Data is overwritten in a circular fashion without the allocation of new data
structures and is therefore garbage-free for all timer updates.

This implementation does not store individual response times, but instead allocates bucketized counters
upfront, which are incremented for any event falling into a particular response time bucket. A
fine-grained bucket definition (intended for capturing successsful events) and a coarse-grained
bucket definition (intended to capture failure or timed-out events) are provided.

To improve scalability of concurrent timer updates, most data structures are replicated HASH_SIZE
times, and calling threads updating a timer are hashed to individual instances. Performance tests
(see below) have shown that this implementation is light-weight enough to achieve slightly better
scalability than Codahale's default timers even without hashing, and can further improve scalability
if hashing is used.

Trading off performance and scalability vs. memory footprint, we need to be conservative in the hash
size we chose. Different flavors of this timer implementation have been evaluated using JMH
micro-benchmarks (see microbenchmarks/src/main/java/org/apache/bookkeeper/stats/TimerBenchmark.java),
comparing implementations of FastTimer with a time window of 60 seconds and
- (DEV1)   a HASH_SIZE of 3 for all data structures (meters, counters, min/max, and response time buckets)
- (DEV2)   a HASH_SIZE of 1 for all data structures (meters, counters, min/max, and response time buckets)
- (FINAL)  a HASH_SIZE of 3 for meters, counters, min/max, and no hashing for response time buckets
to the default timer implementation
- (BASE-E) Codahale Timer with ExponentiallyDecayingReservoir (default as used by bookkeeper code)
- (BASE-T) Codahale Timer with SlidingTimeWindowReservoir configured to 60 seconds
- (BASE-S) Codahale Timer with SlidingWindowReservoir configured to hold 100,000 events.

Based on results below, implementation (FINAL) was chosen as the final FastTimer implementation, as it
achieves nearly the same throughput as (DEV1) at nearly the same memory footprint as (DEV2), and
ultimately achieves roughly 3x higher throughput and scalability that Codahale's default implementation
at around half the memory footprint.

The following results have been collected on an eight core x86 server running at 3.2 GHz (updated
timers are shared across 4 threads):

```
Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op   Kb/TimerPair
----------------------------------------------------------------------------------------
 DEV1    FastTimer (Hash 3)          1         4   11487.904        0                253
 DEV1    FastTimer (Hash 3)         10         4   22621.702        0                253
 DEV1    FastTimer (Hash 3)        100         4   21781.319        0                253
 DEV2    FastTimer (Hash 1)          1         4    5138.143        0                 88
 DEV2    FastTimer (Hash 1)         10         4   22902.195        0                 88
 DEV2    FastTimer (Hash 1)        100         4   19173.085        0                 88
 FINAL   FastTimer (Hash 3/1)        1         4    9291.002        0                 99
 FINAL   FastTimer (Hash 3/1)       10         4   16379.940        0                 99
 FINAL   FastTimer (Hash 3/1)      100         4   16751.020        0                 99
 BASE-E  CodahaleTimer               1         4    3845.187       82.609            189
 BASE-E  CodahaleTimer              10         4    7262.445       35.035            189
 BASE-E  CodahaleTimer             100         4    7051.77        32.843            189
 BASE-T  CodahaleTimer/TimeWindow    1         4     102.479       90.851            174
 BASE-T  CodahaleTimer/TimeWindow   10         4      68.852       84.812            174
 BASE-T  CodahaleTimer/TimeWindow  100         4     153.444      136.436            174
 BASE-S  CodahaleTimer/SlidingWdw    1         4    4670.543        0               2103
 BASE-S  CodahaleTimer/SlidingWdw   10         4   13696.168        0               2103
 BASE-S  CodahaleTimer/SlidingWdw  100         4   12541.936        0               2103
```

- ops/ms is the number of timer updates per millisecond.
- Alloc B/op is the number of bytes allocated per timer update
- Kb/TimerPair is the heap footprint per pair of timers (one with fine-grained, one with coarse-grained buckets)

The following test results include snapshot creation every 109 timer updates (typically, we would assume
snapshot creation to be much less frequent), and show that also with snapshots in the mix, FastTimer outperforms
Codahale default Timers both with respect to throughput and scalability as well as object allocation:

```
Config   Timer Impl             Timers   Threads      ops/ms   Alloc B/op
-------------------------------------------------------------------------
 FINAL   FastTimer (Hash 3/1)        1         4    1569.953       23.707
 FINAL   FastTimer (Hash 3/1)       10         4    7316.794       24.073
 FINAL   FastTimer (Hash 3/1)      100         4    6498.215       24.073
 BASE-E  CodahaleTimer               1         4     246.953      481.771
 BASE-E  CodahaleTimer              10         4    1989.134      476.807
 BASE-E  CodahaleTimer             100         4    1514.729      468.624
 BASE-T  CodahaleTimer/TimeWindow    1         4       6.063    43795.810
 BASE-T  CodahaleTimer/TimeWindow   10         4      44.651    33916.315
 BASE-T  CodahaleTimer/TimeWindow  100         4     180.431    12330.939
 BASE-S  CodahaleTimer/SlidingWdw    1         4      17.439    14683.756
 BASE-S  CodahaleTimer/SlidingWdw   10         4     107.257    14683.745
 BASE-S  CodahaleTimer/SlidingWdw  100         4     236.538     9767.106
```

Unfortunately Codahale does not have a Timer interface we can implement, and some Codahale
base classes are assuming instances of Timer (for example, our JettyServices instantiate a
Codahale MetricsServlet, which instantiates a Codahale MetricsModule, which only serializes
timers that are instances of Timer class into the json output stream). Unless we wanted to
reimplement or override all these base classes, we can't just implement Codahale's Metered and Sampling
interfaces. Instead we have to extend its Timer class, even though we're not using any of its
inherited functionality or data structures. The inherited (unused) member variables of Codahale Timer
consume slightly less than 512 byte per FastTimer (measured around 425 byte in Codahale 3.1).
Above memory footprint results include ~ 1 kb of inherited (unused) data structures, which comprise
around 1% of FastTimer's overall memory footprint.

In terms of functionality, FastTimer provides the same functionality as Codahale's timers
(in default configuration with ExponentiallyDecayingReservoirs), with the following exceptions:
- Statistics are kept for a fixed amount of time (rather than exponentially decayed), by
  default 60 seconds. As a consequence, getMeanRate(), getOneMinuteRate(),  getFiveMinuteRate()
  and getFifteenMinuteRate() all return the same value if FastTimer is configured to use a
  60 second time window.
- FastTimer and FastSnapshot only record bucketized instead of discrete response times. As a
  consequence, the accuracy of percentiles depends on bucket granularity. FastSnapshot also
  can't return discrete values: getValues() returns an empty array, and size returns 0.

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1364 from nicmichael/FastTimer, closes #1363

TREE:tree 67fc8b3f65c5e3e954e781e35b977023b89c3aa8 ------
TIME:04/25/2018 11:09:36

COMMIT:Issue #791: Eliminate byte[] copies in AddEntry code path

The AddEntry code path in Bookkeeper Client performs several copies of the send buffer before sending it out to bookies, which not only costs CPU cycles for array copying, but also drives up object allocation rate and thus increases young GC frequency.

Currently, the send buffer is prepared by DigestManager.computeDigestAndPackageForSending(), which wraps the netty ByteBuf containing the data together with a (direct) header buffer into a ByteBufList. So far, we haven't yet allocated or copied any new buffers. But in order to send the buffer to the bookies, PendingAddOp.safeRun() will invoke sendWriteRequest() for each bookie in the write set, which will eventually invoke PerChannelBookieClient.addEntry() for each bookie. In here, we are now allocating two new byte[] and copying the buffer twice per bookie for V3 protocol with protobuf:
    byte[] toSendArray = toSend.toArray();      // 1st byte[] allocation and copy
    .setBody(ByteString.copyFrom(toSendArray)); // 2nd byte[] allocation and copy
If for example we're using a write set size of 3, then we allocate 6 byte arrays and copy the same buffer 6 times.

All 6 copies can be eliminated if DigestManager.computeDigestAndPackageForSending() would return a ByteBuf (or ByteBufList) that is backed by an array, which we can access and use without further copying it. PerChannelBookieClient.addEntry() could then wrap this array into a protobuf ByteString without performing any additional copies.

This change eliminates all byte[] allocations and copies in PCBC by:
1. allocating a new (pooled) array-backed heap ByteBuf for header, digest, and data in DigestManager.computeDigestAndPackageForSending()
2. copying the data payload into this newly allocated ByteBuf and returning it wrapped into a ByteBufList of size 1 (instead of header + body separately)
3. enhancing ByteBufList to give access to the underlying array if it consists of only a single ByteBuf that's backed by an array
4. extracting the underlying array in PerChannelBookieClient.addEntry() from ByteBufList and wrapping it into protobuf ByteString without copying it.

With this change, no more object allocations are required in this code path. DigestManager uses a pooled array (1). We're adding one arraycopy in (2) compared to the original code path, trading this against the allocations and copies we save later on.. Later steps, in particular step (4), is free of object allocation and array copies.
As a result, the object allocation rate in the AddEntry code path is reduced significantly. In case of a write set size of 3, it is reduced from 6 to 0. This translates into much less frequent young generation garbage collections (in my experiments with write-heavy workload by ~4x overall).

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1361 from nicmichael/AddEntryNoCopy, closes #791

(cherry picked from commit e021ac31cb1acb8de6d4161a618e76127d04d1c8)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 29af7465543b5b13b1b99e34fc645e552efdc017 ------
TIME:04/24/2018 12:17:32

COMMIT:Issue #791: Eliminate byte[] copies in AddEntry code path

The AddEntry code path in Bookkeeper Client performs several copies of the send buffer before sending it out to bookies, which not only costs CPU cycles for array copying, but also drives up object allocation rate and thus increases young GC frequency.

Currently, the send buffer is prepared by DigestManager.computeDigestAndPackageForSending(), which wraps the netty ByteBuf containing the data together with a (direct) header buffer into a ByteBufList. So far, we haven't yet allocated or copied any new buffers. But in order to send the buffer to the bookies, PendingAddOp.safeRun() will invoke sendWriteRequest() for each bookie in the write set, which will eventually invoke PerChannelBookieClient.addEntry() for each bookie. In here, we are now allocating two new byte[] and copying the buffer twice per bookie for V3 protocol with protobuf:
    byte[] toSendArray = toSend.toArray();      // 1st byte[] allocation and copy
    .setBody(ByteString.copyFrom(toSendArray)); // 2nd byte[] allocation and copy
If for example we're using a write set size of 3, then we allocate 6 byte arrays and copy the same buffer 6 times.

All 6 copies can be eliminated if DigestManager.computeDigestAndPackageForSending() would return a ByteBuf (or ByteBufList) that is backed by an array, which we can access and use without further copying it. PerChannelBookieClient.addEntry() could then wrap this array into a protobuf ByteString without performing any additional copies.

This change eliminates all byte[] allocations and copies in PCBC by:
1. allocating a new (pooled) array-backed heap ByteBuf for header, digest, and data in DigestManager.computeDigestAndPackageForSending()
2. copying the data payload into this newly allocated ByteBuf and returning it wrapped into a ByteBufList of size 1 (instead of header + body separately)
3. enhancing ByteBufList to give access to the underlying array if it consists of only a single ByteBuf that's backed by an array
4. extracting the underlying array in PerChannelBookieClient.addEntry() from ByteBufList and wrapping it into protobuf ByteString without copying it.

With this change, no more object allocations are required in this code path. DigestManager uses a pooled array (1). We're adding one arraycopy in (2) compared to the original code path, trading this against the allocations and copies we save later on.. Later steps, in particular step (4), is free of object allocation and array copies.
As a result, the object allocation rate in the AddEntry code path is reduced significantly. In case of a write set size of 3, it is reduced from 6 to 0. This translates into much less frequent young generation garbage collections (in my experiments with write-heavy workload by ~4x overall).

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1361 from nicmichael/AddEntryNoCopy, closes #791

TREE:tree a3e09e9c0380eb07dfdfef855d02bbb976f8ad31 ------
TIME:04/24/2018 12:17:32

COMMIT:[RELEASE-4.7.0] update BC tests

Descriptions of the changes in this PR:

add 4.6.2 and 4.7.0 to BC tests list

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1352 from sijie/update_bc_tests

TREE:tree 6a9fed59dc2134a7479a2d4b29d9721a46a34052 ------
TIME:04/24/2018 07:38:17

COMMIT:[RELEASE-4.7.0] update BC tests

Descriptions of the changes in this PR:

add 4.6.2 and 4.7.0 to BC tests list

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1352 from sijie/update_bc_tests

TREE:tree 4e3a2cb3045bb7d7e183e00d8496a6b5caa541f7 ------
TIME:04/24/2018 07:38:17

COMMIT:Add config BK_metadataServiceUri for docker

Descriptions of the changes in this PR:

While trying docker in 4.7.0 release, found that the new config parameter `metadataServiceUri` was changing leaked, and docker could not run success.
This change add the config `BK_metadataServiceUri` for docker config, and make docker 4.7.0 runs success.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1362 from jiazhai/docker_conf

(cherry picked from commit f78ea8238b44c8ae52ea6cf9445228afdeffc7aa)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6450ce5445364b549b60641acd0defccfb5fe127 ------
TIME:04/24/2018 02:52:05

COMMIT:Add config BK_metadataServiceUri for docker

Descriptions of the changes in this PR:

While trying docker in 4.7.0 release, found that the new config parameter `metadataServiceUri` was changing leaked, and docker could not run success.
This change add the config `BK_metadataServiceUri` for docker config, and make docker 4.7.0 runs success.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1362 from jiazhai/docker_conf

TREE:tree 86fb442d2d8378fce90ccc79241356eeb33242bf ------
TIME:04/24/2018 02:52:05

COMMIT:In EntryLogger.addEntry method, rollLog flag should not be ignored.

In EntryLogger.addEntry method, rollLog flag should not be ignored.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1359 from reddycharan/fixrolllogcall

TREE:tree 2e7b47ad973d46081a9226cc8bd23b4342ee303b ------
TIME:04/20/2018 10:17:11

COMMIT:Updated site at revision 7fe8427

TREE:tree 96cc9a9e92ad9040f4388e183dee17667853fcfa ------
TIME:04/19/2018 09:42:40

COMMIT:ISSUE #1246: Scripting the whole release procedure

Descriptions of the changes in this PR:

*Motivation*

Releasing bookkeeper becomes tricky after introducing `circe-checksum`, since we need to ensure linux jni library is shipped as part of `circe-checksum`.

*Solution*

- switch to use docker for generating bookkeeper release
- scripting the whole release procedure as many as possible

Master Issue: #1246

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1329 from sijie/release_scripts, closes #1246

TREE:tree 8297779ebb392747dd52407d67591caf08de3720 ------
TIME:04/19/2018 09:09:12

COMMIT:[RELEASE-4.7.0] add integrationtests CI job for branch-4.7

Descriptions of the changes in this PR:

add integrationtests CI job for branch-4.7

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1353 from sijie/make_it_test_as_postcommit_jobs

TREE:tree c225cdb0556fcb47250b93f11f4d216b1000124d ------
TIME:04/19/2018 09:06:28

COMMIT:ISSUE #1354: Spin-Wait for I/O completion wastes CPU time in BK Client

Issue 1354: Spin-Wait for I/O completion wastes CPU time in BK Client (JDK8)

This bugfix for issue 1354 changes the call of CompletableFuture.get() in SyncCallbackUtils.waitForResult() to CompletableFuture.get(Long.MAX_VALUE, TimeUnit.NANOSECONDS), which leads to the same behavior, but avoids spinning (and thus reduces CPU consumption) in JDK8.

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1355 from nicmichael/FutureNoSpin, closes #1354

(cherry picked from commit 325dd9308896cd924bf78f3437824622a91f125a)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 3aa25309cfce3888b92042f1a29eb0f77c296b31 ------
TIME:04/18/2018 19:32:37

COMMIT:ISSUE #1354: Spin-Wait for I/O completion wastes CPU time in BK Client

Issue 1354: Spin-Wait for I/O completion wastes CPU time in BK Client (JDK8)

This bugfix for issue 1354 changes the call of CompletableFuture.get() in SyncCallbackUtils.waitForResult() to CompletableFuture.get(Long.MAX_VALUE, TimeUnit.NANOSECONDS), which leads to the same behavior, but avoids spinning (and thus reduces CPU consumption) in JDK8.

Author: Nicolas Michael <nmichael@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1355 from nicmichael/FutureNoSpin, closes #1354

TREE:tree b8a012d00edab184bd45484960018e61eda96562 ------
TIME:04/18/2018 19:32:37

COMMIT:Issue #570: Introducing EntryLogManager.

Descriptions of the changes in this PR:

Introducing EntryLogManager interface, which abstracts out current activeLogChannel,
rotatedLogChannels and corresponding lock for activeLogChannel. The current logic of
handling logs is moved to EntryLogManagerForSingleEntryLog class, in the
next sub-task EntryLogManagerForEntryLogPerLedger will be introduced. Also there
are minor changes to createNewLog logic and leastUnflushedLogId logic.

This is < sub-task5  > of Issue #570

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1281 from reddycharan/entrylogmanager, closes #570

TREE:tree d75f53ee3cee2ffe01bc5e5a825a8d9c100ed2fe ------
TIME:04/18/2018 19:30:16

COMMIT:Updated site at revision 1f26538

TREE:tree f289f45c864f2da33ced4695715188b339e3c0b4 ------
TIME:04/17/2018 22:18:17

COMMIT:[RELEASE-4.7.0] upgrade guide and release notes

- add upgrade for 4.6.x to 4.7.0
- backfill upgrade guide in old releases
- add release notes for 4.7.0
- add 4.7.0 to releases

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1330 from sijie/update_release_notes

TREE:tree c61cb7225266f2918b883c9ed116dea33e0eb25c ------
TIME:04/17/2018 21:59:41

COMMIT:[RELEASE-4.7.0] update docker file

Descriptions of the changes in this PR:

update the release version from 4.6.0 to 4.7.0 and its corresponding gpg key

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1351 from sijie/update_docker_file

TREE:tree b3f3b781d50f256a92f6bd1d80ab6eab841d0fe2 ------
TIME:04/17/2018 20:41:04

COMMIT:[RELEASE-4.7.0] update docker file

Descriptions of the changes in this PR:

update the release version from 4.6.0 to 4.7.0 and its corresponding gpg key

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1351 from sijie/update_docker_file

(cherry picked from commit 8248a4d790607436c5709b1dca2d929115b47331)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 38b91dbd0571044e0e4958962c90cefeedb7440d ------
TIME:04/17/2018 20:41:04

COMMIT:[RELEASE-4.7.0] update docker file

Descriptions of the changes in this PR:

update the release version from 4.6.0 to 4.7.0 and its corresponding gpg key

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1351 from sijie/update_docker_file

TREE:tree b2f6ff930cba6427f5db842131184a6e4c5b2e4e ------
TIME:04/17/2018 20:41:04

COMMIT:Bump branch-4.7 to 4.7.1-SNAPSHOT (#1350)


TREE:tree 70134009ed51c77ccdeb9fadc4bba5528785ba38 ------
TIME:04/17/2018 09:10:36

COMMIT:Provide memory & gc options in bookkeeper script

Descriptions of the changes in this PR:

It is convenient to provide `MEM_OPTS` and `GC_OPTS` in bookkeeper script and bkenv.sh to allow overriding jvm settings through.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1342 from sijie/gc_settings

TREE:tree e0ef43ae427d4e59a6ef70a5cc23820ebd882010 ------
TIME:04/17/2018 08:56:29

COMMIT:Updated site at revision 7f010d2

TREE:tree cc037c438e90f3f07e331742d7f708cec0dc3edf ------
TIME:04/16/2018 00:44:28

COMMIT:Update release schedule for 4.8.0

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1341 from sijie/update_release_schedulea

TREE:tree e620fc9504f7e8df72a3c38cc4fba0e9d12f8bdf ------
TIME:04/16/2018 00:08:55

COMMIT:Only check ipv6 binding when /sbin/sysctl exists

Descriptions of the changes in this PR:

*Problem*

If bookkeeper is included in some slim docker images, sysctl might not exists at all.
It would fail bookie to start.

*Solution*

Only check ipv6 binding when /sbin/sysctl exists

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1340 from sijie/disable_ipv6_binding

TREE:tree 12347e0e2f2a8e6c03590cdfc5263f69ec516d14 ------
TIME:04/16/2018 00:07:38

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.7.0

TREE:tree b228704ffbe8a55b297b43740ae486f7b6603e01 ------
TIME:04/13/2018 20:54:06

COMMIT:[maven-release-plugin] prepare release release-4.7.0

TREE:tree 70f82a991f41a82b95f406c8c560125fc6858c30 ------
TIME:04/13/2018 20:52:16

COMMIT:Updated site at revision c3e96a7

TREE:tree 3c5f9cadb76097adda00acb6f9c83408f9cc569a ------
TIME:04/13/2018 19:02:13

COMMIT:Fallback to use `getZkServers` and `getZkLedgersPath` when resolving from metadata service uri

Descriptions of the changes in this PR:

*Problme*

Dlog tests are failing because dlog is using an external zookeeper client, where both `zkServers` and `metadataServiceUri`
are not set on client configuration. It will throw NPE when trying to resolve `zkServers` and `zkLedgersRootPath` from metadata service uri.

*Solution*

Fallback to use deprecated `getZkServers` and `getZkLedgersPath` when metadata service uri is null

Related Issues: #1336

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1338 from sijie/fix_dlog_tests

(cherry picked from commit c3e96a76be35a0adb6f700491dd0a8786d5b2957)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b228704ffbe8a55b297b43740ae486f7b6603e01 ------
TIME:04/13/2018 18:44:13

COMMIT:Fallback to use `getZkServers` and `getZkLedgersPath` when resolving from metadata service uri

Descriptions of the changes in this PR:

*Problme*

Dlog tests are failing because dlog is using an external zookeeper client, where both `zkServers` and `metadataServiceUri`
are not set on client configuration. It will throw NPE when trying to resolve `zkServers` and `zkLedgersRootPath` from metadata service uri.

*Solution*

Fallback to use deprecated `getZkServers` and `getZkLedgersPath` when metadata service uri is null

Related Issues: #1336

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1338 from sijie/fix_dlog_tests

TREE:tree f32b1babbc3e24f6264e3c6eb5a7b975a41afbd6 ------
TIME:04/13/2018 18:44:13

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.7.0

TREE:tree 80508bcb457a6691949878a1d3af41b3a8c11164 ------
TIME:04/13/2018 09:47:06

COMMIT:[maven-release-plugin] prepare release release-4.7.0

TREE:tree c300ee0a5105bfdde11e83c8023d51741e26dd31 ------
TIME:04/13/2018 09:44:28

COMMIT:Updated site at revision 3d39435

TREE:tree f5556d67163d6c27a765668f2979858eb9aa597b ------
TIME:04/13/2018 01:48:42

COMMIT:Use metadata service uri rather than zkServers

Descriptions of the changes in this PR:

*Motivation*

Metadata service uri is introduced as part of BP-29. However most of the tests and tools are still assuming `zkServers`.
This causes a problem if people configures `metadataServiceUri`, some of the admin tools don't actually work.

*Solution*

This change changes bookkeeper to use `metadataServiceUri` in all the possible places and provides methods to resolve zkServers
and zkLedgersRootPath from metadata service uri. This ensures:

1) if users configure `metadataServiceUri`, all the tools would work properly.
2) if users doesn't configure `metadataServiceUri` and still use `zkServers` and `zkLedgersRootPath`, all the tools would still work.

*Changes*

The main changes are:

- deprecated direct usage of `getZkServers`, `setZkServers`, `getZkLedgersRootPath`, `setZkLedgersRootPath, `getZkAvailablePath` at AbstractConfiguration
- provide util methods `resolveZkServers` and `resolverZkLedgersRootPath` in `ZkMetadataDriverBase` for resolving zookeeper specific settings from metadata service uri
- change the tools to use `getMetadataServiceUri`
- change the tests to use `getMetadataServiceUri` to ensure code coverage

*NOTES*

There are a few places still using `getZkServers`, `setZkServers`. those are hard to change at this moment.

Related Issue:
- #1335

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1336 from sijie/fix_local_bookkeeper

(cherry picked from commit 3d39435d316bc05e64c4247aeb8455bcd2a96989)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 80508bcb457a6691949878a1d3af41b3a8c11164 ------
TIME:04/13/2018 01:30:09

COMMIT:Use metadata service uri rather than zkServers

Descriptions of the changes in this PR:

*Motivation*

Metadata service uri is introduced as part of BP-29. However most of the tests and tools are still assuming `zkServers`.
This causes a problem if people configures `metadataServiceUri`, some of the admin tools don't actually work.

*Solution*

This change changes bookkeeper to use `metadataServiceUri` in all the possible places and provides methods to resolve zkServers
and zkLedgersRootPath from metadata service uri. This ensures:

1) if users configure `metadataServiceUri`, all the tools would work properly.
2) if users doesn't configure `metadataServiceUri` and still use `zkServers` and `zkLedgersRootPath`, all the tools would still work.

*Changes*

The main changes are:

- deprecated direct usage of `getZkServers`, `setZkServers`, `getZkLedgersRootPath`, `setZkLedgersRootPath, `getZkAvailablePath` at AbstractConfiguration
- provide util methods `resolveZkServers` and `resolverZkLedgersRootPath` in `ZkMetadataDriverBase` for resolving zookeeper specific settings from metadata service uri
- change the tools to use `getMetadataServiceUri`
- change the tests to use `getMetadataServiceUri` to ensure code coverage

*NOTES*

There are a few places still using `getZkServers`, `setZkServers`. those are hard to change at this moment.

Related Issue:
- #1335

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1336 from sijie/fix_local_bookkeeper

TREE:tree c16dbd18566adf9a2d71683a493a1ae2b68e4b8d ------
TIME:04/13/2018 01:30:09

COMMIT:Issue #1335: LocalBookKeeper doesn't work with metadata service uri

Descriptions of the changes in this PR:

*Problem*

`"zk+hierarchical://localhost:2181/ledgers"` is invalid because `"` is an invalid character.

*Solution*

Fix the invalid settings in `bk_server.conf`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1337 from sijie/fix_invalid_settings, closes #1335

(cherry picked from commit 9921613829dba70a2903ee19ddfc4dc757fb39ab)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree eca80420cb32fc8d8154fb86edec8719cd7f25df ------
TIME:04/12/2018 09:14:37

COMMIT:Issue #1335: LocalBookKeeper doesn't work with metadata service uri

Descriptions of the changes in this PR:

*Problem*

`"zk+hierarchical://localhost:2181/ledgers"` is invalid because `"` is an invalid character.

*Solution*

Fix the invalid settings in `bk_server.conf`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1337 from sijie/fix_invalid_settings, closes #1335

TREE:tree 8c0361394f612bf49ab2b0425f88a2db834d6c57 ------
TIME:04/12/2018 09:14:37

COMMIT:[maven-release-plugin] prepare for next development iteration (missing modules)

TREE:tree bb9a7a5cb3d85e8c3ef4ed64af128cf3a4608220 ------
TIME:04/11/2018 11:52:31

COMMIT:Updated site at revision 8cd9f91

TREE:tree 8cb2544b4ec37af9f8fc2550d1ec13178963782f ------
TIME:04/11/2018 08:06:10

COMMIT:Create CI jobs for branch-4.7

Descriptions of the changes in this PR:

We need to CI jobs running for subsequent minor releases on branch-4.7.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1328 from sijie/create_ci_job_for_4.7

TREE:tree ebde9b6cd8f2d88c1c95b07f488800a9e687562a ------
TIME:04/11/2018 07:47:57

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.7.0

TREE:tree dbed2be27e775fcf96aaad5717d3ed8e7e6f56fa ------
TIME:04/11/2018 05:55:51

COMMIT:[maven-release-plugin] prepare release release-4.7.0

TREE:tree 022150699bfd24ee14ca5457d74b82b6941f3f22 ------
TIME:04/11/2018 03:33:18

COMMIT:Updated site at revision 49fda75

TREE:tree 85242b1f33b133463898578e1b9f65b4ce0d840e ------
TIME:04/10/2018 21:43:45

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 181aacc5dd5ef931d31c2ca01d22fbfb8420fad6 ------
TIME:04/10/2018 21:26:47

COMMIT:[maven-release-plugin] prepare branch branch-4.7

TREE:tree 15a0a4c81a1f1ad7547ee046be6110b4f410c6c8 ------
TIME:04/10/2018 21:26:36

COMMIT:Updated site at revision 61a227b

TREE:tree f9ce963104697e06b014f1c981d69d3fd879d788 ------
TIME:04/10/2018 19:44:14

COMMIT:Prepare 4.7.0 release

Descriptions of the changes in this PR:

- copy the current `docs/latest` as `docs/4.7.0`
- bump latest development release to 4.8.0 SNAPSHOT release

beside that, also change stable version to 4.6.2 release

NOTE: this change doesn't put 4.7.0 in the menu. will update menu and releases page after 4.7.0 is released

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1326 from sijie/prepare_release_4.7

TREE:tree e324ccfb267cc254fcf20970b867f289c33965e4 ------
TIME:04/10/2018 19:26:12

COMMIT:Updated site at revision 2af991b

TREE:tree e6b89da75198c87c36e542adf91f2f65d9a4e481 ------
TIME:04/10/2018 13:31:48

COMMIT:Update News after release of 4.6.2

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1327 from eolivelli/fix/update-news-462

TREE:tree 21d3072f691ace1fc0870ef750f368f7dec2787b ------
TIME:04/10/2018 13:17:42

COMMIT:Updated site at revision f5a7a2c

TREE:tree 23aa1150fd09fa3dce04ba925e846ac0acddc9f5 ------
TIME:04/10/2018 11:38:43

COMMIT:Update missing configuration settings & missing shell commands

Descriptions of the changes in this PR:

Update missing configuration settings & missing shell commands for preparing 4.7.0 release.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1325 from sijie/update_docs

TREE:tree b83f8ce846c2220f4cf7f4fc51c246be86c21330 ------
TIME:04/10/2018 11:24:26

COMMIT:Updated site at revision 2536c91

TREE:tree 1d91c18dae3149b7cc98cc032927d3b4b9de36d1 ------
TIME:04/10/2018 09:17:50

COMMIT:Remove WriteFlags from public API

Descriptions of the changes in this PR:

`DeferredSync` is not implemented at server side. So remove `withWriteFlags` from builder API.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1324 from sijie/remove_write_flag

TREE:tree 3436db3e2d54d704ee86d760ace122cb0eb44652 ------
TIME:04/10/2018 09:03:36

COMMIT:Improve "Failed to resolve network location" logging

Descriptions of the changes in this PR:

*Problem*

Rackware/Region-Aware is using a script based DNS resolver for resolving network topology. If the network topology script is not configured, the DNS resolver will return `null` as network location. It results in using `default-rack` as the network location and log "Failed to resolve network location" for each resolution.

*Solution*

If a script file is not provided, throw a runtime exception. So the rackaware/region-aware placement policy can fallback to use the default-rack resolver. It would avoid the logging flood.

*Result*

Before this change, it will log following statement for each DNS resolution:

"Failed to resolve network location".

After this change, it will only log following statement during initialization:

```
INFO  - [Time-limited test:RackawareEnsemblePlacementPolicyImpl313] - Failed to initialize DNS Resolver org.apache.bookkeeper.net.ScriptBasedMapping, used default subnet resolver.
java.lang.RuntimeException: No network topology script is found when using script based DNS resolver.
	at org.apache.bookkeeper.net.ScriptBasedMapping$RawScriptBasedMapping.setConf(ScriptBasedMapping.java:150)
	at org.apache.bookkeeper.net.ScriptBasedMapping.setConf(ScriptBasedMapping.java:122)
	at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.initialize(RackawareEnsemblePlacementPolicyImpl.java:306)
	at org.apache.bookkeeper.client.RackawareEnsemblePlacementPolicyImpl.initialize(RackawareEnsemblePlacementPolicyImpl.java:75)
	at org.apache.bookkeeper.client.BookKeeper.initializeEnsemblePlacementPolicy(BookKeeper.java:598)
	at org.apache.bookkeeper.client.BookKeeper.<init>(BookKeeper.java:490)
```

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1323 from sijie/improve_dns_resolver_logging

TREE:tree b8d7fec9cefc4e1f6fa27efd3887c637711eaf78 ------
TIME:04/10/2018 01:01:23

COMMIT:Improve logging on ledger dirs monitor to avoid log flooding

Descriptions of the changes in this PR:

*Problem*

When a bookie is in readonly mode, the ledger dirs monitor will keep check the disk usage and generate tons of logs if the disk usage is unchanged. This makes debugging much difficult.

*Solution*

- Improve the logging logic in ledger dirs monitor to only log changes when disk usage is changed.
- Disable logging on checking threshold for high priority writes. Only log changes when high priority writes availability is changed.

*Result*

This reduces the logging when a bookie is outage in readonly mode.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Yiming Zang <yzang2016@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1322 from sijie/improve_monitor_logging

TREE:tree ca228d6189542aeffac264025ab31ff90fd1294d ------
TIME:04/09/2018 09:34:58

COMMIT:Updated site at revision 4aec3ce

TREE:tree ab8c66618405b569287ae6b803411aac5cad9e4d ------
TIME:04/09/2018 09:04:49

COMMIT:Release notes for 4.6.2 version

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1297 from eolivelli/fix/releasenotes462

TREE:tree 17507985a56d152a182159662c8106f1b6b5d87d ------
TIME:04/09/2018 08:50:49

COMMIT:Allow multiple directories in DbLedgerStorage

In normal conditions, the max throughput that a bookie can sustain is mostly determined by how fast we can write entries on the journal.

If we assume a *very* fast journal, for example using multiple journal threads and setting `journalSyncData=false` or with the journal on a RAM disk (there are some cases in which it might make sense), then the LedgerStorage becomes the "bottleneck". We need to be able to flush data on disk faster than the incoming rate, otherwise the write cache will get full and then we have to apply backpressure.

In different testing scenario, the bottleneck has become the LedgerStoarge flush/checkpoint because it's done by a single thread.

For smaller entries (1KB) the limit is ~250 K write/s and the limitation is due to preparing a batch with the offsets to write into rocksdb. Each insertion in the batch needs to cross JNI boundaries and that is expensive.

For bigger entries (10KB), the limit is ~50K write/s (or 500MB /s). This mostly because the single flush thread cannot drive 100% IO utilization on the disks (since it's doing the rest of work). Raw disk writes in that test environment (12 HDDs) could reach 1.4GB/s.

This change is only relative to DbLedgerStorage and it's a simple refactoring that, when configured with multiple directories, it will hash a ledger into a certain directory. Each directory is flushed independently on its own thread.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1289 from merlimat/db-storage-multiple-dirs

TREE:tree 65cc36770b9709cebb63029a98c30270bf83a1e4 ------
TIME:04/08/2018 20:31:17

COMMIT:Updated site at revision ea1a75c

TREE:tree d6759fdd95b126319f54d28168c95762ffa076fd ------
TIME:04/07/2018 01:53:27

COMMIT:ISSUE #1316: A bookie with non-writable dirs should be able to start in readonly mode

Descriptions of the changes in this PR:

*Problem*

Bookie failed to start when it doesn't have non-writable dirs. Issue is reported at #1316

*Solution*

- Introduce a setting `minUsageSizeForEntryLogCreation` to allow creating entry logs even when there is no writable dirs. This setting is replacing `getIsForceGCAllowWhenNoSpace` for creating new log, since entry log files are created not only for gc/compaction. It can also happen on startup and also journal replays.

- Defer creating entry log files until first write happens, when there is no writable ledger dirs.

- add bunch of tests for EntryLog and Bookie initialization.

Master Issue: #1316
Related Issue: #190

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1319 from sijie/allow_bookie_to_start_with_no_writable_bookies, closes #1316

TREE:tree 085a1cb911353faa5725df37c516db1675cab093 ------
TIME:04/07/2018 01:39:28

COMMIT:Avoid contention on netty channel promise

With profiler, I have seen there can be heavy contention between BK threads and Netty IO thread due the the checking for channel write condition that was recently added for monitoring purpose.

The problem relies in that there is one BK thread that is doing the `writeAndFlush()` on the PCBC and getting the `ChannelFuture`, adding a listener to the future.

The write operation, though, is completed in the Netty IO thread and the promise gets also triggered from that thread. So, there is contention between current thread adding the listener and the IO threads completing the promise.

If we add the listener before doing the write on channel, we can avoid the contention. Another option could be to do the write from the Netty IO thread as well.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1321 from merlimat/channel-promise-contention

TREE:tree 84ff3d1621c0f72077bf4a67ee897b00cb32a7e5 ------
TIME:04/06/2018 20:57:48

COMMIT:Update Dockerfile to 4.6.2 on branch-4.6 (#1320)


TREE:tree bd2608d2525826cdd025b5c793448ad645ecb861 ------
TIME:04/06/2018 19:13:11

COMMIT:Bump version to 4.6.3-SNAPSHOT

TREE:tree b71342552b8e216d8840676ef2f76c4a05cdfdcd ------
TIME:04/06/2018 16:17:17

COMMIT:y

Previously it was not duplicating, so the underlying ByteBuf was being
returned to the client, and this was having its reader index modified,
which meant that if it was read again, the data could not be read.

By calling duplicate() on the LedgerEntryImpl, the underlying ByteBuf
is sliced and retained, so it has a new set of indices. The retention
does nothing, as the buffer is unpooled.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1318 from ivankelly/dup-mock

TREE:tree 491f89c417d009ebe1a65181bb31f12f9cfddfa3 ------
TIME:04/05/2018 23:40:55

COMMIT:Updated site at revision 08d3cf8

TREE:tree f804c630adbd8617b2828f97b186bcd29b0d1b4e ------
TIME:04/05/2018 09:29:48

COMMIT:ISSUE #1314: Provide a mechanism to allow high priority writes to readonly bookies

Descriptions of the changes in this PR:

*Problem*

Currently we allow fence requests going through readonly bookies, since fence requests are special read requests. However a ledger can only be sealed after it is successfully recovered. If bookies are in readonly, those recovery writes won't go through.

If there is a bookie outage happened (e.g. all bookies are readonly), all ledgers are not able to be sealed. It might be good to have a similar setting like minUsableSizeForIndexFileCreation for recovery writes.

This can improve operability during outage.

*Solution*

- add a setting `minUsableSizeForHighPriorityWrites` to allow accepting high priority writes on readonly bookies.

Master Issue: #1314

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1315 from sijie/allow_high_priority_writes, closes #1314

TREE:tree 19ba0a3914184e8af39f5a53a4912a44cc7de498 ------
TIME:04/05/2018 09:02:59

COMMIT:newOpenLedgerOp and ReadHandle implementation for MockBookKeeper

This will allow users of MockBookKeeper to use the new ReadHandle API.

There are two implementations of the ReadHandle interface. One pure,
which isn't backed by any production code, and another on
MockLedgerHandle which passes through to the pure implementation.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1298 from ivankelly/better-mock

TREE:tree c91fcaf8b0e3a2e1d409e7de56b279c4139f6178 ------
TIME:04/05/2018 09:02:06

COMMIT:Issue #1310: Filter out body and masterKey from ProcessorV3s

Descriptions of the changes in this PR:

In certain logs instances of ProcessorV3 (for eg WriteEntryProcessorV3) are logged.

Logging entry data and credentials details is not appropriate. Filter out
those details

(have to consider other ProcessorV3s as well and testcases to validate this change)

Master Issue: #1310

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1311 from reddycharan/filterlogs, closes #1310

TREE:tree 0306a35abec3f428e5a14dcf9c822db5f9c51f1e ------
TIME:04/05/2018 09:01:23

COMMIT:Updated site at revision 6bb5bd0

TREE:tree 55ecd7ca07ae9ebbb8d44d4b3c099dee69f70eb4 ------
TIME:04/04/2018 02:29:45

COMMIT:longPollThreadPool can not be null

Descriptions of the changes in this PR:

*Problem*

The long polling logic is built with the assumption that there is a thread pool for scheduling deferred reads.
So if people happens to set `numLongPollWorkerThreads` to zero or negative, a null value is passed into long poll requests which causes NPE.

*Solution*

If `numLongPollWorkerThreads` is set to zero or negative, fall back to use read thread pool. If there is no read thread pool, create a thread pool
aligned with num processors.

With this change, turn the default value of `long poll threads` to zero. so no additional threads are needed if long poll feature is not used (e.g. at pulsar).

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Yiming Zang <yzang2016@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1308 from sijie/validate_number_long_poll_threads

TREE:tree cf03ed414e2614b65542a18cdb3f2012756d3be1 ------
TIME:04/04/2018 02:15:32

COMMIT:Updated site at revision 80a135f

TREE:tree 7da0d407f0009cc51fc926f35f50198d89f15289 ------
TIME:04/03/2018 22:58:16

COMMIT:Issue #1304: in listunderreplicated cmd provide option to print missing replicalist

Descriptions of the changes in this PR:

in listunderreplicated bookieshell command,
provide option to print missing replicalist

Master Issue: #1304

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1305 from reddycharan/urlbookies, closes #1304

TREE:tree 819a91ad6294881a1ae2ae2ec869540e17a4c627 ------
TIME:04/03/2018 22:48:23

COMMIT:Upgrade Maven Assembly Plugin to 3.1.0

- upgrade Maven Assembly Plugin because 2.2.1 version has issues about file permissions
- explicitly set tarLongFileMode to 'posix' in order to handle user ids with large values

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1313 from eolivelli/upgrade-assembly-master

TREE:tree 43f4b58e7ec7d19c2a36950e9ad8f51bb2cd9d0d ------
TIME:04/03/2018 22:45:48

COMMIT:BK configuration file updates

Descriptions of the changes in this PR:

- Change two default values: `fileInfoCacheInitialCapacity` to 1/4 of openFileLimit() and `journalRemoveFromPageCache` to true.
- Fix default values in conf/bk_server.conf to make them consistent with `ServerConfiguration`
- Organize the settings into sections for both `conf/bk_server.conf` and `site/_data/config/bk_server.yaml`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1294 from sijie/update_default_values

TREE:tree deb06c254f605bfb3773b4654f5b315067d83cc5 ------
TIME:04/03/2018 22:43:47

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.2

TREE:tree acac97b7b5a54999c1bfbc98516b9569e0ba5991 ------
TIME:04/03/2018 13:21:37

COMMIT:[maven-release-plugin] prepare release release-4.6.2

TREE:tree 6d79eb8a84b9e24835599b5aff1db1e09c7d3320 ------
TIME:04/03/2018 13:21:21

COMMIT:Upgrade Maven Assembly Plugin to 3.1.0
- upgrade Maven Assembly Plugin because 2.2.1 version has issues about file permissions
- explicitly set tarLongFileMode to 'posix' in order to handle user ids with large values

  Author: Enrico Olivelli <eolivelli@apache.org>

  Reviewers: Ivan Kelly <ivank@apache.org>

TREE:tree acac97b7b5a54999c1bfbc98516b9569e0ba5991 ------
TIME:04/03/2018 12:32:50

COMMIT:Updated site at revision 46171e6

TREE:tree 82d86c5bed5ddbd5d05c17ae6f5c0b3b4c4ee4e5 ------
TIME:04/03/2018 05:18:19

COMMIT:Refactored OrderedSafeExecutor and OrderedScheduler

As outlined in https://lists.apache.org/thread.html/102383ea42f473f36720637e41af0ee83fc38d9f992736e0d1a7f985%3Cdev.bookkeeper.apache.org%3E

right now `OrderedSafeExecutor` is implemented on top of `OrderedScheduler`.  There are few problems with this approach that are causing impact on performance:

 1. `OrderedScheduler` is a `ScheduledExecutorService` which uses a priority queue for tasks. The priority queue has a single mutex for both publishers/consumers on the queue
 2. There are many objects created for each task submission, due to listenable future decorators

Since in all cases in critical write/read path we don't need delay task execution or futures, we should try to have a light weight execution for that.

### Modifications

 * Inverted the hierarchy between `OrderedSafeExecutor` and `OrderedScheduler`. Now the base class is `OrderedSafeExecutor` and the other extends from it, since it provides additional methods.
 * Moved `OrderedSafeExecutor` in `bookkeeper-common` since `OrderedScheduler` was already there.
 * Moved `OrderedSafeGenericCallback` in its own file, since it needs to be in `bookkeeper-server` module at this point.
 * Changed some method names from `submitOrdered()` into `executeOrdered()` to be consistent with JDK name (`submit()` returns a future while `execute()` returns void).
 * Changed `BookKeeper` instance of `scheduler` into `OrderedScheduler` so that the few cases which were using the `mainWorkerPool` could be easily converted to use the scheduler instead.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Andrey Yegorov <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1309 from merlimat/refactor-ordered-executor and squashes the following commits:

9af6eadc2 [Matteo Merli] Fixed findbugs configuration to ignore genereted JMH code
c85ad21e5 [Matteo Merli] Use ImmutableMap
22eba18c8 [Matteo Merli] Added microbenchmark
2c67d0e56 [Matteo Merli] Fix for TestMaxSizeWorkersQueue
54a72ba1b [Matteo Merli] Fix for TestReadAheadEntryReader
019d5202d [Matteo Merli] More fixes for submitOrdered
b8175f311 [Matteo Merli] Fixed array initialization type
5d68d431d [Matteo Merli] Fixed class names in integration tests
7c529dde7 [Matteo Merli] Fixed submitOrdered in DL code
c91259b7d [Matteo Merli] Removed "final" modifier on checkQueue
c5f70d5b4 [Matteo Merli] Merge remote-tracking branch 'apache/master' into refactor-ordered-executor
957c98309 [Matteo Merli] Correctly handle number of tasks in queue check
e45f78c09 [Matteo Merli] Renamed into OrderedExecutor and OrderedGenericCallback
926868429 [Matteo Merli] Refactored OrderedSafeExecutor and OrderedScheduler

TREE:tree 80fe951da7167c3d531b8b3c49be9745be7cccbf ------
TIME:04/03/2018 05:03:12

COMMIT:Make CRC32C_HASH a final static variable and log when we cannot use native crc32c library

For CRC32c there is a marked performance difference when the JNI library is available versus when it's not, since the fallback involves creating many `ByteBuffer`s and copy payloads.

Additionally we should set the static variable to `final` so the optimizer can get rid of the `(CRC32C_HASH instanceof Sse42Crc32C)` checks.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1303 from merlimat/crc-final

TREE:tree e9b3d85af9f51e6f6bf5d3133ad24e1e3774c042 ------
TIME:04/02/2018 03:27:10

COMMIT:Minimize number of thread local instances in CRC32CDigestManager

CRC32CDigestManager uses thread local to store the current crc value (since the crc is computed on the headers and then on the payload).

One issue is that the thread local instances are per-ledger and are never cleaned up from the thread local storage. As new ledgers get used, we'd have more memory used there.

For digest we really need 1 single variable

Changes:
 * Use Netty FastThreadLocal instead of JDK ThreadLocal
 * Made the thread local variable static, since one thread is computing the checksum for an entry of a given ledge, before moving to next entry.
 * Minimized thread local `.get()` access since it's more expensive than regular variable access.
 * Removed the usage of `isNewCrc` since initial value for crc32c (as well as crc32) is 0

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1306 from merlimat/impro-crc32c

TREE:tree 0729c6234e289d3d46eb69fddd12e94d88566455 ------
TIME:04/02/2018 03:26:11

COMMIT:Avoid acquiring closeLock.readLock() on every add/read operation

In the `BookieClient`, we are always acquiring a readlock when grabbing a connection to use for sending a write/read request.

The lock is the `closeLock` and it's only acquired in "write" mode when the `BookKeeper` instance is closed.

The problem with the read-lock is that it introduces contention between the threads that are acquiring it (even if all of them in read mode). Multiple threads can be be in read mode in the critical section, though they have contention when they're entering/exiting the section.

Additionally, the Java implementation of read/write lock is creating and destroying a lot of objects when that contention happens.

My understanding of the code is that we don't need to acquire the read lock in that point. The reason is that, we are already acquiring the lock in the `lookupClient()` method, although only if the pool is null. Additionally, when `Bookkeeper.close()` is invoked all PCBC will be set to closed as well, so it will not be possibile to create a new connection.

All the line changes in the patch are just removing the readLock acquire and try/finally, and reducing the indentation level.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1292 from merlimat/bookie-client-rw-lock and squashes the following commits:

2104a3aa7 [Matteo Merli] Converted anonymous classes into lambdas
cabad14e5 [Matteo Merli] Avoid acquiring closeLock.readLock() on every add/read operation

TREE:tree a40ef6bac4d902ea0d08b1976477bb57a125f371 ------
TIME:03/30/2018 01:04:37

COMMIT:Use reflection based CRC32 to pass direct memory pointer

The crc update with the bytebuffer is very expensive, especially in netty > 4.1.12.

```java
crc.get().update(data.nioBuffer());
```

Converting a direct`ByteBuf` into a `ByteBuffer` with `data.nioBuffer()` is actually resorting to allocating an unpooled `DirectByteBuffer` which is actually killing the GC (since direct memory is freed when the `DirectByteBuffer` instances are GCed, but the pauses are > 1 second).

This is an adaptation of a change from Yahoo branch at https://github.com/yahoo/bookkeeper/commit/6c01ca2921a998f3bf2e85cacb27867773e7ea28

Initially I though this change was not needed anymore in 4.7 codebase, and that is true for the CRC32c variant. For the regular CRC32, though, we need to avoid the bad behavior of unpooled direct buffers.

Additionally, as in #1306, the thread local variable was made static to avoid the leakage of instances per each ledger.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1307 from merlimat/crc32-bytebuffer and squashes the following commits:

8b81245a0 [Matteo Merli] Made classed package private
a7ff1573f [Matteo Merli] Use reflection based CRC32 to pass direct memory pointer

TREE:tree 073806881c6d428f1f430991d6503cabb55c35e9 ------
TIME:03/29/2018 15:17:15

COMMIT:Updated site at revision 2bd24b7

TREE:tree 19a88e3779dbc2bc2280c62ebd1e3b217b39226d ------
TIME:03/29/2018 07:45:50

COMMIT:Updated site at revision 7149789

TREE:tree 46aa53f0b0550a3781e3f1b8d259ce04dd9948c0 ------
TIME:03/29/2018 07:26:33

COMMIT:Issue #1282: call to appendLedgersMap in flushCompactionLog

Descriptions of the changes in this PR:

with this change https://github.com/apache/bookkeeper/commit/3392beee5c70abe36d36604723e14d97b7764be9 compactionlog was introduced. But for compactionlog call to appendLedgersMap (// Append ledgers map at the end of entry log) isn't made.

So for these logs, getEntryLogMetadata call has to call extractEntryLogMetadataByScanning for getting the metadata of entrylog. Which is a perf hit.

Master Issue: #1282

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1283 from reddycharan/compactionlogfix, closes #1282

TREE:tree 1a0524cf732752dedea6d5ee85199d5224e89d9e ------
TIME:03/29/2018 07:19:37

COMMIT:[DLOG] use Atomic***FieldUpdater and LongAdder if possible

Descriptions of the changes in this PR:

AtomicFieldUpdater + volatile provides similar guarantees as Atomic but use much fewer memory.
In dlog, when handling large number of streams, there can be a lot of Atomic fields with `LogHandler`, `SegmentWriter` and such.
Switching using Atomic to using AtomicFieldUpdater + volatile will save a lot of memory. See [details](http://normanmaurer.me/blog/2013/10/28/Lesser-known-concurrent-classes-Part-1/)

LongAdder is less contended across threads, which is more preferable to AtomicLong when multiple threads update a common sum. E.g. SampledMovingAverageRate.
Switching to use LongAdder if AtomicLong is not needed. See [details](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/LongAdder.html)

Master Issue: #<master-issue-number>

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia@apache.org>, Philip Su <psu@twitter.com>

This closes #1299 from sijie/use_atomic_field_updater

TREE:tree d6e46786e9a2e3209210fb3adf29f7c16e4e2c40 ------
TIME:03/29/2018 07:17:00

COMMIT:[DLOG] Fix TestZKLogStreamMetadataStore

Descriptions of the changes in this PR:

*Problem*

All test cases in `TestZKLogStreamMetadataStore` share same zookeeper cluster. so if the tests
run before `testGetMissingPathsRecursive` runs, they might create the missing path components
for `testGetMissingPathsRecursive`, which will fail the assertion in `testGetMissingPathsRecursive`

*Solution*

Add unique suffix to "/path" for each test case to avoid conflicts

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Jia Zhai <zhaijia@apache.org>, Philip Su <psu@twitter.com>

This closes #1300 from sijie/fix_zk_log_stream_metadata_store

TREE:tree 2abc70324cc5b6b141a34eb766ec467e3c9a6fbb ------
TIME:03/29/2018 07:12:08

COMMIT:Drop MD5 signatures from Release Guide and add a reference to git sha in VOTE email template

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1301 from eolivelli/drop-md5-release-guide

TREE:tree cf75a90da4a1a8711da9bb0a67a8f2d95003bdc4 ------
TIME:03/29/2018 07:10:31

COMMIT:Remove references to md5 checksums in download page

According to current ASF suggestions, it is better to stop signing release with MD5, so we need to drop the links in the download page.

See paragraph which states "MD5 hashes are deprecated; please use SHA for new release" at https://www.apache.org/dev/release-signing.html

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1302 from eolivelli/dropmd5-download

TREE:tree 03f6c3692193a82e1519e75027cf8f9dbff5a43a ------
TIME:03/29/2018 07:09:37

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.2

TREE:tree 7e1b471428e5cefac26cc41f1e324d63a861f01b ------
TIME:03/28/2018 09:31:32

COMMIT:[maven-release-plugin] prepare release release-4.6.2

TREE:tree d1c54d7eb9f7111a8e39898fa04cbccb822f8f61 ------
TIME:03/28/2018 09:31:16

COMMIT:Updated site at revision 31b7db6

TREE:tree dec15adcf4ffac53e125188839dc045719899a16 ------
TIME:03/28/2018 08:51:26

COMMIT:Updated site at revision c1947c7

TREE:tree 4ae3036bb44216ea8ee502c6a4dd7edc305a7e31 ------
TIME:03/28/2018 08:36:49

COMMIT:Added executeOrdered to complement submitOrdered

In many cases, we are not interested in the `ListenableFuture` returned by `submitOrdered()` call. In these cases we can avoid creating the future object which will be ignored by calling the `execute()` instead of `submit()` on the underlying executor.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1290 from merlimat/execute-ordered

TREE:tree e859d9c670ffde5521c3c8a219b52d1659e9b55f ------
TIME:03/28/2018 08:33:01

COMMIT:Create 4.6.2 documentation stub

This change prepares the directory structure for docs of 4.6.2. New pages are not linked from menu.

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1296 from eolivelli/fix/copy-website-462

TREE:tree cbf471969b92d6045f5412b4e43bef91d4e8ab7e ------
TIME:03/28/2018 08:27:45

COMMIT:Add sync variants of all methods in handles

As discussed on the mailing list [1], this patch removes the
inconsistency around the naming of the close call on the new handle
APIs, by creating sync versions of each async calls, and renaming the
async versions to have the suffix "Async".

Most of the changes are very mechanical - just a copy of the old
method and some small fixups the javadoc. One thing to note is that
I've made a copy of the close and closeAsync methods in the
WriteHandle interface, so that the ReadHandle and Handle javadoc for
these methods do not have to talk about what it means to close/seal a
ledger.

Another change is that I've removed the SneakyThrows from close, that
would have also been needed on the other sync methods. Instead, I pass a
exception handler to FutureUtils which generates a BKException.

[1] https://lists.apache.org/thread.html/c3784cffb949438510d21e5eac8c0351865c6748c42c380e673a60db%3Cdev.bookkeeper.apache.org%3E

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1288 from ivankelly/async-rename

TREE:tree 401ee864fc16409944371823b539d7cc98a1a1f0 ------
TIME:03/28/2018 08:25:00

COMMIT:Issue #1287: NPE at DNS.reverse

Descriptions of the changes in this PR:

*Problem*

Null value can be returned on retrieving attributes.

*Solution*

If null value is returned, throw NamingException so cached localhost name is used.

Master Issue: #1287

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1295 from sijie/fix_dns_reverse, closes #1287

TREE:tree b413c4dd813279fe63ce3e03af93e7d2cde14c36 ------
TIME:03/27/2018 19:29:45

COMMIT:Implement directly ChannelOutboundHandlerAdapter in BookieProtoEncoding#ResponseEncoder

This change is mostly a clean up/refactor which drops intermediate MessageToMessageEncoder and MessageToMessageDecoder from BookieProtoEncoding

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1293, and it is a manual cherry pick of #1286

TREE:tree 7e1b471428e5cefac26cc41f1e324d63a861f01b ------
TIME:03/26/2018 11:40:26

COMMIT:Implement directly ChannelOutboundHandlerAdapter in BookieProtoEncoding#ResponseEncoder

This change is mostly a clean up/refactor which drops intermediate MessageToMessageEncoder and MessageToMessageDecoder from BookieProtoEncoding

Author: Enrico Olivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@gmail.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1286 from eolivelli/fix/java9-response-corrupted

TREE:tree b5d0ce153ccb483e8c364bbc7de47b0f8ba55e9a ------
TIME:03/26/2018 11:40:26

COMMIT:Updated site at revision 1bd2c0e

TREE:tree b52f735d581ae16194059b79dd724fd641070846 ------
TIME:03/24/2018 22:56:10

COMMIT:Refactored logAndConvertStatus() to avoid allocation when debug is off

The method `logAndConvertStatus(StatusCode status, int defaultStatus, Object... extraInfo)` is being called when processing the response for each write/read request in `PerChannelBookieClient`.

The logging is only done at debug level and the `extraInfo` is not used otherwise. By taking the `Object...` we're effectively taking a `Object[]` that is allocated each time, along with the boxing for ledgerId/entryId.

Refactored the code separate the logging and the status code conversion, so that we can skip the allocation when debug is off.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1291 from merlimat/log-and-convert-status

TREE:tree eaf904e9d87686872870ecfbe44f98485c438197 ------
TIME:03/24/2018 22:42:28

COMMIT:Improve FileInfoBackingCache

Descriptions of the changes in this PR:

There are a couple of issues noticed in FileInfoBackingCache:

1) There is a race condition in loadFileInfo between get-check and put. If concurrent loading happens, there might be a FileInfo loaded into the map after get-check. This can cause incorrect reference count on FileInfo.

2) FileLoader is doing I/O operation which happens under a giant write lock.

3) assert is typically not recommended since it is disabled at production runtime typically.

*Changes*

- Check whether fileinfo exists or not after getting write lock and before put
- Move any I/O operations out of write lock
- release the new FileInfo if concurrent puts happen
- remove the usage of assert

Beside that, switch to use ConcurrentLongHashMap to avoid boxing and unboxing.

Related Issues:

#913 #832

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1284 from sijie/improve_fileinfo_backing_cache

TREE:tree f7d48cb6e659744fe166df25de97838864e3f639 ------
TIME:03/24/2018 22:41:42

COMMIT:Fixed typos in README.md

Author: dmsergeevp44 <32652957+dmsergeevp44@users.noreply.github.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1285 from dmsergeevp44/patch-1

TREE:tree 74181bb9c7dc908830b21a67e2afe069682aeebb ------
TIME:03/23/2018 04:14:53

COMMIT:Improve write rejection in DbLedgerStorage

This PR contain 2 changes that are much related to each other.

1. Changed DbLedgerStorage write cache read-write lock into a `StampedLock`
   Main reason for using `StampedLock` is that this lock is always taken as a "read" lock, when putting entries in the the cache. It is protecting for the swapping of the write cache when the flush is triggered. Most of the time, we have many threads acquiring the read-lock. `StampedLock` is better in this scenario because there isn't any contention in the optimistic path (just a double volatile read).

2. Have a configurable throttle timing when the write cache is really full.
    If we try to write faster than we can put data in the storage device, eventually both write caches will get full and we have to throttle writes. Added here a setting to configure the amount of time to block the thread (who's calling `Bookie.addEntry()`, it could be IO thread or a addEntryWorker depending on configuration).
   After the timeout, if we still weren't able to flush the write cache and insert the current entry, bookie will reject the write operation, without logging but rather using a counter to keep track of it.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1280 from merlimat/db-storage-stamped-lock

TREE:tree 11da5fee271d49dc981f813b0b1c569d03ac7c53 ------
TIME:03/22/2018 07:17:48

COMMIT:Fixed DbStorage write cache segment index computation

When the write cache was merged from `yahoo-4.3` branch into master, an improvement went in around computing the the write cache segment index (doing shift instead of division) and that introduced a problem.

The write cache is broken into multiple segments (since buffers in JVM can only be at most 2GB). By default we use 1GB segments (or smaller if the write cache is overall smaller).

Because the shift count was wrong, the entries in the first segment were being ovrridden by entries in the 2nd segment (entries in the other segments were all fine).

That would lead to write some garbage in the entry log and subsequent read failures.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1279 from merlimat/fix-write-cache-segment-index

TREE:tree facfc2d332063d952c7576dc569dae22afd3a16c ------
TIME:03/21/2018 01:02:39

COMMIT:Implement `toString` method for CheckpointList and BufferedLogChannel

Descriptions of the changes in this PR:

```
Flushing entry logger 102 back to filesystem, pending for syncing entry loggers : [org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel7d98c184].

org.apache.bookkeeper.bookie.SortedLedgerStorage - Reached size org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointListd2c00ea5
```

`CheckpointList` and `BufferedLogChannel` is missing `toString` implementation.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1278 from sijie/fix_tostring_issue

TREE:tree 547a79d0a565eb66b6be904254e1458b91607ccb ------
TIME:03/20/2018 15:54:40

COMMIT:Updated site at revision 61ed8a6

TREE:tree e0a6bf56adb1a7b9e28d9abb800ed67285b59716 ------
TIME:03/19/2018 21:26:36

COMMIT:Fix ByteBuf leaking at Journal

Descriptions of the changes in this PR:

BufferLogChannel uses a pooled bytebuf for buffering writes. However Journal only closes the underlying log file channel, but it doesn't close buffer log channel, which can cause bytebuf leaking.

This problem get exposed at #1268

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1275 from sijie/fix_bytebuf_leaking_on_journal

TREE:tree 65a6b9c2f1568a5757ba40eac5b1548b1d154777 ------
TIME:03/19/2018 21:13:37

COMMIT:Updated site at revision 6667955

TREE:tree ec1777d10ae17251d221780ce7aa012d07bd3b4e ------
TIME:03/19/2018 19:10:45

COMMIT:Fix logging issue on PendingReadOp

Descriptions of the changes in this PR:

`EntryImpl` is recycled after callback is submitted for a given read op. However the object might be referenced after it is recycled, since read callback can come back after the read op is error-out.

This doesn't affect any operation or correctness. However it might introduce some confused logging.

This also got exposed by #1268

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1276 from sijie/fix_recycling_entries

TREE:tree 27de9affbd91b14c67fe9c4aa651b8c3abeb4299 ------
TIME:03/19/2018 18:57:42

COMMIT:Updated site at revision c4c8c03

TREE:tree e0a6bf56adb1a7b9e28d9abb800ed67285b59716 ------
TIME:03/19/2018 03:36:00

COMMIT:Set `ENABLE_DIGEST_TYPE_AUTODETECTION` to true as default value

Descriptions of the changes in this PR:

*Motivation*

We have recorded digest type in the ledger metadata since BK 4.5. it would be great to let client automatically detect the digest type
on opening ledger. So turn on the autodetection feature by default.

*Result*

digest type autodetection is on by default.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1252 from sijie/flip_default_values

TREE:tree 78e528e4db8ad2928e0324f4b95291c8b790e663 ------
TIME:03/19/2018 03:23:00

COMMIT:Ensure we instantiate threads that extend Netty FastThreadLocalThread

Since we make heavy use of `Recycler` and other `FastThreadLocal` objects from Netty, we should make sure that all (critical) threads that we instantiate are inheriting from `FastThreadLocalThread`.

`FastThreadLocalThread` has an optimization that makes access to `FastThreadLocal` faster. It's a class that extends regular `Thread` and adds a field for the thread local access.

There are a couple of places where we're currently not using `FastThreadLocal`:
 * `OrderedScheduler` builder
 * `BookieThread` (which is used in `Journal`, `ForceSyncThread`, etc..)

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1274 from merlimat/fast-thread-local

TREE:tree 298e33034774e1eb2a17831cc6502e3facd3c7d7 ------
TIME:03/18/2018 08:59:42

COMMIT:Use final variables in BoundedScheduledExecutorService

Make the fields final so that the optimizer can easily remove the `if (maxTasksInQueue > 0) {}` branch when the limit on the executor is disabled.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1273 from merlimat/final-bounded-executor

TREE:tree fcc4fc869de1879f59fabd94ba5d9bda5658579a ------
TIME:03/18/2018 08:55:57

COMMIT:Improve `BookKeeperAdmin#format` to avoid constructing redundant resources

Descriptions of the changes in this PR:

*Problem*

After metadata service uri change, all the metadata managers can be retrieved via metadata drivers.
So there is no need to construct another bookkeeper client to get ledger manager factory for formatting ledger metadata.

*Solution*

- remove constructing bookkeeper client and use the metadata driver to get ledger manager factory to format ledger metadata
- expose layout manager in bookie driver as well
- since we are adding `getLayoutManager` in bookie driver, we need to update `MetadataDriversTest`. cleanup the test drivers in `MetadataDriversTest`.

Related Issue: #1269

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1270 from sijie/improve_format

TREE:tree 0eae4ebd65936bcca019b41e72ba59c048568e42 ------
TIME:03/17/2018 05:31:24

COMMIT:Fixed journalQueueSize counter increment

The `journalQueueSize` counter was only decremented.

Moved the increment in the common method that is called in every path when adding to journal.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1271 from merlimat/journal-stat

TREE:tree 3fc2c8132a93b7f0d361e3b066a83b7099283694 ------
TIME:03/17/2018 04:41:03

COMMIT:Register jvm_memory_direct_bytes_used metric so that it's reported on Prometheus

The `jvm_memory_direct_bytes_used` metric is being registered on the default Prometheus static registry, though we're only exporting the stats that were added into the local registry instance.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1272 from merlimat/fix-mem-stats

TREE:tree 8804d63ec53dd913dea5da450b72b657fbedb35b ------
TIME:03/17/2018 04:40:23

COMMIT:Updated site at revision 9aececa

TREE:tree ab386e45e715a5ea44145d7ef91cddf5e0280e6e ------
TIME:03/17/2018 02:17:52

COMMIT:Close bookkeeper client used in format

Otherwise, the executors threads could keep the process calling it
alive. This isn't a problem for BookieShell, since it does a System.exit,
but it currently is for pulsar metadata cluster format.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1269 from ivankelly/close-format-client

TREE:tree 996a930a4618673f347931814f8261a0f0ee4973 ------
TIME:03/16/2018 19:19:49

COMMIT:Fix bytebuf leaking on `getLastAddConfirmed` (#1267)

This change is cherry-picking apache/bookkeeper@8b8c5515e041347e0fdd791534fa0a694c96c6ae#diff-55705379048304b4fd800432e743487eR250 to branch 4.6
TREE:tree aa47f12607756f8064a9388c3ad0d448203aa913 ------
TIME:03/16/2018 18:23:40

COMMIT:Fixes for multiple journals recovery

Currently, the implementation of multiple journals in bookie is broken because all journal instances are using the same `logMark` file to store the journal marker, stepping into each others.

Adding here a suffix for `logMark` to have unique files: `logMark.0`, `logMark.1` etc.
If there's 1 single journal, we'll keep using `logMark` so there's no compatibility issue.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1254 from merlimat/fix-multiple-journals and squashes the following commits:

41c01af63 [Matteo Merli] Fixed LastMarkCommandTest
15ea26806 [Matteo Merli] Merge remote-tracking branch 'apache/master' into fix-multiple-journals
48346b856 [Matteo Merli] Fixes for multiple journals recovery

TREE:tree 58f17fbdaf6c55b6a8f8320218eff857a6c4b78e ------
TIME:03/16/2018 17:41:14

COMMIT:Fixed buffer release in v2 BookieProtocol

There was a buffers leak when using V2 bookie protocol. This was introduced with the refactoring and the merges from yahoo branch.

Note: this was only happening when selecting  v2 protocol in client configuration.

The current code was missing a release in both the add and read entries path. I've been running it for some time and the ref-counting seems correct after the fix.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1266 from merlimat/fix-refcounting

TREE:tree 7284bdd8502e8fe3a9c295b321cc784b3f36a31a ------
TIME:03/16/2018 17:39:51

COMMIT:Refactored LAC cache in DbLedgerStorage

The `TransientLedgerInfo` cache that holds the LAC (or explicit lac) for all ledgers has showed up in the profiler as a big contention point.

### Modifications

 * Only add an item in `TransientLedgerInfo` is someone has asked for LAC or has set explicity LAC. This will save lot of memory if many ledger are not requiring the LAC info.
 * Use `ConcurrentLongHashMap` to store the `TransientLedgerInfo`. There are few advantages:
   - Key in the map is `long` and doesn't need boxing
   - The `get()` operation uses a stamped lock which is ideal in cases the number of `get()` is way bigger than `put()` operations, since it only needs a volatile variable read. In this case the map is only updated when new ledgers are added / removed, but we do a `get()` on each `addEntry()` operation.
  - Schedule periodical cleanup of the map for stale ledger info entries

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1264 from merlimat/refactor-lac-cache-db-ledger-storage

TREE:tree b4e58afed268118fb3e15a5fdaaa224919cb266b ------
TIME:03/16/2018 17:38:22

COMMIT:BP-29 (task 4): use metadata service uri for constructing registration manager and ledger manager factory

Descriptions of the changes in this PR:

The main changes are at two places:

- Deprecating using ServerConfiguration#getRegistrationManagerClass(). Changed Bookie.java to use MetadataBookieDriver to getRegistrationManager().
- Use MetadataBookieDriver/MetadataClientDriver to retrieve ledger manager factory in Bookie.java / BookKeeper.java

The other changes are in-place changes for replacing using registration manager to using metadata drivers.

- provides a few util functions in `MetadataDrivers` to run `functions` with registration manager / ledger manager factory

Master Issue: #1123

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1251 from sijie/use_metadata_service_uri_in_registration_manager

TREE:tree d6aa5f7f7b9945130e78d91cd49333c9acde1e7e ------
TIME:03/16/2018 06:27:49

COMMIT:ISSUE #881: use initialize insteadof format in docker image

Descriptions of the changes in this PR:

Currently docker image uses format during startup to initialize the cluster. It would be good to separate initialize from format. The initialize command should only create znodes for brand new environment. It should not involve any logic on reformatting.

- use initialize insteadof format in docker image.
- make initialize an atomic operation.
- add initialize and nuke command in makefile.
- fix error for non root user running.

This PR tested by local build, since 4.7 is not released, will bump bk version in Dockerfile once 4.7 released.

Master Issue: #881

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1263 from jiazhai/issue_881, closes #881

TREE:tree d1a479cb74daf89745cdd5497a76fd257337f150 ------
TIME:03/16/2018 06:24:05

COMMIT:Merge tests/jmh into microbenchmark

Descriptions of the changes in this PR:

tests/jmh was added a while ago, but it is got dropped out of root pom with mistakes.
mircobenchmark was added later. it is making sense to merge tests/jmh into microbenchmark module since they are using jmh to do microbenchmarks

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1265 from sijie/move_jmh_to_benchmarks

TREE:tree 67445f85a20a9c753579edc8e76931c10483abce ------
TIME:03/16/2018 06:20:25

COMMIT:Updated site at revision 3bff199

TREE:tree 7597db376db8ec4a5da0668c0b9cee779bf4cc84 ------
TIME:03/15/2018 08:01:30

COMMIT:Collect Prometheus latency stats using DataSketches

The implementation for collecting and estimating the latency quantiles in the Prometheus Java client library is very slow and it is impacting the the bookie performance.

I have added a micro-benchmark that tests our various stats providers. These tests are simulating 16 concurrent threads updating the stats.

#### Counter increment
```
Benchmark                              (statsProvider)   Mode  Cnt    Score      Error   Units
StatsLoggerBenchmark.counterIncrement       Prometheus  thrpt    3  391.882 ±  786.987  ops/us
StatsLoggerBenchmark.counterIncrement         Codahale  thrpt    3  449.341 ± 1337.736  ops/us
StatsLoggerBenchmark.counterIncrement          Twitter  thrpt    3   43.354 ±    9.331  ops/us
StatsLoggerBenchmark.counterIncrement          Ostrich  thrpt    3   43.790 ±    1.332  ops/us
```

Here prometheus is fast, though not as fast as a simple `LongAdder` which can reach ~500M ops/sec.

#### Latency quantiles

```
Benchmark                              (statsProvider)   Mode  Cnt    Score      Error   Units
StatsLoggerBenchmark.recordLatency          Prometheus  thrpt    3    0.255 ±    0.667  ops/us
StatsLoggerBenchmark.recordLatency            Codahale  thrpt    3    4.963 ±    1.671  ops/us
StatsLoggerBenchmark.recordLatency             Twitter  thrpt    3    4.793 ±    0.766  ops/us
StatsLoggerBenchmark.recordLatency             Ostrich  thrpt    3    2.473 ±    6.394  ops/us
```

Here is where Prometheus is super-slow: 250K ops/second max, mostly due to contention and GC pressure.

## Modification

I have re-adapted a stats collector I had done in the Yahoo branch:
https://github.com/yahoo/bookkeeper/tree/yahoo-4.3/bookkeeper-stats-providers/datasketches-metrics-provider/src/main/java/org/apache/bokkeeper/stats/datasketches

This is based on the [DataSketches](https://datasketches.github.io/) library to have very fast and lightweight quantile estimates (along with a number of other operations), plus some tricks to avoid concurrency issues by using thread local collectors and aggregating when needed in background.

After the change, the throughput is 150x the original prometheus collector.

```
Benchmark                              (statsProvider)   Mode  Cnt    Score     Error   Units
StatsLoggerBenchmark.counterIncrement       Prometheus  thrpt    3  531.906 ± 129.602  ops/us
StatsLoggerBenchmark.recordLatency          Prometheus  thrpt    3   27.538 ±   5.893  ops/us
```

It is worth noting that the main bottle-neck in the `recordLatency` test is now the `System.nanoTime()`
call used to pass different samples to the stat logger.

`System.nanoTime()` is not super fast:

```
Benchmark                               (statsProvider)   Mode  Cnt    Score     Error   Units
StatsLoggerBenchmark.currentTimeMillis              N/A  thrpt    3  161.502 ± 267.238  ops/us
StatsLoggerBenchmark.nanoTime                       N/A  thrpt    3   32.822 ±   2.256  ops/us
```

By removing the `System.nanoTime()` call from the benchmark, the Prometheus+DataSketches collector results in:

```
Benchmark                               (statsProvider)   Mode  Cnt    Score     Error   Units
StatsLoggerBenchmark.recordLatency           Prometheus  thrpt    3  108.542 ±  31.848  ops/us
```

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1245 from merlimat/prometheus-datasketches

TREE:tree 1ff1ff03d2b17ec6b521cf116a8b37989104b596 ------
TIME:03/15/2018 07:48:32

COMMIT:Fixed journal trimming after write cache flush in DbLedgerStorage

`DbLedgerStorage` uses an in-memory write cache to accumulate entries before writing into the entry log.

The flush of the write cache is triggered by 2 factors:
 1. `SyncThread` issuing a checkpoint (eg: every 10sec or 1min)
 2. Write cache is full, so we need to force the flush

In case (1), the checkpoint is also communicated to the journal which can then move the `logMark` forward and eventually discard old unused journals.

In cae (2), we're not moving the `logMark`. This has few side effects:
 1. When restarting the bookie it will replay a bigger portion of the journal
 2. We are moving the `logMark` only every 1min, so we need to keep 1minute of journals on disk
    - If the disk hosting the journal(s) has low capacity, it can fill it up
    - This is evident when mounting the journal on a 60GB ram-disk and using 8 journals in the bookie. At a sufficient rate, the write cache keeps getting flushed, but the journals are only trimmed after 1 minute, thus accumulating 1min worth of writes in the journal device, filling up the space.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1261 from merlimat/db-storage-journal-trimming

TREE:tree 5eb442ccde4e8787becdaee06cf1763ea3befa4c ------
TIME:03/15/2018 00:32:36

COMMIT:Allow to send callbacks from journal thread

In BK 4.3 it was possible to configure 0 threads for the dispatching of journal callback threads.

There might be good reasons to not use a thread pool when dispatching the callback threads:
 * Avoiding one more context switch
 * Avoiding contention on the executor enqueuing
 * When using multiple journals, the journal thread is not a bottleneck anymore

We should allow the same convention (threads=0 means direct execution) that we have in other places.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1258 from merlimat/journal-callbacks

TREE:tree 91968794d258f060c8a544860157bffb43565978 ------
TIME:03/14/2018 22:30:44

COMMIT:Replaced synchronized with volatile read in BookieStatus

`BookieStatus.isInReadOnlyMode()` is being called from IO threads at each write request.

Having `synchronized` method is a major source of contention between all these threads and caps the throughput and increases the latency.

Replacing here with a `volatile` variable read. This will have the same exact behavior as today while removing the contention point.

I think we could eventually even do a "dirty" read of that variable to further reduce the overhead of the volatile read.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1259 from merlimat/bookie-status-contention

(cherry picked from commit e60085286f48c73ec779e45c84b4a76b2dc2da38)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 37ab1726125de8a51d7385924d9df6f32686f56f ------
TIME:03/14/2018 20:11:11

COMMIT:Replaced synchronized with volatile read in BookieStatus

`BookieStatus.isInReadOnlyMode()` is being called from IO threads at each write request.

Having `synchronized` method is a major source of contention between all these threads and caps the throughput and increases the latency.

Replacing here with a `volatile` variable read. This will have the same exact behavior as today while removing the contention point.

I think we could eventually even do a "dirty" read of that variable to further reduce the overhead of the volatile read.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1259 from merlimat/bookie-status-contention

TREE:tree 67e33cb121f1cd4e7bdc2269e40974f28abf2fd0 ------
TIME:03/14/2018 20:11:11

COMMIT:Updated site at revision fc8097f

TREE:tree 9380974d7736b2a9a1b0e15b4b3dc2d74dd47cfd ------
TIME:03/14/2018 19:45:51

COMMIT:Updated site at revision 7e8980f

TREE:tree b6542a33fa050d3f7f3a55108e302a5b97dcee85 ------
TIME:03/14/2018 19:15:58

COMMIT:ISSUE #762: copy codahale files to org.apache.bookkeeper.stats.codahale

Descriptions of the changes in this PR:
Codahale stats providers are sharing same package name with the stats library org.apache.bookkeeper.stats. We should consider moving them to their own package name.
`org.apache.bookkeeper.stats => org.apache.bookkeeper.stats.codahale`

For BC concerns, we need to do this in two phases:
- in 4.7, we copy the files but still have the old files for BC. but mark the old classes as deprecated.
- in 4.8, we remove the old files.
because the class names are used for reflection.

Master Issue: #762

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1257 from jiazhai/issue_762, closes #762

TREE:tree aa264358fe1aaf5ee0e4be610f2b451adf5ead40 ------
TIME:03/14/2018 19:15:54

COMMIT:ISSUE #1255: Bookie should not advance the journal marker before creating the index file

Descriptions of the changes in this PR:

*Problem*

Currently Bookie journal 'new ledger' entry if a ledger doesn't exist at ledger storage. This 'new ledger' entry is journaled before adding the entry to ledger storage. so this would cause a problem on checkpointing.

- journal 'new ledger' entry

```
    /**
     * Retrieve the ledger descriptor for the ledger which entry should be added to.
     * The LedgerDescriptor returned from this method should be eventually freed with
     * #putHandle().
     *
     * throws BookieException if masterKey does not match the master key of the ledger
     */
    private LedgerDescriptor getLedgerForEntry(ByteBuf entry, final byte[] masterKey)
            throws IOException, BookieException {
        final long ledgerId = entry.getLong(entry.readerIndex());

        LedgerDescriptor l = handles.getHandle(ledgerId, masterKey);
        if (masterKeyCache.get(ledgerId) == null) {
            // Force the load into masterKey cache
            byte[] oldValue = masterKeyCache.putIfAbsent(ledgerId, masterKey);
            if (oldValue == null) {
                // new handle, we should add the key to journal ensure we can rebuild
                ByteBuffer bb = ByteBuffer.allocate(8 + 8 + 4 + masterKey.length);
                bb.putLong(ledgerId);
                bb.putLong(METAENTRY_ID_LEDGER_KEY);
                bb.putInt(masterKey.length);
                bb.put(masterKey);
                bb.flip();

                getJournal(ledgerId).logAddEntry(bb, false /* ackBeforeSync */, new NopWriteCallback(), null);
            }
        }

        return l;
    }
```

- add entry to ledger storage
```
    /**
     * Add an entry to a ledger as specified by handle.
     */
    private void addEntryInternal(LedgerDescriptor handle, ByteBuf entry,
                                  boolean ackBeforeSync, WriteCallback cb, Object ctx)
            throws IOException, BookieException {
        long ledgerId = handle.getLedgerId();
        long entryId = handle.addEntry(entry);

        writeBytes.add(entry.readableBytes());

        if (LOG.isTraceEnabled()) {
            LOG.trace("Adding {}{}", entryId, ledgerId);
        }
        getJournal(ledgerId).logAddEntry(entry, ackBeforeSync, cb, ctx);
    }

```

The problematic sequence can be described as below:

- thread t1 is adding the first entry of ledger L1
- thread t2 is adding entries of ledger L2
- t1 is adding a journal entry of 'new ledger L1'
- t2 is adding entries after t1 adds the journal entry and before t1 adding the entry to ledger storage
- after t2 added entries, checkpoint happens in the ledger storage. it would roll the journal mark, which will claim the 'new ledger L1' entry as persistent.
- if the bookie restarts, it would fail with no such ledger exception.

The problem can be produced using a unit test: https://github.com/sijie/bookkeeper/commit/5053a717cd578aeb88236d373553d7494501b801

*Solution*

The fix is simple - just make sure the 'new ledger' journal entry is added after an entry is added to ledger storage. so it make sure when checkpoint happen it will flush and create the ledger before moving the journal mark.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Jia Zhai <None>, Yiming Zang <yzang2016@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1256 from sijie/fix_db_ledger_storage_checkpoint, closes #1255

(cherry picked from commit 7e8980fff096a9111e9365d0dc959af0625a87db)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree d34dddecd9e585cc68ae36993824490d805cf978 ------
TIME:03/14/2018 19:03:05

COMMIT:ISSUE #1255: Bookie should not advance the journal marker before creating the index file

Descriptions of the changes in this PR:

*Problem*

Currently Bookie journal 'new ledger' entry if a ledger doesn't exist at ledger storage. This 'new ledger' entry is journaled before adding the entry to ledger storage. so this would cause a problem on checkpointing.

- journal 'new ledger' entry

```
    /**
     * Retrieve the ledger descriptor for the ledger which entry should be added to.
     * The LedgerDescriptor returned from this method should be eventually freed with
     * #putHandle().
     *
     * throws BookieException if masterKey does not match the master key of the ledger
     */
    private LedgerDescriptor getLedgerForEntry(ByteBuf entry, final byte[] masterKey)
            throws IOException, BookieException {
        final long ledgerId = entry.getLong(entry.readerIndex());

        LedgerDescriptor l = handles.getHandle(ledgerId, masterKey);
        if (masterKeyCache.get(ledgerId) == null) {
            // Force the load into masterKey cache
            byte[] oldValue = masterKeyCache.putIfAbsent(ledgerId, masterKey);
            if (oldValue == null) {
                // new handle, we should add the key to journal ensure we can rebuild
                ByteBuffer bb = ByteBuffer.allocate(8 + 8 + 4 + masterKey.length);
                bb.putLong(ledgerId);
                bb.putLong(METAENTRY_ID_LEDGER_KEY);
                bb.putInt(masterKey.length);
                bb.put(masterKey);
                bb.flip();

                getJournal(ledgerId).logAddEntry(bb, false /* ackBeforeSync */, new NopWriteCallback(), null);
            }
        }

        return l;
    }
```

- add entry to ledger storage
```
    /**
     * Add an entry to a ledger as specified by handle.
     */
    private void addEntryInternal(LedgerDescriptor handle, ByteBuf entry,
                                  boolean ackBeforeSync, WriteCallback cb, Object ctx)
            throws IOException, BookieException {
        long ledgerId = handle.getLedgerId();
        long entryId = handle.addEntry(entry);

        writeBytes.add(entry.readableBytes());

        if (LOG.isTraceEnabled()) {
            LOG.trace("Adding {}{}", entryId, ledgerId);
        }
        getJournal(ledgerId).logAddEntry(entry, ackBeforeSync, cb, ctx);
    }

```

The problematic sequence can be described as below:

- thread t1 is adding the first entry of ledger L1
- thread t2 is adding entries of ledger L2
- t1 is adding a journal entry of 'new ledger L1'
- t2 is adding entries after t1 adds the journal entry and before t1 adding the entry to ledger storage
- after t2 added entries, checkpoint happens in the ledger storage. it would roll the journal mark, which will claim the 'new ledger L1' entry as persistent.
- if the bookie restarts, it would fail with no such ledger exception.

The problem can be produced using a unit test: https://github.com/sijie/bookkeeper/commit/5053a717cd578aeb88236d373553d7494501b801

*Solution*

The fix is simple - just make sure the 'new ledger' journal entry is added after an entry is added to ledger storage. so it make sure when checkpoint happen it will flush and create the ledger before moving the journal mark.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Jia Zhai <None>, Yiming Zang <yzang2016@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1256 from sijie/fix_db_ledger_storage_checkpoint, closes #1255

TREE:tree ca6e873f5e36d1936c3d1a629815b87941cd93c4 ------
TIME:03/14/2018 19:03:05

COMMIT:Jenkins seed job for testing DSLs

The job allows you to specify a repo and a branch. It will look for
all files named .test-infra/jenkins/jenkins_testing_job_*.groovy and
try to generate jobs for them. The seed job is in the folder
bookkeeper-jenkins-testing/ and has lookupStrategy set to
'SEED_JOB'. This means that any job generated by this seed will be
created in the same folder, thus lowering the chance of breaking our
existing production jobs.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1248 from ivankelly/test-seed

TREE:tree 33d39af13b9b2d273dc6a25b673d43c0ec42b515 ------
TIME:03/14/2018 15:20:03

COMMIT:Updated site at revision 4578e6d

TREE:tree 259e40a6d3b15d77cb9b281964600571a3718b7c ------
TIME:03/14/2018 02:00:12

COMMIT:Fixed Journal stats names

In `BOOKKEEPER-1009: Use multiple journals in bookie` 123eccd435a4a96a9147ed4a24efbe9025fe79ba there was a change in the metrics name that would be affecting also user not running with multiple journal.

It is a bit inconvenient to aggregate the stats in the metrics collector (how to aggregate 99pct latency for example).

I think the best option is to have a single metric even when using multiple journal threads.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1250 from merlimat/journal-metric-names

(cherry picked from commit 4578e6d65a304c870fcba013099badd6018c95de)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 6c32000e05b075cf49675c27bcf40a2572447697 ------
TIME:03/14/2018 00:49:50

COMMIT:Fixed Journal stats names

In `BOOKKEEPER-1009: Use multiple journals in bookie` 123eccd435a4a96a9147ed4a24efbe9025fe79ba there was a change in the metrics name that would be affecting also user not running with multiple journal.

It is a bit inconvenient to aggregate the stats in the metrics collector (how to aggregate 99pct latency for example).

I think the best option is to have a single metric even when using multiple journal threads.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1250 from merlimat/journal-metric-names

TREE:tree 53d4194fd9b052e90a0efc8a6d957307252b649f ------
TIME:03/14/2018 00:49:50

COMMIT:Updated site at revision 88addff

TREE:tree 93d8df7822d970a6e0fbdc61bc3b091fa34e1c7d ------
TIME:03/14/2018 00:09:55

COMMIT:ISSUE #336: add DC/OS package update and instructions

Descriptions of the changes in this PR:

Provide instructions of updating DCOS package by using latest docker image when do new release.

Master Issue: #336

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1247 from jiazhai/issue_336, closes #336

TREE:tree a18610d842285a4dc087be2bba8199f9151cb8d3 ------
TIME:03/14/2018 00:07:32

COMMIT:Make it possible to build site on ubuntu and debian

Xenial ships with ruby 2.3.1. Debian Stretch ships 2.3.3. The current
Gemfile asks for 2.4.1. This patch drops the requirement to >=2.3.1.

It also make it possible to test the site without sudo.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1253 from ivankelly/site-deb

TREE:tree 783406481f46b717d4c114470f60fa914bb8520e ------
TIME:03/14/2018 00:03:20

COMMIT:Issue #570: make changes to SyncThread/checkpoint logic.

Descriptions of the changes in this PR:

make changes to SyncThread/checkpoint logic, so that incase of
entrylogperledger, checkpoint happens for every flushInterval
but not when active entrylog is created/rolled over.

This is < sub-task3  > of Issue #570

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1236 from reddycharan/addcheckpointlogic, closes #570

TREE:tree 792936f12aead2d3615bb9b902a22af395eafe77 ------
TIME:03/13/2018 23:51:42

COMMIT:Fixed Journal static empty array list recycling

When `journalSyncData=false`, we passing `EMPTY_ARRAY_LIST` to the `ForceWriteThread` when the journal is rolled over.

I have seen this exception:

```
18:39:52.285 [ForceWriteThread] ERROR org.apache.bookkeeper.bookie.BookieCriticalThread - Uncaught exception in thread ForceWriteThread and is exiting!
java.lang.NullPointerException: null
	at io.netty.util.Recycler$DefaultHandle.recycle(Recycler.java:219) ~[io.netty-netty-all-4.1.21.Final.jar:4.1.21.Final]
	at org.apache.bookkeeper.common.collections.RecyclableArrayList.recycle(RecyclableArrayList.java:55) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.bookie.Journal$ForceWriteRequest.recycle(Journal.java:402) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.bookie.Journal$ForceWriteRequest.access$1(Journal.java:399) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at org.apache.bookkeeper.bookie.Journal$ForceWriteThread.run(Journal.java:506) ~[org.apache.bookkeeper-bookkeeper-server-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
```

This is due to calling `recycle()` twice on the same `EMPTY_ARRAY_LIST`  instance. The solution is that `EMPTY_ARRAY_LIST` should not be a pooled instance and we should check that before recycling.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1249 from merlimat/fix-journal-list-recycle

TREE:tree ae47093169aa4afacb724840f0accbfad82563fd ------
TIME:03/13/2018 02:35:30

COMMIT:ISSUE #1229: PendingAddOp can get recycled before it gets executed

Descriptions of the changes in this PR:
*Problem*

The PendingAddOp can be recycled when it is cancelled before it is executed. so it will hit NPE when it is actually executed. This is a bug introduced by #1091

*Solution*

Only recycle PendingAddOp after it has been run.

Master Issue: #1229

Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1230 from sijie/fix_npe, closes #1229

TREE:tree 51fc4532b0c29b1075e76c75ea1708190df1a2e0 ------
TIME:03/06/2018 04:13:14

COMMIT:handle zookeeper session expire in zk ledger manager

Descriptions of the changes in this PR:

cherry-pick twitter/bookkeeperdfcda5cc2efdc03db99fe126499f8e3347f50484

This includes a test case to test `AbstractZkLedgerManager`, including

    1) create/delete/read/write ledger metadata
    2) register/unregister listeners
    3) handling various watched events

This also fixes a couple of cases in the `AbstractZkLedgerManager` what is caught with test case.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1130 from sijie/fix_session_expires

TREE:tree 44d0b5f3cb33dbcc8ee9d7a71d5a58707af9d84d ------
TIME:02/17/2018 08:51:13

COMMIT:Introduce MockClock and MockExecutorController to improve timer-based testing

Descriptions of the changes in this PR:

- introduce MockClock and MockExecutorController to control time advancing to trigger execution on tasks
- convert LedgerDirsMonitor from using Thread to use ScheduledExecutorService (moved the logic in `run` method to `check` without code changes)
- change TestLedgerDirsManager to use MockClock and MockExecutorController to remove the usage of `Thread.sleep`

Master Issue:  #943

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #944 from sijie/mock_scheduler

TREE:tree 665d188a5a1d1bf50ca9dee914fba92c6ddb8c59 ------
TIME:01/07/2018 07:21:52

COMMIT:Fix incorrect cherry-pick (#1244)

There was a typo at cherry-picking #1240 when merging it.
TREE:tree 97a407e70f727081dba02c7cdedc107125f12a27 ------
TIME:03/10/2018 10:11:40

COMMIT:Disable using v2 decoder to decode v3 response if usingV2WireProtocol is enabled and handle unknown op in v2 request decoder

Descriptions of the changes in this PR:

*Problem*

- response decoder should use whatever protocol that request is using to decode the response. otherwise it is making wrong assumption on response protocol.
- v2 request decoder doesn't handle unknown op correctly, which will cause netty double-release bytebuf

*Solution*

- make sure response decoder respect the protocol that client is using for sending requests
- v2 request decoder should throw exceptions when fail to decode unknown request

Related issues: #198

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1240 from sijie/bookkeeper_fix_bytebuf_issues

(cherry picked from commit 59e48a390c1caa12adb7cc89afd2f9d48790a674)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree dcf41eca4aecf0e8878a9866fdbf5ff03d7a0d50 ------
TIME:03/10/2018 09:13:57

COMMIT:Disable using v2 decoder to decode v3 response if usingV2WireProtocol is enabled and handle unknown op in v2 request decoder

Descriptions of the changes in this PR:

*Problem*

- response decoder should use whatever protocol that request is using to decode the response. otherwise it is making wrong assumption on response protocol.
- v2 request decoder doesn't handle unknown op correctly, which will cause netty double-release bytebuf

*Solution*

- make sure response decoder respect the protocol that client is using for sending requests
- v2 request decoder should throw exceptions when fail to decode unknown request

Related issues: #198

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1240 from sijie/bookkeeper_fix_bytebuf_issues

TREE:tree 957a625fb050b5c5ff1c1c56af04bf259a1a1f6f ------
TIME:03/10/2018 09:13:57

COMMIT:Issue #1241: Fixed NPE in PerChannelBookieClient

The `CompletionValue` object from the map can be null in some cases and we need to protect for it.

Fixes #1241

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1242 from merlimat/fix-npe, closes #1241

TREE:tree 8f9d4c35dac21d333188cdb6b4a9395767b8e76c ------
TIME:03/10/2018 06:06:18

COMMIT:Removed ServerStats since it was not used anymore

ServerStats class was previously used to expose stats through JMX but it's
not being used anymore and it's just causing lock contention in Bookie IO threads
when using v2 protocol.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1243 from merlimat/remove-server-stats

TREE:tree 8505e69166a606a500c7741d57fed54d46988eb4 ------
TIME:03/10/2018 02:04:16

COMMIT:Move dependency version management to root pom file

Descriptions of the changes in this PR:

*Motivation*

To have a clear dependency management at bookkeeper, avoid unnecessary version conflicts.

*Changes*

**Dependencies**

- define versions at properties section at root pom file
- move dependency definitions to `dependencyManagement` at root pom file
- avoid specifying dependency version at sub modules unless it is really needed. comments were already / are added for those cases.

**Plugin Dependencies**

- define versions at properties section at root pom file
- use property to specify version when using a new plugin
- remove duplicated configurations on plugins

*Other changes*

- cleanup root pom files for module `stream` and `stream/distributedlog`
- fix some checkstyle violations since we are changing some plugin inheritances.

This fixes #251

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Jia Zhai <None>

This closes #1235 from sijie/cleanup_poms

TREE:tree b90d4be02cec4c0bfa92f68539c119d04f200e9a ------
TIME:03/10/2018 02:03:15

COMMIT:Issue #570: Move logic of unpersistedbytes to bufferedchannel

Descriptions of the changes in this PR:

This is < sub-task2 > of Issue #570.

https://github.com/apache/bookkeeper/commit/26b09abb4202362ca37d6944ce75eb2a3309dc3c
introduced the flushEntrylogBytes factor. But it is structurally correct to have this
logic in BufferedChannel, rather than in EntryLogger, since it is paramter of BufferedChannel.

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1228 from reddycharan/fixunpersistedbytes, closes #570

TREE:tree 3a78c5406f3d4551bb9f72f1faf287bbc3f78da9 ------
TIME:03/09/2018 12:03:12

COMMIT:Reduce running time for testLedgerCreateAdvWithLedgerIdInLoop

This test has flaked in CI regularly mainly because it takes a long
time to run.

This changes reduces the running time by.
1. Creating the ledgers with a ensemble size of 1
2. Creating and writing to the ledgers in parallel
3. Using async methods to write entries to the ledgers

This brought the test from ~60 seconds to ~7 seconds locally.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1233 from ivankelly/ledger-create-adv-timeout

TREE:tree c7547476c3823534e5faf7bac98419b795192336 ------
TIME:03/09/2018 07:19:39

COMMIT:Issue #570: getting rid of unnecessary synchronization in InterleavedLedgerStorage

Descriptions of the changes in this PR:

This is < sub-task1 > of Issue #570.

In InterleavedLedgerStorage, since the initial version of it, addEntry and processEntry methods are synchronized, but they are not required to be synchronized.

Removal of unnecessary synchronization in InterleavedLedgerStorage methods, as described in http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/201707.mbox/%3CCAO2yDyZ946fp2S_qR2iL178hPiXgrnFGb%3DpvkyK4ReSYAtNLBw%40mail.gmail.com%3E

Master Issue: #570

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1225 from reddycharan/nonsynchaddinterleavedstorage, closes #570

TREE:tree 9f6cb95a5792c613c5fcd158f3fc5d796166894c ------
TIME:03/09/2018 07:16:46

COMMIT:Make shading rule consistent between bookkeeper-server-shaded and bookkeeper-server-tests-shaded

Descriptions of the changes in this PR:

`bookkeeper-server:test-jar` is working with `bookkeeper-server`. we should make `bookkeeper-server-tests-shaded` work with `bookkeeper-server-shaded`.  so this change is to make they have consistent shading rule.

```
<dependency>
      <groupId>org.apache.bookkeeper</groupId>
      <artifactId>bookkeeper-server-shaded</artifactId>
      <version>${bookkeeper.version}</version>
      <scope>test</scope>
    </dependency>
<dependency>
      <groupId>org.apache.bookkeeper</groupId>
      <artifactId>bookkeeper-server-tests-shaded</artifactId>
      <version>${bookkeeper.version}</version>
      <scope>test</scope>
    </dependency>
```

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #1234 from sijie/sijie_improve_tests_shaded

TREE:tree 03eddf34145189495bb6618b53bf4f0753dc139f ------
TIME:03/07/2018 01:45:51

COMMIT:Dont shade netty at distributedlog-core-shaded

Descriptions of the changes in this PR:

*Problem*

JVM crashed on linux platforms, when`distributedlog-core-shaded` (where netty `4.1.12.Final` was shaded) is used in a project where a non-shaded netty `4.1.21.Final` is used and epoll is enabled.

```
Event: 13.322 Thread 0x00007fef90013000 Exception <a 'java/lang/NoSuchMethodError': Method io.netty.channel.epoll.Native.epollWait0(IJII)I name or signature does not match>             (0x00000000e709c060) thrown at [/build/openjdk-8-8u141-b15/src/hotspot/src/share/vm/prims/jni.cpp, line 4011]
```

Because Epoll is enabled on linux platforms. However because two different netty versions bring in two different jni bindings, when the netty epoll transport tries to resolve the jni library, it hit the signature mismatch issue.

*Solution*

Dont shade netty at all. Let the application resolve which netty version to use.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1231 from sijie/dont_shade_netty

TREE:tree b655db0f233276be5e2139ac67ccc7becddf453c ------
TIME:03/06/2018 10:33:26

COMMIT:Updated site at revision fbc06ef

TREE:tree 40e4d19dbd6c7fcad8e6359b680197649e5c6ba4 ------
TIME:03/06/2018 04:26:13

COMMIT:ISSUE #1229: PendingAddOp can get recycled before it gets executed

Descriptions of the changes in this PR:
*Problem*

The PendingAddOp can be recycled when it is cancelled before it is executed. so it will hit NPE when it is actually executed. This is a bug introduced by #1091

*Solution*

Only recycle PendingAddOp after it has been run.

Master Issue: #1229

Author: Sijie Guo <sijie@apache.org>

Reviewers: Andrey Yegorov <None>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1230 from sijie/fix_npe, closes #1229

TREE:tree 903581063e0c08b007191642454f55e1e4cf01b7 ------
TIME:03/06/2018 04:13:14

COMMIT:Fix AbstractLedgerManagerFactory on handling both shaded class and original class co-exists case

Descriptions of the changes in this PR:

*Problem*

#1217 addresses the issue when using a shaded class accessing a bookkeeper cluster.  However the assumption was made when the classpath only has shaded classes. However, it didn't address the case when shaded class and original class can co-exist. because IOException is thrown instead of ClassNotFoundException at following code:

```
                Class<?> theCls = Class.forName(layout.getManagerFactoryClass());
                if (!LedgerManagerFactory.class.isAssignableFrom(theCls)) {
                    throw new IOException("Wrong ledger manager factory " + layout.getManagerFactoryClass());
                }
```

*Solution*

This change fixes the issue.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1227 from sijie/debug_issue

TREE:tree 7fdba5a0808c5daa4a815fbc2776f2dd47c0b1b6 ------
TIME:03/05/2018 05:50:58

COMMIT:Make table service client includes table service related jars

Descriptions of the changes in this PR:

This is a change for #1205

*Motivation*

in order to implify the other project to use table service, it would be good to make sure the client include table service related jars.

*Solution*

Include table service related jars in the client-all jar.

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1226 from sijie/publish_table_service_jars

TREE:tree 0b8a3a7cc0cfe7ba47c8d1c29dc3d15da30d7156 ------
TIME:03/04/2018 20:41:16

COMMIT:Integrate table service in bookkeeper build

Descriptions of the changes in this PR:

- update the pom files to integrate table service with bookkeeper build
- add 3 flags to control building/testing table service. by default the table service will be built and tested with existing maven commands.
  It only builds and runs the tests on following conditions:
    * `-Dstream`: enable building the table service
    * `-DstreamTests`: run the unit tests of table service
    * `-DstreamIntegrationTests`: run the integration tests of table service
- update CI jobs
    * Travis: compile table service for all builds, run unit tests if code modifications happen under `stream` directory
    * Jenkins: compile table service on precommit jobs, compile and run unit tests for postcommit jobs

Master Issue: #1205

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <zhaijia@apache.org>

This closes #1216 from sijie/built_table_service

TREE:tree a962ee00bf5e78d71e3cfb6a0691509bf21ec1e2 ------
TIME:03/04/2018 10:35:59

COMMIT:Fix TestBKSyncLogReader

Descriptions of the changes in this PR:

*Problem*

The test case `TestBKSyncLogReader` is waiting an entry beyond a control record, where the number of control records can
vary depend on the timing of flush()/commit(). This introduces the flakiness of this test.

*Solution*

This change changes to wait for readahead go beyond the last user record, which is more deterministic.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Jia Zhai <None>,  Philip Su <psu@twitter.com>

This closes #1168 from sijie/fix_test_sync_log_reader

TREE:tree 69b5d33a8cfbd1260271212b4770f9e8310fdef1 ------
TIME:03/03/2018 02:58:28

COMMIT:Improve Travis Build

Descriptions of the changes in this PR:

*Problem*

There are a couple of problem with current travis build

- apache/bookkeeper#1223 introduce `set -e` on script section, which it cause some weird early-exiting problem.
- we run two installs. one is the default install by travis, the other one is install with apache-rat/spotbug checks in script section, which make the build slow.
- travis_retry and travis_wait spread across different commands in the script section

*Solution*

- move build logic into a bash script file and invoke the script
- skip install section in travis

*Result*

This reduces travis build time by 10+ mins and make it stable

NOTES:

The changes under `site` and `stream/distributedlog` are used `empty commits` to trigger corresponding builds in travis.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1224 from sijie/travis_wait

TREE:tree 2a211a2927fd315f1918900919dcfeb50d55740f ------
TIME:03/03/2018 02:55:17

COMMIT:Refactored ReadResponse ref count handling

This contains a number of changes.

- V2 bookie protocol
  - Add retain and release methods to all responses. For read response
    it handles the data buffer.
  - ReadResponses always have a buffer now, even if empty.

- Server side
  - In the v2 read handler, releasing of the buffer in the case of
    error is left to the very end.

- Client side
  - Per channel bookie clients own the buffer for read responses.
    If a ReadCallback want it to live past the lifetime of the call
    it must call retain.

This change was originally e8643140 in the yahoo-4.3 branch.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1221 from ivankelly/yahoo-bp-11

TREE:tree b7a66ea2552e6e275d496712c3662a60f2c3190f ------
TIME:03/02/2018 10:08:48

COMMIT:Enable buiding website on travis job if a PR is modifying `site`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1223 from sijie/run_tests_on_website_changes

TREE:tree 7f15e7fd0391a1823eb85ba6557ab0b51aa03015 ------
TIME:03/01/2018 18:52:39

COMMIT:Updated site at revision 70ff9fc

TREE:tree fdc63af008f8dc93415669e52fa8e156ee183953 ------
TIME:02/28/2018 22:53:12

COMMIT:Support LacPiggyback, LongPoll and ExplicitLac in db ledger storage

Descriptions of the changes in this PR:

*Motivation*

DbLedgerStorage was developed in yahoo and just merged recently to master. This implementation only works for v2 protocol.
It doesn't work with v3 protocol. When using v3 protocol clients (e.g. dlog library) to talk to bookies use DbLedgerStorage,
the clients hang on waiting responses. because a few methods in DbLedgerStorage throw UnsupportedException

*Solution*

This change focuses on adding the implementations for those methods, in order to support LacPiggyback, LongPoll and ExplicitLac
for v3 protocol. The implementation follows what we had in FileInfoCache but did it in a much simpler way, since all the persistence
information has been managed by db ledger storage itself. All the information required by `LacPiggyback`, `LongPoll` and `ExplicitLac`
are transient.

This change doesn't introduce any new test cases. It reuses existing test cases to test those features using DbLedgerStorage. These
tests are:

- ExplicitLacTest: for testing explicit lac
- TestPiggybackLAC: for testing piggback lac
- TestReadLastConfirmedLongPoll: for testing long polling lac
- TestReadLastConfirmedAndEntry: for testing entry piggyback

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1218 from sijie/support_long_polls

TREE:tree 17e08132ee88b205bae4d676dde38071a7185f98 ------
TIME:02/28/2018 22:42:14

COMMIT:Website fails to build due to a missing field at the yaml file

Descriptions of the changes in this PR:

The problem was introduced at apache/bookkeeper#898

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1222 from sijie/fix_website

TREE:tree 74a7e63b5400cdd498d0124e92c691d4539fdc8b ------
TIME:02/28/2018 22:40:14

COMMIT:Pull as many reviewers as possible when merging

Github uses pagination on some apis. This means that if there are a
lot of comments on a issue, it may not pick up approvals by
default. This patch increases the number of review comments to pull,
from a default of 30 to 100. A proper fix would be to enable
pagination using the Link header, but that's a much bigger change, for
little return.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1220 from ivankelly/page_comments

TREE:tree 39618ff01e62558eab71453346974ccd35ee5620 ------
TIME:02/28/2018 19:34:33

COMMIT:Shade bookkeeper in distributedlog-core-shaded and allow using shaded bookkeeper client to resolve ledger manager factory class

Descriptions of the changes in this PR:

*Motivation*

1. when `distributedlog-core-shaded` is co-used with other bookkeeper jars, it would cause class conflicts because `distributedlog-core-shaded` shades
most of its dependencies except bookkeeper. so it is better to also shade bookkeeper to avoid such conflicts.

2. if we shade bookkeeper, it would cause a problem on resolving ledger manager factory class stored on layout metadata.

```
java.io.IOException: Failed to instantiate ledger manager factory org.apache.bookkeeper.meta.HierarchicalLedgerManagerFactory
	at dlshade.org.apache.bookkeeper.meta.AbstractZkLedgerManagerFactory.attemptToResolveShadedLedgerManagerFactory(AbstractZkLedgerManagerFactory.java:256) ~[distributedlog-core-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
	at dlshade.org.apache.bookkeeper.meta.AbstractZkLedgerManagerFactory.newLedgerManagerFactory(AbstractZkLedgerManagerFactory.java:203) ~[distributedlog-core-shaded-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
```

*Solution*

- shade bookkeeper dependencies in `distributedlog-core-shaded`
- add flags to allow using shaded bookkeeper jar to resolve ledger manager factory

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1217 from sijie/fix_builds

TREE:tree 41a28064dd72e065e6d5f7e1d4b8185610cb5d77 ------
TIME:02/28/2018 16:18:35

COMMIT:BP-29 (task 3): use metadata service uri for constructing registration client

Descriptions of the changes in this PR:

- Deprecated `getRegistrationClientClass` and changed bookkeeper client to use metadata service uri to construct metadata driver.
- Add a test case for TestZKRegistrationClient and fixes issues caught by the test case.

Master Issue: #1123

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1192 from sijie/use_metadata_service_uri_in_registration

TREE:tree dca4f9d1b206d603c406bfee337947e66f236b72 ------
TIME:02/28/2018 15:34:49

COMMIT:Bookies should prioritize recovery reads/writes

The change adds a new flag for reads, RECOVERY_READ. This flag is set
when a client is retrying to recover a ledger. Recovery reads should
be higher priority than normal reads, as recovery usually happens when
a writer has failed, and another node needs to take over the stream
that that ledger belonged to. All writes on that stream are blocked
until the ledger the ledger has been recovered, so giving these reads
priority will mean the stream is out for action for the shortest
amount of time possible.

Priority is given to these reads by executing the reads directly in
the BookieRequestProcessor, rather than adding them to the
readThreadPool where they could end up queuing.

This change was originally 372a99db in the yahoo.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #898 from ivankelly/yahoo-bp-10

TREE:tree 7e4b8eee489030194e47fe271627e60f1977e44b ------
TIME:02/28/2018 15:22:04

COMMIT:Updated site at revision 538aee9

TREE:tree 30cd54544f17c89fce45d8928b773b81fb5f65a9 ------
TIME:02/28/2018 03:34:51

COMMIT:Updated site at revision a5b0c6e

TREE:tree 403094797a29be29bf54582345988cfd56cd49ae ------
TIME:02/28/2018 03:21:44

COMMIT:Use the bk OrderedScheduler in dlog

Descriptions of the changes in this PR:

Dlog has an implementation of OrderedScheduler inspired of bk `OrderedScheduler`. It would be good to remove duplicated implementation here since dlog is in the same repo as bk.

- removed the dlog version of `OrderedScheduler`
- make `OrderedScheduler` implement `ScheduledExecutorService` so it can be used by dlog
- change dlog classes to use bk `OrderedScheduler`.

Master Issue: #1024

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1211 from sijie/merge_ordered_scheduler

TREE:tree 86afe003f408dc24576778024841149de428b138 ------
TIME:02/28/2018 03:09:55

COMMIT:Update download pages

Descriptions of the changes in this PR:

- remove redundant sentence in download pages (see comment at #1090)
- change latest release to use mirror_url for downloading packages and dist for asc,md5 files
- change other releases to use achive url for all files

This change fixes #1090

related changes: #1213

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #1214 from sijie/update_download_page

TREE:tree 7ee32f26daac4e2dbc0e68e4c79e74cbb08f76ce ------
TIME:02/28/2018 03:09:08

COMMIT:Update release guide to remove old releases after a new release is completed

Descriptions of the changes in this PR:

Address comments at #1213

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1215 from sijie/update_release_guide

TREE:tree 251ee5ad6fc9a5b50b44b96ccd15efb3b3079d4c ------
TIME:02/28/2018 03:07:46

COMMIT:Merge remote-tracking branch 'apache/merge_table_service'

TREE:tree ec95eae17fb032bba51ad858e17f590d65895212 ------
TIME:02/28/2018 00:22:48

COMMIT:ISSUE #1147: Move bookkeeper-server/{bin,conf} to root module

Descriptions of the changes in this PR:

*Motivation*

since 4.7, we are shipping the binary distribution using bookkeeper-dist modules. so it is making more sense to have {bin,conf} directory at root module,
rather than bookkeeper-server module.

*Solution*

- move bookkeeper-server/bin to bin
- move bookkeeper-server/conf to conf
- update the new bookkeeper cli related files as "experimental"

This change is needed for integrating with dlog scripts for BP-26 and new bookkeeper cli for BP-27.

Master Issue: #1147

Related Issues:

- BP-26 #1024
- BP-27 #1000

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1210 from sijie/move_bin_conf, closes #1147

TREE:tree 03b4b10efca3117c3aa651bd8a15f67bcd8dd9bf ------
TIME:02/27/2018 22:20:19

COMMIT:Updated site at revision cff50ee

TREE:tree db1a9fd1e333e24f113c27b9952c3e6b024eb611 ------
TIME:02/27/2018 20:11:59

COMMIT:Add Jia Zhai and Enrico Olivelli to PMC list

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1212 from eolivelli/fix/update-pmc-list

TREE:tree 72feff996105c4eba74db8e73deaacec75e14289 ------
TIME:02/27/2018 19:59:01

COMMIT:use FutureUtils/FutureEventListener in bookkeeper-common for dlog

Descriptions of the changes in this PR:

This is a sub-task for apache/bookkeeper#1024

After dlog is merged to bookkeeper, FutureUtils/FutureEventListener is duplicated at bookkeeper-common and distributedlog-common. This change is to remove FutureUtils/FutureEventListener from distributedlog-common and let dlog use the ones in bookkeeper-common.

The changes includes:

- remove `FutureUtils/FutureEventListener` from distributedlog-common
- change dlog classes to use the ones in bookkeeper-common
- change the dlog `OrderScheduler` to extend bookkeeper `OrderedScheduler` (required by FutureUtils.within).

Master Issue: #1024

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1208 from sijie/use_bookkeeper_futureutils

TREE:tree 973f8f8f81a490894264730db8e9b3a7e6c37302 ------
TIME:02/27/2018 12:16:04

COMMIT:Updated site at revision 4897e43

TREE:tree f45dbc243a6c1ce8e383886b4683a390641df6a9 ------
TIME:02/27/2018 10:42:35

COMMIT:Added MockBookKeeper for unit tests

This mock class is what we use in Pulsar to do unit tests for the managed-ledger library.

This approach might be useful in general, in all cases when creating unit tests of an application that uses the BookKeeper API.

The `MockBookKeeper` behaves like the regular BK client, except it needs no bookies or zookkeeper. All ledgers and data are just kept in an hashmap in memory.

It is possible to inject failure in the sync/async calls, even after N steps. This is very useful to trigger failure in complex operations and cover this paths in unit tests.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1209 from merlimat/mock-bookkeeper

TREE:tree 5787e76e6a2f31b2e2d1f3ef1348d20be10ec5d4 ------
TIME:02/27/2018 10:29:34

COMMIT:Merge branch 'master' of ../stream_storage_merge into merge_table_service

TREE:tree 1efae248aa4ea21c8f9272ee77c31a4e436509ce ------
TIME:02/27/2018 01:35:41

COMMIT:Prepare merging table service

TREE:tree aadcfb8e1fc31f6f2838618b08e1522f54530991 ------
TIME:02/27/2018 01:35:09

COMMIT:Updated site at revision c618d9a

TREE:tree 849649c57ff891c1dc4715b436100517d15b64e7 ------
TIME:02/26/2018 23:53:51

COMMIT:Allow derived implementations of RackawareEnsemblePlacementPolicy

Leave public constructor so that it's possible to create a placement policy that derives from RackawareEnsemblePlacementPolicy.

For example, in Pulsar we have an isolation policy that works in conjunction with the rack-aware: https://github.com/apache/incubator-pulsar/blob/ac94698df6c66c4b84faa9f96db71f0019bf955e/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java#L45

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1206 from merlimat/master

TREE:tree 2fcc2d76121779fc8c3825564f4f1b4591139f69 ------
TIME:02/26/2018 23:40:54

COMMIT:Updated site at revision c0aff9f

TREE:tree c87dbbff0d5e4418fa20e2ffed0d4c3c4283feb9 ------
TIME:02/26/2018 23:24:39

COMMIT:Allow rackaware policy to be notified of any rack change

This PR is a port from Yahoo branch: https://github.com/yahoo/bookkeeper/commit/dbfd2073b6e687a5b4b9c56a0f0c3436f177db58

It adds a hook so that a placement policy implementation can add a way to notify the main rackaware policy that the rack mappings were updated.

This was used to have a specialized policy that keeps the mapping (bookie -> rack) in ZooKeeper. Whenever the new bookies are added (or updated), the administrator would update the mapping and we need to start using the new settings.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1204 from merlimat/rack-aware-notification

TREE:tree 2c92cbd91425f0b0ae05628c3f21a222506e34c1 ------
TIME:02/26/2018 23:11:42

COMMIT:Updated site at revision 9bce1bf

TREE:tree 7bbc4d67c3d3a830e9d887c3b5e97724a510799f ------
TIME:02/26/2018 10:11:54

COMMIT:Updated site at revision c1988c1

TREE:tree b517b1298d683d85d1264fc2cbcd5f41aa6517e2 ------
TIME:02/26/2018 09:59:04

COMMIT:BP-30: BookKeeper Table Service

Descriptions of the changes in this PR:

This BP is proposing adding a table (aka key/value) service component as a contrib module to the bookkeeper, which can later be used for metadata storage. This BP together with other BPs forms the ideas of  improving metadata management in bookkeeper.

BP Details: https://docs.google.com/document/d/155xAwWv5IdOitHh1NVMEwCMGgB28M3FyMiQSxEpjE-Y/edit#heading=h.56rbh52koe3f

Related BPs:

- BP-29: Metadata API Module #1123
- BP-28: Etcd Metadata Store #1113

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Venkateswararao Jujjuri (JV) <None>

This closes #1185 from sijie/bp_30_table_service

TREE:tree 49317b4049cf1303d21ed8dbd3526e22b99c300a ------
TIME:02/26/2018 09:56:44

COMMIT:BP-31 BookKeeper Durability Anchor

Descriptions of the changes in this PR:

This is the anchor BP for durability related work.
When sub BPs are created, this will be updated to
reflect the sub BP numbers.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1202

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1138 from jvrao/BP-31-durability-anchor

TREE:tree a1228542ff02955a34b8df9110c85324b43b7040 ------
TIME:02/26/2018 09:52:25

COMMIT:BP-28: Etcd as metadata store

Descriptions of the changes in this PR:

This BP is exploring using Etcd as the metadata store.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1113 from sijie/bp_28_etcd_metadata_store

TREE:tree c22248f43e9c611c2d672ea39fe2777d95feea0b ------
TIME:02/26/2018 09:46:00

COMMIT:Updated site at revision 8f6373e

TREE:tree a13740dd1addf7968595e80a3ce01cd1b38804ef ------
TIME:02/26/2018 09:45:00

COMMIT:Issue #1195 Handle optional fields gracefully in ReadExplicitLac response

Descriptions of the changes in this PR:

ExplicitLac and header of the last entry are optional fields in the protocol.
Handle them as optionals in the response processing.

TestPendingReadLacOp.java test added by: Samuel Just <sjustsalesforce.com>

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
Signed-off-by: Samuel Just <sjustsalesforce.com>

Master Issue: #1195

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1196 from jvrao/bk-issue-1195-lacfix, closes #1195

(cherry picked from commit 8f6373e60fd77f3c6253657b5eff9b970a0d2143)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 9ebb652a33a26482a358aaa846e6c9315a14cca6 ------
TIME:02/26/2018 09:23:10

COMMIT:Issue #1195 Handle optional fields gracefully in ReadExplicitLac response

Descriptions of the changes in this PR:

ExplicitLac and header of the last entry are optional fields in the protocol.
Handle them as optionals in the response processing.

TestPendingReadLacOp.java test added by: Samuel Just <sjustsalesforce.com>

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
Signed-off-by: Samuel Just <sjustsalesforce.com>

Master Issue: #1195

Author: JV Jujjuri <vjujjuri@salesforce.com>
Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1196 from jvrao/bk-issue-1195-lacfix, closes #1195

TREE:tree b97ce598ecde44a4f136ef39c4a028e699fd64b6 ------
TIME:02/26/2018 09:23:10

COMMIT:Add Jenkins Configuration for Code Coverage nightly test

Add a job using Jenkins DSL to run every night a JaCoCo code coverage report which runs tests and sends the report to Coveralls.io

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1203 from eolivelli/code-coverage-dsl

TREE:tree a53792e3c30163e0a190b64808278d47382520a9 ------
TIME:02/26/2018 09:19:22

COMMIT:Fix LifecycleComponentStarter

TREE:tree 7a3afc7af56fbe3c8c342531c15c947cfeb451b8 ------
TIME:02/23/2018 11:55:35

COMMIT:Upgrade JaCoCo and fix code coverage build system

- Upgrade JaCoCo to version 0.8.0 which supports Java 9
- Exclude generated sources from the NAR-plugin files
- Update surefire configuration in order to not fail the build while using -Pcode-coverage

Author: Enrico Olivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1129 from eolivelli/code-coverage-2

TREE:tree 5f06cf26497ae34c24a95fd50f77a63db6efde52 ------
TIME:02/23/2018 10:20:29

COMMIT:Updated site at revision cb0c034

TREE:tree 25af8611c6e0b7e8e9f6e5e4fe3afd94595178d2 ------
TIME:02/23/2018 09:15:29

COMMIT:Provide default values for LedgerIdFormatter and EntryFormatter

Descriptions of the changes in this PR:

Provide default values for LedgerIdFormatter and EntryFormatter.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1199 from reddycharan/defaultformatter

TREE:tree aff5726c51f74359cec5a793c93d20c98edcda2b ------
TIME:02/23/2018 09:02:32

COMMIT:Updated site at revision f70f034

TREE:tree 494e14abd4dac9f23459395e3eb5baccddec2698 ------
TIME:02/22/2018 10:34:35

COMMIT:Update committers list

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1198 from sijie/add_new_committers

TREE:tree 8389f836d1a00d1ad692b40a7ce8d49e0c942e9c ------
TIME:02/22/2018 10:21:36

COMMIT:DefaultSpeculativeRequestExecutionPolicy: fix logger instantiation

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #911 from athanatos/forupstream/small-fixes-1/logger

TREE:tree 491fc796ec80f84802e9606b4c43c7cdbb89826d ------
TIME:12/22/2017 06:46:33

COMMIT:Journal: Fix journal write queue so it decrements properly.

(bug W-3169683)
Signed-off-by: Dustin <dcastorsalesforce.com>

Author: Dustin <dcastor@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #912 from athanatos/forupstream/small-fixes-1/journal

TREE:tree 8126b3074617e04c8ab023f605051f1d1a3190f4 ------
TIME:12/22/2017 06:53:02

COMMIT:Fix GSSAPIBookKeeperTest

Descriptions of the changes in this PR:

*Problem*

in GSSAPIBookKeeperTest, `InetAddress.getLocalHost().getHostName()` was used for adding principle to kdc keytab. However in the tests, it uses advertisedAddress (introduced by #1097).

So it causes authentication failed because server can't be found.

*Solution*

Change to use `Bookie. getBookieAddress(..)` to get the real hostname used by bookie for adding keytab entries.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1191 from sijie/fix_gssapibookkeeper_test

TREE:tree 247f5fe9a9fdd2f54eb6915144a37c0a268c6fb0 ------
TIME:02/22/2018 00:26:16

COMMIT:Updated site at revision 1f7bf2d

TREE:tree 039f1cec5f112005ac0056994e876b82a626303e ------
TIME:02/21/2018 10:43:00

COMMIT:Dump config

Descriptions of the changes in this PR:

Dump config
- add utility method to AbstractConfiguration to return config as string and log it
- dump the config during the start of the BookieServer

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1160 from reddycharan/dumpconfig

TREE:tree 060a5325ce400c83416d1a9f63ef736958836a09 ------
TIME:02/21/2018 10:30:00

COMMIT:Always reset interrupted state after catching InterruptedException

There's many places we did not do it. I've added it.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1189 from ivankelly/interrupt-thread

TREE:tree eed371ea2cd439d06a55d93278970a4be018c1af ------
TIME:02/20/2018 20:41:07

COMMIT:Test that we don't break compat with Yahoo custom version

We've been merging a lot of changes from yahoo's internal bookkeeper
fork in the past months. The plan is that once everything is in, yahoo
will move to using stock opensource bookkeeper. We need to ensure that
this move goes smoothly, otherwise they wouldn't move. So this set of
tests checks whether master will work with what they are running
internally.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1190 from ivankelly/yahoo-bc

TREE:tree a5546c9250ef2f3080546a034f3e0b8074b20117 ------
TIME:02/20/2018 20:39:01

COMMIT:Issue #1164: TestTruncate#testPurgeLogs is flaky

Descriptions of the changes in this PR:

*Problem*

log segments are truncated in the background after TTL. the truncation is done asynchronously.
so when we finish writing all the log records, the truncation might still not complete yet.

*Solution*

Improve the test case to wait until the last truncation attempt is completed before asserting the log segments

Master Issue: #1164

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1165 from sijie/fix_test_truncate, closes #1164

TREE:tree 0ff1b20f95c8bdddfa3aace9cd1e265affafaaff ------
TIME:02/20/2018 20:37:42

COMMIT:Propogate exception when bookie shutdown fails

When a bookie fails to shutdown cleanly, we should propogate the
exception that caused the problem to the main thread.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1186 from ivankelly/prop-ex

(cherry picked from commit 13dc9230e79c0ecbc30b8b804e506b978c3f9cb1)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree e120881ff69a0ff9c896192fdd8afd7e9d9effab ------
TIME:02/20/2018 19:42:21

COMMIT:Propogate exception when bookie shutdown fails

When a bookie fails to shutdown cleanly, we should propogate the
exception that caused the problem to the main thread.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1186 from ivankelly/prop-ex

TREE:tree 8868de1b644d2e6a15de16721041431b9a02c3ac ------
TIME:02/20/2018 19:42:21

COMMIT:Allow default methods in MavenClassloader callbacks

AsyncCallback.AddCallback has recently acquired a default method,
which breaks the assumption that there is only one method on these
callbacks. However, if does have a default method that calls the one
method. This patch takes advantage of that to allow us to use
AddCallback in tests.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1187 from ivankelly/groovy-callback-default

TREE:tree 08935d8630690f54a1562ee2ec7560265503169a ------
TIME:02/20/2018 18:07:54

COMMIT:Disable tests reruns on dev profile

Sometimes you don't want the rerun because you _want_ to see the flake.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1149 from ivankelly/dev-rerun

TREE:tree 09b006d942f597fbb2e9600c35b5e886b87753b2 ------
TIME:02/20/2018 14:26:59

COMMIT:Prune networks from previous runs before IT

If a build fails, it can leave networks around. Run prune before the
integration tests to avoid this.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1184 from ivankelly/prune-networks

TREE:tree 5a04cf7ebfae8aecfb318e008f8c4f969c70878f ------
TIME:02/20/2018 13:33:04

COMMIT:ISSUE #1166: Create `readonly` path for LocalBookKeeper and BookKeeperClusterTestCase

Descriptions of the changes in this PR:

This fixes #1166

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1167 from sijie/create_readonly_znode, closes #1166

TREE:tree daeab985633595fe5a4510c8edea1680dedc675a ------
TIME:02/20/2018 11:20:29

COMMIT:Allow to disable LZ4 compression in KeyValueStorageRocksDB

In some environments (eg: windows), LZ4 is not statically linked with the RocksDB JNI library bundled in the jar. In this cases we need to allow to disable LZ4 compression on the SST tables.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1181 from merlimat/allow-disabling-lz4-in-rocksdb

TREE:tree 8efc9ba3dbf6aefb0c1a5324c62fb8e93c37edb3 ------
TIME:02/20/2018 11:18:27

COMMIT:Fix flaky travis build on checking license header

Descriptions of the changes in this PR:

*Problem*

In some environments, `BK_VERSION` is computed as `Downloading`, which is not a valid bookkeeper version. It fails the `dev/check-binary-license` script.

```
[0K$ if [ "$TRAVIS_OS_NAME" == "linux" ]; then dev/check-binary-license ./bookkeeper-dist/server/target/bookkeeper-server-${BK_VERSION}-bin.tar.gz; fi
tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory
tar: Error is not recoverable: exiting now
tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory
tar: Error is not recoverable: exiting now
tar: ./bookkeeper-dist/server/target/bookkeeper-server-Downloading: Cannot open: No such file or directory
tar: Error is not recoverable: exiting now
```

*Solution*

Remove this `BK_VERSION` setting and use "*" in the file path.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1183 from sijie/address_travis_yml

TREE:tree b627245acf13c9cb9b95b184b7d9e56a00bff55e ------
TIME:02/20/2018 11:09:32

COMMIT:Fix type in README

TREE:tree a4ce27ae4be0e8ebb92d820c79cdcc9089fbce67 ------
TIME:02/20/2018 10:08:16

COMMIT:Update readme (#43)

- update readme
- fix the classpath in scripts
TREE:tree cc5ea1f0da5af9eee5be4636318694ec42d8044d ------
TIME:02/20/2018 10:07:08

COMMIT:Bump bk/dl version to 4.7.0-SNAPSHOT (#42)


TREE:tree a68a26eb08c8e2d69ba4f0e6750e7a0a8c7ec0ac ------
TIME:02/20/2018 09:19:45

COMMIT:MockBookKeeperTestCase failed on casting ByteBufList

Descriptions of the changes in this PR:

*Problem*

Issue #1141 introduces ByteBufList. But `MockBookKeeperTestCase` still assumes `ByteBuf`. So it fails somes test cases
that use `MockBookKeeperTestCase`

*Solution*

Fix `MockBookKeeperTestCase` to expect `ByteBufList` instead of `ByteBuf`.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #1182 from sijie/fix_mock_bookkeeper_test_case

TREE:tree be2579b17b0e811323d6ceb43f055ef7831587e8 ------
TIME:02/20/2018 07:30:21

COMMIT:Cleanup client correctly in TestCompatOldClients#testFencingOldClient

Previously we had been mistakenly cleaning up the classloader twice.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1176 from ivankelly/kill-client-bc-test

TREE:tree be88eb80aff9f12914b2f400a32cac446a0094c5 ------
TIME:02/20/2018 06:55:16

COMMIT:Use BookieServer#getLocalAddress as the identifier in the test

Descriptions of the changes in this PR:

*Problem*

Issue #1097 introduced using `loopback` nic as the bookie server identifier. However a few test cases construct the bookie socket address using `InetAddress.getLocalHost()` and the bookie port. This bookie socket address can be different from the actual socket address that a bookie is advertising to zookeeper. It will cause test cases fail with certain network settings.

*Solution*

This change use `BookieServer#getLocalAddress()` to retrieve the actual bookie socket address. so it would respect to the server configuration and use the right socket address in the test.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1172 from sijie/use_bookie_server_get_local_address

TREE:tree 253ccce617fe078e7afe386566b08512ce43776c ------
TIME:02/20/2018 05:32:24

COMMIT:Enforce zkAcls on initNewCluster

Descriptions of the changes in this PR:

initNewCluster was introduced #979. The new command doesn't honor to zookeeper acls settings. This change is to change those zookeeper calls to use `zkAcls`.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1171 from sijie/enforce_acls

TREE:tree 15baff3d6154420e9774fa37134fc7fef356069c ------
TIME:02/20/2018 05:30:51

COMMIT:V2 decoder marks the reads index of the payload on write

This means that any storage implementation that receives that payload,
can reset the reader index, without jumping into bytes it knows
nothing about.

This was the source of an issue when using V2 protocol with
DbLedgerStorage where the data could not be successfully read back
from the ledger.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1180 from ivankelly/broken-v2-rocks

TREE:tree 4a8fe44595ce3a82a3a6893165c7e2431d2e2365 ------
TIME:02/20/2018 03:26:03

COMMIT:Updated site at revision 8555430

TREE:tree d8a664290738753dc3fd5974008919ba24674c49 ------
TIME:02/20/2018 00:56:00

COMMIT:Fix name on smoke test in pom

It says backwards compat, should be integration

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1178 from ivankelly/smoke-test-name

TREE:tree 5510f158818e3c4b831a96748bda5e38084ac2fb ------
TIME:02/20/2018 00:49:43

COMMIT:Handle for 4.6.0 and 4.6.1 specially in bc test shutdown

There is a race in 4.6.0 and 4.6.1 which can cause the zk session to
be leaked. The bc test should take this into account, and wait for the
session for expire before continuing.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1179 from ivankelly/wait-longer

TREE:tree 9c299220bc5491d793a7d7d210c954e24c5182bc ------
TIME:02/20/2018 00:47:56

COMMIT:Create a forked JVM for each bc test

Until now, BC tests have been running in the maven processes because
they do funny stuff with the classloader which didn't seem to work
with later versions of the surefire plugin. However, using a version
of surefire less than or equal to 2.8.1, we can use
useSystemClassLoader to the same effect, and therefore fork a JVM for
each test. This is desirable to isolate the tests from each other.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1175 from ivankelly/branch-per-bc-test

TREE:tree efb754dcc5a105eb04215d30fa4a8429db6e1b3d ------
TIME:02/20/2018 00:44:12

COMMIT:Use travis_wait on running mvn test on travis

Descriptions of the changes in this PR:

*Problem*

The travis build can take more than 30 minutes, which exceeds the default limit. so the travis builds on master usually fail

*Solution*

Configure the travis build to use `travis_wait` and configure a higher timeout value.

This was set in dlog travis build : https://github.com/apache/distributedlog/blob/master/.travis.yml#L41

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1174 from sijie/use_tick_toc

TREE:tree a97b60043d64a866a147c11631f6e836bef1e715 ------
TIME:02/20/2018 00:43:01

COMMIT:Introduce IncrementOption to support `incrementAndGet` (#41)


TREE:tree f7000858e1c926749876950bde70cc516f9282e0 ------
TIME:02/19/2018 23:59:15

COMMIT:Cleanup - remove unneeded test cases (#40)

This fixes #34
TREE:tree 66715970e6841bdf9151145ef4d9ed5d7591eae8 ------
TIME:02/19/2018 23:59:02

COMMIT:Updated site at revision b24c986

TREE:tree b5a11dd035cf3f3298e867e38610bedd60e685c6 ------
TIME:02/19/2018 23:12:43

COMMIT:Introduce "IGNORE IT CI" to ignore integration tests ci result

Descriptions of the changes in this PR:

*Problem*

Integration tests ci is not very reliable at this moment. so most of the time we have to "IGNORE CI" to allow changes
to be merged. However "IGNORE CI" is a bit too ambiguous, which can potentially ignore other CI results.

*Solution*

This change introduces "IGNORE IT CI" to ignore integration tests ci results only.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1173 from sijie/ignore_integration_tests

TREE:tree ab462dd6f644c233d6de74cd0a9bd19c7c6ff3f2 ------
TIME:02/19/2018 22:59:41

COMMIT:Cleanup threads from old clients in BC tests

Some old clients don't clean up their threads correctly. This patch
introduces a thread reaper, which will check if a test has left any
threads running, and try to clean them up if they have.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1177 from ivankelly/thread-reaper

TREE:tree 34252d1e5744e2bfcd4d13660e323df770f00532 ------
TIME:02/19/2018 21:18:25

COMMIT:Cleanup - remove `ByteBufUtils`

`ByteBufUtils` is a duplication of netty `ByteBufUtil`.

TREE:tree a1f2c4a74a3f4b75e69098bed3b2a3e28c5c852a ------
TIME:02/19/2018 11:14:57

COMMIT:Cleanup - remove writer api from table

TREE:tree 43c04bc9b8125ebd6eb3f57d300934060b901ecd ------
TIME:02/19/2018 11:07:06

COMMIT:Updated site at revision fa10b7d

TREE:tree d8a664290738753dc3fd5974008919ba24674c49 ------
TIME:02/19/2018 09:23:52

COMMIT:BP-29 (task 2) : Make LedgerManagerFactory a pure interface

Descriptions of the changes in this PR:

    The logic in LedgerManagerFactory#newLedgerManagerFactory is effectively the logic works for zookeeper based implementation.
    In order to produce a clean metadata api, this change is moving this logic to AbstractZkLedgerManagerFactory.

Master Issue: #1123

This change is based on #1127. Only the second commit ce35173 is to review in this PR.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1128 from sijie/make_ledger_manager_factory_interface

TREE:tree 8a89604ed4b64e75854032095c1daef0138eb5a9 ------
TIME:02/19/2018 09:18:28

COMMIT:ISSUE #1103: Add channel TLS counters

(bug W-4482570)

Add counters to track
- active TLS
- active non-TLS channel connections
- failed TLS handshakes
- failed connections

Also,
Added tests to verify counters
Drain pendingOps on TLS handshake failure

Master Issue: #1103

Author: Kishore Udayashankar <kudayashankar@salesforce.com>
Author: kishorekasi <kkasiud1@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1106 from kishorekasi/tls-stats, closes #1103

TREE:tree 8b120537e9530b2a8e09d135ab24b45166807f58 ------
TIME:02/19/2018 09:10:53

COMMIT:ISSUE #1139: Add debug to replication fencing

Descriptions of the changes in this PR:

When ledger is fenced, the client may get write error.
Not having enough logging in this area making debugging harder.
Optimised the code in addition to adding more logging in this area.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1139

Author: JV Jujjuri <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1140 from jvrao/bk-issue-1139, closes #1139

TREE:tree a7cdb98ebc134fc1a1fc7223b53c7645e9548cbf ------
TIME:02/19/2018 08:54:18

COMMIT:ISSUE #1162: Test for unsetSuccessAndSendWriteRequest with LedgerHandleAdv

Descriptions of the changes in this PR:

Add a test case to verify unsetSuccessAndSendWriteRequest with
LedgerHandleAdv out of order writers which forces ensemble change.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1162

Author: JV Jujjuri <vjujjuri@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1163 from jvrao/bk-issue-1162-test1, closes #1162

TREE:tree 9cf56bc52312e58f9fc752bdffdf9857bf788d9c ------
TIME:02/19/2018 08:17:20

COMMIT:Issue #1169 Upgrade Surefire plugin to 2.20.1

**Context**

We at Salesforce have been experiencing a series of hard to nail down test failures related to some of our changes causing Bookkeeper tests occasionally hanging up until they were terminated by Maven / Surefire. What's been making it harder to figure out was that the issue was only reproducing on Jenkins, not locally, and the lack of thread dumps along with Surefire failing to produce reports for these tests, making them next to invisible in Jenkins output.

**Related**

Issue #463 / PR #481 changes help terminate tests hanging in `Before` or `After` by changing `Test` based "local" timeouts to `Rule` based "global" ones.

**Proposed changes**

Upgrade Surefire plugin to 2.20.1 which has a few related [fixes and improvements since 2.19.1](https://issues.apache.org/jira/browse/SUREFIRE-1413?jql=project%20%3D%20SUREFIRE%20AND%20fixVersion%20in%20(2.20%2C%202.20.1)):
* [SUREFIRE-1322](https://issues.apache.org/jira/browse/SUREFIRE-1322) Surefire and Failsafe should dump critical errors in dump file and console
* [SUREFIRE-1435](https://issues.apache.org/jira/browse/SUREFIRE-1435) Improve Thread Dump
etc

(bug W-4700391)

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1170 from pasha-kuznetsov/issue-1169-surefire-2-20-1, closes #1169

TREE:tree f79f433e780a16b20483a16545a2a887bc4a8193 ------
TIME:02/19/2018 08:11:05

COMMIT:Updated site at revision df71247

TREE:tree e1d8f1d2cef7d93f7b819e21b74582e0bbab242f ------
TIME:02/18/2018 13:21:44

COMMIT:Replace DoubleByteBuf with ByteBufList

This PR aims at a better approach to fix the issue reported in #1108

Instead of using `CompositeByteBuf` which has the downside of needing multiple object allocations per each usage (~7-8), we should have a way to aggregate multiple buffers into a single "logical" frame with no additional overhead.

This PR introduces a `ByteBufList` class which is just a holder of a list of buffers, without imitating the `ByteBuf` API. You can pass a `ByteBufList` to the channel and have the encoder take care of the multiple writes.

Instances of ByteBufList are ref-counted and released to a pool after the write is completed. There are no object allocations or memory copies involved.

Author: Matteo Merli <mmerli@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1141 from merlimat/bytebuf-list-master

TREE:tree 23cf7a9f7ba36b722e52b5c4a7458cb83f61be41 ------
TIME:02/18/2018 13:08:20

COMMIT:Updated site at revision 5203d03

TREE:tree 42330567f47510d7470e0ce02a1ae121795d4b4a ------
TIME:02/18/2018 10:10:19

COMMIT:Updated site at revision f17b422

TREE:tree 52fccd42ca8a749355f8a6e33e00742748d1874e ------
TIME:02/18/2018 09:57:33

COMMIT:Issue #1152: stats for durability violations in write/read path

Descriptions of the changes in this PR:

Durability contract demands that there are WQ copies spread
across fault zones as per the ensemble placement policy.
There are lots of areas where this contract is violated.

Add stats to track two areas that are well:
a. Write Path: if the write fails after satisfying AQ
b. Read Path: If the checksum error is detected on the read path

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1152

Author: JV Jujjuri <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1155 from jvrao/bk-ssue-1152-stats-1, closes #1152

TREE:tree f0209ba54b0825e33f551c0ce512b3ca4023423f ------
TIME:02/18/2018 09:53:36

COMMIT:ISSUE #966: Expose quorum write complete latency to the client

Add quorum write complete latency to the bookkeeper client API. This
allows callers to find out exactly how long the quorum write took for
diagnostic purposes.

(bug W-3616193)
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Fixed merge conflicts, added testing]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #970 from athanatos/forupstream/stats1/qlatency, closes #966

TREE:tree d0f45e158a2681268f84ddca12002c32d30ae166 ------
TIME:02/18/2018 09:44:32

COMMIT:Updated site at revision 5aab8ae

TREE:tree d65fb2bce026ed098ca245d5e50fb7c92b164ea4 ------
TIME:02/17/2018 09:25:23

COMMIT:ISSUE #1075: Add a noop digest implentation

This digest will add a predefined digest key without actually computing
it. This can be used for testing or in situations/use-cases where digest
is considered overhead.

(bug W-3245776)
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Adapted to current patch]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1087 from athanatos/forupstream/misc/dummy, closes #1075

TREE:tree cbca9575e294cf8b983ae27f046bd81fdea4c315 ------
TIME:02/17/2018 09:12:19

COMMIT:handle zookeeper session expire in zk ledger manager

Descriptions of the changes in this PR:

cherry-pick twitter/bookkeeperdfcda5cc2efdc03db99fe126499f8e3347f50484

This includes a test case to test `AbstractZkLedgerManager`, including

    1) create/delete/read/write ledger metadata
    2) register/unregister listeners
    3) handling various watched events

This also fixes a couple of cases in the `AbstractZkLedgerManager` what is caught with test case.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1130 from sijie/fix_session_expires

TREE:tree 971bdede10f71bf6533f7957d7afcdd32afe0d51 ------
TIME:02/17/2018 08:51:13

COMMIT:Call static methods and build callbacks in MavenClassLoader

To properly test some functionality we need to be able to call static
methods (e.g. for the creation of ByteBuf), and also to be able to
build callbacks (e.g. to call async methods).

This patch implements methods for doing this. For static methods, you
need to pass the className, the method name and a list of
arguments. It first tries to find the method using non-primitive
types, but falls back to trying primative types if possible.

Invokation looks like:
```
cl.callStaticMethod("org.apache.bookkeeper.client.BKException",
                    "create", [-101])
```

For callbacks you specify an interface and the a groovy closure.
It is assumed the closure will take as many arguments as the
callback. The invokation handler doesn't check the method name
called on the callback object, so it only works with callbacks
with a single method.

Invokation looks like:
```
def callback = classLoader.createCallback(
    "org.apache.bookkeeper.client.AsyncCallback\$AddCallback",
        { rc, _ledger, entryId, ctx ->
            // do something
        })
```

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1156 from ivankelly/mvn-cl-adv

TREE:tree d68ffdb26fa8f4a89cc7cffedcfb43c08dda45b7 ------
TIME:02/17/2018 08:05:53

COMMIT:Updated site at revision 25f4243

TREE:tree ee3a237c27566c8175b5ddaf268c0f2167a1e71e ------
TIME:02/17/2018 08:01:58

COMMIT:Updated site at revision 4d47418

TREE:tree 0e193cfb16392c4c248c15f65e8ae2322662bd54 ------
TIME:02/17/2018 07:49:11

COMMIT:[MERGE YAHOO REPO] YBK-160: Doing distributed random verification of ledger fragments

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/280e39ee
https://github.com/yahoo/bookkeeper/commit/21c23ff1
https://github.com/yahoo/bookkeeper/commit/b1139ac9
YBK-160: Doing distributed random verification of ledger fragments
YBK-160: Addressing Review comments and fixing test
YBK-160: Doing verification only for stored entries

Author: Govind Menon <govindappumenon@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1085 from jiazhai/cherry_picks/i_230

TREE:tree 7ff96fad4d2e353b3132eae556b448ff78552a45 ------
TIME:02/17/2018 07:41:06

COMMIT:BP-29 (task 1) : Introduce `metadataServiceUrl`

Descriptions of the changes in this PR:

- introduce a new setting `metadataServiceUrl` for replacing implementation specific settings `zkServers` and `zkLedgersRootPath`.
- introduce a metadata driver interface for managing all the metadata interface
- introduce a metadata driver manager for resolving `metadataServiceUrl` and load specific metadata service url based on service scheme. This
  would replace configuring multiple different manager classes using one single `metadataServiceUrl`.

Please NOTE: this change only introduce the new classes, but it doesn't change the client and bookie to use the new setting. It will be done in
a subsequent change.

Master Issue: #1123

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1127 from sijie/introduce_service_uri

TREE:tree 203cec9fa43a836f55d73379c43ff19e4855297f ------
TIME:02/17/2018 07:36:13

COMMIT:Fix the travis config on building dlog module

Descriptions of the changes in this PR:

The original intention is building dlog module on 1) branches (non pull requests) 2) pull requests that modify dlog module. However the check logic was wrong in travis.yml. This change fixes the travis yml.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1154 from sijie/debug_travis

TREE:tree ae11cecb98594735e6a898fff746db3a9ad040a5 ------
TIME:02/17/2018 01:11:32

COMMIT:BP-27 (part 1): New BookKeeper CLI Skeleton

Descriptions of the changes in this PR:

This is first implementation of BP-27 (#1000). This change includes:

- introduce a bookkeeper-tools module for keep the commands and also for developing the new CLI
- introduce 4 command groups: `cluster`, `bookie`, `client`, `metadata`.
- move 3 command: `listbookies` under `cluster` group, `lastmark` under `bookie` group, `simpletest` under `client` group.
- unit tests for those 3 command.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>, Yiming Zang <yzang2016@gmail.com>

This closes #1094 from sijie/bookie_shell_refactor

TREE:tree 9c30c7a3bef11a6bcf1c6a79090c8f527aa5da18 ------
TIME:02/16/2018 18:22:28

COMMIT:Install pulsar keys when installing yahoo custom image

The pulsar installation script for installing the yahoo custom version
was missing a line to import the keys needed to verify the tarball.

This patch adds the line, and also deletes the original version of the
script which was in the wrong location.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1158 from ivankelly/pulsar-script-again

TREE:tree d72ec6437c19360a12b3a311f8479786e6a25518 ------
TIME:02/16/2018 18:05:52

COMMIT:ISSUE #1109: Error out pending ops on TLS key mismatch exception

Descriptions of the changes in this PR:

(W-4479117)

- Add Testcase to test certificate mismatch scenario
- On tls handshake failure, replace future.get() with channel.
- Print a warning message on exception caught in a netty context
on connection close, drain pendingOps

rev charan

Master Issue: #1109

Author: Kishore Udayashankar <kudayashankar@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1110 from kishorekasi/tls-keymismatch, closes #1109

TREE:tree 61944c4b692079943a6496328cce8a67fd9c1e17 ------
TIME:02/16/2018 18:04:02

COMMIT:Issue #1124: Lower memory usage in GarbageCollectionThread while extracting all ledger meta data

Descriptions of the changes in this PR:

The PR contains the fix to cleanup non-existent ledger log entries from EntryLogMetadata while extracting all log entries.

Master Issue: #1124

Author: Kishor Patil <kpatil@yahoo-inc.com>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1125 from kishorvpatil/gcThreadFix, closes #1124

TREE:tree 71b1d4983b755240ea6e2e8e5af585e269a1b11a ------
TIME:02/16/2018 17:58:52

COMMIT:Updated site at revision 92866a4

TREE:tree 8fb0f73125a7642018e6de5cbe1860f39f129c09 ------
TIME:02/16/2018 17:56:51

COMMIT:Updated site at revision c43d8c4

TREE:tree 6b85410a006a54492353f7f8d4112ca75276c150 ------
TIME:02/16/2018 17:43:51

COMMIT:[MERGE YAHOO REPO] AsyncReadLastEntry should trigger callback with error when ledger is empty

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/9560ab0f
AsyncReadLastEntry should trigger callback with error when ledger is empty

Author: Jia Zhai <zhaijia@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1121 from jiazhai/cherry_picks/i_167

TREE:tree 59fd2ff02fee04bd0942eb827e40065743315423 ------
TIME:02/16/2018 17:39:52

COMMIT:Fix auditor shutdown logic and move decommision tests out of BookKeeperAdminTest

Descriptions of the changes in this PR:

- the auditor shutdown logic is problematic. most of the tests can finish quickly however it spend more 30 seconds on shutting down.
  because the shutdown logic will be blocked until `awaitTermination` timed out.
- most of the tests in BookKeeperAdminTest don't need 6 bookies. so move the decommission tests to a separate class.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>, Jia Zhai <None>

This closes #1099 from sijie/improve_admin_tests

TREE:tree bd0697aec3886f7cbde37ef249a898ab3d87d325 ------
TIME:02/16/2018 17:29:23

COMMIT:Run integration tests on precommit

Builds integration test docker images and runs all tests under tests/.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1148 from ivankelly/jenkins-bc2

TREE:tree d37ca8f6c4e2fca49465533d8460dfb477d63793 ------
TIME:02/16/2018 09:50:33

COMMIT:Add script missing from custom yahoo docker image

427eb81 references a script which I never added to the commit,
which means the image doesn't build.

This commit adds the script.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1151 from ivankelly/missing-script

TREE:tree 783af1eaff29291699ff9fee532be6ec7b37a2e2 ------
TIME:02/16/2018 09:46:59

COMMIT:Replace DoubleByteBuf with CompositeByteBuf because of perf regression with Netty > 4.1.12

Starting from Netty-4.1.13 some internal behavior has changed and that has introduced a performance penalty when using the `DoubleByteBuf`.

The problem resides in the fact that netty falls back to calling `nioBuffers()` and that is creating an array of unpooled direct `ByteBuffers`. That is pretty heavy and the JVM is taking 1 to 3 seconds GC pause to reclaim them.

Short term fix is to go back to `CompositeByteBuf` which doesn't have the problem (the `DirectByteBuffer` instances are pooled and reused). I have verified that GC is back to normal after this patch.

More mid-term, since `CompositeByteBuf` allocates a bunch of objects (counted ~10 per entry) I have a change to replace it with a `ByteBufList` holder class. I have the change almost done but it will take a while to test it to verify corner cases.

This should be considered for a 4.6.2 fix release.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1108 from merlimat/composite-byte-buf-master

(cherry picked from commit 1b8ad9cba38ba7ecbfbe3836c6db98a8b319e094)
Signed-off-by: Matteo Merli <mmerli@apache.org>

TREE:tree 306eac9054b342c9b2756c38e364ebc547aa52e2 ------
TIME:02/16/2018 00:27:33

COMMIT:Replace DoubleByteBuf with CompositeByteBuf because of perf regression with Netty > 4.1.12

Starting from Netty-4.1.13 some internal behavior has changed and that has introduced a performance penalty when using the `DoubleByteBuf`.

The problem resides in the fact that netty falls back to calling `nioBuffers()` and that is creating an array of unpooled direct `ByteBuffers`. That is pretty heavy and the JVM is taking 1 to 3 seconds GC pause to reclaim them.

Short term fix is to go back to `CompositeByteBuf` which doesn't have the problem (the `DirectByteBuffer` instances are pooled and reused). I have verified that GC is back to normal after this patch.

More mid-term, since `CompositeByteBuf` allocates a bunch of objects (counted ~10 per entry) I have a change to replace it with a `ByteBufList` holder class. I have the change almost done but it will take a while to test it to verify corner cases.

This should be considered for a 4.6.2 fix release.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1108 from merlimat/composite-byte-buf-master

TREE:tree 910ab3c94f91d365200007d364f1078d34134e0d ------
TIME:02/16/2018 00:27:33

COMMIT:Upgrade arquillian-cube to latest version (0.15.1)

This gets rid of an ugly exception that the framework was throwing.
https://github.com/arquillian/arquillian-cube/issues/957

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1150 from ivankelly/arq-upgrade

TREE:tree a41a8a334c5a87504fe35228a1fbaba8d6c60fbb ------
TIME:02/15/2018 23:40:36

COMMIT:Include yahoo custom version in all versions image

To ensure compatibility between versions during the merge, we need the
yahoo custom version of bookkeeper.

The most straightforward way to get this version is through
pulsar. It's distributed as part of the pulsar distribution, with
scripts to start it and all.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1146 from ivankelly/yahoo-in-image

TREE:tree 4ff806d1d08dc1f3638577666f4288b5d303799d ------
TIME:02/15/2018 15:43:26

COMMIT:Integration smoke test

Most basic integration test we can have.
- Boots a cluster
- Writes a ledger
- Reads back the ledger
- Shutdown the cluster

If this test fails, something is very wrong.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1133 from ivankelly/smoke-test

TREE:tree 554c3532ec7b99513383a7414a5ca399b966679c ------
TIME:02/15/2018 15:42:09

COMMIT:Specify repo in MavenClassLoader

This is required for testing yahoo's custom bookkeeper client, as it
doesn't reside in maven central.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1135 from ivankelly/classloader-repo

TREE:tree 5322ce67a6b1e4137d443577024c21c772b73403 ------
TIME:02/14/2018 19:09:31

COMMIT:Updated site at revision aff98f2

TREE:tree 4b9fc47b5ff43c9649c0fcdea033c244fa314a34 ------
TIME:02/14/2018 17:48:26

COMMIT:Gather disk information before CI build

I suspect that we are getting quite a few flakes because of over-full
disks in the CI workers. I'd like to confirm this hypothesis and
gather some information before taking corrective action.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1142 from ivankelly/df-on-build

TREE:tree 3cee6e2e00fd34b993d6999684238b91d49224b6 ------
TIME:02/14/2018 17:35:37

COMMIT:Updated site at revision 7b3c79b

TREE:tree 6b85410a006a54492353f7f8d4112ca75276c150 ------
TIME:02/14/2018 16:26:47

COMMIT:Split all versions images into released and latest

The released tarballs rarely change, while the latest changes every
build. This patch splits the all version image into a base images with
the released tarballs, and a image which includes all released and the
very latest tarball.

This allows the released image to be cached/pushed to dockerhub, which
will in turn allow us to speed up our CI builds that use the all
version image.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1131 from ivankelly/image-split

TREE:tree a5984b3c4d1e75e80fde529f90e2388611adfed1 ------
TIME:02/14/2018 16:13:21

COMMIT:Fix shutdown race which left ZK session open

There was a race when shutting down a bookie, where both the main
thread and the shutdown hook thread would try to close the bookie
service. This would result in them racing to set the lifecycle state
and neither would end up cleaning up properly. Specifically, the
starter latch would be counted down, so the main thread would start to
close, then the shutdown hook would run, try to close, and get an
exception when it tried to change the state. Once the all shutdown
hooks end, the process exits, even if main hasn't completed. This
leaves the zookeeper session open.

I've removed the close from main(). The shutdown hook always runs
on a graceful shutdown, so that's the place to do the cleanup.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1132 from ivankelly/shut-race

(cherry picked from commit 89eca5ce717a04c6e3ffa2b0aca615f4e38eafe3)
Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 70709be8145ec89402cc4df14ccafbf28347250a ------
TIME:02/13/2018 17:52:54

COMMIT:Fix shutdown race which left ZK session open

There was a race when shutting down a bookie, where both the main
thread and the shutdown hook thread would try to close the bookie
service. This would result in them racing to set the lifecycle state
and neither would end up cleaning up properly. Specifically, the
starter latch would be counted down, so the main thread would start to
close, then the shutdown hook would run, try to close, and get an
exception when it tried to change the state. Once the all shutdown
hooks end, the process exits, even if main hasn't completed. This
leaves the zookeeper session open.

I've removed the close from main(). The shutdown hook always runs
on a graceful shutdown, so that's the place to do the cleanup.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1132 from ivankelly/shut-race

TREE:tree eb3ca6ef624ed7f67a62c569c96058151bb43556 ------
TIME:02/13/2018 17:52:54

COMMIT:Require green CI before merge

CI has been broken since the 2018-02-06, due to a non-green patch
being merged. With the recent flake fixes, CI should only go green if
there's a good reason. More over, any remaining problems will get
fixed faster, if people non-green builds start being a pain for
people.

So, this patch blocks merging with the merge script, if all checks are
not green. It can be overriden by adding a comment with the text
"Ignore CI" (case insensitive), on the PR.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Dave Rusek <dave.rusek@gmail.com>, Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1145 from ivankelly/require-green

TREE:tree 6135eaebbfb495b2a3c2430159d77b50ba335ac4 ------
TIME:02/13/2018 17:50:36

COMMIT:Fix test regression due to change in default ledger manager

TestBenchmark#testReadThroughputLatency() regressed due to the change
in 3ddc5db, where the default ledger manager was changed from flat to
hierarchical.

The fix is to use flat for this test. I've also cleaned up the test a
little, and added some code to the benchmark to make the test run
faster.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1137 from ivankelly/bench-broke

TREE:tree 483c0f5ee214dbd8bbe4504224a01dd466f52055 ------
TIME:02/13/2018 15:09:32

COMMIT:Issue-1143 Error on Java 9 using BookKeeperAdmin API and bookkeeper-server-shaded

Update Maven Shade Plugin to 3.1.0

Relates to issue #1143

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1144 from eolivelli/fix/update-shade-plugin

(cherry picked from commit dcb22dddf5a7d97d7c320605facb142cc836c5fd)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 88e2d9244067782d007c7c699f50b58dd706d45c ------
TIME:02/13/2018 10:51:54

COMMIT:Issue-1143 Error on Java 9 using BookKeeperAdmin API and bookkeeper-server-shaded

Update Maven Shade Plugin to 3.1.0

Relates to issue #1143

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1144 from eolivelli/fix/update-shade-plugin

TREE:tree e65137e9a23132875d4c3946df1327a0ea1eed11 ------
TIME:02/13/2018 10:51:54

COMMIT:[MERGE YAHOO REPO] Only reorder read sequence if any bookie is not available

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/1ddd14a1
Only reorder read sequence if any bookie is not available

Author: Jia Zhai <zhaijia@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1120 from jiazhai/cherry_picks/i_161

TREE:tree 0b777fa36f4cd1b34707e35e3f81ff671e784173 ------
TIME:02/10/2018 04:03:28

COMMIT:Remove spammy log messages in Journal

Looks like they were put in while debugging and not cleaned up.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1134 from ivankelly/spam-log

TREE:tree 8195cf6f3980c0812f326321f3aaf458644fbf0c ------
TIME:02/09/2018 15:25:55

COMMIT:Entry count parameters for BenchBookie

So that they can be added in the test, to make the test run faster and
not timeout in CI and ruin an otherwise good test run.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1136 from ivankelly/bench-flake

TREE:tree 4a8cc0dfb8afa914cc607526570af7b7e5dd6559 ------
TIME:02/09/2018 15:23:45

COMMIT:Updated site at revision 011bb65

TREE:tree 4b9fc47b5ff43c9649c0fcdea033c244fa314a34 ------
TIME:02/06/2018 07:26:12

COMMIT:BP-29: Metadata API module

Descriptions of the changes in this PR:

Related to BP-28 (#1113), this proposal is to propose how we want to organize the metadata modules, to support different metadata storage implementation.

Master Ticket: #1123

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1117 from sijie/BP-29-metadata-store-api

TREE:tree 4e16618bd1fa2fd2c9d4698920c3e06fd4b0dd5f ------
TIME:02/06/2018 07:12:46

COMMIT:Fix compilation warnings (#39)



TREE:tree 150157236ff5cb5d45586d7ab8968dae0939d368 ------
TIME:02/06/2018 07:00:05

COMMIT:Consolidate the protobuf definition used in state store and in client/service (#38)

state store and client/service were started as two different projects, and were doing in parallel. so there are some duplication and overlaps on defining the k/v operations.
now these two projects were put together, it would be good to consolidate the protobuf definition to have it only exist in one place.
TREE:tree a8a273ce45f814daf75f0d752ef534f6f81c8f73 ------
TIME:02/06/2018 01:15:09

COMMIT:Use BookieServer#getLocalAddress() in BookieClientTest

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #1119 from sijie/fix_bookie_client_test

TREE:tree 20979779a177a319596f6d84f99941c238733aec ------
TIME:02/05/2018 05:35:27

COMMIT:Use the kv api defined in client for statelib (#37)

* Consolidate statelib to use kv api

* Add ToString

TREE:tree 35cbda9972e9e652e3b81b9bcbd265098a8c95a3 ------
TIME:02/05/2018 02:49:55

COMMIT:Updated site at revision 3ddc5db

TREE:tree ca58d83f2a17d7135d1a3946a261eb2658821754 ------
TIME:02/03/2018 18:44:37

COMMIT:Travis CI should not use a hardcoded release version for check-release script

Descriptions of the changes in this PR:

CI is going to be broken when we bumped to 4.8.0.  since travis CI is using a hardcoded version for check-release script.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1118 from sijie/fix_check_release_script

TREE:tree 8fa0d31556a55d6cae6b3298867441a4c5d795d2 ------
TIME:02/03/2018 18:33:14

COMMIT:Cleanup registration client interface

Descriptions of the changes in this PR:

This change is mainly to remove `zookeeper` reference from metadata interface. The existence of `Optional<ZooKeeper>` is to allow passing an external zookeeper client to bookkeeper, so bookkeeper can reuse that client instance. That is useful for services like pulsar broker, which they can only instantiate a zookeeper client and pass the zookeeper client around to construct bookkeeper client. However, this pollutes the registration client interface, change the method to `Optional<Object>` as an optional context object and let the implementation interpret it.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1116 from sijie/clean_registration_client_interface

TREE:tree daf851b8616d3528bf27d52656934263d14fe62c ------
TIME:02/03/2018 18:32:25

COMMIT:Change default ledger manager factory from `Flat` to `Hierachical`

Descriptions of the changes in this PR:

the discussion can be found at : http://mail-archives.apache.org/mod_mbox/bookkeeper-dev/201802.mbox/%3CCAO2yDyYdZ8%3D4tViNX1uL0Z67KX78JPD2XBGd7ermjO%3DK%3DscvcQ%40mail.gmail.com%3E

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #1115 from sijie/flip_default_ledger_manager

TREE:tree 4a5726916e231c282be791911a9b0d3b5abbaec8 ------
TIME:02/03/2018 18:31:01

COMMIT:Update PR template

Descriptions of the changes in this PR:

- JIRA is not used anymore. Remove it from PR template.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1111 from sijie/update_pr_template

TREE:tree 229a3e7fc675105c3d907667c545cfd7db0fe035 ------
TIME:02/03/2018 06:36:02

COMMIT:Updated site at revision 4107804

TREE:tree ee7067fe1b005eb3d36118cf6a2ef96a3d1d192e ------
TIME:02/03/2018 02:02:21

COMMIT:Updated site at revision 908972c

TREE:tree e668aa9aad6502aef79ec3f72af564ecf7cdc16e ------
TIME:02/03/2018 01:49:09

COMMIT:Update release schedule

Descriptions of the changes in this PR:

- update current feature release to 4.7.0 and its release window
- add a section in release guide for instructions to update release schedule

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1112 from sijie/update_release_schedule

TREE:tree 1854eece13ba30a3997d8148d401fd6e581c3967 ------
TIME:02/03/2018 01:37:16

COMMIT:Updated site at revision 9d09a9c

TREE:tree 4a2ea2c6006f13eba24863d44a6425e4cb5edacd ------
TIME:02/03/2018 01:36:32

COMMIT:Revamped downloads page

This PR addresses issue #1090 and significantly revamps the downloads page to bring it in line with Apache standards. It also makes some changes to the website's general setup and build process to make that process less brittle.

Author: Luc Perkins <lucperkins@gmail.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1104 from lucperkins/lperkins/asf-compliance

TREE:tree e5c1a0ffb43aaf14870f1371caae74a0ca2f3bb2 ------
TIME:02/03/2018 01:36:01

COMMIT:Use loopback network interface for testcases.

Descriptions of the changes in this PR:

- tests would be more reliable irrespective of the environment (and availability of network connection), if the loopback address is used in testsuites.
- unless loopback address is set explicitly, in my env (while on company's VPN),
UpdateCookieCmdTest is failing most of the times.
- currently allowLoopback is set to true in BookKeeperClusterTestCase,
but it doesn't make Bookies to use loopback interface address.
- loopback network interface should be set explicitly as
listening interface to use loopback address.

Note:

1) will create Issue for this depending on the PR feedback.
2) in other places (where setAllowLoopback is set) also loopback interface needs to be set

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Samuel Just <sjust@salesforce.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1097 from reddycharan/loopbackaddress

TREE:tree fd42ef8b125d8c1734cef263ad5962191ffa2710 ------
TIME:02/03/2018 01:34:12

COMMIT:BP-26 (task 4): run dlog tests when pull requests modify dlog modules

Descriptions of the changes in this PR:

- enable dlog tests on all post commit CI jobs
- for pull requests, only run dlog tests on travis CI and only when the pull requests modify dlog modules.

Master Issue: #1024

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Jia Zhai <None>

This closes #1096 from sijie/enable_dlog_ci

TREE:tree 0a0888c3781fabb780f4981d7af4e762414c2447 ------
TIME:02/03/2018 01:32:16

COMMIT:BP-26 (task 3) : Build dlog shaded jar in bookkeeper way

Descriptions of the changes in this PR:

- discard dlog shaded artifacts and build `distributedlog-core-shaded` jar similar as `bookkeeper-server-shaded`
- discard bookkeeper-server shaded artifact
- move all shaded related tests to `tests/shaded`

Master Issue: #1024

Author: Sijie Guo <sijie@apache.org>

Reviewers: Dave Rusek <dave.rusek@gmail.com>, Jia Zhai <None>, Yiming Zang <yzang2016@gmail.com>

This closes #1095 from sijie/dlog_shade_jar

TREE:tree bc95b44c865f925e6d100d807d0ee5e352219197 ------
TIME:02/03/2018 01:31:07

COMMIT:ISSUE #1067: PendingReadOp: recovery, return NoSuchEntry on wQ-aQ+1 errors

In the case of a recovery read, we rely on a NoSuchEntry response on the
first missing entry to determine the final LAC.  As such, we need to
consider an entry to be gone once we see wQ-aQ+1 NoSuchEntry/Ledger
responses from bookies.  Otherwise, a zombie bookie can prevent ledger
recovery from suceeding indefinitely (it'll hit the timeout each time).

There was some preexisting logic from
https://issues.apache.org/jira/browse/BOOKKEEPER-365
b6c1a8bbd7c2d44c2edb59d9938fa073f6f478de,
but it seems to have been too conservative in that it waited for all
responses and required that there were no other errors present.  It
seems now to be unnecessary, and so has been removed.

TestParallelRead.testFailParallelReadMissingEntryImmediately seemed to
rely on the previous logic working outside of recovery, but I believe it
was really meant to test the recovery case, so it has been adjusted.

(bug W-4651456)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Samuel Just <sjust@salesforce.com>, Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1077 from athanatos/forupstream/wip-4651456-recovery-read, closes #1067

TREE:tree 5687ae138d570f4c8a570bfb07c2fab1079a0a4d ------
TIME:02/03/2018 01:26:45

COMMIT:ISSUE #1063: Write keeps refCnt longer

Descriptions of the changes in this PR:

Current code keeps the toSend buffers until client receives
resonses from all wq bookies. From the senders perspective,
It is not required to keep the refcount on it at the PendingAddOp
level, as the ref is taken at bookie client level.

Keeping these buffers longer will increase the memory pressure
on the client.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1091

Author: JV Jujjuri <vjujjuri@vjujjuri-ltm2.internal.salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1091 from jvrao/bookkeeper-1063, closes #1063

(cherry picked from commit 9d09a9c2a64b745271ef1c6dad9e5ab3ab3f2a5c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b6649caf192203a9faf405cd2656956a2eb899df ------
TIME:02/03/2018 01:22:56

COMMIT:ISSUE #1063: Write keeps refCnt longer

Descriptions of the changes in this PR:

Current code keeps the toSend buffers until client receives
resonses from all wq bookies. From the senders perspective,
It is not required to keep the refcount on it at the PendingAddOp
level, as the ref is taken at bookie client level.

Keeping these buffers longer will increase the memory pressure
on the client.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Master Issue: #1091

Author: JV Jujjuri <vjujjuri@vjujjuri-ltm2.internal.salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1091 from jvrao/bookkeeper-1063, closes #1063

TREE:tree 28621cae5744067bf0a5354c3a3e64437f4a3e7d ------
TIME:02/03/2018 01:22:56

COMMIT:Updated site at revision 49b011b

TREE:tree 20875d0a2abdfd193b3072a168dde892492a4914 ------
TIME:02/02/2018 08:24:54

COMMIT:BP-27: New BookKeeper CLI

Descriptions of the changes in this PR:

`BookieShell` is the current bookkeeper cli for interacting and operating a bookkeeper cluster. However, this class is getting bigger with more commands added to it. It is facing a few problems for maintenance and extensibility.

- All commands sit in one gaint shell class. It is hard to tell if a command is used for managing a bookie only or if a command is used for managing a cluster.
- Lack of unit tests. This class has very few test coverage. Most of the commands (introduced in early days) don't have a unit test.
- Lack of extensibility. If a new function component (for example, dlog) is introduced, it is a bit hard to extend this CLI to have commands for new function component.

All these problems lead to the proposal here. This proposal is to propose refactoring/redesigning the bookkeeper CLI to allow better managebility for maintenance, better test coverage and better extensibility for new function components.

Master Issue: #1000

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>

This closes #1093 from sijie/BP_27_new_bookkeeper_cli

TREE:tree 33c3c1b7dfef1777b3bdd2fb57e0878bb318dd95 ------
TIME:02/02/2018 08:11:13

COMMIT:Run checkstyle plugin at validate phase

Descriptions of the changes in this PR:

Most of the modules run checkstyle plugin at validate phase. However a few modules are still running at `test-compile` phase.
Update the checkstyle plugins in those modules to run at validate phase. So the behavior is consistent across the project.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #1098 from sijie/run_checkstyle_at_validate_phase

TREE:tree 91a69999835c1bee6301df40021f7e59429d1839 ------
TIME:02/02/2018 05:11:30

COMMIT:Issue #605: bk_server.conf wrong default logSizeLimit

It's commented out, but the value is invalid. This patch changes it to
match the default in ServerConfiguration.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1105 from ivankelly/entry-log-size, closes #605

TREE:tree b971153d52497c527e315957ca85f00c5ff4f7c0 ------
TIME:02/02/2018 03:37:59

COMMIT:Updated site at revision 67018bd

TREE:tree 5b821aac25c0ec079d40bc8b6f3dbb1a3437c218 ------
TIME:02/01/2018 20:33:10

COMMIT:BP-14 Implementation of WriteFlag.DEFERRED_SYNC on Journal

Implement WriteFlags.DERERRED_SYNC on Bookie side.
In case of DEFERRED_SYNC write Journal will early acknowledge the write, just after flushing the buffer to the OS cache, but before waiting for an fsync.

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #889 from eolivelli/bp14-writeflags-journal

TREE:tree 910bd7912637533aed8b2207410493cc58ceec7f ------
TIME:02/01/2018 20:21:20

COMMIT:Dont log ledgermetadata which contains password.

Descriptions of the changes in this PR:

Dont log ledgermetadata contains password used to create
the ledger. Logs are not supposed to reveal such sensitive info.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1092 from reddycharan/fixpasswordlog

TREE:tree e50e74e6df0efe89169453eff7dca2ad72ff0865 ------
TIME:02/01/2018 20:19:29

COMMIT:Updated site at revision 5cd311c

TREE:tree 101ccefed4e81cf28bd65a5ea7be17dc64450c33 ------
TIME:01/31/2018 22:26:45

COMMIT:BP-26 (task-2): make distributedlog modules be able to be built in bookkeeper repo

Descriptions of the changes in this PR:

This is the second sub-task of #1024. This change is based on [BP-26/distributedlog_merge](https://github.com/apache/bookkeeper/tree/BP-26/distributedlog_merge) branch (created at #1068).

This change includes:

- move the findbugs.xml and checkstyle/suppression.xml from distributedlog-build-tools to bookkeeper buildtools module.
- mockito: dlog is using mockito 1 while bk is using mockito 2. this change make dlog modules use the mockito dependencies defined at root pom.xml.
- change the description from "Apache DistributedLog" to "Apache BookKeeper :: DistributedLog".
- change the versions from `0.6.0-SNAPSHOT` to `4.7.0-SNAPSHOT`.
- fix the compilation issues with current latest bk

This PR *DOESNT* change the group id of distributedlog modules. They will remain using "org.apache.distributedlog" as the group id.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Yiming Zang <yzang2016@gmail.com>

This closes #1069 from sijie/compile_distributedlog

TREE:tree d5f26204b397086acc233c17c596d3dca7921717 ------
TIME:01/31/2018 22:13:33

COMMIT:Updated site at revision 125cda6

TREE:tree 7b729cdb8b60f424b5ddf2698cfb9b69fb99449a ------
TIME:01/31/2018 20:37:55

COMMIT:Updated site at revision 02d6f1d

TREE:tree 48eb30b990aed66f9a1aedb8048de3252e447f29 ------
TIME:01/31/2018 20:25:40

COMMIT:ISSUE #611: restrict max ensemble change numbers

Descriptions of the changes in this PR:

Add max ensemble change number check

Master Issue: #611

Author: Arvin <arvindevel@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #925 from ArvinDevel/restrict_ensemble_num, closes #611

TREE:tree 4c4eca2a9c0e8d8b617e2e6534b0f8bd4d72f378 ------
TIME:01/31/2018 20:16:33

COMMIT:[MERGE YAHOO REPO] Support DbLedgerStorage in LedgerCmd to get list of logger files for a given ledgerId

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/384414b6
Support DbLedgerStorage in LedgerCmd to get list of logger files for a given ledgerId

Author: Jia Zhai <zhaijia@apache.org>
Author: Rajan <dhabalia.me@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1057 from jiazhai/cherry_picks/i_209

TREE:tree c919b898d84ddf24b9c33e03a9aaa58b7e71508a ------
TIME:01/31/2018 20:14:31

COMMIT:ZkUtils.asyncDeleteFullPathOptimistic: pass -1 as znodeVersion to parents

znodeVersion for the child won't necessarily match the parents.  This
isn't really meaningful to test since the version of the internal nodes
for all current users will be 0, but fixing it at least will reduce
confusion

Signed-off-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>
[Adapted to current patch]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #1073 from athanatos/forupstream/misc/zkutilsfullpath

TREE:tree 272a1aa735587492985254f8e91b3878f17c23a3 ------
TIME:01/31/2018 20:13:35

COMMIT:Merge branch 'master' into BP-26/distributedlog_merge

TREE:tree 9b7ee242a8821591da8e4102f9dc563978683009 ------
TIME:01/31/2018 20:02:40

COMMIT:Merge remote-tracking branch 'apache/master' into copy_distributedlog

TREE:tree d5a750d93326028b54cc89f99a7310c4a17036f9 ------
TIME:01/31/2018 19:59:04

COMMIT: Remove `type` from StorageContainerRequest (#36)


TREE:tree 791beb0370bcfdc220f2ddfb422d002091fbcc59 ------
TIME:01/31/2018 12:31:02

COMMIT:Updated site at revision 8a25353

TREE:tree 33101913c09687998450c005d73fda090b600fcc ------
TIME:01/30/2018 22:27:14

COMMIT:Increase job timeout to 200 mins

Descriptions of the changes in this PR:

the postcommit jobs have been timedout for a few days. This change is to increase the build timeout to get all jenkins job enough time to complete.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1089 from sijie/increase_job_timeout

TREE:tree 7e70a1d9ce73d1754239b30479f9d526e0ebdea3 ------
TIME:01/30/2018 22:14:44

COMMIT:Lombok doesn't work with groovy

So the Cleanup annotation does nothing. I've changed it in the BC
test to a traditional try {} finally {} since groovy doesn't do
try-with-resources either, and its equivalent doesn't do multiple
objects.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1084 from ivankelly/lombok-dont-work

TREE:tree 27b2ac8f30ba7ea83050c9f2ba4acffe49a23d23 ------
TIME:01/30/2018 21:10:17

COMMIT:Test that old clients work with current server

Test that old clients(4.2.0 onwards) can create, open, read, write ledgers on
the latest version of the server.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1083 from ivankelly/new-server-old-client

TREE:tree 919fa8fc838f9414d2d712e07009543d5f959db7 ------
TIME:01/30/2018 21:08:25

COMMIT:ISSUE #1079: use CachingStatsProvider underly FinagleStatsProvider

Descriptions of the changes in this PR:
use CachingStatsProvider underly FinagleStatsProvider to avoid creating a lot of brand new object

Master Issue: #1079

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1082 from jiazhai/issue-1079, closes #1079

(cherry picked from commit c2d53a4c1781360a4fb5635e91f7fe133475c160)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 5bafbe8b7bce353a4a7d30132f06b10dfc58d164 ------
TIME:01/30/2018 21:06:42

COMMIT:ISSUE #1079: use CachingStatsProvider underly FinagleStatsProvider

Descriptions of the changes in this PR:
use CachingStatsProvider underly FinagleStatsProvider to avoid creating a lot of brand new object

Master Issue: #1079

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1082 from jiazhai/issue-1079, closes #1079

(cherry picked from commit c2d53a4c1781360a4fb5635e91f7fe133475c160)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree ab1a4ddeadb652d685b6db0253d160a1caa65ae1 ------
TIME:01/30/2018 21:06:42

COMMIT:ISSUE #1079: use CachingStatsProvider underly FinagleStatsProvider

Descriptions of the changes in this PR:
use CachingStatsProvider underly FinagleStatsProvider to avoid creating a lot of brand new object

Master Issue: #1079

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1082 from jiazhai/issue-1079, closes #1079

TREE:tree ab073832153ca65c65d35282805cd30ef326c0a6 ------
TIME:01/30/2018 21:06:42

COMMIT:ISSUE #1078: use CachingStatsProvider underly PrometheusMetricsProvider

Descriptions of the changes in this PR:
- add CachingStatsProvider to wrapper PrometheusMetricsProvider;
- add test verify the cache.

Master Issue: #1078

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1081 from jiazhai/issue-1078, closes #1078

(cherry picked from commit d5dffc48a4eda6178bd25610097f2e49763f2377)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 203b58d248c5ed03e4305a7ae155cc8ca1cb9810 ------
TIME:01/30/2018 21:04:30

COMMIT:ISSUE #1078: use CachingStatsProvider underly PrometheusMetricsProvider

Descriptions of the changes in this PR:
- add CachingStatsProvider to wrapper PrometheusMetricsProvider;
- add test verify the cache.

Master Issue: #1078

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1081 from jiazhai/issue-1078, closes #1078

(cherry picked from commit d5dffc48a4eda6178bd25610097f2e49763f2377)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree d9fb09827f0e432cf5e3adfc3bb9de2bf7e1d9e4 ------
TIME:01/30/2018 21:04:30

COMMIT:ISSUE #1078: use CachingStatsProvider underly PrometheusMetricsProvider

Descriptions of the changes in this PR:
- add CachingStatsProvider to wrapper PrometheusMetricsProvider;
- add test verify the cache.

Master Issue: #1078

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1081 from jiazhai/issue-1078, closes #1078

TREE:tree 65698b0dde826d7c2e623836d33e226ab3ba415f ------
TIME:01/30/2018 21:04:30

COMMIT:Fixing validation in BookieShell.scanEntryLogForSpecificEntry

Descriptions of the changes in this PR:

https://github.com/apache/bookkeeper/commit/086537beda9427c057a286ad6c4614659da6ed7f
has messed up conditional checks in BookieShell.scanEntryLogForSpecificEntry.
Reverting those changes.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1076 from reddycharan/fixScanEntryLogForSpecificEntry

TREE:tree 0c4dbb4ee3832af09b4c896d380a21e0293228c9 ------
TIME:01/30/2018 21:02:49

COMMIT:URLDecode key/cert paths in TestTLS

In TestTLS we load keys/certs from the classpath, which means we get
the filename as a URL. Since it is a URL it is URL encoded for special
characters. Usually this is not an issue, but in the case that there
are special characters in the path, these will be encoded, and then
when we try to open the file we get a FileNotFoundException. This
occurs on jenkins, when there are two parallel builds on the same
job (it adds a N to the workspace name), and was causing all TLS
tests to fail in that case.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1074 from ivankelly/tls-fix

TREE:tree c9078ccef0162b0adc3557ce14411ff1f34471ee ------
TIME:01/30/2018 21:00:34

COMMIT:Updated site at revision f3166dd

TREE:tree 48eb30b990aed66f9a1aedb8048de3252e447f29 ------
TIME:01/30/2018 20:58:50

COMMIT:[MERGE YAHOO REPO] YBK-154: Add sleep after finding free port given OS time to release it

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/40196007
YBK-154: Addign sleep after finding free port so the OS has time to release it

Author: Robert Evans <evans@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1055 from jiazhai/cherry_picks/ii_205

TREE:tree eb8175cdff74f87a022b7fe67dc8c58eefe0787d ------
TIME:01/30/2018 20:48:31

COMMIT:ISSUE #934: Additional stats to track netty latencies in PCBC

Descriptions of the changes in this PR:

(bug W-4058645) add metrics to measure netty stack latency
- Counters to track outstanding reads/writes operations
- Collect Netty IO rate and latency histograms

rev ayegorov

PerChannelBookieClient: add additional stats

Adds:
- exceptionCounter
- connectTimer
- addEntryOutstanding
- readEntryOutstanding
- nettyOpLogger

Signed-off-by: Kishore Kasi Udayashankar<kudayashankarsalesforce.com>

Master Issue: #934

Author: Kishore Udayashankar <kudayashankar@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #971 from kishorekasi/pcbc-stats, closes #934

TREE:tree 3d1563d89c70b2b254972081e7e016506c93e44a ------
TIME:01/30/2018 20:46:22

COMMIT:Updated site at revision 36350c2

TREE:tree 1ade2cf87f24856ca76e8a70ad3b9a75f2257ca4 ------
TIME:01/30/2018 10:22:30

COMMIT:Add release date for 4.6.1 to the website

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1080 from eolivelli/update-website-4.6.1

TREE:tree 70bf945630d0d6cf856815f159f027c730364bf1 ------
TIME:01/30/2018 09:12:47

COMMIT:Release notes for 4.6.1

Author: eolivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #980 from eolivelli/releasenotes461

TREE:tree 1075f63ad14dfca916348b1a95c9781b5ef8cb08 ------
TIME:01/30/2018 09:04:29

COMMIT:Update docker file to 4.6.1 on branch-4.6 (#1072)


TREE:tree 819911b9edca84263c36d8fdcf6357f4fd11f7d6 ------
TIME:01/29/2018 22:02:13

COMMIT:Cleanup unused protobuf definitions (#22)


TREE:tree f2b62115560be971a23be4d8831d9e287aea8142 ------
TIME:01/30/2018 03:09:45

COMMIT:Remove OrderedBy annotation (#21)


TREE:tree 6f61b808816d330221efc650f769e6466605f46f ------
TIME:01/30/2018 02:38:48

COMMIT:Updated site at revision c8a3c25

TREE:tree 44a7e0b88e6f060710d795aeb0aa130c28b5918e ------
TIME:01/30/2018 02:23:16

COMMIT:Cleanup classloaders in backward-compat tests

The BC tests run in the maven process (for classloader reasons), so we
need to make sure we clean stuff up to avoid running out of memory, as
the classloaders will load a bunch of jars into memory.

Master Issue: #1030

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1070 from ivankelly/cleanup-cl

TREE:tree 6ba19898dabda958200811aae290f503c9fd0a36 ------
TIME:01/29/2018 23:56:14

COMMIT:start 4.6.2-SNAPSHOT (#1071)


TREE:tree c159fad72a1eec45edc30541728cb3d3f2e7ac6c ------
TIME:01/29/2018 22:02:51

COMMIT:Update docker file to 4.6.1 on branch-4.6 (#1072)


TREE:tree 52e0a5e411ba94056bab9b18780c42cd7e2d3aa9 ------
TIME:01/29/2018 22:02:13

COMMIT:Format the indent to 4 spaces (to align with bookkeeper coding style)

TREE:tree d177fd25b2af8d34bacd8c98ebb36fd78db2dade ------
TIME:01/29/2018 20:09:40

COMMIT:repackage under `org.apache.bookkeeper`

TREE:tree 1e763af06225f04649304b29393d57a946cc513e ------
TIME:01/29/2018 16:42:37

COMMIT:remove "distributedlog_" from module names

TREE:tree 6411f2a4c3bb43008b6fe9138f1a4c0bcb024e82 ------
TIME:01/29/2018 01:37:37

COMMIT:Updated site at revision 8cc967c

TREE:tree 694e1b3d7857a1cfbb4faa027eb16204d5836b86 ------
TIME:01/28/2018 10:54:34

COMMIT:Updated site at revision 76c1fd0

TREE:tree bccaaa7e57d80157c8ad9199afc741bdb624d491 ------
TIME:01/28/2018 10:42:45

COMMIT:ISSUE #1049: Add PERMITTED_STARTUP_USERS to limit bookie startup users

Starting the bookie as the wrong user (such as root) can cause problems
as the on disk files may end up with the wrong permissions.  Add
PERMITTED_STARTUP_USERS to protect against this kind of operational
error.

(bug W-3599751)
Signed-off-by: Dustin Castor <dcastorsalesforce.com>
[Adapted to current code]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1065 from athanatos/forupstream/permitted-startup-users, closes #1049

TREE:tree 74c778f73a492c6ffec1b3eb70b8da8c94e97cb1 ------
TIME:01/28/2018 10:34:26

COMMIT:Move backward compat tests into their own java package

Master Issue: #1030

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1064 from ivankelly/bc-java-package

TREE:tree c46b72da27414baa63ad2ed398e9e5c2df9981cf ------
TIME:01/28/2018 10:33:20

COMMIT:ISSUE #933: Add support for PEM Key file formats

(bug W-4203319) TLS authentication to support PEM format X.509
certificates along with JKS and PKCS12 formats.

Added another KeyStore Type to the list of formats (JKS, PKCS12)
currently supported during SSLContext creation.

rev ayegorov

Signed-off-by: Kishore Kasi Udayashankar <kudayashankarsalesforce.com>

Descriptions of the changes in this PR:

(PR description content here)...

Master Issue: #933

Author: Kishore Udayashankar <kudayashankar@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #965 from kishorekasi/tls-pem, closes #933

TREE:tree 25f923c9b78cdb89d0437cf8e9e9b6bfc67a4846 ------
TIME:01/28/2018 10:30:15

COMMIT:Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog

TREE:tree fb7d56a44f88c1b13d7eaf71e02971dbad882102 ------
TIME:01/26/2018 20:42:50

COMMIT:Move distributedlog-io module

TREE:tree f948441baac03532a2d1d63cb82a2841dbbe0905 ------
TIME:01/26/2018 20:42:17

COMMIT:Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog

TREE:tree b6546919f8354a7841cb76ee754e164e4d99886d ------
TIME:01/26/2018 20:39:06

COMMIT:Move distributedlog-core module

TREE:tree 20327b6e33788c6e49934dd9d3a34135ddfd244f ------
TIME:01/26/2018 20:38:41

COMMIT:Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog

TREE:tree 18abc308d8e6234e0ef66e9f5afe349086d17a81 ------
TIME:01/26/2018 20:35:24

COMMIT:Move distributedlog-protocol module

TREE:tree 4259bcafba94c15ad246aa0b5c1d405727158143 ------
TIME:01/26/2018 20:34:44

COMMIT:Merge branch 'master' of /Users/sijie/Workspaces/bookkeeper/../distributedlog_merge into copy_distributedlog

TREE:tree c01c798e90b7d30e5e1d8e5f21edf851a2496903 ------
TIME:01/26/2018 20:28:54

COMMIT:Move distributedlog-common module

TREE:tree b8ec257724e87708695afb8408049a2d1e445c96 ------
TIME:01/26/2018 20:24:53

COMMIT:Updated site at revision d06fad2

TREE:tree 17da7a3d73c181fd80913c9ba23e3985caa56d93 ------
TIME:01/26/2018 20:14:10

COMMIT:BP-26: Move the development of distributedlog library to bookkeeper

Descriptions of the changes in this PR:

This is a BP proposing moving the development of distributedlog library to bookkeeper. See details in the BP file.

Master Issue: #1024

Author: Sijie Guo <sijie@apache.org>

Reviewers: Henry Saputra <hsaputra@apache.org>, Matteo Merli <mmerli@apache.org>, Dave Rusek <dave.rusek@gmail.com>, Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Yiming Zang <yzang2016@gmail.com>

This closes #1025 from sijie/bp_move_distributedlog

TREE:tree f18cb871dc76c8c74c2a1257e65f4375f1248caf ------
TIME:01/26/2018 20:01:58

COMMIT:[MERGE YAHOO REPO] Fix bookie-shell readJournal by reading from correct journal-directory

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original change is:
https://github.com/yahoo/bookkeeper/commit/c426efea
Fix bookie-shell readJournal by reading from correct journal-directory

Author: rdhabalia <rdhabalia@yahoo-inc.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1056 from jiazhai/cherry_picks/i_207

TREE:tree d912237be6bd0d05bcc5ac3ce66e36b605f33c07 ------
TIME:01/26/2018 18:23:35

COMMIT:[MERGE YAHOO REPO] Flush after writing out index

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original commit is:
https://github.com/yahoo/bookkeeper/commit/fecdb751
YBK-14: Flush after writing out index

Author: Jia Zhai <zhaijia@apache.org>
Author: Robert (Bobby) Evans <evans@yahoo-inc.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #1060 from jiazhai/cherry_picks/i_177

TREE:tree b2a4b4712993132d6a13508a41aff3803d5713b5 ------
TIME:01/26/2018 18:20:00

COMMIT:[MERGE YAHOO REPO] Release addEntry-Bytebuf on readOnlyBookie to prevent memory-leak

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original commit is:
https://github.com/yahoo/bookkeeper/commit/42bdc083
Release addEntry-Bytebuf on readOnlyBookie to prevent memory-leak

Author: rdhabalia <rdhabalia@yahoo-inc.com>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #1059 from jiazhai/cherry_picks/i_173

TREE:tree c68a0759aa9e0ba41ae3d8ec12bb7ad5f7f8ead1 ------
TIME:01/26/2018 18:19:03

COMMIT:[MERGE YAHOO REPO] Fixed NPE when accessing readonly bookie list

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original commit is:
https://github.com/yahoo/bookkeeper/commit/270b69e4
Fixed NPE when accessing readonly bookie list

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #1058 from jiazhai/cherry_picks/i_165

TREE:tree 8cc720b3f12f9d9475e0ea304650a113bc3d8580 ------
TIME:01/26/2018 18:16:35

COMMIT:[MERGE YAHOO REPO] CMS-2060: Catch IndexOutOfBoundsException when reading entry log index map

Descriptions of the changes in this PR:
This is cherry-pick from yahoo repo of branch yahoo-4.3.

original commit is:
https://github.com/yahoo/bookkeeper/commit/2b7aacc5
CMS-2060: Catch IndexOutOfBoundsException when reading entry log index map

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1061 from jiazhai/cherry_picks/i_164

TREE:tree 760bbfd2da0fda80112f24ff930dd30da598fb5a ------
TIME:01/26/2018 18:08:11

COMMIT:Updated site at revision 89cf23d

TREE:tree c213e1e560e7d816fcc767a49a2b43f7930437d8 ------
TIME:01/26/2018 11:05:20

COMMIT:Enable rerunning flakes twice

Enables a configuration in maven to rerun failed tests a second time.

Master issue: #1031

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1062 from ivankelly/retry-flake

TREE:tree 426a352f5519f631f95beef57e167c7ab5038818 ------
TIME:01/26/2018 10:53:14

COMMIT:Updated site at revision 8e49979

TREE:tree eebc966613c2938c40c4a304e8b515b149ac4281 ------
TIME:01/26/2018 07:28:36

COMMIT:Move backward compat tests under a parent module

To avoid having to many modules directly in tests/, this patch moves
backward compat tests under their own parent module,
tests/backward-compat.

Master Issue: #1030

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1054 from ivankelly/move-dir

TREE:tree 012135dca73b5dde5589622883b404d42b6968d2 ------
TIME:01/26/2018 07:10:34

COMMIT:Remove old compat stuff

As compat tests are now docker based, the shading stuff is no longer
needed.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1052 from ivankelly/remove-old-bc

TREE:tree 1d20d5a73e820f8a2523f09e3a61329c986d8bc9 ------
TIME:01/26/2018 07:04:16

COMMIT:Use github repo as a temp location for deploying artifacts (#20)


TREE:tree 568bce32fe8e264fadac1f7556d5bff21e870abf ------
TIME:01/26/2018 01:20:53

COMMIT:Servers formatted without instance id can't join a cluster with insta…

Test that old client can continue to work with servers which are using their
hostname as their bookie id.

This replaces TestBackwardCompat#testCompatWrites and TestBackwardCompat#testCompatReads
from the old BC tests.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1034 from ivankelly/bc-cookie

TREE:tree aac701b4072f9109d9ee20f8f57d600092df4d5c ------
TIME:01/25/2018 15:11:55

COMMIT:Provide a standalone cluster and a storage cli to interact with it (#19)


TREE:tree fe9948c79885de216aeabc88e443aa44dcf9e74c ------
TIME:01/25/2018 07:47:13

COMMIT:Updated site at revision 4a4276f

TREE:tree c213e1e560e7d816fcc767a49a2b43f7930437d8 ------
TIME:01/25/2018 07:06:06

COMMIT:New testcases for ZKClient

Descriptions of the changes in this PR:

- new testcases for ZKClient to improve code coverage.

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1051 from reddycharan/zkclienttests

TREE:tree a893b391315d3973fd845732a832cdf56ee16b3a ------
TIME:01/25/2018 06:58:09

COMMIT:Enhance exception logging.

Descriptions of the changes in this PR:

- log exception in the case of exception in Bookie.shutdown
and BookKeeperClusterTestCase.tearDown.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1050 from reddycharan/logexception

TREE:tree e76ba9486ba7dc4887d6da115d4bda176e36e242 ------
TIME:01/25/2018 06:57:19

COMMIT:ISSUE #1014: LedgerManager.asyncProcessLedgers bug fixes

Descriptions of the changes in this PR:

- fix for Bug 2 of 1014. Fixing race condition with node removal in 'asyncProcessLedgers'
 and making it robust to concurrent modifications like deletions of ledgers.
- fix for Bug 1 of 1014, is already made as part of Issue #978 (decouple metaformat cmd)
 feature.
- testcases to validate the fixes.

Master Issue: #1014

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1048 from reddycharan/asyncprocessfix, closes #1014

TREE:tree f9da9d1d84d4eaaba6eca1825a5133fef92cd9ed ------
TIME:01/25/2018 06:56:26

COMMIT:Mark BP-20/BP-25 as adopted

Descriptions of the changes in this PR:

BP-20 is adopted in #760  #761
BP-25 is adopted in #1007 #1008

This closes #760 #761 #1007 #1008

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #1047 from sijie/close_bp_25

TREE:tree eea0c5064baff14db4d3a2fe9aea3ff0f42b6bf8 ------
TIME:01/25/2018 06:53:56

COMMIT: Support Increment (part 3): fix integration test

TREE:tree 8044170d60b0608504748c48993113d6768cf191 ------
TIME:01/25/2018 00:29:49

COMMIT:Support Increment (part 2): provide increment op support in storage container, server and client

TREE:tree f80fca3aa54728f911bf4c7245a10a5528773b18 ------
TIME:01/25/2018 00:13:48

COMMIT:Support Increment (part 1): provide increment op support in local state store.

TREE:tree 2f00f480f7425665cf7c17b6a2d8c2a3a39d1a60 ------
TIME:01/24/2018 23:08:30

COMMIT:Table -> Stream (part 4): storage server supports serving readonly table

a `readonly` table is only tailing updates from log streams and applying updates to table ranges.
this allows applications to mutate tables using table writer.

TREE:tree b5b590dd7758331f8320948972339c7c782a87e5 ------
TIME:01/24/2018 21:01:54

COMMIT:Updated site at revision a764c7f

TREE:tree 113365415bb8c493d9d88c4c6e3d12e8028d4cab ------
TIME:01/24/2018 20:17:17

COMMIT:ISSUE #1007: move checksum to proto

Descriptions of the changes in this PR:

Refactor checksum to proto
Master Issue: #<1007>

Author: Arvin <arvindevel@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1018 from ArvinDevel/issue1007, closes #1007

TREE:tree 8370e7c12713ce9aae198af6fc46d08706233657 ------
TIME:01/24/2018 20:05:00

COMMIT:BP-25: MovingChecksumToProto--Refactor the checksum part of bookkeeper

Descriptions of the changes in this PR:

Current the checksum implementation is in client module while the checksum semantic is more close to protocol. Moreover, moving the checksum implementation to protocol will avoid server module's dependency to client module when doing checksum in server side.

Master Issue: #1007

Author: Arvin <arvindevel@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri <vjujjuri@salesforce.com>

This closes #1008 from ArvinDevel/BP_25_MovingChecksumToProto

TREE:tree 368ac46d5682be848cce6805622cf93a9a6d80fe ------
TIME:01/24/2018 20:03:34

COMMIT:Test compat with useHostNameAsBookieID

Test that old client can continue to work with servers which are using their
hostname as their bookie id.

This replaces TestBackwardCompat#testCompatWrites and TestBackwardCompat#testCompatReads
from the old BC tests.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1033 from ivankelly/bc-hostname

TREE:tree a8521e4ebc11efe718f9583d1b80909cf13cd0f9 ------
TIME:01/24/2018 19:56:42

COMMIT:BookKeeperClusterTestCase,UpdateLedgerOpTest: remove call to setAllow…

(bug W-2962634)
Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com>
[Ported to master]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1037 from athanatos/forupstream/tests/setallowloopback

TREE:tree 08939f788a5398084a66cbe59f76eca142b1252f ------
TIME:01/24/2018 19:55:42

COMMIT:AuditorLedgerCheckerTest: wait for ro transition to make more reliable

(bug W-2999244)
Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com>
[Reworked for master]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1038 from athanatos/forupstream/tests/bookietransition

TREE:tree d777df79e3f6ae1a158025d302b8c96c86150de4 ------
TIME:01/24/2018 19:54:55

COMMIT:ISSUE #1039: BKClient tests with BookieErrors

Descriptions of the changes in this PR:

- end-to-end tests for validating BKClient readEntry
calls incase of combination of bookie timeouts and
data corruption

Master Issue: #1039

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>
Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1040 from reddycharan/bookkeeperclienttests, closes #1039

TREE:tree 9a49cf3bdb01b889159ecd95708ed0c8397af6b7 ------
TIME:01/24/2018 19:54:08

COMMIT:Updated site at revision 51b93ba

TREE:tree e6e4a49a45a4128d62eb246090d4526d0366df04 ------
TIME:01/24/2018 19:53:21

COMMIT:CompactionTest: call storage.shutdown() prior to recreating

(bug W-2962634)
Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com>
[Ported to master]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1036 from athanatos/forupstream/tests/compaction

TREE:tree 27b3f774368c85d353c4c39fe083d8bdb9f37217 ------
TIME:01/24/2018 19:51:47

COMMIT:ISSUE #1041: Adding new testcases

Descriptions of the changes in this PR:

- New Testclass for ZeroBuffer
- New testcases for missing testcoverage in
SortedLedgerStorage, EntryMemTable and LedgerHandleAdv

Master Issue: #1041

Author: cguttapalem <cguttapalem@salesforce.com>
Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1042 from reddycharan/missingtestcases, closes #1041

TREE:tree 305e3973f4fa39612080fab3b864ecd4df14418f ------
TIME:01/24/2018 19:48:53

COMMIT:AuditorPeriodicCheckTest: add test for entries with failed bookie writes

Validate that the auditor's periodic check will detect entries
with failed bookie writes and repair them.

Signed-off-by: Rithin <rithin.shettysalesforce.com>
(bug W-3311952)(bug W-3311965)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1044 from athanatos/forupstream/tests/failedwrites

TREE:tree 32c47073b570c6fdf59963b0a1bd7084fa07c287 ------
TIME:01/24/2018 19:43:11

COMMIT:More testcases for LedgerHandle

Descriptions of the changes in this PR:

- New testcases for missing testcoverage in
LedgerHandle and ReadOnlyLedgerHandle

Author: Charan Reddy Guttapalem <cguttapalem@cguttapale-ltm1.internal.salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1045 from reddycharan/ledgerhandlemissingtests

TREE:tree 0126a1e0ba9f8b7717b80ad59fd9789e284aac74 ------
TIME:01/24/2018 19:41:57

COMMIT:ISSUE #978: decouple metaformat cmd

Descriptions of the changes in this PR:

- introduce new commands - initnewcluster, nukeexistingcluster, whatisinstanceid
- add testcases initnewcluster and nukeexistingcluster at BookKeeperAdmin level

Master Issue: #978

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #979 from reddycharan/splitmetaformat, closes #978

TREE:tree 1714b3a2c754f65ee673870c4ea82f6477b594d9 ------
TIME:01/24/2018 19:40:44

COMMIT:Ledgers without masterkey in metadata can't be recovered

Test that ledgers, created without a master key in the metadata, cannot be recovered until
the master key is known.

Replaces TestBookieRecovery from the old tests.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1035 from ivankelly/bc-recovery

TREE:tree a035acc5fba607477c0920190a3d72a1dee66609 ------
TIME:01/24/2018 13:06:01

COMMIT:Table -> Stream (part 3): Implement dlog based table writer

TREE:tree a55f037951f04e8acd47b0c504f8f0860e6a73b2 ------
TIME:01/24/2018 10:56:31

COMMIT:Table -> Stream (part 2): Introduce `defaultBackendUri` in stream configuration

`defaultBackendUri` points to the service that is used for storing the logs for ranges.

TREE:tree bcc336ee0af56c3256bcd394bd95b9ea409b122b ------
TIME:01/24/2018 10:00:01

COMMIT:Table -> Stream (part 1): add table writer for appending events to stream

TREE:tree db606af714fb6f11daeab81d3ba7ac02c5b8b3aa ------
TIME:01/24/2018 06:34:33

COMMIT:Add Table api and its implementation (#18)


TREE:tree 70b3b610e1e2f125bfa0b43b13440395c7462f84 ------
TIME:01/24/2018 06:34:33

COMMIT:Add some simplified kv methods in PTable (#17)


TREE:tree c9acb228529981e6f3b0a98d0184bd043b0d7c28 ------
TIME:01/24/2018 03:54:40

COMMIT:Enable txn on both server side and client side (#16)


TREE:tree 1729ceed7678fdce98cdc41f9f7587676bb4ccef ------
TIME:01/24/2018 03:01:13

COMMIT:Improve the client api to a type-safe api (#15)


TREE:tree f2085310b2aaf00dba8dcd6473165a73d9e4792b ------
TIME:01/23/2018 22:26:58

COMMIT:Updated site at revision 1d7a489

TREE:tree 9fa25ab3aa6ab84a4648b2b546090aef34d4abd0 ------
TIME:01/23/2018 06:45:28

COMMIT:ISSUE #1026: initbookie cmd

Descriptions of the changes in this PR:

- adding a new BookieShell command - "initbookie" command to decouple from
bookieformat. This command initializes bookie, by making sure that the
journalDirs, ledgerDirs and indexDirs are empty and there is no
registered Bookie with this BookieId.

Master Issue: #1027

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1027 from reddycharan/initbookiecmd, closes #1026

TREE:tree a979f476c8a8160f928c7d80db3f65794c4d21d9 ------
TIME:01/23/2018 06:32:58

COMMIT:Test compatibility between old hierarchical ledger manager and current

Ensures that the current client and server can handle ledgers created by the
hierarchical ledger manager from 4.2.0.

Replaces TestBackwardCompat#testCompatHierarchicalLedgerManager from old tests

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #1029 from ivankelly/bc-heir

TREE:tree 5b3b23643a637020630cdce4f1ba5884a38eca05 ------
TIME:01/22/2018 21:00:18

COMMIT:Test upgrade from old server version to new version

This patch contains two tests.
- Upgrade between all released version, up to latest version
- Upgrade direct from 4.1.0 to latest version

In all cases the old client should continue to work with the new version.
In one case(4.2->4.3), we broken client compatibility so the the new client
stops working with the old server.

These tests replace and expand on the testing done by
TestBackwardCompat#testCompat410 with the old BC tests.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1028 from ivankelly/compat401

TREE:tree 190f7f6d0eba66804ae8e96cbbf2e466e085b336 ------
TIME:01/22/2018 20:38:45

COMMIT:Allow groovy tests to compile on java 9

Older versions of the compiler cannot handle java9 modules.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1032 from ivankelly/groovy-j9

TREE:tree fea3ea9d311f7bb4302df520b2e1534f97fe9b2e ------
TIME:01/22/2018 18:17:59

COMMIT:Only run integration tests with -DintegrationTests

Integration tests have a higher system requirement than normal unit
tests, and take longer to run, so they should be explicitly enabled.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1022 from ivankelly/integ-flag

TREE:tree ab03c13a16cef7408ca4a93a30e2501071ab1b13 ------
TIME:01/22/2018 10:23:29

COMMIT:Arquillian topologies module

Will allow topologies to be shared among modules, which is important
as arquillian builds and pulls down the containers on a per
module/suite basis.

Currently contains a single topology, which is 3 BK nodes and 1 ZK
nodes. The BK nodes contain all released versions, with no version
started by default.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1023 from ivankelly/topologies

TREE:tree 3f163b7422619e1c0aab52725074229fbc90825d ------
TIME:01/22/2018 01:59:06

COMMIT:Updated site at revision 9557767

TREE:tree a921046c7b77c9c40271756a215cb6d8506c2fdc ------
TIME:01/19/2018 20:21:31

COMMIT:Fixups for broken versions in all versions images

Various versions of bookkeeper have shipped broken by default. This
patch fixes them up in the all versions image, so that they can be
tested.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1021 from ivankelly/broken-versions

TREE:tree ad3b4bde900d5704aad3b39664c4adb7e991acfa ------
TIME:01/19/2018 20:14:10

COMMIT:Utilities for bookies running in test containers

The changes include:
- Updating configuration in bk_server.conf for one or all bookies
- Run commands on all or one bookie
- Wait for all bookies in the test are up

There are also improvements to DockerUtils#runCommand:
- Better logging
- Catches RunTime exceptions, as Docker-java throws them and it could
  fail the test
- Throw an exception is the command exits with anything but 0

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1020 from ivankelly/bookie-util

TREE:tree 6b4fbc5b477a09766604de6856488863bb3aba2b ------
TIME:01/19/2018 20:11:08

COMMIT:Base modules for integration testing

Integration tests should all specify either of this modules as their
parent.

integration-tests-base is for pure java integration tests.
integration-tests-base-groovy is for groovy integration tests, suchs
as BC testing.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #976 from ivankelly/integ-base-mod

TREE:tree b228f6479908d4077c10b9b2b2a0759d43ef9241 ------
TIME:01/19/2018 20:08:58

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.1

TREE:tree a1cd6460e86287eb30c2b9739cf22ae1753338d5 ------
TIME:01/19/2018 14:24:08

COMMIT:[maven-release-plugin] prepare release release-4.6.1

TREE:tree 32796a32fefa3837ac9c186b06d9d7f4971b4555 ------
TIME:01/19/2018 14:23:51

COMMIT:Issue-1003 Backward Compatility tests fail on branch-4.6
Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

closes #1006 #1003

TREE:tree a1cd6460e86287eb30c2b9739cf22ae1753338d5 ------
TIME:01/18/2018 06:49:54

COMMIT:Updated site at revision 0c9e88b

TREE:tree b9db83d19fc4720532ba8cfc7c66a253c579c624 ------
TIME:01/19/2018 10:21:24

COMMIT:[MERGE YAHOO REPO] CMS-1599: make sure we always release the underreplicated lock

Descriptions of the changes in this PR:

CMS-1599: make sure we always release the underreplicated lock

Here is original commit:
https://github.com/yahoo/bookkeeper/commit/850122ed

Author: Siddharth Boobna <sboobna@yahoo-inc.com>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #1010 from jiazhai/cherry_picks/i_120

TREE:tree b4b380c3024c0c355dfc62a22a2f3d87b2762777 ------
TIME:01/19/2018 10:19:34

COMMIT:proto/*Processor: clean up logging, include exception stack

For WriteEntryProcessorV3, log fence exception at error in order to help
with debugging the cause of a fenced ledger.

(bug W-3299246)
(bug W-3158835)
Signed-off-by: Andrey Yegorov <ayegorovsalesforce.com>
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Minor formatting fixes]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1016 from athanatos/forupstream/logs1/processors

TREE:tree 91898b7e5defd4b25fdcc232f1f58b8a59fbe083 ------
TIME:01/19/2018 10:16:22

COMMIT:ZkRegistrationManager: add log line with root path for prepareFormat

Useful for auditability.

(bug W-4026563)
Signed-off-by: Zhimeng Shi <zshisalesforce.com>
[Updated for current patch]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #1015 from athanatos/forupstream/logs1/format

TREE:tree 407443c45026b10a1701bbb58d5d7bbf9acb1e40 ------
TIME:01/19/2018 10:15:13

COMMIT:[MERGE YAHOO REPO] CMS-1487: Provide tool to read entries from a particular bookie

Descriptions of the changes in this PR:

CMS-1487: Provide tool to read entries from a particular bookie.
Here is original commit:
https://github.com/yahoo/bookkeeper/commit/1a884b02

Author: Jia Zhai <zhaijia@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #1009 from jiazhai/cherry_picks/i_115

TREE:tree 8a88869aa15d986706c0b0f4e2b02389cfc25c29 ------
TIME:01/19/2018 10:10:16

COMMIT:ISSUE #985: Add log messages to indicate bucket levels of entryLog.

(bug W-3333413)
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Fixed merge issues]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #997 from athanatos/forupstream/logs1/compaction, closes #985

TREE:tree b33ae6b73cd86d373f25e10be50841502fc549f9 ------
TIME:01/19/2018 10:08:55

COMMIT:Add an integrate test case on testing end-to-end kv store (#14)


TREE:tree 75e6d75d058b82074917b999b965645279e29cac ------
TIME:01/19/2018 02:00:48

COMMIT:Updated site at revision fe012e3

TREE:tree 1e4cc33eda5cbb412ebdbcf879a82ff61cfd8b73 ------
TIME:01/18/2018 20:32:46

COMMIT:Updated site at revision 64da7e7

TREE:tree b32fe6600a2a4f47f93600b412659679b8224674 ------
TIME:01/18/2018 20:20:16

COMMIT:Increase page size for fetching github labels

Descriptions of the changes in this PR:

*Problem*

The default page size for github api is 30 items. The number of labels at bookkeeper are more than 30 items, so `type/task` is not showing up at merge script.

*Solution*

This change is to bump the page size to 100 items.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #1013 from sijie/increase_page_size

TREE:tree 8af66a57a8ed910603c422eaa2379e1b51eb3dd0 ------
TIME:01/18/2018 20:11:58

COMMIT:PendingReadOp: improve logging for speculative read targets

And add more log messages around speculative read
to understand what bookies were tried, before attempting
speculative read.

(bug W-3315760)
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Fixed merge conflicts and checkstyle issues]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #993 from athanatos/forupstream/stats1/specreadlogs

TREE:tree 2d73d1acd19c20adf8a9e6aa93f0ff5783d0012f ------
TIME:01/18/2018 20:09:05

COMMIT:Rework of binary distribution licenses

All redistributed jars are mentioned in the LICENSE file. If the jar
is ASLv2, it is simply listed under the ASLv2 text. If these ASLv2
jars have their own NOTICE files, then the relevant portions are added
to our NOTICE file.

All jar under license other than ASLv2 get their own section in
LICENSE, which links to the full text of their license. Non-ASLv2
generally do not require an update to NOTICE.

This change also includes a script, check-binary-license, which checks
that the contents on the LICENSE and NOTICE actually matches what
bundled in the distribution tarball.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #888 from ivankelly/license-rework

TREE:tree 8ce1a430cf669f33d1580557ec26c4b44fc94353 ------
TIME:01/18/2018 20:01:09

COMMIT:Updated site at revision 5e32f63

TREE:tree 099793fb0074162383c1e522909c0db7cfc8f389 ------
TIME:01/18/2018 16:38:21

COMMIT:Remove unused import from DoubleByteBuf

9fca59 left behind an import, which triggers a failure in checkstyle.
Fix is to remove the import.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1011 from ivankelly/fix-checkstyle

(cherry picked from commit 5e32f634efa833e3ea7c5ae0b235e5a480ddcb95)
Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree cc4e5a3d6455885dbe14255c0fd01b348532c644 ------
TIME:01/18/2018 16:25:52

COMMIT:Remove unused import from DoubleByteBuf

9fca59 left behind an import, which triggers a failure in checkstyle.
Fix is to remove the import.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #1011 from ivankelly/fix-checkstyle

TREE:tree 74be77eddb589daeeb4b48fa2e4f5a7e2b8ac10c ------
TIME:01/18/2018 16:25:52

COMMIT:Maven classloader

This will allow us to test different versions of the client.

Also includes some extra methods to make it easier to work with the
bookkeeper client.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #975 from ivankelly/maven-classloader

TREE:tree c5c7e00c83df4e21c6569c414be7fb49fef12125 ------
TIME:01/18/2018 11:13:44

COMMIT:Fix compilation issue: remove duplicated method (#13)


TREE:tree 8b7d503f0041f7dbb4460fae1ecc9f7e7765e210 ------
TIME:01/18/2018 10:32:40

COMMIT: Implement table storage using the local mvcc store (#12)


TREE:tree 9a2dd9e3ba2d993bbdafc620460db5de62c54735 ------
TIME:01/18/2018 10:26:29

COMMIT:Issue-1001 merge DoubleByteBuffer from master

TREE:tree b9431b37ede2e997f515ffa628831cae294dfce8 ------
TIME:01/18/2018 04:18:03

COMMIT:Issue-1004 Client of BookKeeper 4.6.1 imports dependencies to netty-common and netty-all

TREE:tree ceb3d15e2ba8d2a03d859d38dd2d7d13650f132b ------
TIME:01/18/2018 07:08:10

COMMIT:Updated site at revision 9fca590

TREE:tree 320f259cc9ee3959a3a03c82529350e9c9137a4b ------
TIME:01/18/2018 03:04:37

COMMIT:revert DoubleByteBuf niobuffers() changes

Revert some of the changes in https://github.com/apache/bookkeeper/pull/996 since they cause issues

Author: Sebastian Schepens <sebastian.schepens@mercadolibre.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #998 from sschepens/double-bytebuf-fix-2

(cherry picked from commit 9fca590d94bea9bf86a49f1dbdddf2ae37d3e949)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 1219c8538d45836fb21acc5a585478e2000cb41b ------
TIME:01/18/2018 02:48:58

COMMIT:revert DoubleByteBuf niobuffers() changes

Revert some of the changes in https://github.com/apache/bookkeeper/pull/996 since they cause issues

Author: Sebastian Schepens <sebastian.schepens@mercadolibre.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #998 from sschepens/double-bytebuf-fix-2

TREE:tree 84ba69a4a952ade3fa72536b5c682cbac0430dfa ------
TIME:01/18/2018 02:48:58

COMMIT:Updated site at revision 1f66e47

TREE:tree 099793fb0074162383c1e522909c0db7cfc8f389 ------
TIME:01/18/2018 01:56:34

COMMIT:Utilities for working with Arquillian and Docker

This patch contains the following utilities.
- An arquillian StopAction which copy logs from /var/log/bookkeeper to
  the target/ directory.
- An arquillian StopAction which dumps the docker log to the target/
  directory.
- An arquillian AwaitStrategy which checks whether a zookeeper cluster
  is running.
- An arquillian AwaitStrategy which returns immediately (surprising
  arquillian didn't already have this).
- Utilities for working with a cluster of zookeeper/bookkeeper running
  on docker.

Master Issue: #903

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #974 from ivankelly/arquillian-util

TREE:tree 9fa67c0e75ba41cddd645e0651489af69c1fe70f ------
TIME:01/18/2018 01:44:37

COMMIT:DoubleByteBuf fix for Netty > 4.1.12

This is a port from Pulsar, DoubleByteBuf has problems with Netty Native Transport.
Original author is  sschepens

see https://github.com/apache/incubator-pulsar/pull/1056

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #996 from eolivelli/fix/doublebytebuf

(cherry picked from commit ff4932b37f68303793acce91840a55fddfda231f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 64ab1771e19b9edc3f4da3e7651f547c3a32a412 ------
TIME:01/17/2018 19:34:53

COMMIT:Updated site at revision ff4932b

TREE:tree fd3f901ace96120d09aafc6fd4df0d737b15c0da ------
TIME:01/17/2018 19:47:20

COMMIT:DoubleByteBuf fix for Netty > 4.1.12

This is a port from Pulsar, DoubleByteBuf has problems with Netty Native Transport.
Original author is  sschepens

see https://github.com/apache/incubator-pulsar/pull/1056

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #996 from eolivelli/fix/doublebytebuf

TREE:tree 07ac3799104c058293b4c036521b5b783a06d6f7 ------
TIME:01/17/2018 19:34:53

COMMIT:Updated site at revision d44bee5

TREE:tree 099793fb0074162383c1e522909c0db7cfc8f389 ------
TIME:01/17/2018 16:33:11

COMMIT:Updated site at revision 25b0d93

TREE:tree 486ee0b96dde217425f1395a6afe5ca5404f6576 ------
TIME:01/17/2018 16:21:25

COMMIT:PendingReadOp: add counter for speculative reads

(bug W-3324107)
Signed-off-by: Dustin Castor <dcastorsalesforce.com>
[Ported to current master, added test]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #991 from athanatos/forupstream/stats1/specreadstats

TREE:tree 53f8bf3049c3c3101ee48b9129077d118f8a4d8f ------
TIME:01/17/2018 16:09:27

COMMIT:Issue #981: Revert "ISSUE #561: Remove exec commands to start in the shell pid"

This reverts commit 7d7497b70507ea3d31b184ebe04d98c733e2cf5b.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #994 from ivankelly/revert-exec, closes #981, closes #561

(cherry picked from commit 25b0d93405e87efeb35ca50cbd04ab14488ceaea)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 2c9f88f4ec2559e40b132a258102b67342e14f18 ------
TIME:01/17/2018 16:08:02

COMMIT:Issue #981: Revert "ISSUE #561: Remove exec commands to start in the shell pid"

This reverts commit 7d7497b70507ea3d31b184ebe04d98c733e2cf5b.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #994 from ivankelly/revert-exec, closes #981, closes #561

TREE:tree 491905d6354eb95c71012126fa3e090ce5f2a054 ------
TIME:01/17/2018 16:08:02

COMMIT:ISSUE #988: more log lines for replication status changes

Descriptions of the changes in this PR:

more log lines for replication status changes

Master Issue: #988

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #989 from reddycharan/replicatorlogs, closes #988

TREE:tree dc5bff5c0c186f55b6570ee7d62988803798a9a6 ------
TIME:01/17/2018 16:07:10

COMMIT:Fix tight loop in getFileInfo

The argument to assertions is not evaluated if assertions is disabled,
which was messing up the refcounting for the fileinfo backing
cache. We ended up with dead fileinfo objects in the guava caches,
which triggered an infinite loop.

This patch fixes that by moving the tryRetain() out of the assert. It
also adds defensive code to getFileInfo to ensure that if a fileinfo
object is dead, that it doesn't exist any longer in the caches.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #990 from ivankelly/inf-loop

(cherry picked from commit 26c3379c9fdd812ef36da6176d83e26179705535)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree 6a1cdc2f1c695976b3ce2cbfa1efdb3bc3858279 ------
TIME:01/17/2018 16:06:22

COMMIT:Fix tight loop in getFileInfo

The argument to assertions is not evaluated if assertions is disabled,
which was messing up the refcounting for the fileinfo backing
cache. We ended up with dead fileinfo objects in the guava caches,
which triggered an infinite loop.

This patch fixes that by moving the tryRetain() out of the assert. It
also adds defensive code to getFileInfo to ensure that if a fileinfo
object is dead, that it doesn't exist any longer in the caches.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #990 from ivankelly/inf-loop

TREE:tree c2e49f340b5974f43910eeabd8b4c41956f52e1e ------
TIME:01/17/2018 16:06:22

COMMIT:LedgerHandle: add counters to track ledger->bookie counts

We can use this to detect distribution issues.

(bug W-4188471)
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
[Ported to master, cleaned up a bit, added test]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #977 from athanatos/forupstream/stats1/edist

TREE:tree fd0048789e1eb277567a74616050659e984ea3cb ------
TIME:01/17/2018 16:03:52

COMMIT: Implement table storage using the local mvcc store  (#11)


TREE:tree fc5ae9f6cdd41285a97ed9243ec6bdb97468e9b6 ------
TIME:01/17/2018 13:13:22

COMMIT:ISSUE #986: in LocalBK.main do Sys.exit in the case of an Exc

Descriptions of the changes in this PR:

in LocalBookKeeper.main method if there is any exception then it should do System.exit. This is needed,  because, some non-daemon thread (probably in ZK or some other dependent service) is preventing the JVM from exiting, though there is exception in main thread.

Master Issue: #986

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #987 from reddycharan/minorlocalbookkeeperfix, closes #986

TREE:tree deb61c8d2cdf673c66bfca5388dc29286a49e631 ------
TIME:01/16/2018 09:33:50

COMMIT:Journal: add stat for cb queue size

Also adds a bit of functionality to TestStatsProvider to facilitate
testing.

(bug W-3019451)
Signed-off-by: Dustin Castor <dcastorsalesforce.com>
[Adapted to current branch, added simple test]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #968 from athanatos/forupstream/stats1/journal

TREE:tree 00aa917c6e40b1f5abe4d596a101e633cadd233a ------
TIME:01/16/2018 09:18:09

COMMIT: Expose table service to grpc endpoint  (#10)



TREE:tree 740b07b85e3f1914596124ea6c321cfdf048fcd4 ------
TIME:01/16/2018 07:23:32

COMMIT:store stream/range metadata in a mvcc local store (#9)


TREE:tree ddd1f7a7f2787c5086919ec3a9d25cb983f980ab ------
TIME:01/16/2018 06:34:25

COMMIT:Cherry-pick integration tests from stream storage (#8)


TREE:tree 4a67cbefe0a40e0887e01d0ea292f83e30913214 ------
TIME:01/15/2018 23:12:16

COMMIT:Cherry-pick the stream storage server module (#7)


TREE:tree d0d5c2aa984b06cedd30f2779133e64317058c5b ------
TIME:01/15/2018 20:20:28

COMMIT:Use local state store to store root range (#6)

* Use statelib to store metadata

* Remove namespace

* Use local state store to store root range

TREE:tree 9874b3af73d515769e5086f5278ad14ad34b81c3 ------
TIME:01/15/2018 12:42:37

COMMIT:Introduce a store factory to manage and create mvcc stores (#5)


TREE:tree 4258502f3fc5df048fdb5c332f50b7ef3543038c ------
TIME:01/15/2018 11:05:42

COMMIT:Fix the namespace processor filenames (#4)


TREE:tree 28df9825db19d76dad79eeb320e00404e5a212e2 ------
TIME:01/15/2018 02:17:39

COMMIT: Fix status codes which still reference collection (#3)

#2 renamed collection to namespace but it doesn't finish cleaning up the status code references. This pull request fixes it.
TREE:tree 8151ac414c61caa970c65f0e38180a65e1fb6f96 ------
TIME:01/15/2018 02:12:46

COMMIT:Rename "Collection" to "Namespace" (#2)

to simplify/unify the concepts with pulsar, rename the collection to namespace
TREE:tree 5f770d38d8865262968b6ec688172db96b45d2f3 ------
TIME:01/15/2018 01:53:05

COMMIT:Fix NPE on LocalClientImpl

TREE:tree dae3022240a1c82d9199e5b7acc9f600b34a3198 ------
TIME:01/15/2018 01:07:51

COMMIT:Storage module should depends on the new client module

TREE:tree d6d5af87672223902fa8c46967f2bb873b3f00d7 ------
TIME:01/15/2018 01:00:05

COMMIT:Rename RangeServer as StorageServer

`RangeServer` was used for servers that host individual `ranges`. since now the server becomes more generic for serving containers and ranges for both streams and tables.

TREE:tree 60b99f67f907c62de665aa1ba27f0734f4db3304 ------
TIME:01/15/2018 00:48:32

COMMIT:refactor `rangeservice` to `storage`

TREE:tree fd9f05aa9d7395f44370e70419bc2fd57c082907 ------
TIME:01/15/2018 00:30:10

COMMIT:Add clients-parent module

TREE:tree 78cb8bc2599c77d8d02dd329d6c88c174560715d ------
TIME:01/15/2018 00:17:22

COMMIT:Refactor client package from `stream.client` to `clients`

TREE:tree 743b7e54874573fc25c0c0e95fce09c43f5b9331 ------
TIME:01/15/2018 00:12:46

COMMIT:Move client implementation from `streamstore/client` to clients/java

TREE:tree 83dab8fd8b3d799cb05cea90e94dfb29ddf8cd2f ------
TIME:01/13/2018 23:20:55

COMMIT:Refactor, cleanup and enable bookkeeper checkstyle

- rename impl as statelib
- move coder from api to common, so it can be shared between statelib and clients
- move statestore api to statelib

TREE:tree 0a7d6e381da9ec34d166021340dc2b715d110e9c ------
TIME:01/13/2018 22:41:00

COMMIT:Relocate storage package

TREE:tree 78e7f07ccf6e8aa96507ff3681607d9d462e1172 ------
TIME:01/13/2018 21:23:25

COMMIT:Relocate the protocol package

TREE:tree 73d4fbc109178ca5f2a3cd97ba6c4875c0cda3af ------
TIME:01/13/2018 21:14:48

COMMIT:Move kv api from `stream.api.view.kv` to `api.kv`

TREE:tree a78a09fa38acaa8d8c3164908a1ac4397dc272d9 ------
TIME:01/13/2018 21:02:44

COMMIT:Finished the import of streamstore module and make it compilable.

TREE:tree 1694732dcae8aec51c4b3ef34076f0b7b6de8f21 ------
TIME:01/12/2018 23:46:28

COMMIT:Remove the simple name resolver factory.

This simple name resolver factory is introduced from thin client implementation. It is not needed by stream store.

TREE:tree 9002796f419f56e4cafad36048b2434b19e8d38b ------
TIME:01/12/2018 22:52:41

COMMIT:Move `bookkeeper-common` as `common` module

This `common` module should be split and merged back to `bookkeeper-common` when stream store is open sourced

TREE:tree 13c8e63e641b788d1182847004e933064151d3ee ------
TIME:01/12/2018 22:50:15

COMMIT:[md_proxy2 6/14] Pluggable interface to resolve bookie address from name (#40)

* Pluggable interface to resolve bookie address from name

TREE:tree 99eef3de4a6b0de523834a7e100b723eeb71bec5 ------
TIME:11/13/2017 19:37:22

COMMIT:Stream Store : storage api & impl

(cherry-picked from stream storage work, co-authored by Jia Zhai and Sijie Guo)

TREE:tree 59c3de64cb8710a1b6af985576875e3e289f43b7 ------
TIME:09/18/2017 01:44:57

COMMIT:Stream Store: Client

- add client module
- implement the location, root range and metadata range apis
- implement the table api

(cherry-picked from stream storage work, co-authored by Jia Zhai and Sijie Guo)

TREE:tree 88617543e59deb71dd4ca25d462ecb030e022ae0 ------
TIME:09/18/2017 00:28:29

COMMIT:Stream Store: Define the table API in stream store.

(cherry-picked from stream storage work, co-authored by Jia Zhai and Sijie Guo)

TREE:tree c97939f0d9d1aae3612277452df1141b3f14e80f ------
TIME:09/17/2017 11:38:56

COMMIT:Stream Store: Protocol module

- add the protocol module for protocol related classes
- basic concepts (collection, stream), rpc service, clients

(cherry-picked from stream storage work, co-authored by Jia Zhai and Sijie Guo)

TREE:tree d752caa1b0492da2a8e5f4d7920fcb15296e0e3d ------
TIME:09/17/2017 11:11:00

COMMIT:Upgrade nokogiri to 1.8.1

Upgrade nokogiri as 1.8.0 has a security vulnerability.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #972 from ivankelly/nokogiri-upgrade

TREE:tree f93acd93fc37d85cf7a0d750141ce6f805724365 ------
TIME:01/12/2018 17:28:22

COMMIT:Move dev and dev-debug profiles to top level POM

So that they can be used from other modules.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #973 from ivankelly/move-dev-profile

TREE:tree 0cf58fc84e38e04d45eb132594f9c44070a8fe8c ------
TIME:01/12/2018 17:25:43

COMMIT:Updated site at revision c53756b

TREE:tree 7d62f20d3f331bfe6d79e348e7c2dd90b5e4c3e2 ------
TIME:01/12/2018 09:36:20

COMMIT:BookieWatcher: add stats for ensemble changes

(bug W-3019451)
Signed-off-by: Dustin Castor <dcastorsalesforce.com>
[Fixed up merge/checkstyle issues, added tests]
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #969 from athanatos/forupstream/stats1/ensemblechange

TREE:tree 01861dd5cf4d2abc6ef485bdd2cf454fc91760f8 ------
TIME:01/12/2018 09:24:31

COMMIT:Updated site at revision ade4246

TREE:tree 042e4cc111c5e6b0eb37af456a0cad90382afd74 ------
TIME:01/12/2018 08:42:24

COMMIT:ISSUE #956: gc: add more stats

Add new gc stats:
 * RECLAIMED_COMPACTION_SPACE_BYTES
 * ACTIVE_ENTRY_LOG_COUNT
 * ACTIVE_ENTRY_LOG_SPACE_BYTES
 * RECLAIMED_ENTRY_LOG_SPACE_BYTES
 * THREAD_RUNTIME
 * MAJOR_COMPACTION_COUNT
 * MINOR_COMPACTION_COUNT
 * ACTIVE_LEDGER_COUNT
 * DELETED_LEDGER_COUNT

Removes apparently unused (better named replacements above):
 * NUM_MINOR_COMP
 * NUM_MAJOR_COMP

(bug W-3038773)
Signed-off-by: Samuel Just <sjustsalesforce.com>
Signed-off-by: Dustin Castor <dcastorsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #967 from athanatos/forupstream/stats1/gc, closes #956

TREE:tree 14feee5b4959e2dc4ad413ed60be61a3e320835c ------
TIME:01/12/2018 08:29:57

COMMIT:Enable checkpointing in AsyncStateStoreWithJournal

TREE:tree 9d14b393072dad4cb705190313ec4aaebc12a750 ------
TIME:01/12/2018 08:21:55

COMMIT:Add test cases for rocksdb incremental checkpointing

TREE:tree 4fd4775f0063dbf95cff817e794b7ba6ce5d6613 ------
TIME:01/12/2018 04:32:17

COMMIT:Redirect tests output from console to files

TREE:tree 9576fa7ab8f1729bfa628e58e34ccdcb1c6938e3 ------
TIME:01/11/2018 21:03:12

COMMIT:Use default column family for storing data and introduce a `.meta` column family

TREE:tree ac1f9ca2fa060a4f4ad1e877cec3f89eecf7f77e ------
TIME:01/11/2018 20:38:13

COMMIT:Rename `CheckpointManager` to `CheckpointStore` (#1)


TREE:tree aa3c9f1b2890c3acb4dd3bd6d30b25b3def4aae8 ------
TIME:01/11/2018 18:58:40

COMMIT:Updated site at revision 78f8623

TREE:tree acad301fca942f274b5ff32cfe1c0b600f0b915c ------
TIME:01/11/2018 16:21:43

COMMIT:ISSUE #945: Enabling BookieShell for LocalBookKeeper

Descriptions of the changes in this PR:

We should be able to execute BookieShell commands against bookies of LocalBookkeeper

eg. for Zookeeper/Metadata Operation
./bookkeeper shell -localbookie listbookies -rw

eg. for Bookie operation
./bookkeeper shell -localbookie 10.3.27.190:5000 lastmark
./bookkeeper shell -localbookie 10.3.27.190:5000 listfilesondisc

Master Issue: #945

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #946 from reddycharan/localbookkeeper, closes #945

TREE:tree fe6fb10a5166ea0952f2beb0fff7fcc0c1aeafdd ------
TIME:01/11/2018 16:09:13

COMMIT:implement the rocksdb based async kv store

TREE:tree d14651caad50c100659cec5c846eb8e0d1dada85 ------
TIME:01/11/2018 03:49:22

COMMIT:- Move the journaling logic to an abstract implementation of AsyncStateStore
- Provide async interfaces on simple kv store

TREE:tree 140dcddf4626cd96f7789ac5dc2579d88409fb8b ------
TIME:01/10/2018 23:31:52

COMMIT:Move the simple kv statestore api/impl to `kv` package

TREE:tree 82970778dae8d4962e9f47dbfe5c191fd2b48a60 ------
TIME:01/10/2018 21:20:25

COMMIT:Updated site at revision 4bad1f0

TREE:tree 042e4cc111c5e6b0eb37af456a0cad90382afd74 ------
TIME:01/10/2018 19:49:10

COMMIT:Add the testing page to navbar

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #963 from sijie/add_missing_guide

TREE:tree a56bd7d86f0ee6e7dc6270a350313070b67a94bd ------
TIME:01/10/2018 19:26:25

COMMIT:Tag all-versions-image with latest

So that scripts using it don't have to bump version each time.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #964 from ivankelly/latest-tag

TREE:tree 160fd79b110c9bfb04fec6211986101c2be92683 ------
TIME:01/10/2018 19:25:21

COMMIT:Updated site at revision 3a6699d

TREE:tree 8cd247872f23ec369d6f482852e86dbb1fe57b1f ------
TIME:01/10/2018 02:15:43

COMMIT:Prepare website for 4.6.1 release

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #962 from eolivelli/new461website

TREE:tree 1958fd5bd485f3a8f871401411dcb97b707e1112 ------
TIME:01/10/2018 02:03:20

COMMIT:Updated site at revision 998a55f

TREE:tree e4e8ee5f49febb2e7f336b6745a8ce0b9aec07c5 ------
TIME:01/09/2018 13:55:45

COMMIT:Docker image for testing

Contains all released versioned and the current version (from the
current source tree). The image only gets built if the docker maven
profile is enabled:

```
mvn package -Pdocker
```

Supervisord is used to start and stop bookkeeper. Each version has its
own supervisord config. The same journal and ledger directories are
used for all versions. Logs are written to per version log files in
/var/log/bookkeeper.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #959 from ivankelly/all-version-docker

TREE:tree 49ae86d5de666cc1bb6e71548a5c3e0d69bbdce0 ------
TIME:01/09/2018 13:49:40

COMMIT:ISSUE #897: un-bind zookeeper from bookkeeper admin

Descriptions of the changes in this PR:
- remove zookeeper from LedgerLayout to make LedgerLayout as a pure layout object,
- add LayoutManager, move zookeeper related utils into ZKLayoutManager for storing/reading/delete layout from zookeeper,
- unbind zookeeper from LedgerManagerFactory, use LayoutManager instead,
- unbind zookeeper from bookkeeperadmin.format,
- fix compile and test errors.

Master Issue: #897

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #936 from zhaijack/issue_897, closes #897

TREE:tree 5fba56f6949c2a9f1c5b183f3e59e9b39b1daebf ------
TIME:01/09/2018 13:46:51

COMMIT:Add descriptive message for TooManyRequestsException

After upgrading from 4.5 to 4.6 I found a lot of "Unexpected condition" in some benchmarks.

TooManyRequestsException is a new error introduced in 4.6, there is not description, so the default description is "Unexpected condition", without a debugger it is not possible to understand the cause of the error.

Author: Enrico Olivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #921 from eolivelli/toomanyrequests-message

(cherry picked from commit 52f511e1a5cbd136e48528e5ed66630250593198)
Signed-off-by: Enrico Olivelli <eolivelli@apache.org>

TREE:tree e23d5e3b4615ba23f5111cad9b546f03fc252cfb ------
TIME:01/09/2018 10:58:35

COMMIT:Add descriptive message for TooManyRequestsException

After upgrading from 4.5 to 4.6 I found a lot of "Unexpected condition" in some benchmarks.

TooManyRequestsException is a new error introduced in 4.6, there is not description, so the default description is "Unexpected condition", without a debugger it is not possible to understand the cause of the error.

Author: Enrico Olivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #921 from eolivelli/toomanyrequests-message

TREE:tree dcdf21826cd7eb24eff6de700a5e888e4d967bdf ------
TIME:01/09/2018 10:58:35

COMMIT:BookieProtoEncoding: use retainedSlice() to reduce garbage

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #940 from athanatos/forupstream/requestprocessorfixes/3

TREE:tree f45ae89aeca890137fcddafbffa80b413513a1c9 ------
TIME:01/09/2018 01:10:45

COMMIT:Refactor FileInfo locking and refcounting out IndexPersistenceMgr

There is a number of bugs in index persistence mgr related to how
refcounts are handled and how FileInfos are freed, due to the locking
mechanism. These can result in the fencing bit being lost in ledgers,
which is a serious issue. They also cause flakes in
IndexPersistenceMgrTest#testEvictFileInfoWhenUnderlyingFileExists.

For details see the discussion at:
https://github.com/apache/bookkeeper/pull/513/files/8075b0#r156676238

There are two key problems.

1. FileInfos are flushed asynchronously on eviction. If another thread
tries to read the FileInfo after the flush has been scheduled, but
before it runs, it will read stale date (and we'll possibly lose the
fence bit).
2. FileInfos can be closed while it is still references in the
IndexPersistenceMgr. This means that it can be fenced, but this will
very be flushed to disk because the FileInfo is already closed.

The patch solves this by moving FileInfo locking and refcount into a
separate class, FileInfoBackingCache. When either the write cache or
read cache load a file info, it tries to load it from this backing
cache. All writes to the the backing cache are done under a write
lock. This class also takes care of reference counting. It hands out
CachedFileInfo objects, which will be flushed to disk when all
references are released.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #913 from ivankelly/index-persist-lock

TREE:tree 81d7cbe7ebc57a7084c1288a7916a0c7b809bbcd ------
TIME:01/08/2018 22:18:39

COMMIT:ISSUE #326: Replace observer/observable with a simplified watcher/watchable implementation

Descriptions of the changes in this PR:

- long poll only need one-time notification on lac updates
- replace observer/observable with a simplified watcher/watchable implementation. watchers are removed after they are fired.
- add `RecycableHashSet` for `Watchable` keeping the list of watchers
- object pooling on `Watchable` and `LastAddConfirmedUpdateNotification`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #838 from sijie/rxjava, closes #326

TREE:tree 82925dc4527b1a345e039cf8ec391af93bf4cc33 ------
TIME:12/15/2017 09:43:44

COMMIT:BookieRequestProcessor: shutdown the longPollThreadPool as well

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #938 from athanatos/forupstream/requestprocessorfixes/1

TREE:tree f3410e5243ad6e38ed4d2b09e885a5dfd0a973ee ------
TIME:01/05/2018 10:10:44

COMMIT:ISSUE #954: dir_*_usage stats are always 0

due to mismatch between the way they are initialized in `LedgerDirsManager` and
the way the `diskUsages` is populated subsequently in `LedgerDirsMonitor`

Decisions potentially worth some attention:
- stat names are kept `dir_{dir}_usage` while the actual dirs being checked have been changed to `{dir}/current`;
- the stats aren't being updated if the bookie is in a readonly mode -- uncovered while testing, not sure if it's worth addressing at all, kept the fix minimalistic for now.

(bug W-4594204)

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #957 from pasha-kuznetsov/dir-usage-stats, closes #954

TREE:tree eccc1e389956480820a27121b781b27f868d3efe ------
TIME:01/07/2018 06:34:46

COMMIT:BookieProtoEncoding: use retainedSlice() to reduce garbage

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #940 from athanatos/forupstream/requestprocessorfixes/3

TREE:tree 13ccfe54c2810b3e718482e0702a5452f9dc9f0e ------
TIME:01/09/2018 01:10:45

COMMIT:ISSUE #947: ZK configs for LocalBookkeeper

Descriptions of the changes in this PR:

Master Issue: #947

- make ZK's data directory configurable for local bookie
- Localbookie to use ledgersrootpath from conf file

e032218a910113b0e4de561a76da8bdf61ba3db7
(bug W-2887104) make ZK's data directory configurable for local bookie

Author: Andrey Yegorov <ayegorovsalesforce.com>
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #948 from reddycharan/localbookkeeperzkfixes, closes #947

TREE:tree 0b5700be0d42b5ab0b35bc88e937b384ec65931e ------
TIME:01/09/2018 01:09:42

COMMIT:ISSUE280: Add StateManager to manage Bookie's state, and use it to turn bookie into readonly when sortedLedgerStorage failed to flush data

Descriptions of the changes in this PR:

Add SortedLedgerStorageListener to implement, and add a test case to verify it.

Master Issue: #280

Author: Arvin <arvindevel@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>

This closes #873 from ArvinDevel/issue280

TREE:tree f1af9980c5c378d2dd05d7e3074ac168aa51ccad ------
TIME:01/09/2018 00:56:40

COMMIT:Refactor FileInfo locking and refcounting out IndexPersistenceMgr

There is a number of bugs in index persistence mgr related to how
refcounts are handled and how FileInfos are freed, due to the locking
mechanism. These can result in the fencing bit being lost in ledgers,
which is a serious issue. They also cause flakes in
IndexPersistenceMgrTest#testEvictFileInfoWhenUnderlyingFileExists.

For details see the discussion at:
https://github.com/apache/bookkeeper/pull/513/files/8075b0#r156676238

There are two key problems.

1. FileInfos are flushed asynchronously on eviction. If another thread
tries to read the FileInfo after the flush has been scheduled, but
before it runs, it will read stale date (and we'll possibly lose the
fence bit).
2. FileInfos can be closed while it is still references in the
IndexPersistenceMgr. This means that it can be fenced, but this will
very be flushed to disk because the FileInfo is already closed.

The patch solves this by moving FileInfo locking and refcount into a
separate class, FileInfoBackingCache. When either the write cache or
read cache load a file info, it tries to load it from this backing
cache. All writes to the the backing cache are done under a write
lock. This class also takes care of reference counting. It hands out
CachedFileInfo objects, which will be flushed to disk when all
references are released.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #913 from ivankelly/index-persist-lock

TREE:tree 8bfa0a0e211a15009776c850a0277be3e88f64a6 ------
TIME:01/08/2018 22:18:39

COMMIT:Exclude travis log for apache-rat:check

TREE:tree 1824c602b0954afd8c658d1c4a4b4cc62243712b ------
TIME:01/08/2018 12:44:18

COMMIT:Enable apache-rat:check

TREE:tree 1308d8b08c0d19d80b836b192ecbc5a2b220c2c6 ------
TIME:01/08/2018 12:39:47

COMMIT:Remove duplicated matrix section

TREE:tree 69f548fb228a0c8f3e6cf89990cce4b29587c7e6 ------
TIME:01/08/2018 12:34:50

COMMIT:Enable travis ci

TREE:tree 801f088402daf200d992dd3a70f989c0fe69cce5 ------
TIME:01/08/2018 12:33:32

COMMIT:Add LICENSE file

TREE:tree c037f6a24e45ee3955945edaf3d01b8ae9430341 ------
TIME:01/08/2018 11:43:20

COMMIT:Move api classes to api module

TREE:tree 5e7c23fe7fead13afabfaed5dc1501e17899b592 ------
TIME:01/08/2018 11:31:56

COMMIT:Split the statestore module into api and impl

TREE:tree 31faf22259c3f6c869301d8ba0347b21e3c3194b ------
TIME:01/08/2018 10:47:42

COMMIT:Incremental checkpoint on rocksdb

- introduce checkpoint manager
- implement rocksdb checkpoint and restore tasks
- provide a filesystem based checkpoint manager

TREE:tree b97cd4be4387d3f60e75c9f931cca2c1dc661831 ------
TIME:01/08/2018 10:24:14

COMMIT:Fix compilation issue after moved statestore out of distributedlog repo

TREE:tree 509aa21b0c1d115d6b110816a3239596dea56f73 ------
TIME:01/08/2018 10:23:34

COMMIT:Move the module from `distributedlog-io/statestore` to root module

TREE:tree 7437dc1d3a6440de54332b3b82f7dec8a973a12e ------
TIME:01/08/2018 05:09:28

COMMIT:Introduce StateStores and MVCCStores as factory for supplying stores

TREE:tree dc67bc2d1f4a893378be6ead776f371388a5c5e3 ------
TIME:11/02/2017 00:30:38

COMMIT:Implement cas shortcuts in mvcc store

- put, putIfAbsent
- delete, delete(k, v), deleteRange()
- cas put and delete based on version: vPut, vDelete
- cas put and delete based on revision: rPut, rDelete
- get and range

TREE:tree 87321c0bf473effa7db2dd5dcb50c2af043e3477 ------
TIME:11/01/2017 23:55:22

COMMIT:Return the right revision for results

TREE:tree e5cb7af1f9a3542f7f5156d181362d45c128bf92 ------
TIME:11/01/2017 09:56:23

COMMIT:Make keys optional for range operations and make range operations correctly handle head and tail ranges

TREE:tree 8f31690f2366b713e25b8dc7cbf6cbfd77b0d3c9 ------
TIME:11/01/2017 09:38:22

COMMIT:Implement txn operation in local mvcc store

TREE:tree c0a2612cb8bd4fc98e58c1246f2224f8e8253f7d ------
TIME:11/01/2017 07:58:57

COMMIT:Implement delete op in local mvcc store

TREE:tree 26de31cc961c845ecf4ceadc537fbabfdc1e7e54 ------
TIME:11/01/2017 01:45:17

COMMIT:Implement MVCC Async Store using local rocksdb and distributedlog stream

TREE:tree e5978cbd51d7ec9ec9f8e243b42db8a02d76cc05 ------
TIME:10/31/2017 09:45:07

COMMIT:Add protobuf definition for put/delete/txn request

TREE:tree 8060696d72f5656bbff4bb888b3e5a5b67bc7eaa ------
TIME:10/30/2017 07:35:43

COMMIT:Make localStateStoreDir, stream and ioExecutor optional

TREE:tree d4ec17a8a9bf23f8a529318f9316fd0f782fffd1 ------
TIME:10/30/2017 06:30:16

COMMIT:Implement put and range operation in mvcc store

TREE:tree 879c9914d8ca3da848173db2b15c090951a378ed ------
TIME:10/30/2017 04:51:28

COMMIT:Implement Range and Put Operation

TREE:tree 87f053076868b9711fdf36844d5464fd34a5da9e ------
TIME:10/27/2017 10:30:25

COMMIT:address compilation issue with @FreeBuilder

TREE:tree 21bd1f822ed4b61e41255f6a32e7aa16c4d64c04 ------
TIME:10/27/2017 12:04:27

COMMIT:Implement Record Factory

TREE:tree ccbdb21819a190fe5f7a955df45b01d36e5caa03 ------
TIME:10/27/2017 10:28:32

COMMIT:Add internal structure for mvcc record

TREE:tree d3556daaf2bee9cf20176091f1b9f751b6b6b2e5 ------
TIME:10/27/2017 10:29:23

COMMIT:Implement op and result

TREE:tree ef3d776b76f855a2490a09a01a6ab2c806dce265 ------
TIME:10/27/2017 10:27:47

COMMIT:Reorganize builder and op

TREE:tree 0fe2f6034a21773741dff6115ef3905e41da630e ------
TIME:10/27/2017 11:26:12

COMMIT:Add javadoc and annotation, fix checkstyle

TREE:tree 340c67095a03a034d7a4c105b1dea7dc8661b879 ------
TIME:10/27/2017 11:10:33

COMMIT:Make all interfaces

TREE:tree eeb0901bceab476880c6777b7c719bdb6a13da9a ------
TIME:10/27/2017 10:25:16

COMMIT:Async and Sync MVCC Store

TREE:tree e68275e08ce24c7cb65592899bdbdc284759ce11 ------
TIME:10/26/2017 23:43:22

COMMIT:State Store: Add MVCC Store Interface

TREE:tree 540b94a07101751e9f7ba05a8e4e57c63ec52070 ------
TIME:10/26/2017 12:08:45

COMMIT:Fix checkstyle and findbugs errors

TREE:tree 4e0ff2dac176ccf38f44580ac047ed5861e6275b ------
TIME:10/27/2017 10:50:31

COMMIT:State Store: Define the k/v interface

TREE:tree 87f94ce05601358d4c29e736aa488cbf23479330 ------
TIME:10/26/2017 02:23:13

COMMIT:update poms to 4.6.1-SNAPSHOT (#958)

Descriptions of the changes in this PR:

- Fix pom versions in branch-4.6, version should be 4.6.1-SNAPSHOT and not 4.6.0 as we already released 4.6.0

- fix website configuration, to set 4.6.1-SNAPSHOT as "latest release".

Author: Enrico Olivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>, Jia Zhai <None>

TREE:tree 9a41cdb0d100264fc5bc27ee675143a39e043517 ------
TIME:01/08/2018 02:04:57

COMMIT:Introduce MockClock and MockExecutorController to improve timer-based testing

Descriptions of the changes in this PR:

- introduce MockClock and MockExecutorController to control time advancing to trigger execution on tasks
- convert LedgerDirsMonitor from using Thread to use ScheduledExecutorService (moved the logic in `run` method to `check` without code changes)
- change TestLedgerDirsManager to use MockClock and MockExecutorController to remove the usage of `Thread.sleep`

Master Issue:  #943

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #944 from sijie/mock_scheduler

TREE:tree ad1541dc332f4720c858a377fd50dcfc98ae2c78 ------
TIME:01/07/2018 07:21:52

COMMIT:ISSUE #935 ISSUE #915: Part 3 - Make circe-checksum module work for both java 8 and java 9

Descriptions of the changes in this PR:

    - switch from jmockit to mockito, and from testng to junit. make testing and mocking framework consistent across modules.
    - skip `-Werror` check in circe-checksum since `finalize` is deprecated at java 9
    - change CRC32CDigestManager to use `circe-checksum` module
    - fix shading to include `circe-checksum`

This change is based #917 . Gitsha 73049f8 contains the changes to make circe-checksum module work for both java8 and java9.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #937 from sijie/fix_pulsar_checksum, closes #935, closes #915

TREE:tree f86be428a26c40ed248fcbf8306687af35ce47e4 ------
TIME:01/07/2018 07:15:29

COMMIT:Issue 915: Part 2 - Add crc32c integer/long checksum utils under `com.scurrilous.circe.checksum` (#917)

This is the part 2 change of #915. It is based on #916, adding crc32c int/long checksum util classes under com.scurrilous.circe.checksum. It also fixes a incremental checksum issue on long crc32c. I added bunch of test cases to ensure the both long/int crc32 checksum is correct on incremental cases.

TREE:tree faf10a10c48c54ac1a79c71006d1c8228e062c5e ------
TIME:01/07/2018 06:58:30

COMMIT:ISSUE #915: Part 1 - Copy pulsar-checksum module as circe-checksum

Descriptions of the changes in this PR:

- this change copies the files under `com.scurrilous.circe` in pulsar-checksum module into bookkeeper as `circe-checksum`.
- this change doesn't copy files under `org.apache.pulsar` except NativeUtils. will have a subsequent change to add it.
- Move NativeUtils to `com.scurrilous.circe.utils`.
- Update notice files to respect to Trevor Robinson's change

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #916 from sijie/copy_pulsar_checksum, closes #915

TREE:tree 11ad72884fd8e662c17fcd81df9b05f06530e47d ------
TIME:01/07/2018 06:45:53

COMMIT:ISSUE #952: Split the multiple-jdk-versions ci jobs into two

Descriptions of the changes in this PR:

*Problem*

When using a matrix job to define a CI job running on both java 9 and java 8, the workspace file path will be added with "jdk name" (e.g. "JDK 1.8 latest" and "JDK 9 latest"). This will cause file paths contain spaces, and fail the builds.

for example, #879 #880 is one of the examples. #937 can't pass ci because g++ fails when the file path contains spaces.

*Solution*

Splitting the matrix job into two separate jobs suffixed with "java8" and "java9", so it won't contains any space in workspace.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #953 from sijie/separate_jdk_cis, closes #952

TREE:tree ef080ee00a45667edef2c6a19c0cedd2574297a6 ------
TIME:01/07/2018 06:37:08

COMMIT:ISSUE #954: dir_*_usage stats are always 0

due to mismatch between the way they are initialized in `LedgerDirsManager` and
the way the `diskUsages` is populated subsequently in `LedgerDirsMonitor`

Decisions potentially worth some attention:
- stat names are kept `dir_{dir}_usage` while the actual dirs being checked have been changed to `{dir}/current`;
- the stats aren't being updated if the bookie is in a readonly mode -- uncovered while testing, not sure if it's worth addressing at all, kept the fix minimalistic for now.

(bug W-4594204)

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #957 from pasha-kuznetsov/dir-usage-stats, closes #954

TREE:tree 1536095ef614e5d0196f1ea6e6eb35f0425d2952 ------
TIME:01/07/2018 06:34:46

COMMIT:ISSUE #950: EntryLogger.extractEntryLogMetadataByScanning: fix check

0 is a valid ledger id. Seems to be causing
test2RWsShouldCompeteForReplicationOf2FragmentsAndCompleteReplication to
fail in cases where the gc runs before the recovery reads happen. The gc
winds up believing the entry log to be empty and deletes it erroneously.

Introduced in 143bd1952851ac70ace9d16c3708ae30dad2a0aa.

(bug W-4596080)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #951 from athanatos/forupstream/issue-950, closes #950

TREE:tree e8e5e130abcc1c2e0219325c657bb6fcf81da1bf ------
TIME:01/06/2018 00:22:15

COMMIT:ISSUE #877: add verifier.BookkeeperVerifier

Plays and verifies a non-determinstic read/write stream against a
bookkeeper cluster.

Master Issue: #877

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #890 from athanatos/forupstream/issue-877, closes #877

TREE:tree 7f81491169d18ac33bd95b027218fb8bacc5ddd7 ------
TIME:01/05/2018 20:27:53

COMMIT:BookieNettyServer: add contextHandler to the local transport pipeline

Left off of 8e0bd2c3d81b522e97434d8646915f36422a104b.  In fact,
authentication is already enabled on LocalTransport.  This extra line is
needed for the machinery which allows auth plugins to access ssl state.
Currently, the only plugin which uses that machinery is in TestTLS.
Adds test cases to validate that functionality with Local Transport
enabled.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #941 from athanatos/forupstream/requestprocessorfixes/4

TREE:tree 91964b6673a973a7ddf6aaf390b08c24134274ab ------
TIME:01/05/2018 20:23:24

COMMIT:Updated site at revision 477ff2b

TREE:tree 3760aac84f68d5e2a6f616c8726a5ad68db63541 ------
TIME:01/05/2018 10:28:09

COMMIT:ISSUE #931,#907: Add option to track task execution time

Fixes a bug in OrderedScheduler introduced in
e33ec10aa400f32c2e0278c15ea80a0f624e5919 which failed to track execution
time with some calls and adds an option to enable it in the bookie.  Also
fixes a bug with task_queued duration.

Add a simple mock for remembering stats long enough to verify that
counters are actually used and sensible in unit tests and bake it into
BookKeeperClusterTestCase so that we can write tests to ensure that the
stats are actually counted and make sense.  Use said mock to add simple
tests for top level read and write stats validating this fix.

(bug W-4276826)
(bug W-4268290)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #932 from athanatos/forupstream/issue-931, closes #931, closes #907

TREE:tree 17048a602878e5154f0c72d8ab7dab4751b919a6 ------
TIME:01/05/2018 10:13:17

COMMIT:ISSUE #931,#907: Add option to track task execution time

Fixes a bug in OrderedScheduler introduced in
e33ec10aa400f32c2e0278c15ea80a0f624e5919 which failed to track execution
time with some calls and adds an option to enable it in the bookie.  Also
fixes a bug with task_queued duration.

Add a simple mock for remembering stats long enough to verify that
counters are actually used and sensible in unit tests and bake it into
BookKeeperClusterTestCase so that we can write tests to ensure that the
stats are actually counted and make sense.  Use said mock to add simple
tests for top level read and write stats validating this fix.

(bug W-4276826)
(bug W-4268290)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #932 from athanatos/forupstream/issue-931, closes #931, closes #907

TREE:tree 5b65f745bf72b33e4eb95592d43d1119c5a37b44 ------
TIME:01/05/2018 10:13:17

COMMIT:BookieRequestProcessor: shutdown the longPollThreadPool as well

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #938 from athanatos/forupstream/requestprocessorfixes/1

TREE:tree e79d5311452897421c482bc0262583312532b414 ------
TIME:01/05/2018 10:10:44

COMMIT:Updated site at revision 2fbb291

TREE:tree 0a188602a29800f90b2eb3403a1a575ca8b65da6 ------
TIME:01/02/2018 09:35:38

COMMIT:ISSUE #590 (@bug W-4556980@) Reduce excessive CPU usage on client side: add crc32c

…2c with SSE processor instruction support, benchmark to make sure it is better than crc32

Descriptions of the changes in this PR:

CRC32C for bookkeeper

Master Issue: #590

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #856 from dlg99/feature/crc32c, closes #590

TREE:tree ae63c532d6a793b4e7d8a3a8fb85aa9d9cbefe0e ------
TIME:01/02/2018 09:26:31

COMMIT:Issue 922: changes to shading bookkeeper-server jar for branch-4.6 (#929)

Descriptions of the changes in this PR:

**Problem:**

`shadedArtifactAttached` was introduced in 4.6.0 to generate plain and shaded artifact for `bookkeeper-server`. Because for projects (e.g. distributedlog) that would use same protobuf and guava version as bookkeeper, they will use the plain artifact (to avoid shading protobuf/guava multiple times). However there are a few problems with that:

1) bookkeeper-common is not included in the shading include set.
2) `shadedArtifactAttached` only generate a shaded artifact (with relocated classes), but doesn't generate a dependency-reduced pom file. so you have to manually exclude relocated dependencies.

**Solutions:**

- for shaded artifact of `bookkeeper-server`, include all the bookkeeper submodules that bookkeeper-server depends on. so the shaded artifact includes all the classes that need to be relocated.
- introduce a `shaded` module for keeping new shaded libraries. Currently `bookkeeper-server-shaded` is a shaded module of `bookkeeper-server`, while `bookkeeper-server-tests-shaded` is a shaded moulde of the tests jar of `bookkeeper-server`.
- update the client api documentation about the instructions on how to use shaded artifact of `bookkeeper-server` and the new shaded module `bookkeeper-server-shaded`.
- add test cases to verify the shaded artifact and the new shaded modules generate the right artifacts.

**This change doesn't address:**

Currently both client and server are bundled in one `bookkeeper-server`. this change will not introduce any shaded client-only jar. that would be deferred until we split `bookkeeper-server` module.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #928 from sijie/fix_shading, closes #922

This closes #922 

Signed-off-by: Jia Zhai <zhaijia@apache.org>

* change 4.7.0 into 4.6.0

TREE:tree a64f63e23cf8e939bf7bbadbd91b290ba29f5fba ------
TIME:01/02/2018 09:02:42

COMMIT:Updated site at revision 1ed7891

TREE:tree 258899f8d6569c9a02a5aa213b69ccaff05aff5c ------
TIME:12/30/2017 04:01:34

COMMIT:ISSUE #922: changes to shading bookkeeper-server jar

Descriptions of the changes in this PR:

**Problem:**

`shadedArtifactAttached` was introduced in 4.6.0 to generate plain and shaded artifact for `bookkeeper-server`. Because for projects (e.g. distributedlog) that would use same protobuf and guava version as bookkeeper, they will use the plain artifact (to avoid shading protobuf/guava multiple times). However there are a few problems with that:

1) bookkeeper-common is not included in the shading include set.
2) `shadedArtifactAttached` only generate a shaded artifact (with relocated classes), but doesn't generate a dependency-reduced pom file. so you have to manually exclude relocated dependencies.

**Solutions:**

- for shaded artifact of `bookkeeper-server`, include all the bookkeeper submodules that bookkeeper-server depends on. so the shaded artifact includes all the classes that need to be relocated.
- introduce a `shaded` module for keeping new shaded libraries. Currently `bookkeeper-server-shaded` is a shaded module of `bookkeeper-server`, while `bookkeeper-server-tests-shaded` is a shaded moulde of the tests jar of `bookkeeper-server`.
- update the client api documentation about the instructions on how to use shaded artifact of `bookkeeper-server` and the new shaded module `bookkeeper-server-shaded`.
- add test cases to verify the shaded artifact and the new shaded modules generate the right artifacts.

**This change doesn't address:**

Currently both client and server are bundled in one `bookkeeper-server`. this change will not introduce any shaded client-only jar. that would be deferred until we split `bookkeeper-server` module.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #928 from sijie/fix_shading, closes #922

TREE:tree 635cef47ce593702df4ed5ed36641ab3f79e7676 ------
TIME:12/30/2017 03:52:35

COMMIT:Updated site at revision 1f8b26d

TREE:tree 599278db4b734a9242e797c4613c7f1954906399 ------
TIME:12/27/2017 07:56:19

COMMIT:ISSUE #870: ScanAndCompareGarbageCollector: harden against LM bugs

The idea behind this patch is to make it more likely that more than one
LedgerManager bug would be required to erroneously believe a ledger to be
deleted.
1) Remove the special handling for the completely empty LM.  It's not
really a common case nor is it much of an optimization even when it
happens.
2) Add a config variable to cause the bookie to also check the
LedgerManager.readLedgerMetadata path before actually removing a ledger.
The implementations of readLedgerMetadata and the iterator are
sufficiently different that it seems worth it to have the option of
checking both to guard somewhat against a bug in either.

(bug W-4292747)
(bug W-3027938)
Signed-off-by: Samuel Just <sjustsalesforce.com>
Signed-off-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>

Master Issue: #870

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Arvin <None>, Sijie Guo <sijie@apache.org>

This closes #876 from athanatos/forupstream/issue-870, closes #870

TREE:tree aaf15dd0ea5ff74492c79167060490c23141c861 ------
TIME:12/27/2017 07:48:00

COMMIT:Updated site at revision 65f03e2

TREE:tree b7fbe900347b3230564ef767602c711da6e8bbce ------
TIME:12/27/2017 03:34:01

COMMIT:Add a section for 4.6.0 in releases.md

Descriptions of the changes in this PR:
- add a section for 4.6.0 in releases.md,
- add a check item for this in release_guide.md

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #920 from jiazhai/update_release_page

TREE:tree a94f58a1e29e0d4ceffe1973d99f4942b797cb99 ------
TIME:12/27/2017 03:25:43

COMMIT:Updated site at revision 80d9abb

TREE:tree 0416f40363746a0b91407902c111451eda336a20 ------
TIME:12/27/2017 01:59:53

COMMIT:Fix user email typo in release_guide

Descriptions of the changes in this PR:

Fix user email typo in release_guide

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #919 from jiazhai/fix_typo_in_releaseguide

TREE:tree 0fa518a34521c2084eeb3e1d9bdbff3a4263fdc6 ------
TIME:12/27/2017 01:50:02

COMMIT:ISSUE #697: bump version to 4.6.0 in Dockerfile

Descriptions of the changes in this PR:

Since 4.6.0 released, bump version to 4.6.0 in Dockerfile to use the latest release

Master Issue: #697

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #918 from jiazhai/issue-697, closes #697

TREE:tree 1604dd998d9a9ff28b292543913612aeddd02575 ------
TIME:12/26/2017 02:04:43

COMMIT:ISSUE #697: bump version to 4.6.0 in Dockerfile

Descriptions of the changes in this PR:

Since 4.6.0 released, bump version to 4.6.0 in Dockerfile to use the latest release

Master Issue: #697

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #918 from jiazhai/issue-697, closes #697

(cherry picked from commit 5648ba9da09b21bd0d13bc01b6665efb04a9b035)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree fdd5ef1d10ac223f0e866307169ffb347749a8ac ------
TIME:12/26/2017 02:04:43

COMMIT:ISSUE #697: bump version to 4.6.0 in Dockerfile

Descriptions of the changes in this PR:

Since 4.6.0 released, bump version to 4.6.0 in Dockerfile to use the latest release

Master Issue: #697

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #918 from jiazhai/issue-697, closes #697

TREE:tree e872e38635154f4e3f7931f185b777cfd9a3e532 ------
TIME:12/26/2017 02:04:43

COMMIT:ISSUE #895: print entrylog metadata

Descriptions of the changes in this PR:

- bookieshell command to print entrylog metadata

Master Issue: #895

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #896 from reddycharan/printentrylogmetadata, closes #895

TREE:tree facb853fa9b86f303cc922b2d2056fe9de58da26 ------
TIME:12/25/2017 14:16:13

COMMIT:ISSUE #893: more options for UpdateCookieCmd

Descriptions of the changes in this PR:

- add ListCookie Options to UpdateCookie command
- add DeleteCookie Option to UpdateCookie command
- move expandstorage command to UpdateCookie command as option,
since expandstorage is just a cookie update operation
- in listfilesondisc command use canonical path (full path)

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>
Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #894 from reddycharan/updatecookiecmd, closes #893

TREE:tree 50fb762262ad9804c3a9421af5995d4d62580823 ------
TIME:12/25/2017 14:08:17

COMMIT:Updated site at revision de9fe40

TREE:tree 180a009aed3f445c274f82d16e6dfbf1c1d6b2a6 ------
TIME:12/25/2017 13:53:06

COMMIT:ISSUE #904: short hostname for bookieid

Descriptions of the changes in this PR:

- provide useShortHostName config to use short hostName for bookieId
- corresponding testcases
- For BKShell commands print appropriate string representation (hostname and ipaddress)
and port number of bookies

Master Issue: #904

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>
Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #905 from reddycharan/shorthostname, closes #904

TREE:tree e36580b3f432a305aa82dc91a93f4c5fd0e8c74b ------
TIME:12/25/2017 13:43:23

COMMIT:AbstractZkLedgerManager: wrap Log.debug in an isDebugEnabled check

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #908 from athanatos/forupstream/small-fixes-1/zklm-debug

TREE:tree f7f44e2cce9059aa7dcd7aa33922346954cbf50b ------
TIME:12/22/2017 06:54:25

COMMIT:Journal: Fix journal write queue so it decrements properly.

(bug W-3169683)
Signed-off-by: Dustin <dcastorsalesforce.com>

Author: Dustin <dcastor@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #912 from athanatos/forupstream/small-fixes-1/journal

TREE:tree f239f8a5837e5f57f04accae3ff1ef454b9e5b86 ------
TIME:12/22/2017 06:53:02

COMMIT:DefaultSpeculativeRequestExecutionPolicy: fix logger instantiation

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #911 from athanatos/forupstream/small-fixes-1/logger

TREE:tree 7ae53033c96d3ca2161a9c4d1096a8f84c0b791f ------
TIME:12/22/2017 06:46:33

COMMIT:EntryLogTest,LedgerCacheTest: use correct tmp dir

These tests weren't overriding the journal dir and so weren't using
an IOUtils tmp dir for the journal.

(bug W-4267131)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #910 from athanatos/forupstream/small-fixes-1/tmpdir

TREE:tree b25a20c9be55ccd569437fe44dfafe91849e8b48 ------
TIME:12/22/2017 06:45:41

COMMIT:BookieProtoEncoding: log messages at TRACE rather than DEBUG

Logging them at debug tends to make logging at DEBUG level pretty
intractable, log them at TRACE instead.

(bug W-4166441)
Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #909 from athanatos/forupstream/small-fixes-1/trace

TREE:tree 9bd9ed53da675da2de9af6a6062dc1d7276487c0 ------
TIME:12/22/2017 06:44:51

COMMIT:Fix: fail create-ledger callback on ledgerId generation failure

### Motivation

Recently, we have seen that when bk-client tries to create-ledger and if bk-client lost the zk-connection then bk-client doesn't complete the createLedger-callback. We can see following exception when bk-client fails to generate ledgerId from zookeeper.
```
05:43:35.364 [main-EventThread] ERROR o.a.b.meta.ZkLedgerIdGenerator       - Could not generate new ledger id
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/idgen-long/HOB-0000000001/ID-
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:99) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.bookkeeper.meta.ZkLedgerIdGenerator$1.processResult(ZkLedgerIdGenerator.java:78) ~[bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.zookeeper.ZooKeeperClient$9$1.processResult(ZooKeeperClient.java:527) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:605) [zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965]
```

### Modifications

- Bk-client handles and completes ledger-request callback on ledgerId-generation failure.

Author: rdhabalia <rdhabalia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #900 from rdhabalia/create_ledger_ap

(cherry picked from commit b94773ae733e7aca0ff3b6807929ded026dfbe07)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 4107af19a63f527bba1e5c3944dc65f58c7ad8e6 ------
TIME:12/21/2017 19:43:47

COMMIT:Fix: fail create-ledger callback on ledgerId generation failure

### Motivation

Recently, we have seen that when bk-client tries to create-ledger and if bk-client lost the zk-connection then bk-client doesn't complete the createLedger-callback. We can see following exception when bk-client fails to generate ledgerId from zookeeper.
```
05:43:35.364 [main-EventThread] ERROR o.a.b.meta.ZkLedgerIdGenerator       - Could not generate new ledger id
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/idgen-long/HOB-0000000001/ID-
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:99) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.bookkeeper.meta.ZkLedgerIdGenerator$1.processResult(ZkLedgerIdGenerator.java:78) ~[bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.zookeeper.ZooKeeperClient$9$1.processResult(ZooKeeperClient.java:527) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:605) [zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965]
```

### Modifications

- Bk-client handles and completes ledger-request callback on ledgerId-generation failure.

Author: rdhabalia <rdhabalia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #900 from rdhabalia/create_ledger_ap

(cherry picked from commit b94773ae733e7aca0ff3b6807929ded026dfbe07)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree a4c0f51ab031cd621bec130df1e449640926146a ------
TIME:12/21/2017 19:43:47

COMMIT:Fix: fail create-ledger callback on ledgerId generation failure

### Motivation

Recently, we have seen that when bk-client tries to create-ledger and if bk-client lost the zk-connection then bk-client doesn't complete the createLedger-callback. We can see following exception when bk-client fails to generate ledgerId from zookeeper.
```
05:43:35.364 [main-EventThread] ERROR o.a.b.meta.ZkLedgerIdGenerator       - Could not generate new ledger id
org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /ledgers/idgen-long/HOB-0000000001/ID-
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:99) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.bookkeeper.meta.ZkLedgerIdGenerator$1.processResult(ZkLedgerIdGenerator.java:78) ~[bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.bookkeeper.zookeeper.ZooKeeperClient$9$1.processResult(ZooKeeperClient.java:527) [bookkeeper-server-4.3.1.56-yahoo.jar:4.3.1.56-yahoo]
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:605) [zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965]
```

### Modifications

- Bk-client handles and completes ledger-request callback on ledgerId-generation failure.

Author: rdhabalia <rdhabalia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #900 from rdhabalia/create_ledger_ap

TREE:tree 0fdcdb1f13b165f7c5ef55e6ef90ce8e5688f81d ------
TIME:12/21/2017 19:43:47

COMMIT:BookKeeperBuilderTest has recovery backwards

NoRecovery test was specifying withRecovery(true).
Recovery test was specifying withRecovery(false).

This patch swaps them to how they should be.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #899 from ivankelly/recovery-test-fix

TREE:tree 4005b55d7e8b1d542bce865e2d0a1e13586317bc ------
TIME:12/21/2017 03:10:28

COMMIT:Updated site at revision cfd0428

TREE:tree 8c17f490380f4425d181db023cc4bf2b65bbeccc ------
TIME:12/20/2017 03:47:57

COMMIT:ISSUE #865: LongHierarchicalLedgerManager: refactor to fix races

LongHierarchicalLedgerRangeIterator.initialize() could erroneously exit
with iteratorDone if the lexicographically first path in zk had fewer
than 4 levels.  This can happen for a few reasons including a case where
a client creating a ledger on that path crashed during the zk updates or
the iterator.hasNext() call simply raced with an in-progress node
creation or removal.  ScanAndCompareGarbageCollector is hasNext()
returns false will delete all ledgers on the bookie, so this is a fairly
serious bug.

Ruling out other such bugs was fairly dificult with the structure of the
code as written, so instead use a simpler recursive iterator design with
simpler pre/post conditions.

Also, surface KeeperException.NoNodeException from
ZkUtils.getChildrenInSingleNode so that we can actually handle it in
LHLM.

Master Issue: #865

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #875 from athanatos/forupstream/issue-865, closes #865

TREE:tree 476e154d301a309e103874601bf18dcc63a9f1d9 ------
TIME:12/20/2017 03:42:53

COMMIT:Add command line tool to manually recover ledgers

Descriptions of the changes in this PR:

This is a change ported from yahoo/bookkeeperf4957610.

Author: Sijie Guo <sijie@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #886 from sijie/manually_recover_ledgers

TREE:tree 325b8fd77778058b86418825ba83f9bc5bd97698 ------
TIME:12/20/2017 03:40:37

COMMIT:Misc LedgerHandle changes

Adds logging for new ensembles, a getCtime call, and a check for ReadOnlyLedgerHandle in initializeExplicitLacInterval.

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #892 from athanatos/forupstream/misc-ledgerhandle-changes

TREE:tree fe72af0598cf3e0a68c68aa2957fa3ffe8a94dd3 ------
TIME:12/20/2017 03:39:39

COMMIT:Updated site at revision 39bdfbc

TREE:tree 2bd68fa7ac47098712167af752a9aae27ec82d3c ------
TIME:12/19/2017 22:04:28

COMMIT:make replaceBookie() exclude ensemble bookie racks

Descriptions of the changes in this PR:

This is a change ported back from yahoo/bookkeeper0589d0d58d61364be1a897a5c1478d3109f4fc17. It excludes the ensemble bookie racks when replacing bookies. since there is already a new weight-based placement strategy introduced, so this change only applies when `weight-based` placement policy is not enabled.

This is a change contributed from Siddharth Boobna.

Author: Sijie Guo <sijie@apache.org>
Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #887 from sijie/use_bookie_address

TREE:tree 00de3a0748d34b9dddc51f680dca14ff5ba6fc62 ------
TIME:12/19/2017 21:55:26

COMMIT:Updated site at revision cc84042

TREE:tree 2a4dad76b427624fcc6e46c14a16d8761af941dd ------
TIME:12/19/2017 19:53:32

COMMIT:ISSUE #709: Add Slow Bookkeeper Servers to Placement Policy for read ordering

Descriptions of the changes in this PR:

Maintain a list of slow bookkeeper hosts, which are tried only after readonly bookkeeper hosts are tried. Bookkeeper hosts can be categorized as "slow" when a speculative timeout occurs on that bookkeeper host.

Master Issue:: 709

Author: Philip Su <psu@twitter.com>
Author: Sijie Guo <sijie@apache.org>
Author: philipsu522 <philip.su.522@gmail.com>
Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Yiming Zang <yzang2016@gmail.com>, Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #883 from philipsu522/psu/ISSUE-709-2, closes #709

TREE:tree a654032f204449a9d256aabc80924487ed9afb6c ------
TIME:12/19/2017 19:44:41

COMMIT:Updated site at revision e906922

TREE:tree e77b51a4210428ba6a97b6c376ff48eea2bc537e ------
TIME:12/19/2017 09:40:33

COMMIT:Updated site at revision e906922

TREE:tree c414361db8f2e22f51cb34e117383592faf807f5 ------
TIME:12/19/2017 09:40:26

COMMIT:Updated site at revision 4a4896c

TREE:tree e77b51a4210428ba6a97b6c376ff48eea2bc537e ------
TIME:12/19/2017 09:32:26

COMMIT:Updated site at revision 4a4896c

TREE:tree c414361db8f2e22f51cb34e117383592faf807f5 ------
TIME:12/19/2017 09:32:19

COMMIT:ISSUE #878: add .checkstyle file to apache-rat-plugin exclusion list

Descriptions of the changes in this PR:

- eclipse/checkstyle plugin autogenerates .checkstyle file in all the
projects/modules. So it has to be added to the exclusion list,
otherwise apache-rat:check (mvn clean apache-rat:check install
spotbugs:check) would fail because of these files with unknown
Apache License header.

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #882 from reddycharan/excludecheckstyle, closes #878

TREE:tree fee36cd167ded4381fc946acdfde5d091ebc7532 ------
TIME:12/19/2017 09:25:39

COMMIT:ISSUE #879: TestTLS fails when project path contains spaces

Descriptions of the changes in this PR:

Use `URI` rather than `URL`, so it won't use url-encoded path as the file path.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #880 from sijie/relative_path, closes #879

TREE:tree 998a02d4c74304f06e6b74bfa690fe8cf8046577 ------
TIME:12/19/2017 09:24:00

COMMIT:Updated site at revision 67d560f

TREE:tree e77b51a4210428ba6a97b6c376ff48eea2bc537e ------
TIME:12/19/2017 08:11:29

COMMIT:ISSUE #884: Upgrade powermock and mockito to support java 9

Descriptions of the changes in this PR:

powermock supports java9 at the new version (see powermock/powermock#783). this pull request upgrades the powermock and mockito versions, so we are able to run tests on java 9.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #885 from sijie/use_powermock2, closes #884

TREE:tree 494cae4144c374a0ae62631aa04e107741a98492 ------
TIME:12/19/2017 08:03:00

COMMIT:Updated site at revision 62de3cd

TREE:tree c414361db8f2e22f51cb34e117383592faf807f5 ------
TIME:12/18/2017 22:58:31

COMMIT:Updated site at revision 62de3cd

TREE:tree e77b51a4210428ba6a97b6c376ff48eea2bc537e ------
TIME:12/18/2017 22:58:22

COMMIT:Updated site at revision ff42188

TREE:tree fbc54c7debe69405cefbd139fd7755bc4210ce2c ------
TIME:12/18/2017 22:50:27

COMMIT:Updated site at revision ff42188

TREE:tree 136c7913d7f060e73fb9de32774e9349fe58f792 ------
TIME:12/18/2017 22:50:17

COMMIT:ISSUE #849: LedgerIdFormatter and EntryFormatter Config options

Descriptions of the changes in this PR:

- LedgerIdFormatter, so it can be used for configuring format of LedgerId (Long/hex/UUID) in input/output of BKShell command
- provide config options for both ledgeridformattet and entryformatter and java options for the same for BKShell commands
- enhance ReadLedgerEntriesCmd command to have options rather than as arguments
- fix checkstyle errors - "Redundant 'final' modifier." and for invalid variable name format

Author: cguttapalem <cguttapalem@salesforce.com>
Author: Charan Reddy Guttapalem <reddycharan18@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #864 from reddycharan/ledgerformat, closes #849

TREE:tree f22d00c26ea27958b418515f4ab3859bdb7cee86 ------
TIME:12/18/2017 22:44:19

COMMIT:Updated site at revision 301ba6f

TREE:tree 8d092ccec94bd4631954ce1182ddfc431207b1dd ------
TIME:12/18/2017 22:42:06

COMMIT:Add a testing guide

Descriptions of the changes in this PR:

Putting up a page for `testing` related information. This is the first attempt to document all CI related information.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #874 from sijie/testing_guide_doc

TREE:tree 18e324a91f93ac9f9b38da1e3c59a2a24b3ef4c7 ------
TIME:12/18/2017 22:41:33

COMMIT:Updated site at revision 48c8fcf

TREE:tree 629c149921f20654796ebbd976cd0cee7238026f ------
TIME:12/18/2017 22:33:59

COMMIT:Updated site at revision 48c8fcf

TREE:tree acf1859d7ea4fbe891bad24306612d7d9c71a838 ------
TIME:12/18/2017 22:33:52

COMMIT:ISSUE #863: BK client error messages need to be more descriptive

This improves logging of error codes as described in the issue #863. I only addressed the most glaring cases where bare `rc` was logged, by introducing a new logging utility which can be used as follows:
```
LOG.error("Closing ledger {} due to {}", ledgerId, BKException.codeLogger(rc));
```
producing messages similar to the following:

We can also discuss if the cases similar to the following should be brought in line with the above changes, which produces more information compared to the new approach, including stack trace, although not the original one:
```
if (rc != BKException.Code.OK) {
    LOG.error("BK error opening ledger: " + lId, BKException.create(rc)); // <------------------
    finalLedgerIterCb.processResult(rc, null, null);
    return;
}
```

P.S. Please also note that we (Salesforce) are starting to add commit tags simplifying our merge process, e.g. `(bug W-3843968)` -- please let us know if that is significant enough to be discussed separately.

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #868 from pasha-kuznetsov/error-code-logger, closes #863

TREE:tree 5bdfb8310a1f3ec44df679d04a50b52b1591fd82 ------
TIME:12/18/2017 22:26:22

COMMIT:Updated site at revision 5199fad

TREE:tree 629c149921f20654796ebbd976cd0cee7238026f ------
TIME:12/18/2017 22:25:55

COMMIT:Updated site at revision 5199fad

TREE:tree acf1859d7ea4fbe891bad24306612d7d9c71a838 ------
TIME:12/18/2017 22:25:48

COMMIT:Issue #328 - Add docker compose example file

This patch adds a docker-compose example file for helping new
users to use bookkeeper.

It runs by default an ensemble with 3 bookies and a client
application based in the following tutorial, but you can leverage docker
compose features to scale up the number of instances.

https://bookkeeper.apache.org/archives/docs/master/bookkeeperTutorial.html

Ref: Issue #328

Signed-off-by: Antonio Ojea <antonio.ojea.garciagmail.com>

Author: Antonio Ojea <antonio.ojea.garcia@gmail.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #871 from aojea/docker, closes #328

TREE:tree cebb1b98c16b2afb82b4bb79b9c7440cebdbacee ------
TIME:12/18/2017 22:17:37

COMMIT:add try-with-resources in coding_guide

Descriptions of the changes in this PR:

This is related to PR #845, and want to  add try-with-resources in coding_guide.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #872 from jiazhai/fix_doc

TREE:tree a2606fc3dfc3da993220dfa5a49ea57d65b7dccb ------
TIME:12/18/2017 22:16:50

COMMIT:Updated site at revision bd89cdf

TREE:tree 01fec251779a3d1a046e5525acf6c106bfec71cd ------
TIME:12/18/2017 03:07:26

COMMIT:Updated site at revision 2b7b24d

TREE:tree b0698eae2251305268e3830aa600b8b00880fae4 ------
TIME:12/18/2017 02:54:31

COMMIT:Updated site at revision 2b7b24d

TREE:tree 01fec251779a3d1a046e5525acf6c106bfec71cd ------
TIME:12/18/2017 02:54:17

COMMIT:DbLedgerStorage -- Added config options in bk_server.conf

Added commented config options with default values.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #860 from merlimat/db-storage-conf

TREE:tree 13a0a2d6e35ba23b5130f8a1ec973d47bb501be2 ------
TIME:12/18/2017 02:53:43

COMMIT:Manage all the jenkins jobs using jenkins-dsl

Descriptions of the changes in this PR:

- use jenkins-dsl to manage all the bookkeeper jobs
- the seed job will poll the files checked in under `.test-infra/jenkins` at master and automatically update other jenkins jobs
- this enforces all the jenkins jobs' changes should go through github reviews and allows everyone can make changes to jenkins jobs.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #866 from sijie/test_infra_jenkins_dsl

TREE:tree e254b8c64bca4640bc30ff9423524f97a44932ef ------
TIME:12/18/2017 02:45:33

COMMIT:Updated site at revision d1d6804

TREE:tree b0698eae2251305268e3830aa600b8b00880fae4 ------
TIME:12/16/2017 18:17:35

COMMIT:During journal replay, force to re-insert the master key in ledger storage

When the bookie crashes and restart, it will replay the entries from the journal. In the case of ledgers that were created, but their metadata was not flushed on disk, the ledger metadata might be lost.

This is more evident in `DbLedgerStorage`, since the ledger metadata is cached in memory and it's only inserted in the db at the checkpoint time, though it applies as well for `InterleavedLedgerStorage` where the ledger metadata was inserted in the cache but not fsynced on disk.

If the page cache content is gone, when replaying the journal content, the ledger will be tracked in memory but the bookie won't have the metadata on disk anymore.

Merging from yahoo branch: https://github.com/yahoo/bookkeeper/commit/d3626396ecf1a2b98c782bb30a7b9c00c75c6cdf

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #867 from merlimat/master

TREE:tree 37d5dcf23add1ca7499c5c49875de9c6a2524c78 ------
TIME:12/16/2017 18:05:01

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 9e426ddc02d308dfa39b01863a49e9ff68b8640a ------
TIME:12/16/2017 03:51:52

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree b293d163312c47bdef675a7ef0c4120411e13331 ------
TIME:12/16/2017 03:51:30

COMMIT:Updated site at revision 97c35e9

TREE:tree 01fec251779a3d1a046e5525acf6c106bfec71cd ------
TIME:12/16/2017 00:34:13

COMMIT:ISSUE #778: Make build pass using JDK9

Descriptions of the changes in this PR:

- make bookkeeper can be compiled with java 9
- add java9 to travis ci to make sure it can be built for both java8 and java9

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #857 from sijie/compile_with_java9, closes #778

TREE:tree f2d21337f1b209115466e096583cedda93622422 ------
TIME:12/15/2017 21:18:57

COMMIT:Add attribution for binary jars covered by New BSD License

This means a separate LICENSE file for server and all, as all pulls in
more stuff.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #854 from ivankelly/license-fix

TREE:tree 0914730c6c170e128153c87cb727f3f972d9cfb9 ------
TIME:12/15/2017 19:40:34

COMMIT:DbLedgerStorage -- Added bookie shell tools

Added BookieShell tools for DbLedgerStorage conversion operations:

 * `convert-to-db-storage` --> Convert interleaved indexes to db storage indexes
 * `convert-to-interleaved-storage` --> Convert back from db storage to interleaved storage indexes
 * `rebuild-db-ledger-locations-index` --> Rebuild the DbLedgerStorage index by scanning the entry log files.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #859 from merlimat/db-ledger-storage-itemized

TREE:tree 07d790e54e0ec84f31d91c17e04450552c3d2d0e ------
TIME:12/15/2017 20:54:06

COMMIT:Add attribution for binary jars covered by New BSD License

This means a separate LICENSE file for server and all, as all pulls in
more stuff.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #854 from ivankelly/license-fix

(cherry picked from commit f8279e39d363dff22aa92e49c33311fcf1c96e12)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 9e426ddc02d308dfa39b01863a49e9ff68b8640a ------
TIME:12/15/2017 19:40:34

COMMIT:Add attribution for binary jars covered by New BSD License

This means a separate LICENSE file for server and all, as all pulls in
more stuff.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #854 from ivankelly/license-fix

TREE:tree 9e426ddc02d308dfa39b01863a49e9ff68b8640a ------
TIME:12/15/2017 19:40:34

COMMIT:DbLedgerStorage -- Main implementation

`LedgerStorage` implementation that uses the EntryLogger mechanism but stores the indexes in a RocksDB database.

In addition, there are also a WriteCache and a ReadCache that are used to completely decouple the read & write paths.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #855 from merlimat/db-ledger-storage-impl

TREE:tree 3911f35918cd08bedbbb3d0088bbb2f399106a97 ------
TIME:12/15/2017 18:29:10

COMMIT:ISSUE #326: Replace observer/observable with a simplified watcher/watchable implementation

Descriptions of the changes in this PR:

- long poll only need one-time notification on lac updates
- replace observer/observable with a simplified watcher/watchable implementation. watchers are removed after they are fired.
- add `RecycableHashSet` for `Watchable` keeping the list of watchers
- object pooling on `Watchable` and `LastAddConfirmedUpdateNotification`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>

This closes #838 from sijie/rxjava, closes #326

TREE:tree 92f01bbd78e80565a87bc908ee01b2f2d842e5cf ------
TIME:12/15/2017 09:43:44

COMMIT:ISSUE #668: Use try-with-resources blocks whenever is possible

Use java7 try-with-resources blocks in order to have error prone code and more elegant

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #845 from pasha-kuznetsov/try-with-resources, closes #668

TREE:tree 8d68c05599867b91908b63f20faab13566965110 ------
TIME:12/15/2017 08:51:00

COMMIT:DbLedgerStorage -- Make some entrylogger methods accessibles

This changes are needed for `DbLedgerStorage` implementation to access some of the protected methods of the EntryLogger.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #844 from merlimat/db-ledger-storage-itemized and squashes the following commits:

b4d886ea [Matteo Merli] Removed timeout and fixed test
46652dd4 [Matteo Merli] DbLedgerStorage -- Make entrylogger read methods accessibles

TREE:tree c5b8dc4b7ca54227861e63fd36ffaa8585459e28 ------
TIME:12/14/2017 21:35:02

COMMIT:Race in PCBC connection if channel inactive before callback

There's a race in PCBC where if the channel is errored before the
connection callback occurs, the channel will hang around as a zombie
forever.

This caused a flake in
TestDisableEnsembleChange#testRetryFailureBookie, but the problem
itself could affect production code. This test hit it because it tries
to reconnect in a tight loop as a bookie is booting.

The error occurs because we only change state with channelInactive if
the channelInactive occurred on the channel that matches the currently
assigned this.channel. If the channel connects successfully, but
channelInactive occurs before the connect callback runs, the channel
will be closed, but the state will be transitioned to CONNECTED. No
more events will occur on the channel, so it'll hang around forever,
and all requests on the channel will timeout.

The fix is to check that the channel is active before assigning it to
this.channel and setting state to CONNECTED. If the channel is not
active at this point, then the else clause of this block will run
which closes the channel, and sets state to DISCONNECTED. In this
case, the next request will trigger a new connection attempt.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #827 from ivankelly/ensemble-flake

TREE:tree 925626dfc6c991d14f0813cd6fe5193d49187bf9 ------
TIME:12/11/2017 21:57:51

COMMIT:Fix flake in TestPerChannelBookieClient

Flake is in testRequestCompletesAfterDisconnectRace. It tests a race
between disconnection and making a request. The flake occurred because
when the disconnection happened, the request would be errorred out,
and this would add a callback to the ordered executor. The test was
shutting down the executor before the callback was actually run (it
may not even have been added in some cases), and this was causing the
request to never complete, failing the test.

The fix is to move the shutdown of the executor to after the assertion
that the request has completed.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #816 from ivankelly/pcbc-flake

TREE:tree e0401c3f59e3394ef325f5c14d51a9ddb7da30bb ------
TIME:12/06/2017 01:46:30

COMMIT:ISSUE #841: Unnecessary new Object[] {}, new String[] {} etc calls

This takes care of a few new Object[] {}, new String[] {} etc calls,
mostly leftovers from the older slf4j's LOG API which used to lack
the Object... "vararg" method overloads, making it easier to read
and maintain.

Author: Pasha Kuznetsov <pkuznetsov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #842 from pasha-kuznetsov/redundant-arrays, closes #841

TREE:tree efa1e4ab400df7b7661402b652ef66844bc4fe60 ------
TIME:12/14/2017 01:40:21

COMMIT:DbLedgerStorage -- ReadCache

Adds a `ReadCache` class to be used from LedgerStorage.

The read cache is used when doing read-ahead caching after reading one entry.

The idea is that entries for the same ledger as stored in order (for each flush cycle, eg: 1min). When reading 1 entry, we expect the client to read all subsequent entries. We can then skip the RocksDb `get()` to fetch the index of the entries, by just keep reading from the entryLog, and exploiting page cache and seqeuential reads. The entries are then added to this ReadCache, where they will looked when the request for next entry comes in.

This implementation is based on dividing the memory into multiple segments. Whenever the read cache is full, the oldest segment gets recycled and overwritten with new entries.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #843 from merlimat/read-cache

TREE:tree 9db935a3b2146be79a583e2fac95a01fc0f59b29 ------
TIME:12/14/2017 00:59:30

COMMIT:Updated site at revision 3e4ff0d

TREE:tree b0698eae2251305268e3830aa600b8b00880fae4 ------
TIME:12/14/2017 00:52:04

COMMIT:ISSUE #744: BP-18 introduce write flags

Introduce writeflags on the API and on protobuf files.
Client and server do not use these flags yet.

Author: eolivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #742 from eolivelli/bp14-writeflags, closes #744

TREE:tree 2253c235d36bb735024d632325e418994b6ea47a ------
TIME:12/14/2017 00:43:50

COMMIT:Updated site at revision 7c4e6c9

TREE:tree a3ad9c9e0534c39e28ea63a67cdeca13e77515da ------
TIME:12/13/2017 23:05:10

COMMIT:Updated site at revision aecf6da

TREE:tree ecf70731193632c6134aced5cb22632f6c42e000 ------
TIME:12/13/2017 22:57:02

COMMIT:ISSUE #741: Switch to Spotbugs

Moved from findbugs plugin to spotbugs.

Author: Matteo Minardi <matteo.minardi@diennea.com>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #834 from mino181295/ISSUE#741, closes #741

TREE:tree 377f1f9af505b892ea8c00b8df664dbb7f5ef664 ------
TIME:12/13/2017 22:54:19

COMMIT:Allow subclasses of AbstractConfiguration to use fluent style

And in doing so, get rid of ugly casts.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #835 from ivankelly/abstract-conf-generic

TREE:tree 467583c712ee3af00f70781f87253dbf2623a0da ------
TIME:12/13/2017 22:46:15

COMMIT:Fix Flaky CreateNewLogTest

Descriptions of the changes in this PR:

CreateNewLogTest becomes flaky after fixing #568 because preallocation can happen in the background. Changing the sequence of creating entry logger and entry log file injection to make the test sequence deterministic.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #836 from sijie/fix_createnewlog_test

TREE:tree fad52a77c66805ec7fe6ea7acba0ced13cf508a0 ------
TIME:12/13/2017 22:45:04

COMMIT:Fix FlakyTest TestRegionAwareEnsemblePlacementPolicy

Descriptions of the changes in this PR:

include all possible resolved hostnames into the static dns resolver for region aware testing.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #837 from sijie/fix_regionaware

TREE:tree ffe0113747885794f6b4338d166566dd7932cfa7 ------
TIME:12/13/2017 22:40:48

COMMIT:Fixed RocksDb storage options instantiation after library is loaded

In previous commit 8e6c1a2e76a, the initialization of some RocksDb option objects was done before the RocksDB JNI library was loaded, leading to exceptions.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #840 from merlimat/key-value-storage

TREE:tree 468b196f7ac752589c72134648408bab5f299750 ------
TIME:12/13/2017 21:18:44

COMMIT:Updated site at revision f1bee51

TREE:tree 0638b0c54e8337927b2c7563a99baa76846ecf17 ------
TIME:12/13/2017 10:00:21

COMMIT:DbLedgerStorage -- KeyValue storage interface with RocksDB implementation

Add an interface for a generic key-value storage local library, with the default implementation based on RocksDB.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #829 from merlimat/key-value-storage

TREE:tree 9ce8e9ca420c7456314adbaa1ba3a5eb34047f27 ------
TIME:12/13/2017 09:56:34

COMMIT:Updated site at revision 786da27

TREE:tree bd861528a637e76515aa27031cef9e780207b807 ------
TIME:12/13/2017 09:52:15

COMMIT:ISSUE #831: move zkServers and zkTimeout into AbstractCofiguration

Descriptions of the changes in this PR:

both ClientConfiguration and ServerConfiguration contain ZkServers and ZKTimeout, would like to move them into AbstractConfiguration.

Changes:
1, Regarding methods setZkServers/getZkServers/setZkTimeout/getZkTimeout,  remove them in ClientConfiguration and ServerConfiguration; added them in AbstractConfiguration;
2, fix usage of above methods in test cases;

Master Issue: #831

Author: Jia Zhai <zhaijia@apache.org>
Author: Sijie Guo <guosijie@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #833 from zhaijack/issue-831, closes #831

TREE:tree 84582df1557cbbe0cca9e01b8f2ff1961ff66dc1 ------
TIME:12/13/2017 09:51:42

COMMIT:DbLedgerStorage -- Write cache

1st part of DbLedgerStorage related changes.

This PR introduces a `WriteCache` class that is used to store entries before they get flushed on the entryLogs.

The key part is that it provides a way to iterate in order over the entries and it is is garbage-free at steady state.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #828 from merlimat/db-ledger-storage-itemized

TREE:tree 441ef6d98f7e5b8ff84211c2ec619bbc135bb8d9 ------
TIME:12/13/2017 09:47:17

COMMIT:Client times out requests in batch rather than individually

This patch is a squash of f59b597f, 00fc5cd2, 1658eb61 & 833dc307 from the yahoo-4.3 branch. The change removes the HashWheelTimer from PerChannelBookieClient and instead runs through all outstanding ops periodically, timing them out as necessary.

The motivation for this change is to reduce the number of objects created per add/read request. With HashWheelTimer a TimerTask needs to be added to the Timer, which allocates and returns a Timeout object. We had to be careful to cancel this timeout on success.

The new approach is simpler, doesn't require any allocation per request, and doesn't require any cancellation. Functionally the end result is the same - very slow requests are timed out.

The patch also makes some additions to the original changes (due to the codebase moving since it was originally written).
- PendingAddOps are changed to use the same mechanism for quorum timeouts.
- The checkTimeout method is moved to the PCBCPool so we can run the check on non-connected PCBC instances. This is necessary for TLS.

Author: Ivan Kelly <ivank@apache.org>
Author: Siddharth Boobna <sboobna@yahoo-inc.com>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #817 from ivankelly/yahoo-bp-9

TREE:tree 4ab8e33a46444dad36794f99a55535576a1de6c1 ------
TIME:12/13/2017 09:43:25

COMMIT:ISSUE #230: Enable checkstyle on the bookie tests

Descriptions of the changes in this PR:

With this change, checkstyle verification is enabled for the
entire bookkeeper-server package, and all packages use the same `suppressions.xml` file.

Master Issue: #230

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #830 from acoburn/checkstyle_test_bookie, closes #230

TREE:tree fdd96a4e6e83b668e12a6abb86d2eb085797828b ------
TIME:12/12/2017 13:21:42

COMMIT:Race in PCBC connection if channel inactive before callback

There's a race in PCBC where if the channel is errored before the
connection callback occurs, the channel will hang around as a zombie
forever.

This caused a flake in
TestDisableEnsembleChange#testRetryFailureBookie, but the problem
itself could affect production code. This test hit it because it tries
to reconnect in a tight loop as a bookie is booting.

The error occurs because we only change state with channelInactive if
the channelInactive occurred on the channel that matches the currently
assigned this.channel. If the channel connects successfully, but
channelInactive occurs before the connect callback runs, the channel
will be closed, but the state will be transitioned to CONNECTED. No
more events will occur on the channel, so it'll hang around forever,
and all requests on the channel will timeout.

The fix is to check that the channel is active before assigning it to
this.channel and setting state to CONNECTED. If the channel is not
active at this point, then the else clause of this block will run
which closes the channel, and sets state to DISCONNECTED. In this
case, the next request will trigger a new connection attempt.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #827 from ivankelly/ensemble-flake

TREE:tree a3972cbff4ad2d81a2606e558fbfaa3cbae27f75 ------
TIME:12/11/2017 21:57:51

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 77f5b36c87b1658414800d40e7982b6c0b868c33 ------
TIME:12/09/2017 11:19:11

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree 69735e7c4d5e2d5da5cb442106de8485bbd2d3c8 ------
TIME:12/09/2017 11:18:49

COMMIT:Updated site at revision f14be64

TREE:tree ead3fe2580e7515f4db84785c5e46e587b15fe02 ------
TIME:12/09/2017 10:11:07

COMMIT:ISSUE #818: add api changes in release notes of 4.6.0

Descriptions of the changes in this PR:
add changes of BookKeeper constructor and EnsemblePlacementPolicy in release notes of 4.6.0

Master Issue: #818

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #822 from jiazhai/issue-818, closes #818

(cherry picked from commit f14be643e9fdc4db39323bc98e2735cfb169e75e)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 77f5b36c87b1658414800d40e7982b6c0b868c33 ------
TIME:12/09/2017 09:38:57

COMMIT:ISSUE #818: add api changes in release notes of 4.6.0

Descriptions of the changes in this PR:
add changes of BookKeeper constructor and EnsemblePlacementPolicy in release notes of 4.6.0

Master Issue: #818

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #822 from jiazhai/issue-818, closes #818

TREE:tree 472cbfc3fc28045deca3c1c48f214a0432f80419 ------
TIME:12/09/2017 09:38:57

COMMIT:Fix NOTICE and LICENSE

Descriptions of the changes in this PR:

- combine the NOTICE, LICENSE files into one for both src and binary distribution.
- make a few dependencies as `provided`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #820 from sijie/fix_notice_license

(cherry picked from commit 5dd324f65fbec5fab2d43a0d14bdf53adb32f9b3)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 68f0023cd2f26efc3196864e46aa67b5b33a0883 ------
TIME:12/09/2017 09:34:32

COMMIT:Fix NOTICE and LICENSE

Descriptions of the changes in this PR:

- combine the NOTICE, LICENSE files into one for both src and binary distribution.
- make a few dependencies as `provided`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #820 from sijie/fix_notice_license

TREE:tree 18ea654c7f8633258012be002e5f1e09cdff6c85 ------
TIME:12/09/2017 09:34:32

COMMIT:ISSUE #230: Enable checkstyle on client tests

Descriptions of the changes in this PR:

This enables checkstyle verification on the client test
code in the bookkeeper-server module.

These changes are almost entirely related to whitespace, javadocs and import order.

Master Issue: #230

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #825 from acoburn/checkstyle_test_client, closes #230

TREE:tree befb92924da544b066377f8471d1d208a0398c0a ------
TIME:12/09/2017 03:59:00

COMMIT:Refactored EntryLogger Buffered channel

Porting https://github.com/yahoo/bookkeeper/commit/ecce14449b07e0b40434835bbc01d75d0a36880b from Yahoo branch.

Refactored entry logger to always use pooled `ByteBuf` when reading entries or scanning the log.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #824 from merlimat/entry-logger-refactor and squashes the following commits:

6ddb31d6 [Matteo Merli] Fix DoubleByteBuf readableBytes()
a6df2974 [Matteo Merli] Fixed padding length and journal test
bbe65eb8 [Matteo Merli] Removed BufferedReadChannel close since the buffer was not pooled anyway
c50f4683 [Matteo Merli] Added required changes to uses of BufferedChannel from Journal
6746d038 [Matteo Merli] Refactored EntryLogger Buffered channel

TREE:tree b8f0ffb1cf211dd529e9219bc3ca44ccb75c6a5f ------
TIME:12/09/2017 03:19:23

COMMIT:Use netty DefaultThreadFactory everywhere to take advantage of fast thread local access

Merging https://github.com/yahoo/bookkeeper/commit/38ff21ad8bbd8ac8ec8a4898ef9ecf473fea94b7 from Yahoo branch.

Netty has a special `FastThreadLocal` class that is used in many places (eg: when borrowing a buffer from a pool). The mechanism in which it works is that the thread has to be created from a particular thread factory to take advantage of it (it adds a couple of fields subclassing the `Thread` class).

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #823 from merlimat/thread-factory

TREE:tree d7d5a7e1d6e979f65bb4fb862f3a97f0dfafa5e1 ------
TIME:12/08/2017 01:46:02

COMMIT:ISSUE #230: Enable checkstyle on some test classes

Part of #230, this enables checkstyle verification on some
of the test code. This does not do checkstyle validation on
the client or bookie package test code.

Enabling checkstyle on the entire test codebase would result in a _very_ large PR. This is an attempt to break it up into smaller pieces. The changes here are almost exclusively related to whitespace, javadocs and import order.

One public change of note is in `replication.AuditorLedgerCheckerTest`: the `_testDelayedAuditOfLostBookies` method is changed to `testInnerDelayedAuditOfLostBookies`.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #819 from acoburn/checkstyle_test, closes #230

TREE:tree 00722fb8a60082c5119cf4f43cdb43769c1171c8 ------
TIME:12/08/2017 01:44:18

COMMIT:Updated site at revision 143bd19

TREE:tree 3d372be7e59a9e1b4fad832466084b6ffefd005c ------
TIME:12/07/2017 23:51:48

COMMIT:Use ConcurrentLongLongHashMap in EntryLogMetadata

Porting commits https://github.com/yahoo/bookkeeper/commit/74afc16d1c1e93739edf4a78801c5ccb6afd3883 and https://github.com/yahoo/bookkeeper/commit/eba3bbfbbaf58118c0c5736b56d3897a5928bc89 from Yahoo branch.

Currently the `EntryLogger` is keeping a `ConcurrentHashMap<Long, Long>` to keep track of amount of data stored in a single entry log file for each of the ledgers.

The amount of memory required is high because of the objects boxing. The `Long` used for key and value are 16 bytes each and the hash-map node will take another ~24 bytes.

Additionally, all these objects are created, stored for hours and then GCed, after being tenured.

By using `ConcurrentLongLongHashMap`, we eliminate the object boxing and the need for the "node" since it's a open hashmap. This helps reducing a lot the memory used by the bookie when storing a large amount of entries (54 --> 16 bytes).
Also since we store the items in `long[]`, this will not need objects and it will not affect GC.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #821 from merlimat/entrylog-metadata

TREE:tree 42dc004be0c5a73f31b184ba9dc43abdd922b3dc ------
TIME:12/07/2017 23:42:46

COMMIT:Updated site at revision a7991e5

TREE:tree eac9bc783b6a12b916dbc3f27c9999f3275e0a03 ------
TIME:12/06/2017 09:37:14

COMMIT:ISSUE #568: Refactor EntryLoggerAllocator to enable preallocation

Descriptions of the changes in this PR:

Enable 'entryLogFilePreallocationEnabled' which is  never be used.

Author: Arvin <arvindevel@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #814 from ArvinDevel/issue568, closes #568

TREE:tree 32e21b008c0af7eceacb3aca98f2f982d06ccb07 ------
TIME:12/06/2017 09:30:44

COMMIT:Recycle responses callbacks

A response callback is created each time we receive a response from a
server, which can result in a lot of garbage in the fast path.

This change pools the callbacks.

This change was originally 729bd2d0 in the yahoo-4.3 branch.

Author: Ivan Kelly <ivank@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #809 from ivankelly/yahoo-bp-7

TREE:tree 28b34a4677593b32dd38b60ab58564049811860c ------
TIME:12/06/2017 09:28:48

COMMIT:Updated site at revision 3abf2c7

TREE:tree 3d372be7e59a9e1b4fad832466084b6ffefd005c ------
TIME:12/06/2017 02:32:07

COMMIT:Updated site at revision b07732e

TREE:tree d85db2680ea7d4e268c6200aefb7021448e71810 ------
TIME:12/06/2017 02:23:48

COMMIT:BP-22: Separate closing ledgers from opening ledgers (#795)

State: Rejected
Reason: Rejected due to lack of agreement that the issues raised in the motivation are valid.

TREE:tree 0043dcb5a1a46d7fc3c84a6c8456aeae23b0654a ------
TIME:12/06/2017 02:18:37

COMMIT:Updated site at revision 1d6b550

TREE:tree 3a429e065b247df972ac380c09c87a9043ff0e6f ------
TIME:12/06/2017 02:15:35

COMMIT:BP-21:  New API close inconsistencies (#790)

State: Rejected
Reason: Rejected due to lack of agreement that the issues raised in the motivation are valid.

TREE:tree affa08a340e47b3975e6f592c5b96cdaa0b9a60c ------
TIME:12/06/2017 02:13:48

COMMIT:Handle unexpected throwable in Bookie V2 request processors

Merging from https://github.com/yahoo/bookkeeper/commit/c54eafbe

When getting any exception, the request processor for V2 protocol must make sure to get some response back to client. In the specific case, it was some NPE that was thrown and not handled properly.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #813 from merlimat/handle-throwable

TREE:tree b916b287eda2e72be4296ab8c9c12f85d5f8477d ------
TIME:12/06/2017 02:06:07

COMMIT:Updated site at revision b8dee21

TREE:tree 76c83209043c29390880b7e09007d9c63b9b5781 ------
TIME:12/06/2017 02:03:40

COMMIT:Update the BP workflow

Descriptions of the changes in this PR:

- incorporate the feedback from JV last week: allow people to use google doc for writing a BP. Google doc is great for collaboration in general.
- incorporate Ivan's comment on workflow #761  : how to handle failed BPs. The principle here is BPs are in general good ideas, we should keep those records for future references. so add an instruction on merging the failed BPs.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #810 from sijie/fix_bp_workflow

TREE:tree e01474e97496b171382feeeed9846082db5579cb ------
TIME:12/06/2017 01:53:13

COMMIT:ISSUE #805: some fix in release_guide.md

Descriptions of the changes in this PR:

during preparing release 4.6.0, there was some errors meet,
1,
`git tag -d ${VERSION} && git push apache :refs/tags/${VERSION}`
should be
`git tag -d release-${VERSION} && git push apache :refs/tags/release-${VERSION}`

2, .m2/settings.xml may not take effect for "Apache Nexus repository" setting, it may be not your "global settings file"

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Sijie Guo <sijie@apache.org>

This closes #811 from jiazhai/issue-805, closes #805

TREE:tree ca4c04a5eba6556e490d632023b77e32b4d78494 ------
TIME:12/06/2017 01:52:12

COMMIT:ISSUE #230: Enable checkstyle on util package

Part of #230, this adds checkstyle verification to the util package in
bookkeeper-server.

A few notable changes:
  - in `util.HardLink`, the field `osType` becomes `OS_TYPE`.
  - in `util.LocalBookkeeper`, a few package-protected fields are marked private and changed to camelCase.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #815 from acoburn/checkstyle_util, closes #230

TREE:tree 1c8a00627df7e4307a8e9f896b74a5b8bc03062f ------
TIME:12/06/2017 01:49:57

COMMIT:Fix flake in TestPerChannelBookieClient

Flake is in testRequestCompletesAfterDisconnectRace. It tests a race
between disconnection and making a request. The flake occurred because
when the disconnection happened, the request would be errorred out,
and this would add a callback to the ordered executor. The test was
shutting down the executor before the callback was actually run (it
may not even have been added in some cases), and this was causing the
request to never complete, failing the test.

The fix is to move the shutdown of the executor to after the assertion
that the request has completed.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #816 from ivankelly/pcbc-flake

TREE:tree 9bd4aebaaaa14c028f122ef89e43fdd7b3ce1619 ------
TIME:12/06/2017 01:46:30

COMMIT:Use concurrent open hash map to track pending requests in PerChannelBookieClient

ConcurrentOpenHashMap doesn't allocate a Map.Entry for each
insertion/lookup, so this reduces garbage in the fast path.

Original change 64ab580a in yahoo-4.3 branch.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #808 from ivankelly/yahoo-bp-6

TREE:tree f7da9fa3012c87d86a21652d2f03f286ad3663a7 ------
TIME:12/05/2017 00:56:37

COMMIT:Updated site at revision d2f90de

TREE:tree c9e05b399feaffb4528a048819673e615b822539 ------
TIME:12/05/2017 00:50:19

COMMIT:Fix checkstyle in PCBC

Two inflight PRs clashes to create a broken build due to
checkstyle being enabled. This patch fixes the checkstyle issue, which
was import order.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #807 from ivankelly/fix-style

TREE:tree 0353dd6e75a0d8a52c1606ca861f8133af7cca5a ------
TIME:12/05/2017 00:41:53

COMMIT:Updated site at revision a32a7f0

TREE:tree 3330b6530b52fd84e37d84a85fef691dba73d0c1 ------
TIME:12/04/2017 23:23:59

COMMIT:Updated site at revision 7087fda

TREE:tree 8a60dff87ff98b445ccdebbeb2ef6b17ebd86652 ------
TIME:12/04/2017 23:17:29

COMMIT:Fixed simultaneus reads on same ledger/entry with v2 protocol

This change is coming from yahoo branch at yahoo/bookkeeperce7b0f7

With v2 protocol there's no way to disambiguate the read request since the completion key is made from (ledgerId, entryId).
This PR introduced an additional multimap to handle the conflicts (multiple simultaneus read requests for the same entry).

Author: Ivan Kelly <ivank@apache.org>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #720 from merlimat/concurrent-read-v2

TREE:tree 013287cdbd7524493ebb08860036e462dd061547 ------
TIME:12/04/2017 23:10:04

COMMIT:ISSUE #230: Enable checkstyle on bookie and client

Part of #230, this adds checkstyle verification to the bookie and client packages in `bookkeeper-server`.

Descriptions of the changes in this PR:

The changes here are primarily cosmetic, but there are also two notable changes to point out:

1. In both `TopologyAwareEnsemblePlacementPolicy.TruePredicate` and `TopologyAwareEnsemblePlacementPolicy.EnsembleForReplacementWithNoConstraints` a `public static final` field was renamed from `instance` to `INSTANCE`. This is consistent with the use of an `INSTANCE` field in the `bookkeeper-stats` package. An alternative would be to introduce a public method `getInstance()`, but either way the checkstyle rules don't like a public constant field in lower case.

2. In `UpdateLedgerOp#updateBookieIdInLedgers()`, the `throws BKException` part of the signature is problematic and prevents the checkstyle validation from completing successfully. From what I can tell, that checked exception is never thrown; as such, I have removed that from the signature. I have also removed the corresponding guard from `bookie.BookieShell`.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #806 from acoburn/checkstyle_client_bookie, closes #230

TREE:tree 0d2a3b9f2f2c84ce2dacc3b12a5b17f57da4d874 ------
TIME:12/04/2017 23:08:02

COMMIT:Updated site at revision ee6d923

TREE:tree ea33de4009388495ad9cadb40af7b0727ed7ef7d ------
TIME:12/04/2017 19:37:38

COMMIT:ISSUE #689: improve release guide for minor versions

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #777 from eolivelli/improve-guide-minor, closes #689

TREE:tree 44f67323f31763ff6ad6681972318d216e5697b6 ------
TIME:12/04/2017 19:28:43

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 1f500f52d54e0af3b3e7b63c07df05ba1bb61617 ------
TIME:12/04/2017 16:39:52

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree a3b24a0d778c9606a60c3589c38ce79c4faf9be4 ------
TIME:12/04/2017 16:39:29

COMMIT:[maven-release-plugin] rollback changes from release preparation of v4.6.0-RC0

TREE:tree 1f500f52d54e0af3b3e7b63c07df05ba1bb61617 ------
TIME:12/04/2017 15:41:23

COMMIT:[maven-release-plugin] prepare release v4.6.0-RC0

TREE:tree f93a7b1e8c9ffb0eb1332d7ca17d7e3e3c9f3f9e ------
TIME:12/04/2017 15:41:00

COMMIT:Updated site at revision a082e26

TREE:tree ef470faa042641ef128a619f95d6af6fdec0f3a1 ------
TIME:12/04/2017 14:40:08

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 1f500f52d54e0af3b3e7b63c07df05ba1bb61617 ------
TIME:12/04/2017 14:31:01

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree a3b24a0d778c9606a60c3589c38ce79c4faf9be4 ------
TIME:12/04/2017 14:30:36

COMMIT:Fix bin/bookkeeper to work with release

Part of the assembly process prepends the package name to the
bookkeeper-server, which wasn't taken into account by
bin/bookkeeper. This change takes it into account.

It also stops the script from printing a warning if a directory
doesn't exist.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>

This closes #803 from ivankelly/bad-script

(cherry picked from commit a082e26129ef88f46f676e359011a5736e8dc7db)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 1f500f52d54e0af3b3e7b63c07df05ba1bb61617 ------
TIME:12/04/2017 14:26:18

COMMIT:Fix bin/bookkeeper to work with release

Part of the assembly process prepends the package name to the
bookkeeper-server, which wasn't taken into account by
bin/bookkeeper. This change takes it into account.

It also stops the script from printing a warning if a directory
doesn't exist.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Jia Zhai <None>

This closes #803 from ivankelly/bad-script

TREE:tree 63e37897dcc8e2248c5acbb8d4223efd3f634532 ------
TIME:12/04/2017 14:26:18

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 239775938704a968b9fe66d037c30c0d49e65380 ------
TIME:12/04/2017 10:32:10

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree ad09079f0b00acc209807f879a853095b3df015a ------
TIME:12/04/2017 10:31:49

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.6.0

TREE:tree 239775938704a968b9fe66d037c30c0d49e65380 ------
TIME:12/04/2017 10:04:07

COMMIT:[maven-release-plugin] prepare release release-4.6.0

TREE:tree ad09079f0b00acc209807f879a853095b3df015a ------
TIME:12/04/2017 10:03:46

COMMIT:Updated site at revision f671926

TREE:tree 6dfb87177017c00d6b3afdd5d126f1c874e091ca ------
TIME:12/04/2017 09:48:40

COMMIT:ISSUE #801: remove assembly plugin in root pom

Descriptions of the changes in this PR:
mvn release:prepare cmd will fail, for the wrong assembly plugin in root pom. This change remove it, for it has already in bookkeeper-dist/pom.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #802 from jiazhai/issue-801, closes #801

(cherry picked from commit f671926f7fbc89e9bb20e2a3b5e937dc6b716cc3)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 6346086e89b7921af9df4e05ac060c11dfe9601e ------
TIME:12/04/2017 09:40:05

COMMIT:ISSUE #801: remove assembly plugin in root pom

Descriptions of the changes in this PR:
mvn release:prepare cmd will fail, for the wrong assembly plugin in root pom. This change remove it, for it has already in bookkeeper-dist/pom.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #802 from jiazhai/issue-801, closes #801

TREE:tree 95b72260e64b56bb3e3715a8e64c5f5049d0dd28 ------
TIME:12/04/2017 09:40:05

COMMIT:Removed all per-entry allocations in Journal operations

This change was originally b2cc158a from the yahoo-4.3 branch.

Author: Ivan Kelly <ivank@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #798 from ivankelly/yahoo-bp-5

TREE:tree 961c1d372b390303b378f678e620e04406686b64 ------
TIME:12/04/2017 08:26:03

COMMIT:ISSUE #230: Enable checkstyle for more packages

Part of #230, this enables the checkstyle plugin for the `replication` and
`server.http.service` packages.

Descriptions of the changes in this PR:

Most of the changes here are merely cosmetic. The only change of any significance is in the `RecoveryBookieService.RecoveryRequestJsonBody` class in which the JSON object fields had to be changed in order to conform to the Checkstyle rules: `bookie_src` to `bookieSrc` and `delete_cookie` to `deleteCookie`. Using a Jackson annotation (`JsonProperty`), however, means that these field names continue to be parsed and serialized as `bookie_src` and `delete_cookie`, respectively.

Author: Jia Zhai <jiazhai@users.noreply.github.com>
Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #800 from acoburn/checkstyle_replication, closes #230

TREE:tree 75d6adefcc213ad5fa1d0760d49d767062fe6405 ------
TIME:12/02/2017 12:47:01

COMMIT:Updated site at revision 356c091

TREE:tree 8f89ad88922389e20d72735e050ab26f6e4680ef ------
TIME:12/02/2017 12:34:11

COMMIT:ISSUE #230: Add Checkstyle to some packages

This is part of #230 and adds checkstyle verification to the following
packages in bookkeeper-server:

  - metastore
  - net
  - sasl

Descriptions of the changes in this PR:

Most of the changes are entirely stylistic, but there were a few minor functional changes:

  - In `metastore.MetastoreUtils`, the protected `logger` field was changed to `private` (it is not accessed from outside the class).
  - In `metastore.Value`, the package-protected `comparator` field was changed to `private` (it, too, is not accessed outside the class).

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #799 from acoburn/more_checkstyle, closes #230

TREE:tree 876c869b31dd8dce82dd0a23a8531bbefaddb764 ------
TIME:12/02/2017 12:26:03

COMMIT:Issue-732 Update Dockerfile for 4.5.1 version (#746)

Issue-732 Update Dockerfile for 4.5.1 version and change stats env to Nullstats

TREE:tree 91d5f886857b6b2e4f50aa148d01d3188313b1c2 ------
TIME:11/20/2017 14:23:12

COMMIT:Updated site at revision 81cbba3

TREE:tree 6f14b6eb8928d89105a9750b9ef0be66066d4373 ------
TIME:12/02/2017 06:14:46

COMMIT:change BK_statsProviderClass in to NullStatsProvider in Docker file (#781)

This closes #781 
TREE:tree 6fdeba2d0d290044d93bb0f7c6ba139a4b964c63 ------
TIME:12/02/2017 06:09:26

COMMIT:change BK_statsProviderClass in to NullStatsProvider in Docker file (#781)

This closes #781 
TREE:tree 92e1bef82cc6e6bd4ae6c07e4ea5d66ab236ca86 ------
TIME:12/02/2017 06:09:26

COMMIT:ISSUE #659: Fix Checkpoint logic in SortedLedgerStorage

Descriptions of the changes in this PR:

- add a test case to reproduce the behavior

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #677 from sijie/fix_checkpoint, closes #659

TREE:tree 55d49a9c987c32da6bde825a9663a9a27f637ced ------
TIME:12/02/2017 06:05:53

COMMIT:ISSUE #659: Fix Checkpoint logic in SortedLedgerStorage

Descriptions of the changes in this PR:

- add a test case to reproduce the behavior

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Charan Reddy Guttapalem <reddycharan18@gmail.com>

This closes #677 from sijie/fix_checkpoint, closes #659

TREE:tree 7c2859ce35a314abb335c5cb2a352fd7c100e00c ------
TIME:12/02/2017 06:05:53

COMMIT:Updated site at revision 77efe5a

TREE:tree 7767aeef7f148b86cae444eae6339787ad724ee6 ------
TIME:12/01/2017 17:10:49

COMMIT:ISSUE #230: Enable Checkstyle on the proto package

This is part of #230 and adds Checkstyle verification to the proto
package in bookeeper-server.

The changes here should generally be non-controversial, but I would like to highlight one change for particular review. In the `PerChannelBookieClient` class, there is a `public static final` field called `txnIdGenerator`. The checkstyle rules require that such public fields are ALL_CAPS. So one option would be to change that field to `TX_ID_GENERATOR` (this would be a change to the public API).

The relevant diff is here: https://github.com/apache/bookkeeper/compare/master...acoburn:checkstyle_proto?expand=1#diff-e50ee2c1aec1539ea185a94605b0e550R143

However, that field is never used outside this class, so the other option is to make the field private and keep the name as-is. (Making the field private is also a change to the public API)

I chose the second option because the field seemed more like an internal field. If, however, the field should be left public, I can add a commit that changes the name to `TX_ID_GENERATOR` so that it passes the checkstyle rules.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #792 from acoburn/checkstyle_proto, closes #230

TREE:tree 16f77a07083b48d5eb3a280ca79279f7ea5a86e2 ------
TIME:12/01/2017 17:05:20

COMMIT:ISSUE #230: Enable Checkstyle on the meta package

This is part of #230 and adds Checkstyle verification to the meta
package in bookkeeper-server.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #797 from acoburn/checkstyle_meta, closes #230

TREE:tree 1644edbebef1ad658980bb5b540bb11376183299 ------
TIME:12/01/2017 17:03:53

COMMIT:ISSUE 230: Enable Checkstyle on the conf package

This is part of #230 and adds Checkstyle verification to the conf
package in bookkeeper-server.

As with #792, most of the changes here should be non-controversial. However, as with #792, there is a constant field whose name needed to be renamed. `AbstractConfiguration` has a `protected static final` field called `defaultLoader`. This field is used in the two implementing classes, so keeping `protected` visibility seems right. So in this case, the field has been renamed to `DEFAULT_LOADER` while keeping the `protected static final` modifiers.

The changed line is: https://github.com/apache/bookkeeper/compare/master...acoburn:checkstyle_conf?expand=1#diff-b4f821552b13a688d62015e96092e08eR45

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #796 from acoburn/checkstyle_conf

TREE:tree 9194a9d924f106e106427ce48d6f6c54f4f63ce3 ------
TIME:12/01/2017 17:02:18

COMMIT:Updated site at revision 5f3496f

TREE:tree c12959573934ed289a5623c6ab8254601af40fe8 ------
TIME:12/01/2017 15:22:52

COMMIT:ISSUE #787: Client should be able to get ledger metadata from Handles.

Descriptions of the changes in this PR:

- create a `LedgerMetadata` interface for exposing public information
- add `getLedgerMetadata` to Handle, so both WriteHandle and ReadHandle are able to access the metadata.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #788 from sijie/ledger_metadata_interface, closes #787

(cherry picked from commit 5f3496f740629ba4ea0d0abb3272ca2e6d8ccba7)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree c3a478ede989e545c7ed21e9f34bed748accc724 ------
TIME:12/01/2017 15:13:49

COMMIT:ISSUE #787: Client should be able to get ledger metadata from Handles.

Descriptions of the changes in this PR:

- create a `LedgerMetadata` interface for exposing public information
- add `getLedgerMetadata` to Handle, so both WriteHandle and ReadHandle are able to access the metadata.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #788 from sijie/ledger_metadata_interface, closes #787

TREE:tree 939d685c5317746ae95c16b16295adb9da822fbe ------
TIME:12/01/2017 15:13:49

COMMIT:Updated site at revision d577485

TREE:tree 048e6e828d2f2d2b7fd9f14ead7767cb83101b53 ------
TIME:11/30/2017 11:20:39

COMMIT:ISSUE #784: LedgerEntries#close should not throw checked exception

Descriptions of the changes in this PR:

override `close()` in LedgerEntries to make it not throw checked exception.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #785 from sijie/dont_throw_exception_on_close, closes #784

(cherry picked from commit d5774858934bdfd22c8e873c355722750c50f33b)
Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree 6db7b4b0fd841506f6527f1eafd618ee0a9fc2df ------
TIME:11/30/2017 11:11:58

COMMIT:ISSUE #784: LedgerEntries#close should not throw checked exception

Descriptions of the changes in this PR:

override `close()` in LedgerEntries to make it not throw checked exception.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #785 from sijie/dont_throw_exception_on_close, closes #784

TREE:tree d8f27218b6a1afaa40376170164177f6ec63ab45 ------
TIME:11/30/2017 11:11:58

COMMIT:Make distributedlog compiled with latest bookkeeper version

Descriptions of the changes in this PR:

There are code changes on PendingReadOp for new bookkeeper api in current master. DistributedLog uses PendingReadOp for some administration tools. So the current master doesn't compile with the latest bookkeeper version. This code change is to fix that.

The change here includes:

- bump bk to 4.7.0-SNAPSHOT (will switch to 4.6.0 after it is released)
- change to use the latest CompletableFuture in latest PendingReadOp. (this change doesn't target at making distributedlog work with new API)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #240 from sijie/sijie/use_new_ledger_api

TREE:tree ba47c8f86a87b9ddfc3f82fad6407bd2fa0d4291 ------
TIME:11/30/2017 08:30:32

COMMIT:Updated site at revision 64650cf

TREE:tree 6498f7927e7f27638cb957aa168e46705a260a9f ------
TIME:11/30/2017 07:01:38

COMMIT:ISSUE #765: Add `isClosed()` to ReadHandle

Descriptions of the changes in this PR:

add `isClosed` to ReadHandle, so distributedlog can use this for implementing readers.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #786 from sijie/is_sealed, closes #765

(cherry picked from commit 64650cfc3fc2f25393c71252341a37a03db5be15)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 050a3bae5af7233ed43b0a718374ee3b31471ac8 ------
TIME:11/30/2017 06:52:58

COMMIT:ISSUE #765: Add `isClosed()` to ReadHandle

Descriptions of the changes in this PR:

add `isClosed` to ReadHandle, so distributedlog can use this for implementing readers.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #786 from sijie/is_sealed, closes #765

TREE:tree b6a96f9d66ec7426b1b5cde3d6665e6c2a3d91c1 ------
TIME:11/30/2017 06:52:58

COMMIT:ISSUE #695: add release notes for 4.6.0

Descriptions of the changes in this PR:
add release notes for 4.6.0.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #759 from zhaijack/issue-695, closes #695

TREE:tree 232a9953ebfa2e2911fce2cd1465fa02ca147cdc ------
TIME:11/30/2017 06:35:29

COMMIT:Updated site at revision 58d0fc2

TREE:tree 1eb5b20de9be5dd7f46307fb15afc3f579d4c4f1 ------
TIME:11/30/2017 06:44:04

COMMIT:ISSUE #695: add release notes for 4.6.0

Descriptions of the changes in this PR:
add release notes for 4.6.0.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #759 from zhaijack/issue-695, closes #695

TREE:tree 3e62cce63876652e02d0d0a2af8af832ea14938a ------
TIME:11/30/2017 06:35:29

COMMIT:Tests wait for client to see started bookie

Up until now we were only waiting for the bookie to exist in the
bookie list, after which we triggered a read. However, when the
registration changes went in, the read wasn't actually populating the
mechanism used to select bookies, so we ended up momentarily having
unusable bookkeeper clients until the correct read triggered. This
resulted in flakiness in random tests.

This change makes it so we wait until the client has seen a bookie
before startBookie will return. It also makes sure that reading the
bookie list actually populates the bookie selection mechanism.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #775 from ivankelly/no-enough-bookie-flake

TREE:tree 7cf312b8c2d4979ecdca35ab8abae8d6e8408325 ------
TIME:11/30/2017 03:58:03

COMMIT:ISSUE #544: Bootup cookie validation considers an empty journal to signify a new bookie

Descriptions of the changes in this PR:

- read cookie from registration manager as the source-of-truth (for all potential options)
- remove duplicated code between checkEnvironment and checkEnvironmentWithStorageExpansion

Author: Sijie Guo <sijie@apache.org>
Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #712 from sijie/fix_cookie_issue, closes #544

TREE:tree 80c66221de7c7ada780d3277ae666c323478d778 ------
TIME:11/30/2017 03:53:39

COMMIT:Don't print out redundant JMX notice

Users don't really care that JMX is enabled by default, so don't print
it out.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #782 from ivankelly/no-jmx

TREE:tree 613d8d31463cf002ea0bc4a92e70ba22a551330b ------
TIME:11/28/2017 17:05:24

COMMIT:Make LedgerEntries an Iterable<LedgerEntry>

This seems to have been overlooked in the previous changes. As the title
says, this change just adds the Iterable<LedgerEntry> to the interfaces
from which LedgerEntries extends.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #770 from ivankelly/ledger-entries-iterable

TREE:tree f454f00b9ff76decc543d40cce73c762d6e5e979 ------
TIME:11/26/2017 16:56:57

COMMIT:Updated site at revision 24d53cb

TREE:tree 3c5e1bb04e4ac905ca9f0e0b2172186f839135b5 ------
TIME:11/30/2017 04:11:13

COMMIT:Updated site at revision 819443c

TREE:tree 1038bd55c993b71428f5fafef9ee2443a1fdd52d ------
TIME:11/30/2017 04:02:46

COMMIT:Tests wait for client to see started bookie

Up until now we were only waiting for the bookie to exist in the
bookie list, after which we triggered a read. However, when the
registration changes went in, the read wasn't actually populating the
mechanism used to select bookies, so we ended up momentarily having
unusable bookkeeper clients until the correct read triggered. This
resulted in flakiness in random tests.

This change makes it so we wait until the client has seen a bookie
before startBookie will return. It also makes sure that reading the
bookie list actually populates the bookie selection mechanism.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #775 from ivankelly/no-enough-bookie-flake

TREE:tree 36b84961189e1eca77af3b5e144c03bc6ca899c5 ------
TIME:11/30/2017 03:58:03

COMMIT:ISSUE #544: Bootup cookie validation considers an empty journal to signify a new bookie

Descriptions of the changes in this PR:

- read cookie from registration manager as the source-of-truth (for all potential options)
- remove duplicated code between checkEnvironment and checkEnvironmentWithStorageExpansion

Author: Sijie Guo <sijie@apache.org>
Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

This closes #712 from sijie/fix_cookie_issue, closes #544

TREE:tree d205c5b37e05e9e30e9229ca4e8675a0e9a962cb ------
TIME:11/30/2017 03:53:39

COMMIT:Updated site at revision 87ffad9

TREE:tree b1245eb60ea041ee8eb125b5051a469c0f7cdad3 ------
TIME:11/29/2017 13:12:42

COMMIT:BP-20: Github workflow for bookkeeper proposals

Descriptions of the changes in this PR:

Implementing a github workflow for bookkeeper proposals, so all the bookkeeper proposals can be reviewed as code changes, and they can be maintained in the same way as how we maintain documentation.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia03@gmail.com>

This closes #760 from sijie/BP_20

TREE:tree 040198a221f459e64000f2d40beee0f0261d93dc ------
TIME:11/29/2017 13:04:08

COMMIT:Don't print out redundant JMX notice

Users don't really care that JMX is enabled by default, so don't print
it out.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #782 from ivankelly/no-jmx

TREE:tree 2fb9adad505cde2ae7a77eb194f52876d846ae8c ------
TIME:11/28/2017 17:05:24

COMMIT:Updated site at revision 90a82c2

TREE:tree eaff44e5e3f7d5d6a8777ae4b8c453ed31242656 ------
TIME:11/28/2017 09:54:33

COMMIT:Explicitly search for bookkeeper-server jar

Rather than listing all jars, and excluding some exceptions, search for
jars which match a specific pattern, namely:

  bookkeeper-server-[version].jar

Where [version] may include numbers, dots and optionally -SNAPSHOT.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #772 from ivankelly/fix-local-bookie

(cherry picked from commit 90a82c278dab9c878e649d5aa8b0da9580287830)
Signed-off-by: Ivan Kelly <ivank@apache.org>

TREE:tree fd9856c8dfa0ae5461f5155504c7ff7a957eedcb ------
TIME:11/28/2017 09:45:21

COMMIT:Explicitly search for bookkeeper-server jar

Rather than listing all jars, and excluding some exceptions, search for
jars which match a specific pattern, namely:

  bookkeeper-server-[version].jar

Where [version] may include numbers, dots and optionally -SNAPSHOT.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #772 from ivankelly/fix-local-bookie

TREE:tree e79aafe28a368f7129456f0a0a7c9edebf0fecac ------
TIME:11/28/2017 09:45:21

COMMIT:ISSUE #230: Enable Checkstyle on the tls package

This is part of #230 and adds Checkstyle verification to the TLS package in `bookkeeper-server`.

Author: Aaron Coburn <acoburn@amherst.edu>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #779 from acoburn/checkstyle_tls, closes #230

TREE:tree a9405c1b16e4203f344418237c44c5c59076c441 ------
TIME:11/28/2017 03:08:31

COMMIT:Updated site at revision dc49b8b

TREE:tree d09c2a105aaa0bedfe802c5d2b89a520fcc5f9e2 ------
TIME:11/26/2017 17:06:07

COMMIT:Make LedgerEntries an Iterable<LedgerEntry>

This seems to have been overlooked in the previous changes. As the title
says, this change just adds the Iterable<LedgerEntry> to the interfaces
from which LedgerEntries extends.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #770 from ivankelly/ledger-entries-iterable

TREE:tree 58d3e689592e8a27ac158cbd89cc2f520056cfbf ------
TIME:11/26/2017 16:56:57

COMMIT:Updated site at revision 2915f55

TREE:tree c5e700f65e0585c757be40dc741189aaa0644fd3 ------
TIME:11/24/2017 21:38:05

COMMIT:ISSUE #553: Documentation for new fluent API

Descriptions of the changes in this PR:

- Add documentation for the new fluent API: create/open/delete, append/write/read, createadv

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #764 from sijie/api_documentation, closes #553

TREE:tree 70550a72dbf345f9630958a2cafe0e4d5182aca4 ------
TIME:11/24/2017 21:28:55

COMMIT:Updated site at revision a6f4b79

TREE:tree af9430f8579733fc9047f52af905b1182765aa8a ------
TIME:11/23/2017 13:05:03

COMMIT:ISSUE #693: add interface and implementation of LedgerEntries

In the new API proposed in #506 , we return Iterable<LedgerEntry> for read entries. It is a bit problematic when returning multiple iterators and have no ability to release the entry buffers hold by ledger entries.
In this change, the implementation of retainIterator() increased the reference of the buffers when creating an iterator, it will be easy for byteBuf's management; it also make LedgerEntries a recycle object, and it is returned to the pool when #close() is called. on #close(), it also releases all the references to release resources.

Descriptions of the changes in this PR:
1. add interface LedgerEntries;
2. add implemtation of LedgerEntries;
3. fix related build and test errors.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: ivankelly, sijie, eolivelli

This closes #727 from zhaijack/issue-693, closes #693

(cherry picked from commit a6f4b792270194474649eda9261635c24c218b0a)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree e4a2bd382bd7f3f15c15168740fe2108e974395c ------
TIME:11/23/2017 12:56:21

COMMIT:ISSUE #693: add interface and implementation of LedgerEntries

In the new API proposed in #506 , we return Iterable<LedgerEntry> for read entries. It is a bit problematic when returning multiple iterators and have no ability to release the entry buffers hold by ledger entries.
In this change, the implementation of retainIterator() increased the reference of the buffers when creating an iterator, it will be easy for byteBuf's management; it also make LedgerEntries a recycle object, and it is returned to the pool when #close() is called. on #close(), it also releases all the references to release resources.

Descriptions of the changes in this PR:
1. add interface LedgerEntries;
2. add implemtation of LedgerEntries;
3. fix related build and test errors.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: ivankelly, sijie, eolivelli

This closes #727 from zhaijack/issue-693, closes #693

TREE:tree b0cdc3f51102f2fbc4327e11808ca87dbbd7bbc5 ------
TIME:11/23/2017 12:56:21

COMMIT:Updated site at revision b20d954

TREE:tree 23b521010c2e9554f2c734d995cc82b57d228e30 ------
TIME:11/23/2017 10:17:14

COMMIT:ISSUE #763: Javadoc layout should reflect new modules

Descriptions of the changes in this PR:

- add `org.apache.bookkeeper.client.api` in `BookKeeper Client (New Fluent API - Experimental)`
- move prometheus package to `BookKeeper Stats Providers`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #768 from sijie/fix_javadoc_layout, closes #763

TREE:tree 4c58abfa41e8d76351487c895f0483f969acde3b ------
TIME:11/23/2017 10:08:24

COMMIT:ISSUE #763: Javadoc layout should reflect new modules

Descriptions of the changes in this PR:

- add `org.apache.bookkeeper.client.api` in `BookKeeper Client (New Fluent API - Experimental)`
- move prometheus package to `BookKeeper Stats Providers`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Jia Zhai <zhaijia@apache.org>

This closes #768 from sijie/fix_javadoc_layout, closes #763

TREE:tree fb4d74a773c8506f713b1337ef782b2d668738f5 ------
TIME:11/23/2017 10:08:24

COMMIT:Updated site at revision 8e056d4

TREE:tree 7dd85a30a1842f309dad6702d26ebcb977bb7178 ------
TIME:11/23/2017 09:35:12

COMMIT:Issue #753: Allow option to disable data sync on journal

Context in #753

For deployments where a RAID battery-backed cache is not available and where durability is not a requirements, we should allow bookies to rely on page cache and relax durability.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #754 from merlimat/option-to-disable-sync-master, closes #753

(cherry picked from commit 8e056d4dd0262f5ed5245a8dc8abe608b737f6f9)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree eddad59f61c15a43a78cfb9e0ae43e8bd1045832 ------
TIME:11/23/2017 09:26:18

COMMIT:Issue #753: Allow option to disable data sync on journal

Context in #753

For deployments where a RAID battery-backed cache is not available and where durability is not a requirements, we should allow bookies to rely on page cache and relax durability.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #754 from merlimat/option-to-disable-sync-master, closes #753

TREE:tree cb06a1dfe5494b20e2378f843cf980dcbfaa67f3 ------
TIME:11/23/2017 09:26:18

COMMIT:Updated site at revision 7108ab4

TREE:tree a5ad6dff18cda69815df88fba4355eb6166daf90 ------
TIME:11/23/2017 09:18:01

COMMIT:ISSUE #750: support ByteBuf, ByteBuffer, byte[] in both WriteHandle, WriteAdvHandle, ReadHandle

Descriptions of the changes in this PR:

- WriteHandle supports append byte[], ByteBuf and ByteBuffer
- WriteAdvHandle supports write byte[], ByteBuf and ByteBuffer
- LedgerEntry returns byte[], ByteBuffer and ByteBuf

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #755 from sijie/issue_750, closes #750

(cherry picked from commit 7108ab4b8e8116dd48c24fdaf845a28e048d7836)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 0d6ae3eaf601d80e84fac805906c0997cbef4db0 ------
TIME:11/23/2017 09:07:31

COMMIT:ISSUE #750: support ByteBuf, ByteBuffer, byte[] in both WriteHandle, WriteAdvHandle, ReadHandle

Descriptions of the changes in this PR:

- WriteHandle supports append byte[], ByteBuf and ByteBuffer
- WriteAdvHandle supports write byte[], ByteBuf and ByteBuffer
- LedgerEntry returns byte[], ByteBuffer and ByteBuf

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #755 from sijie/issue_750, closes #750

TREE:tree 7786e3a7a1bfb99d25a26651e2bf0cd008490b61 ------
TIME:11/23/2017 09:07:31

COMMIT:Updated site at revision 3b02baa

TREE:tree e14c313657bf51514f698e54528a064921abbcce ------
TIME:11/23/2017 07:28:34

COMMIT:ISSUE #766: Bump master to 4.7.0-SNAPSHOT

Descriptions of the changes in this PR:

The master version was not updated when creating `branch-4.6`.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #767 from sijie/bump_master_version, closes #766

TREE:tree 8873825677e33a405ce5d850b107b09a4067c0bb ------
TIME:11/23/2017 07:19:56

COMMIT:Updated site at revision d446b3c

TREE:tree 71b18bcdbc1f7c6a1b4da561737800b7f403b49c ------
TIME:11/22/2017 18:58:35

COMMIT:fix releases.md, add release date for 4.5.1 and clean up file

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #758 from eolivelli/updaterelmd451-460

TREE:tree a6a258be087b77f1f87b9f33bf1adf293a20d979 ------
TIME:11/22/2017 18:49:26

COMMIT:BOOKKEEPER-1040: Use separate log for compaction and add transaction support

Problem:
Compaction might keep generating duplicated data which would cause disk full.
This is because we don't have transactional operation for compaction. So if compaction
keeps failing in the middle, bookie would end up with a lot of garbage data.

Change:
1. Introduce abstract class AbstractLogCompactor with an interface compact().
2. Move the existing compaction logic to a separate class called EntryLogCompactor.
3. Introduce transactional compaction, we can recover an incomplete compaction or rollback a compaction failure.
4. Add an configuration to enable transactional compaction

Potential Risk:
1. No risk if we keep using the default compactor.
2. If we choose to enable transactional compaction with separate log file, we need to be careful about it, since we use a separate log for compaction, if we have a lot of old small ledgers in the bookie, we will end up with a lot of small entry log files. And this will potentially cause bookkeeper "Too many open files" because GC will scan all the entry log files and keep them open.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #704 from yzang/yzang/BOOKKEEPER-1040

TREE:tree c44e58be7dece43beaf1bfba86a95e9f1dfe9b27 ------
TIME:11/08/2017 12:27:20

COMMIT:Updated site at revision d120b7f

TREE:tree 2e1cc70c446885a3790bd2702bdbbe4e32a5ad56 ------
TIME:11/22/2017 09:32:01

COMMIT:Add release 4.6.0 to releases menu

Descriptions of the changes in this PR:

The documentation for release `4.6.0` was copied by #696. But this release is not updated in the releases menu.

This change is generated by running `site/scripts/release.sh` for preparing 4.6.0 release.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #752 from sijie/update_4.5.1_release_date

TREE:tree fe0dd5a71eb0a6d4eaa132062c0e271efd234763 ------
TIME:11/22/2017 09:22:48

COMMIT:Updated site at revision e086f1d

TREE:tree 3cf9544f349c45e57fa7951c1dcaf0988cf98b50 ------
TIME:11/22/2017 03:11:00

COMMIT:ISSUE #688: add bookkeeper-all package and update notice files

Descriptions of the changes in this PR:

    - move src/ to bookkeeper-dist/src/
    - built two packages in bookkeeper-dist: one is `bookkeeper-server` - server only package with prometheus stats provider and vertx http server,
      the other one is `bookkeeper-all` - includes all packages.
    - remove assembly plugin from bookkeeper-server module
    - update release guide

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #737 from sijie/add_slim_module, closes #688

(cherry picked from commit e086f1dec6af8120e692862f29c2f77565760025)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 52bdb0706221abd314dcf4b9b6327991c947bb6b ------
TIME:11/22/2017 03:02:19

COMMIT:ISSUE #688: add bookkeeper-all package and update notice files

Descriptions of the changes in this PR:

    - move src/ to bookkeeper-dist/src/
    - built two packages in bookkeeper-dist: one is `bookkeeper-server` - server only package with prometheus stats provider and vertx http server,
      the other one is `bookkeeper-all` - includes all packages.
    - remove assembly plugin from bookkeeper-server module
    - update release guide

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #737 from sijie/add_slim_module, closes #688

TREE:tree f2a5511f27038b1bfaf0af38c3b23a67e537a39a ------
TIME:11/22/2017 03:02:19

COMMIT:Updated site at revision 87d1afc

TREE:tree b57ab4fb11324281fe82c09cd889ad56e18a198b ------
TIME:11/22/2017 02:20:20

COMMIT:ISSUE #731: refine LedgerEntry interface and implementation

In LedgerEntry interface, getEntry() and getEntryBuffer() have completely different behaviours. getEntry() releases bytebuf automatically, while getEntryBuffer() returns the bytebuf (if you don't call getEntry, you are responsible for releasing the entry buffer.

In this change:
make getEntry() reenter-able; make LedgerEntry implement AutoCloseable; LedgerEntry is responsible for releasing the bytebuf it is holding.

Descriptions of the changes in this PR:
1.  add `close` and `duplicate` in `api.LedgerEntry`,
1.  LedgerEntryImpl implements `api.LedgerEntry`,
1.  client.LedgerEntry doesn't implement the new api. it wraps an `api.LedgerEntry`,
1.  add `close` in api.LastConfirmedAndEntry."
1.  fix build and test errors.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #738 from zhaijack/issue-731, closes #731

(cherry picked from commit 87d1afcc329d7261f19a6310ca9a7cf2acce4dee)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 1b461f966fac153c17ac93645a6bd0ab83069998 ------
TIME:11/22/2017 02:11:08

COMMIT:ISSUE #731: refine LedgerEntry interface and implementation

In LedgerEntry interface, getEntry() and getEntryBuffer() have completely different behaviours. getEntry() releases bytebuf automatically, while getEntryBuffer() returns the bytebuf (if you don't call getEntry, you are responsible for releasing the entry buffer.

In this change:
make getEntry() reenter-able; make LedgerEntry implement AutoCloseable; LedgerEntry is responsible for releasing the bytebuf it is holding.

Descriptions of the changes in this PR:
1.  add `close` and `duplicate` in `api.LedgerEntry`,
1.  LedgerEntryImpl implements `api.LedgerEntry`,
1.  client.LedgerEntry doesn't implement the new api. it wraps an `api.LedgerEntry`,
1.  add `close` in api.LastConfirmedAndEntry."
1.  fix build and test errors.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #738 from zhaijack/issue-731, closes #731

TREE:tree 9444339f214261e07cc28ad557016d8081459488 ------
TIME:11/22/2017 02:11:08

COMMIT:issue #236: shaded jar lose necessary bk jar to execute

Descriptions of the changes in this PR:

 after bump to bk4.6, add bk-proto bk-http dependency to shaded jar

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #237 from ArvinDevel/addBkDependencyInShade, closes #236

TREE:tree 81a0e34785ef4de1e708f049f35f7b6f9c7755f2 ------
TIME:11/21/2017 05:22:35

COMMIT:Updated site at revision 00a286b

TREE:tree 5a34d04bb7b87e91460ea02b5551f4d56af0d8d4 ------
TIME:11/21/2017 00:07:46

COMMIT:ISSUE #747: Reorder releases menu - 4.5.1 should appear before 4.5.0

Descriptions of the changes in this PR:

- 4.5.1 should appear before 4.5.0
- bump dlog version to 0.5.0

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #748 from sijie/issue_747, closes #747

TREE:tree f3663992cb30df7c177bb2a3ba37fd9e2e51b0d2 ------
TIME:11/21/2017 00:02:37

COMMIT:Issue-732 Update Dockerfile for 4.5.1 version (#746)

Issue-732 Update Dockerfile for 4.5.1 version and change stats env to Nullstats

TREE:tree 41b816d868a3de8e24696e774321395a27757f23 ------
TIME:11/20/2017 14:23:12

COMMIT:Updated site at revision c9a1b8a

TREE:tree 25321984596383a6981bc5faeecdf3f73b673713 ------
TIME:11/20/2017 07:53:30

COMMIT:ISSUE #550: add readLastAddConfirmedAndEntry in ReadHandle for long poll read

Descriptions of the changes in this PR:
1, add a class LastAddConfirmedAndEntry and metnod readLastAddConfirmedAndEntry() in ReadHandle;
2, add implementation for readLastAddConfirmedAndEntry in LedgerHandler;
3, add testcase in BookKeeperApiTest;
4, remove un-used imports, break down long lines, fix wrong comments.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #729 from zhaijack/issue-550, closes #550

(cherry picked from commit c9a1b8adbb2eb4e7bd2fe9d55648ac684828fe8f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fd2d7dea23e2a8477101668d39f2f7a1f4d88443 ------
TIME:11/20/2017 07:48:18

COMMIT:ISSUE #550: add readLastAddConfirmedAndEntry in ReadHandle for long poll read

Descriptions of the changes in this PR:
1, add a class LastAddConfirmedAndEntry and metnod readLastAddConfirmedAndEntry() in ReadHandle;
2, add implementation for readLastAddConfirmedAndEntry in LedgerHandler;
3, add testcase in BookKeeperApiTest;
4, remove un-used imports, break down long lines, fix wrong comments.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #729 from zhaijack/issue-550, closes #550

TREE:tree c3b6243b184bac224784d466fb8196422ab93bd8 ------
TIME:11/20/2017 07:48:18

COMMIT:Bump version to 4.5.2-SNAPSHOT (#745)


TREE:tree 95f27776e1abe9194b51192f3d243b10adfcf9a3 ------
TIME:11/20/2017 07:37:30

COMMIT:Updated site at revision c8c3f67

TREE:tree 17caa8432daca005966c8bff2e7c8d04753bcbb3 ------
TIME:11/18/2017 03:36:49

COMMIT:ISSUE #674: Documentation for HTTP endpoints

Descriptions of the changes in this PR:
Add a document for http endpoints.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #721 from zhaijack/http_doc, closes #674

(cherry picked from commit c8c3f6745b57cbae6d01deb31ab445ff29e16152)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 2418e227c2f0d981e8c498e750d40b0031693f7a ------
TIME:11/18/2017 03:32:10

COMMIT:ISSUE #674: Documentation for HTTP endpoints

Descriptions of the changes in this PR:
Add a document for http endpoints.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #721 from zhaijack/http_doc, closes #674

TREE:tree 048a742056c96adeb36daf7058dc03c0375badb3 ------
TIME:11/18/2017 03:32:10

COMMIT:Updated site at revision 3fab8c6

TREE:tree 0be38bdf081abc880cd642f9a25125601b527e8b ------
TIME:11/17/2017 17:24:31

COMMIT:Release notes for 4.5.1

This patch contains new site docs for 4.5.1

Author: eolivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #678 from eolivelli/releasenotes451

TREE:tree 573a15f95850c757160a37d42ead9c222690d948 ------
TIME:11/17/2017 17:16:40

COMMIT:ISSUE #739: Move the implementation of http services to be under server package

Descriptions of the changes in this PR:

bookkeeper-http module provides the framework for http admin rest api. it is using 'org.apache.bookkeeper.http' and 'org.apache.bookkeeper.http.service. the http package inbookkeeper-server` is reusing these two packages. it is not good for two modules sharing same package name, it is going to be confusing javadoc.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #740 from sijie/http_impl, closes #739

(cherry picked from commit 2b660b1e06a9b0deac011d0d6b8a2e990bf974b9)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree b5617fcde377cb101a57475a68e5bf2593a89189 ------
TIME:11/17/2017 04:51:38

COMMIT:ISSUE #739: Move the implementation of http services to be under server package

Descriptions of the changes in this PR:

bookkeeper-http module provides the framework for http admin rest api. it is using 'org.apache.bookkeeper.http' and 'org.apache.bookkeeper.http.service. the http package inbookkeeper-server` is reusing these two packages. it is not good for two modules sharing same package name, it is going to be confusing javadoc.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #740 from sijie/http_impl, closes #739

TREE:tree 4a6be188ab82731535e700a9b3123c94a681587c ------
TIME:11/17/2017 04:51:38

COMMIT:ISSUE #734: bookkeeper-benchmark is broken after protobuf files are moved to bookkeeper-proto

Descriptions of the changes in this PR:

Problem:

The issue was introduced after protobuf files are moved to bookkeeper-proto. so the protobuf is not shaded correctly.
So in bookkeeper-benchmark, it is conflicted with the protobuf version introduced by hadoop.

Solution:

- update the bookkeeper-server pom.xml to shade protobuf correctly
- remove hadoop dependency from bookkeeper-benchmark.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #735 from sijie/protobuf_issue, closes #734

(cherry picked from commit 9b538aff7da5cba15ae59b70e0b0c9bd2464dca3)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree dae97e2a5d97fb45fd0e74ffe87d167d6aac79d1 ------
TIME:11/16/2017 14:06:26

COMMIT:ISSUE #734: bookkeeper-benchmark is broken after protobuf files are moved to bookkeeper-proto

Descriptions of the changes in this PR:

Problem:

The issue was introduced after protobuf files are moved to bookkeeper-proto. so the protobuf is not shaded correctly.
So in bookkeeper-benchmark, it is conflicted with the protobuf version introduced by hadoop.

Solution:

- update the bookkeeper-server pom.xml to shade protobuf correctly
- remove hadoop dependency from bookkeeper-benchmark.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #735 from sijie/protobuf_issue, closes #734

TREE:tree c732aff275311e28dbe47ba481449a7b18e61caa ------
TIME:11/16/2017 14:06:26

COMMIT:Updated site at revision 07bb94f

TREE:tree 3dca0440b95dee0f87bad355fd2d57f76abddf2f ------
TIME:11/16/2017 14:05:52

COMMIT:ISSUE #713: Mark new API as experimental

Descriptions of the changes in this PR:

mark new api as experimental - `InterfaceStability.Unstable`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #736 from sijie/mark_api_experimental, closes #713

(cherry picked from commit 07bb94f25a49c6f28c5b33ce930c0e2a3601db83)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 85e48d1e71cb02bb8ce89318e5b9f8d487867611 ------
TIME:11/16/2017 14:00:47

COMMIT:ISSUE #713: Mark new API as experimental

Descriptions of the changes in this PR:

mark new api as experimental - `InterfaceStability.Unstable`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #736 from sijie/mark_api_experimental, closes #713

TREE:tree 511c2ff385e7669464b0234e3df154ec6eeeeff1 ------
TIME:11/16/2017 14:00:47

COMMIT:Updated site at revision c9a150b

TREE:tree f00e4ef296ebf38e8206b627aa75a05643636b67 ------
TIME:11/16/2017 13:59:48

COMMIT:ISSUE #726: Unit Tests failure with BKMetadataVersionException

Descriptions of the changes in this PR:

Problem:

The problem is introduced after making storing ctime optional. the verification become inconsistent because the way how ctime was assigned and compared. It causes the test cases failing in #726

Solution:

This change is to change `isConflict` to ignore comparing ctime if client disables storing system time as ctime.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #730 from sijie/fix_ctime_issue, closes #726

(cherry picked from commit c9a150b58fb1c8636dabbd7930bc3acffbf89881)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 815478fd5f16bda3e888b1d01d6276f172fb2641 ------
TIME:11/16/2017 13:54:42

COMMIT:ISSUE #726: Unit Tests failure with BKMetadataVersionException

Descriptions of the changes in this PR:

Problem:

The problem is introduced after making storing ctime optional. the verification become inconsistent because the way how ctime was assigned and compared. It causes the test cases failing in #726

Solution:

This change is to change `isConflict` to ignore comparing ctime if client disables storing system time as ctime.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #730 from sijie/fix_ctime_issue, closes #726

TREE:tree 412b53fbb0c48e88585d11eef4ee010956e33516 ------
TIME:11/16/2017 13:54:42

COMMIT:Updated site at revision e253ca3

TREE:tree 7ead8c40f0aafc432e10bae10a0a2f51df6a5460 ------
TIME:11/14/2017 15:32:47

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.5.1

TREE:tree da41bb35bd87cb3cd211a27b3bf90524f55cc27d ------
TIME:11/14/2017 15:12:39

COMMIT:[maven-release-plugin] prepare release release-4.5.1

TREE:tree ceb50d25c43c9b1aafcb4b12d485f215f2f09413 ------
TIME:11/14/2017 15:11:23

COMMIT:ISSUE #724: fix wrong link for slack signup

Descriptions of the changes in this PR:
Change the link of slack signup from http://apachebookkeeper.slack.com/ to https://apachebookkeeper.herokuapp.com/ in https://bookkeeper.apache.org/community/slack/ and click the self-register link.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #725 from jiazhai/issue-724, closes #724

(cherry picked from commit e253ca32eb2f9f06b7525b85e7fa2ca870e6d0fa)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 5ac604900e9985eed24ad0fad3da3c75fb804689 ------
TIME:11/14/2017 10:31:38

COMMIT:ISSUE #724: fix wrong link for slack signup

Descriptions of the changes in this PR:
Change the link of slack signup from http://apachebookkeeper.slack.com/ to https://apachebookkeeper.herokuapp.com/ in https://bookkeeper.apache.org/community/slack/ and click the self-register link.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #725 from jiazhai/issue-724, closes #724

TREE:tree 000cb5fd6c0f9d2b08c2e641bd50f80c3f43dd05 ------
TIME:11/14/2017 10:31:38

COMMIT:Updated site at revision ed7696b

TREE:tree 1c3bcb21841df29daea84b87ae7fecfd7dc17619 ------
TIME:11/13/2017 20:07:09

COMMIT:Bookies should not queue read request indefinitely

Integrating some changes made to Yahoo bookkeeper by Matteo Merli.

The apache bookkeeper thread pool in use by OrderedScheduler is different, and does not have access to setting a queue size limit, so I created QueueAssessibleExecutorService, and check the queue size instead.  Other than that, this code change is pretty similar to Yahoo's.

Original bug description for this change:

Since we are using a thread pool to handle read requests in bookies, we have seen that when the Bookie read IO is maxed out, the requests are being accumulated in the bookie.

Essentially, the bookie is busy serving read requests that have already been timed out on the client side (end to end read latency can reach hours..). The queue keeps growing indefinitely, leading to OOM errors and bookie restart.

All unit tests pass for me locally with this change.

Author: Aaron Gresch <agresch@yahoo-inc.com>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #706 from agresch/agresch_cms1254

(cherry picked from commit ed7696b130a0b7b6fb63b4d37c4a873fa1f8f96f)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree dd4110839198314ea4b59351747eee9bf2e3eaac ------
TIME:11/13/2017 20:01:56

COMMIT:Bookies should not queue read request indefinitely

Integrating some changes made to Yahoo bookkeeper by Matteo Merli.

The apache bookkeeper thread pool in use by OrderedScheduler is different, and does not have access to setting a queue size limit, so I created QueueAssessibleExecutorService, and check the queue size instead.  Other than that, this code change is pretty similar to Yahoo's.

Original bug description for this change:

Since we are using a thread pool to handle read requests in bookies, we have seen that when the Bookie read IO is maxed out, the requests are being accumulated in the bookie.

Essentially, the bookie is busy serving read requests that have already been timed out on the client side (end to end read latency can reach hours..). The queue keeps growing indefinitely, leading to OOM errors and bookie restart.

All unit tests pass for me locally with this change.

Author: Aaron Gresch <agresch@yahoo-inc.com>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #706 from agresch/agresch_cms1254

TREE:tree b22684b8a16e1a414546af7d45acbd3d4afe8957 ------
TIME:11/13/2017 20:01:56

COMMIT:Updated site at revision 388d4a4

TREE:tree 4f6375e321b7aeacacd19f72c84b5e169850d1b5 ------
TIME:11/12/2017 09:22:40

COMMIT:ISSUE #694: ReadHandle doesn't have getLength() method

Descriptions of the changes in this PR:

- add `getLength()` to ReadHandle interface
- add `getLastAddPushed` to WriteHandle interface
- add unit tests and fix issue in MockBookKeeperTestCase

Author: Jia Zhai <jiazhai@users.noreply.github.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #715 from sijie/api/support_get_length, closes #694

(cherry picked from commit 388d4a4c73dfe0f5ed0adc9f77f37ffd9457d117)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree d479a9343a1a5a5c16d3404c0e28f65c362bf828 ------
TIME:11/12/2017 09:18:04

COMMIT:ISSUE #694: ReadHandle doesn't have getLength() method

Descriptions of the changes in this PR:

- add `getLength()` to ReadHandle interface
- add `getLastAddPushed` to WriteHandle interface
- add unit tests and fix issue in MockBookKeeperTestCase

Author: Jia Zhai <jiazhai@users.noreply.github.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #715 from sijie/api/support_get_length, closes #694

TREE:tree c624563bb5d88dcc995f23cb60164b615cbd1e66 ------
TIME:11/12/2017 09:18:04

COMMIT:Updated site at revision dad7e2c

TREE:tree fedee2900d13f27a157c85b1e0f04a1d59b34f32 ------
TIME:11/12/2017 08:18:30

COMMIT:ISSUE #612: Make bookie recovery work with recovering multiple bookies

Descriptions of the changes in this PR:

This is a change ported from twitter branch.

- Enable recovering multiple bookies in bookie shell
- Add a unit test for BookieShell.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #714 from sijie/recover_command_fix, closes #612

(cherry picked from commit dad7e2ce0d1cf8f04c7e2f128900ea69792c948d)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree b89579f76887e46c1c2d3f9eb63d3ef1088a8d18 ------
TIME:11/12/2017 08:13:56

COMMIT:ISSUE #612: Make bookie recovery work with recovering multiple bookies

Descriptions of the changes in this PR:

This is a change ported from twitter branch.

- Enable recovering multiple bookies in bookie shell
- Add a unit test for BookieShell.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #714 from sijie/recover_command_fix, closes #612

TREE:tree 2eb7103d4e24aa177133f4ef5663fd3d57bd887e ------
TIME:11/12/2017 08:13:56

COMMIT:Updated site at revision a9b64e6

TREE:tree e8427945d55f292bca603c6c809a5be0957a9340 ------
TIME:11/12/2017 08:07:21

COMMIT:ISSUE #490: Add a flag to not serialize `ctime` field

Descriptions of the changes in this PR:

This request is for DL bookkeeper version upgrade. Because twitter's bk version doesn't include this change, so any ledgers written by new bk version will fail to be read by old version. To simplify the upgrade story, it is good to allow not serialize ctime field.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #718 from sijie/flag_to_not_serialize_ctime, closes #490

(cherry picked from commit a9b64e61598a987ffa6249ab398215436a7928f2)
Signed-off-by: Jia Zhai <zhaijia@apache.org>

TREE:tree 87730b227cd418d3b0d98f948b74f00ed1d15983 ------
TIME:11/12/2017 08:02:25

COMMIT:ISSUE #490: Add a flag to not serialize `ctime` field

Descriptions of the changes in this PR:

This request is for DL bookkeeper version upgrade. Because twitter's bk version doesn't include this change, so any ledgers written by new bk version will fail to be read by old version. To simplify the upgrade story, it is good to allow not serialize ctime field.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #718 from sijie/flag_to_not_serialize_ctime, closes #490

TREE:tree 5a6635cc5afbee187a51e54991b96fa6b44e03e5 ------
TIME:11/12/2017 08:02:25

COMMIT:ISSUE #716: PendingAddOp accesses a released ByteBuf

Descriptions of the changes in this PR:

- release `toSend` bytebuf only when a PendingAddOp is recycled.
- fix MockBookKeeperTestCase to run callbacks in the same executor thread.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #717 from sijie/issue_176, closes #716

(cherry picked from commit dd7dc6399504b246c65f7a09657597578b81cb6c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree d1b588cf29d74ba9b3730a0976e7f9335c901b05 ------
TIME:11/11/2017 22:55:57

COMMIT:ISSUE #716: PendingAddOp accesses a released ByteBuf

Descriptions of the changes in this PR:

- release `toSend` bytebuf only when a PendingAddOp is recycled.
- fix MockBookKeeperTestCase to run callbacks in the same executor thread.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #717 from sijie/issue_176, closes #716

TREE:tree 20cfde9150d3ac13484bd65fae927b20252d9e5b ------
TIME:11/11/2017 22:55:57

COMMIT:Updated site at revision e713953

TREE:tree 47d0cff5c63a108022c7caa1291dbf2207dd6109 ------
TIME:11/11/2017 02:02:05

COMMIT:ISSUE #691: Move generated files into their own module

Upcoming changes are using GRpc in conjunction with protobuf. GRpc
generates code that created deprecation warnings when compiled with
java 8, so this change moves all generated code out to another module,
so that we don't have to turn off -Werror for all code.

In any case, at some point we should split the bookkeeper client out
from the server module, at which point we would need the definitions
on a common place.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #711 from ivankelly/proto-module, closes #691

TREE:tree 8fd6561903acf3205c2cf430c98c3c429ae7bc06 ------
TIME:11/11/2017 01:51:29

COMMIT:ISSUE #507: Introduce @FlakyTest annotation for marking a few tests as flaky

Descriptions of the changes in this PR:

- introduced FlakyTest annotation
- mark a few tests as flaky tests (create issues for them)

Author: Sijie Guo <sijieapache.org>

Reviewers: Jia Zhai <None>

This closes #504 from sijie/mark_test_as_failures, closes #507

Descriptions of the changes in this PR:

(PR description content here)...

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #710 from ivankelly/flakey-4.5, closes #507

TREE:tree da41bb35bd87cb3cd211a27b3bf90524f55cc27d ------
TIME:11/10/2017 10:54:35

COMMIT:ISSUE #707: NOTICE file should not contain references to JLine

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #708 from eolivelli/notice-jline, closes #707

(cherry picked from commit d0c11d0bf982208008c1f45e62038a33e7d9a73d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fe419ab6d45f119d9d22695ab9f9fad842283093 ------
TIME:11/09/2017 01:55:39

COMMIT:ISSUE #707: NOTICE file should not contain references to JLine

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #708 from eolivelli/notice-jline, closes #707

(cherry picked from commit d0c11d0bf982208008c1f45e62038a33e7d9a73d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 9b3181e9156276350abcf63d0108f47e13b17055 ------
TIME:11/09/2017 01:55:39

COMMIT:ISSUE #707: NOTICE file should not contain references to JLine

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #708 from eolivelli/notice-jline, closes #707

TREE:tree 715d29cdd9f572ba98f0c559e80435fbaf75cc45 ------
TIME:11/09/2017 01:55:39

COMMIT:Updated site at revision 3392bee

TREE:tree 0dcf8a5f97b6e5e4c6624964bbc0d74a6d110e1f ------
TIME:11/08/2017 12:36:59

COMMIT:BOOKKEEPER-1040: Use separate log for compaction and add transaction support

Problem:
Compaction might keep generating duplicated data which would cause disk full.
This is because we don't have transactional operation for compaction. So if compaction
keeps failing in the middle, bookie would end up with a lot of garbage data.

Change:
1. Introduce abstract class AbstractLogCompactor with an interface compact().
2. Move the existing compaction logic to a separate class called EntryLogCompactor.
3. Introduce transactional compaction, we can recover an incomplete compaction or rollback a compaction failure.
4. Add an configuration to enable transactional compaction

Potential Risk:
1. No risk if we keep using the default compactor.
2. If we choose to enable transactional compaction with separate log file, we need to be careful about it, since we use a separate log for compaction, if we have a lot of old small ledgers in the bookie, we will end up with a lot of small entry log files. And this will potentially cause bookkeeper "Too many open files" because GC will scan all the entry log files and keep them open.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #704 from yzang/yzang/BOOKKEEPER-1040

TREE:tree df18839bcb78738c25d2a3b85b79dc8c045476a9 ------
TIME:11/08/2017 12:27:20

COMMIT:Updated site at revision 0ae8abc

TREE:tree 8c31f048825883add3f735fc5adbe54ea2bbcc9f ------
TIME:11/07/2017 20:35:48

COMMIT:ISSUE #699: Docker healthchek is failing #699

The docker healthcheck is failing because it's trying to run the
bookkeeper command without specifying a path.

Adding the full path to the command fix this issue.

Signed-off-by: Antonio Ojea <antonio.ojea.garciagmail.com>

Descriptions of the changes in this PR:

(PR description content here)...

Author: Antonio Ojea <antonio.ojea.garcia@gmail.com>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #700 from itsuugo/issue#699, closes #699, closes #699

TREE:tree 38f624e7575cc301a8091c5e94f57a7457b463b8 ------
TIME:11/06/2017 15:47:17

COMMIT:Landing pages documentation fixes

There were a few "broken windows" on the current landing pages for the different versions of BookKeeper, including mis-applied code backticks, an incorrect HTML code (`&trades;` instead of `&trade;`), etc.

Author: Luc Perkins <lucperkins@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #702 from lucperkins/bugs/docs-main-page

TREE:tree a0e7f66fe951b0cb06c9979b0c2af18b58cfadd8 ------
TIME:11/07/2017 20:25:59

COMMIT:add .travis.yml to skip build asf-site branch (#703)

* add .travis.yml to skip build asf-site branch
TREE:tree 1fdeb91aa351cdaf8f24e625167a9f7c7cca152a ------
TIME:11/06/2017 22:12:32

COMMIT:Updated site at revision cbf6668

TREE:tree 0686bd857ba6eb7e3de126ed36f226f3ec08fd4a ------
TIME:11/06/2017 15:57:05

COMMIT:ISSUE #699: Docker healthchek is failing #699

The docker healthcheck is failing because it's trying to run the
bookkeeper command without specifying a path.

Adding the full path to the command fix this issue.

Signed-off-by: Antonio Ojea <antonio.ojea.garciagmail.com>

Descriptions of the changes in this PR:

(PR description content here)...

Author: Antonio Ojea <antonio.ojea.garcia@gmail.com>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #700 from itsuugo/issue#699, closes #699, closes #699

TREE:tree ad5947d9236eae2538b7315c2fd078921a4ea3a5 ------
TIME:11/06/2017 15:47:17

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.5.1

TREE:tree 56d87c3bc4d9a2503997803bb9de741e6226fe83 ------
TIME:11/06/2017 10:47:51

COMMIT:[maven-release-plugin] prepare release release-4.5.1

TREE:tree fa224f791993efd391160d32fd690626a2be0cee ------
TIME:11/06/2017 10:47:14

COMMIT:Updated site at revision 8b2ead6

TREE:tree 310881d4d91292ed56c5cdf9077b1a3bd9679c33 ------
TIME:11/04/2017 03:35:02

COMMIT:ISSUE #696: copy site/docs/4.5.0 to site/docs/4.6.0

Descriptions of the changes in this PR:
copy site directory in order to start new release for 4.6.0,
and then documentation changes of release 4.6.0 will be based on this, to make changes more clear.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #698 from jiazhai/issue-696, closes #696

TREE:tree cf34ef78b79ef91f0f82d805364ccf102d844217 ------
TIME:11/04/2017 03:19:00

COMMIT:fix merge script (#692)

The merge script is broken due to a typo in 4c2e90d2536676f14df944c5d8b4288362aa48b9

TREE:tree 7880ff22034ff0dadefbb7d78fe65ed91ea873cb ------
TIME:11/04/2017 03:15:54

COMMIT:Updated site at revision 3ce2fb7

TREE:tree 75bcac67a085920d27336c72dbdaa4e6cbd7a8fb ------
TIME:11/03/2017 17:22:37

COMMIT:ISSUE #501: Fix race in CompactionTest

testMinorCompactionWithNoWritableLedgerDirsButIsForceGCAllowWhenNoSpaceIsSet
was failing regularly on jenkins. The issue was that it was trying to
kick off a forced garbage collection by setting the force flag and
triggering. However, in some cases another GC would be running and
would clear the flag after it had been set, but before the trigger was
called.

This patch adds a new form of triggering which allows the caller to
explicitly specify which flags will be active for the GC run.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #690 from ivankelly/make-compat-fail, closes #501

TREE:tree 41d924f056f6c0bc64b52374a714ebd074aa674c ------
TIME:11/03/2017 17:13:33

COMMIT:[maven-release-plugin] prepare branch branch-4.5

TREE:tree 56d87c3bc4d9a2503997803bb9de741e6226fe83 ------
TIME:11/03/2017 11:22:07

COMMIT:[maven-release-plugin] prepare branch branch-4.5

TREE:tree 51f0ff44dc24e2f7980bee931dbf0505c2476a1f ------
TIME:11/03/2017 11:21:21

COMMIT:ISSUE #685: Merge script: make DEV_BRANCH_NAME configurable

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #686 from eolivelli/fix/issue-683-merge-other-branch, closes #685

TREE:tree d5f8aeb94fb426d943fa6c31e3bfbf5d7dec846b ------
TIME:11/03/2017 08:40:13

COMMIT:ISSUE #681: Deploying bookkeeper in k8s using StatefulSets

Descriptions of the changes in this PR:

Provide a yaml file to deploy bookkeeper in k8s using [StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/)

Author: Sijie Guo <sijie@apache.org>
Author: Ivan Kelly <ivank@apache.org>
Author: eolivelli <eolivelli@apache.org>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Jia Zhai <None>

This closes #682 from sijie/k8s/statefulsets, closes #681

TREE:tree 5b8a364c146f48ec3fb03887556f3360c7774ba4 ------
TIME:11/02/2017 20:11:03

COMMIT:ISSUE #683: Correctly update length in LedgerHandleAdv

Commit 7b1eec introduced a change which removed the length parameter
to doAsyncAddEntry. This resulted in the length of the ledger being
added to itself each time for a LedgerHandleAdv, which ultimately
meant that that length would be 0, as it never had anything non-zero
added to it.

This change corrects this, by adding the length of the data parameter
to the ledger length.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #684 from ivankelly/len-fix, closes #683

TREE:tree 4f1636b0055d361cf2b452fb3fa1008b25f69bcf ------
TIME:11/02/2017 12:58:20

COMMIT:Recycle AddRequest/AddResponse objects

This change was originally afd0ecb6 & 75bf0fa1 on the yahoo-4.3 branch

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #665 from ivankelly/yahoo-bp-2

TREE:tree cb4f4616edc7ed7bfb3b35eb2eed456a6bf33ab8 ------
TIME:11/02/2017 07:55:15

COMMIT:Update exception handling in constructing bookkeeper client

TREE:tree f7e331d35afe3c6f0c2e5241e382847fb619b5ea ------
TIME:11/01/2017 09:39:24

COMMIT:Fix DistributedSchedule.WriteSet compilation issue

DisributedSchedule writeset structure is changed in recent 4.6.0-SNAPSHOT version

TREE:tree 2bfd41aac0fda280eab6b0b20a38278c91fdb90f ------
TIME:10/31/2017 09:31:51

COMMIT:ISSUE #666: Introduce registration client for bookkeeper client to do bookie discover

Descriptions of the changes in this PR:
while in BOOKKEEPER-628, It is trying to improve/generalize the bookie registration process.

This PR follows the work of #663, which provide bookie side registration, and it is for client side work, it tries to introduce RegistrationClient for bookkeeper client to do bookie discover.

This PR follows the work of #663, which provide bookie side registration,

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #667 from zhaijack/client_registration2, closes #666

TREE:tree e1186f3df58af98aa14b1a437dfdbb5cb05b4625 ------
TIME:11/01/2017 03:43:18

COMMIT:Recycle PendingAddOps

Avoid creating a new PendingAddOp object for each entry added, thus
saving on garbage.

Originally commit 55ba4723 on the yahoo-4.3 branch.

Author: Ivan Kelly <ivank@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #664 from ivankelly/yahoo-bp-1

TREE:tree 1606c5e6fe7cbb8e23238d82b7912dd530bb8f91 ------
TIME:11/01/2017 03:31:21

COMMIT:Copy site from 4.5.0 to 4.5.1

Copy site directory in order to start new release notes for 4.5.1

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #680 from eolivelli/release-notes-451-copy

TREE:tree d86988d611300cae57a1169002e03c980716a34d ------
TIME:10/31/2017 06:26:22

COMMIT:Recycle instances of callback to obtain a PerChannelBookie client

This change was originally commit e2e77863 in the yahoo-4.3 branch.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #679 from ivankelly/yahoo-bp-3

TREE:tree a44102522b0b21caf131e2fe1dfe14d5a111e732 ------
TIME:10/30/2017 20:49:34

COMMIT:DistributionSchedule uses custom wrapped int[] rather than HashSet

This avoids the autoboxing on Integers and allocations of cells for
the hashset.

This also implies using wrapped int[] object for the write set in the
DistributionSchedules and PlacementPolicies.

This patch was originally submitted as dc7933b on the yahoo-4.3
branch, though this has been modified extensively to remove the
dependency on carrotsearch hppc and to allow it to work with placement
policies which didn't exist at the time of the original patch.

Author: Ivan Kelly <ivank@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #657 from ivankelly/yahoo-backports

TREE:tree 334c5312b5649b9fb6f01a7a5a92343ed95d01ca ------
TIME:10/30/2017 20:47:18

COMMIT:DLFS - A FileSystem API wrapper over dlog API

Descriptions of the changes in this PR:

- FileSystem API wrapper built over dlog API

(This is based on initial implementation from gerritsundaram at #43)

Features supported:

- create and append files
- open files for reading
- input stream and output stream for reading and writing data
- list files
- get file status
- rename
- mkdir

Features aren't supported:

- truncate
- currently there is no clear distinguish between file and dir
- only support delete recursive

(This change includes small changes for #224 #225 #226 ).

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #227 from sijie/fix_create_log

TREE:tree 798841ea406043d00ab3674db04200d698f96b2c ------
TIME:10/30/2017 05:17:01

COMMIT:ISSUE #675: Enable checkstyle in a few packages

These packages include:

- feature
- processor
- shims
- stats
- streaming
- versioning
- zookeeper

not fully enabled in conf package.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #676 from sijie/fix_checkstyles, closes #675

TREE:tree bfa4a005feb031de290e2fb6e426a21ad7828814 ------
TIME:10/29/2017 03:28:10

COMMIT:ISSUE #265: Add persistable bookie status

Descriptions of the changes in this PR:

- Add support for persisting bookie status
- Add configuration to enable/disable this feature
- Add test cases
- Improve bookie status stat

It also includes changes for BOOKKEEPER-754 (flush ledger storage after replaying journal)

Author: Sijie Guo <sijie@apache.org>
Author: Yiming Zang <yzang@twitter.com>

Reviewers: Yiming Zang <yzang2016@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

This closes #266 from sijie/server_side_crc32, closes #265

TREE:tree 9efb40f13303f158963990e84b4c8bb4e31337d8 ------
TIME:10/28/2017 01:13:10

COMMIT:ISSUE #596 ISSUE #583: Auto replication should honor ensemble placement policy

Descriptions of the changes in this PR:

This pull request ports the changes from [twitter/bookkeeperfc7e171](https://github.com/twitter/bookkeeper/commit/fc7e171135a58cddb9e91f5f614b3ceb6f9f9fee)

The changes include:

1. when bookkeeper admin re-replicates a ledger, it will pick a bookie from the available bookies in the cluster to satisfy the placement constraint. (#596)
2. hence, remove `targetBookie` from ReplicationWorker, because the parameter will volatile the placement constraint. (#583)
3. at the same time, change `LedgerFragement` to represent the number of bookies that need to be check and replicate. a) the ledger checker can use the correct bookie index for verifying the existence of entries in a bookie (for stripping case) b) only read entries one time when need to replicate them to multiple bookies.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #641 from sijie/twitter_autorecovery_fixes, closes #596, closes #583

TREE:tree 3fc141ea9ee61b502244c5bf8663810e272b6e6e ------
TIME:10/28/2017 01:09:48

COMMIT:ISSUE #662: Introduce Bookie Registration Manager for bookie server

Descriptions of the changes in this PR:
While in BOOKKEEPER-628, It is trying to improve/generalize the bookie registration process.
This PR is for bookie side, it tries to introduce Bookie registration manager for bookie server.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #663 from zhaijack/bookie_registration, closes #662

TREE:tree f5e2bf8263a2324b326d87510d5bdd5e6f16bdf1 ------
TIME:10/27/2017 20:58:19

COMMIT:Recycle instances of WriteEntryProcessor and ReadEntryProcessor

merge of some changes from Yahoo's repo

Author: Aaron Gresch <agresch@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

This closes #669 from agresch/agresch_recycle_entryprocessor

TREE:tree 447231a6eb54350f4a5eb6dfb3c7c24f1b072487 ------
TIME:10/27/2017 20:51:32

COMMIT:Fail earlier when encountering DNS issues

We had some DNS issues today and various TestRegionAwareEnsemblePlacementPolicy tests were failing for me.

The LOG warning in RackawareEnsemblePlacementPolicyIml was not printing the right variable, which would have given a clue.

Additionally, the repp.myRegion was set to UNKNOWN, causing incorrect code flow.  Added an assert to kill the test as soon as this occurs.

Author: Aaron Gresch <agresch@yahoo-inc.com>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #658 from agresch/agresch_dns_failure

TREE:tree c89309035439c60bfff82aeeae2ca51516ca8c56 ------
TIME:10/25/2017 15:59:40

COMMIT:ISSUE #606: Enhancements in developer environment

Improvements in maven configuration in order to speed up development

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>

This closes #661 from eolivelli/plugins-upgrade, closes #606

TREE:tree 2bd54dfc4aa2ead377cac198281e43dde282fada ------
TIME:10/25/2017 15:45:27

COMMIT:ISSUE #226: ByteBuf.release() was not called before it's garbage-collected

Descriptions of the changes in this PR:

the problem is a new entry buffer was allocated when closing log segment writer. the entry buffer is never used and also never recycled. It causes an annoying logging.

the fix is to assign a dummy entry writer which basically rejects writes, when closing a log segment writer. it would prevent leaking bytebuf.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #230 from sijie/fix_bytebuf_release_pr, closes #226

TREE:tree a079af1762894e15462db5f88545041a2da11d39 ------
TIME:10/24/2017 13:56:42

COMMIT:ISSUE #224: listing logs should exclude <default>

Descriptions of the changes in this PR:

exclude `<default>` from listing logs

(the tests are covered by #227)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #229 from sijie/fix_listing_log_pr, closes #224

TREE:tree 312a854e4f0705fc5928007dccb6d67d48b26cab ------
TIME:10/24/2017 13:49:19

COMMIT:Issue 225: Create log should create missing path components

Descriptions of the changes in this PR:

reuse the methods used by `rename` to create missing path components.

(the test is covered by #227)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #228 from sijie/fix_create_log_pr

TREE:tree 21aa2208abd5cf24c175865e225149c35292848d ------
TIME:10/24/2017 13:35:36

COMMIT:Pool AddCompletions

To avoid generating garbage in the fastpath.

Author: Ivan Kelly <ivan@midokura.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #649 from ivankelly/pool-completions

TREE:tree df651c52d17725e5381e33fb05b59bf59573f25c ------
TIME:10/24/2017 12:58:43

COMMIT:Pool the V2 keys

To generate less garbage in the fast path.

Author: Ivan Kelly <ivan@midokura.com>
Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #648 from ivankelly/pool-keys

TREE:tree 5f940b66dc637e025aa2b87f3a536bf10005aa2b ------
TIME:10/23/2017 22:19:10

COMMIT:Fix a typo in PCBC logging

All ops had writeLac in their logged text, which is confusing

Author: Ivan Kelly <ivan@midokura.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #647 from ivankelly/pcbc-typo

TREE:tree 40677e9c2439c45d59a82e399b578f3dcf48d4b7 ------
TIME:10/23/2017 20:59:25

COMMIT:ISSUE #209: Support rename log

Descriptions of the changes in this PR:

- add rename operation in `Namespace`
- add rename operation in `LogStreamMetadataStore`
- implement the rename operation use zookeeper `multi` operation

Author: Sijie Guo <sijie@apache.org>
Author: Shoukun Huai <shoukunhuai@gmail.com>
Author: Arvin <arvindevel@gmail.com>

Reviewers: Jia Zhai <None>

This closes #210 from sijie/4_support_rename_pr, closes #209

TREE:tree db58c43eb5879300e69ac1e195bbbdc99223fdec ------
TIME:10/23/2017 11:14:02

COMMIT:ISSUE164: Move findbug settings files to distributedlog-build-tools

Descriptions of the changes in this PR:

Move findbug settings files to distributedlog-build-tools,
and a little change to bk-shade: add bk-common dependency and unshade netty.

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #216 from ArvinDevel/issue164

TREE:tree 1428d9eaf30fa5be8bdac3446f27afd35df81371 ------
TIME:10/23/2017 08:45:16

COMMIT:ISSUE164: Move findbug settings files to distributedlog-build-tools

Descriptions of the changes in this PR:

Move findbug settings files to distributedlog-build-tools,
and a little change to bk-shade: add bk-common dependency and unshade netty.

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #216 from ArvinDevel/issue164

TREE:tree 06f705ef8c0bd3d86dd7c1b6252b8d06adb3f6a3 ------
TIME:10/23/2017 08:45:16

COMMIT:ISSUE164: Move findbug settings files to distributedlog-build-tools

Descriptions of the changes in this PR:

Move findbug settings files to distributedlog-build-tools,
and a little change to bk-shade: add bk-common dependency and unshade netty.

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #216 from ArvinDevel/issue164

TREE:tree d11d1e57568ca142394cbabe434fd49e6e86d32c ------
TIME:10/23/2017 08:45:16

COMMIT:Increase timeouts in TestDisableEnsembleChange

In some narrow cases, if we manage to connect to the bookie, but the bookie
hasn't fully initialized, an add entry message will be dropped, and the
client will wait for the timeout to complete. The timeout is 5 seconds
by default, which was 5x the timeout in the test. This patch increases
the test timeout to 10s, which should give enough time for the addEntry
to fail and be retried.

Author: Ivan Kelly <ivan@midokura.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #646 from ivankelly/ensemble-change-test

TREE:tree fe533c8bb33679611a984f143c70f6829db61f27 ------
TIME:10/21/2017 00:19:08

COMMIT:Fix concurrent v2 reads on the same ledger/entry

Original fix from by merlimat in the yahoo-4.3 branch

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #645 from ivankelly/con-read-v2-fix

TREE:tree ad846bce8f008b24d0a3fded96e971b4d88e2c38 ------
TIME:10/19/2017 01:43:31

COMMIT:ISSUE #211: Support listing logs by prefix

Descriptions of the changes in this PR:

- extend `getLogs` to `getLogs(prefix)`, so it provides a filesystem `listFiles`-like semantic.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #212 from sijie/5_support_list_logs_by_prefix_pr, closes #211

TREE:tree a5cc47574c418cebd2f485851513b8d90c56f6ba ------
TIME:10/19/2017 00:14:16

COMMIT:Fixed ref counting release on read errors

Original change by merlimat in yahoo-3.4 branch

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #644 from ivankelly/fix-ref-read

TREE:tree a31ecb44098ff6355b4101d01f27c8f0311a50eb ------
TIME:10/18/2017 22:40:04

COMMIT:ISSUE #207: Support getFirstLogRecord

Descriptions of the changes in this PR:

- support getFirstLogRecord

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #208 from sijie/3_get_firstrecord_pr, closes #207

TREE:tree 44054ad325496dad2224ab98a8392ffc2fbeccf8 ------
TIME:10/18/2017 22:09:34

COMMIT:Issue 201: Fix the flaky test TestBKDistributedLogManager.deleteDuringRead

This closes #204, #201 
TREE:tree fff8dcbcd5a5a6354fd870fa5f6627d865f5853f ------
TIME:10/18/2017 22:06:39

COMMIT:ISSUE173: Implement AutoCloseable in BKDistributedLogNamespace

Descriptions of the changes in this PR:

Implement AutoCloseable in BKDistributedLogNamespace

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #214 from ArvinDevel/issue173

TREE:tree cba911d3c5b54f9cba66b500bf5df9cd67ef1356 ------
TIME:10/18/2017 21:16:58

COMMIT:ISSUE #213: Correct logger name in BKLogWriteHandler

correct logger name in BKLogWriteHandler

Descriptions of the changes in this PR:

(PR description content here)...

Author: Shoukun Huai <shoukunhuai@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #215 from shoukunhuai/issue-213, closes #213

TREE:tree a6f40c31986aace4fba44f92d5881213052c89a3 ------
TIME:10/18/2017 21:14:58

COMMIT:Use ByteBuf for entrylogger reads

Original patch from merlimat in yahoo-4.3 branch

Author: Matteo Merli <mmerli@yahoo-inc.com>
Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Ivan Kelly <ivank@apache.org>

This patch had conflicts when merged, resolved by
Committer: Enrico Olivelli <eolivelli@apache.org>

This closes #640 from ivankelly/refcount-for-read

TREE:tree 79422a33cf8072b0d47d0a7f9935bf8f0847dfe5 ------
TIME:10/18/2017 09:24:17

COMMIT:Recycle buffers used in EntryLogger#addEntry

To avoid creating a buffer and letting it go out of scope and be GC'd
each time.

This change was originally made by merlimat in the yahoo-4.3 branch.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>, Ivan Kelly <ivank@apache.org>

This closes #639 from ivankelly/recycle-buf

TREE:tree c589ea66d7a322ba2979ae9449fddc3043688a85 ------
TIME:10/18/2017 09:17:38

COMMIT:Fix for BookKeeperBuildersTest

Previous findbugs fix broke it.

Author: Ivan Kelly <ivan@midokura.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #638 from ivankelly/bkbuildertest-fail

TREE:tree b417e6efb7e49393d593b35086fccfc11b7f7906 ------
TIME:10/18/2017 09:15:40

COMMIT:ISSUE #559: Fix findbugs error on SyncCallbackUtils

Fix FindBugs warning BC_UNCONFIRMED_CAST in  class SyncCallbackUtils

Author: eolivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>, Jia Zhai <None>

This closes #560 from eolivelli/findbugs-synccallback, closes #559

TREE:tree d26ee033c6ac47de38c7ab45b60266b9fc6abb87 ------
TIME:10/17/2017 18:22:08

COMMIT:Updated site at revision 40a7f1d

TREE:tree 5af12a6ce44cf78b57a3a40508852669ec46f7f2 ------
TIME:10/17/2017 09:40:02

COMMIT:BOOKKEEPER-1062: Fixed the race in AuditorLedgerCheckerTest

Descriptions of the changes in this PR:

This fixes the race condition in the auditor between read only bookies and available bookies.  But because I am not sure of the performance impacts to modifying getReadOnlyBookies, I have opted to add in a new getROBookies.  But I am happy to change it.  This pull request is mostly to show my work and see what others think.

Author: Robert Evans <evans@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #556 from revans2/BOOKKEEPER-1062

TREE:tree bbacb5e6df34803012354ea8209545a327f5e5c4 ------
TIME:10/17/2017 09:32:47

COMMIT:ISSUE #561: Remove exec commands to start in the shell pid

Author: Ali Ahmed <a.ahmed@streaml.io>

Reviewers: Enrico Olivelli <eolivelli@apache.org>, Jia Zhai, Sijie Guo <sijie@apache.org>

This closes #557 from aahmed-se/master, closes #561

TREE:tree d2cbd5407dfd54cf185792454f41ee0f2b489914 ------
TIME:10/17/2017 09:26:37

COMMIT:Updated site at revision bd50cac

TREE:tree f5383632f63e21206f1fa1228b9dcb044b1bb016 ------
TIME:10/13/2017 18:20:52

COMMIT:ISSUE #506: BP-15 New CreateLedger API

BP-15 New CreateLedeger API
Introduce new org.apache.bookkeeper.client.api package
Introduce new Mockito based test suite for BookKeeper client

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie.apache.org>, Ivan Kelly <ivank@apache.org>

This closes #549 from eolivelli/bp15-createledger-api-2, closes #506

TREE:tree 8b39429178e16ec6669149bd7337d0a240954557 ------
TIME:10/13/2017 18:14:29

COMMIT:Avoid copying bytebuf for constructing log record to write

TREE:tree 0347b7c7bde3cb8bb2ffe113ad1c25d2ddc7d84e ------
TIME:10/04/2017 11:48:04

COMMIT:Fix the flaky test TestBKDistributedLogManager.deleteDuringRead

TREE:tree 3410432f9f96a2bc1105cece940013cbaadd4aa0 ------
TIME:10/04/2017 12:07:05

COMMIT:ISSUE #197: Provide a guide for running on k8s

Descriptions of the changes in this PR:

add one page for how to deploy on k8s. it is based on http://bookkeeper.apache.org/docs/latest/deployment/kubernetes/ and use distributedlog image and add instructions on how to create distributedlog namespaces and run benchmark.

This change is based on #196

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #198 from sijie/add_docker, closes #197

TREE:tree fbdb2d8d5d34fccf5af147668cd025b3e56c4439 ------
TIME:10/11/2017 08:02:38

COMMIT:Updated site at revision 9537323

TREE:tree d579c1e26c8644f7f44f900ae1004d7ac9ffa929 ------
TIME:10/11/2017 07:49:50

COMMIT:ISSUE #520: Add more http endpoint

Descriptions of the changes in this PR:

#278 introduces BookKeeper Http Endpoint module. However there are only two endpoints, which is “/heartbeat” and “/api/config/serverConfig”. In order to fully leverage the http modules, The goal is to add more endpoints to this modules.
Please reference BP-17 for more details.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #521 from zhaijack/http_endpoint, closes #520

TREE:tree 8e7a43b00b5378f036a9c3bc6a8190c86b4e3adc ------
TIME:10/11/2017 07:43:46

COMMIT:Updated site at revision 7d3d02e

TREE:tree 8646c1a307a0b5bf9efd956533e01e6ac160631d ------
TIME:10/11/2017 03:50:49

COMMIT:ISSUE #547: Allow load extra lifecycle components when running a bookie server.

Descriptions of the changes in this PR:

- make a common `ServerLifecycleComponet` for the components loaded by a bookie server
- add a flag to allow start extra components.
- add test cases

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #548 from sijie/loadable_components, closes #547

TREE:tree 1d69f1367b380c3bfc47909114146e42438cc203 ------
TIME:10/11/2017 03:44:34

COMMIT:Updated site at revision 79f359f

TREE:tree 62df8dafac78c1c1a71e42f6cfc4a7d85169bf6c ------
TIME:10/10/2017 11:34:06

COMMIT:ISSUE #525: Refactor PerChannelBookieClient

There's a lot of duplicate code in PerChannelBookieClient, particularly in the completions. It makes it more difficult to add anything to the class.

Concretely the patch:
- Factors out common code from PCBC completions
- Makes erroring out a member of completion classes
- Refactors out writing and flushing messages, so all RPCs use same code path
- Moves timeout handling into CompletionValue
- Moves response handling into completions
- Moves logging and status conversion into a common method

Author: Ivan Kelly <ivan@ivankelly.net>

Reviewers: Enrico Olivelli <eolivelli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #526 from ivankelly/refactor-pcbc, closes #525

TREE:tree 0e2b3fe630b7d6fd7d38b9af2d9b9e07f0313733 ------
TIME:10/10/2017 11:28:39

COMMIT:Updated site at revision 655057c

TREE:tree 4dc18d20e0291c39824f1296c4a2d6eab785d757 ------
TIME:10/05/2017 09:30:20

COMMIT:Updated site at revision 9694fd2

TREE:tree d7464fbec56f2cea9c2093da026405203c0e73a5 ------
TIME:10/05/2017 09:26:38

COMMIT:ISSUE #534: Download docs reference old release

Descriptions of the changes in this PR:

use the latest release in the download page

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #539 from sijie/fix_documentation, closes #534

TREE:tree c13f3673e726e0d986ebb5364099d20357fcc421 ------
TIME:10/05/2017 09:24:48

COMMIT:ISSUE #540: BookieServer failed to start because lifecycle component name is not provided

Descriptions of the changes in this PR:

- add component name `bookie-server`
- remove the catch block
- fix the prometheus stats provider package name in configuration files.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #541 from sijie/fix_lifecycle_stack, closes #540

TREE:tree f768006e45174914811ccdcc174b45d926b699f1 ------
TIME:10/05/2017 09:22:40

COMMIT:ISSUE #193: Shade Bookkeeper and unshade ZooKeeper in core module

Descriptions of the changes in this PR:

Shade Bookkeeper and unshade ZooKeeper in core module

Author: Arvin <arvindevel@gmail.com>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #194 from ArvinDevel/shade_bk, closes #193

TREE:tree 0047569f985bcde33d8536e78136a3c5551960a3 ------
TIME:10/04/2017 11:04:57

COMMIT:ISSUE #165: Enable checkstyle in core module

Descriptions of the changes in this PR:

Fix checkstyle error in core module

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #192 from ArvinDevel/enable_check, closes #165

TREE:tree 4b9a6155c750c1ec8f86afa7478c40aa1da06c78 ------
TIME:10/04/2017 10:59:45

COMMIT:ISSUE #181: Enable LogRecord ByteBuf based constructor public

Descriptions of the changes in this PR:
change LogRecord ByteBuf based constructor to public

Author: Arvin <arvindevel@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #182 from ArvinDevel/issue_181, closes #181

TREE:tree 45206033cb64fe4e2733b935107d8e486501be5b ------
TIME:10/04/2017 10:48:15

COMMIT:ISSUE #537: Compilation warning on unchecked cast

Descriptions of the changes in this PR:

add `SuppressWarnings("unchecked")` in TestPrometheusMetricsProvider.java

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #538 from sijie/fix_compilation_error, closes #537

TREE:tree 0febb4e940e12c0ca8386a32417380d930c2c625 ------
TIME:10/04/2017 09:30:49

COMMIT:ISSUE #535: Prometheus metrics provider fails to initialize

Descriptions of the changes in this PR:

- the parameter of `collectorNames` should be Collector rather than String
- add test case for prometheus metrics provider
- rename the classes to under `org.apache.bookkeeper.stats.prometheus` rather than taking the common `stats` package.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #536 from sijie/fix_promethus, closes #535

TREE:tree cd18d08375107b3ac48543174e6f99d4c69b2749 ------
TIME:10/04/2017 04:51:08

COMMIT:ISSUE #499: make a package contains all the jar

Descriptions of the changes in this PR:
This is a sub-task for #458:
Make Prometheus provider the default in bk_server.conf,
Include stats providers in a -all package,

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #500 from zhaijack/all_bin, closes #499

TREE:tree bdd2eeb6fe6ef99de015bbd94baf4faad969724e ------
TIME:09/20/2017 16:36:39

COMMIT:ISSUE #274: Ensuring the right number of bookies are passed.

Descriptions of the changes in this PR:
This fixes #274. Ensures that benchmark measure right number of bookies for the warmup.

Author: arvindkandhare <arvind.kandhare@emc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #482 from arvindkandhare/issue-274-benchmarkfix, closes #274

TREE:tree 4cafbb1b0fb87c0de8acc77af9a09dea2503604f ------
TIME:08/30/2017 09:30:31

COMMIT:Updated site at revision 758cdeb

TREE:tree 41ada8f694baf77b0ab0e4fc1adfb542fbfb8a81 ------
TIME:10/04/2017 09:35:28

COMMIT:ISSUE #407: Enable allowLoopback when starting localbookie

Add allowLoopback=true flag in ServerConfiguration used in main() of LocalBookie facility

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #457 from eolivelli/issue-407, closes #407

TREE:tree 5ca960d4ab17a6e79101a6b351b1f57a462e58ce ------
TIME:08/21/2017 21:38:05

COMMIT:BOOKKEEPER-1105: RackAwarePolicy: Failure to map node into rack may result in failure to add other nodes.

- RackAwarePolicy's no longer uses /default-region if rack mapping fails unless required (by RegionAwarePolicy)
- it no longer fails to add rest of nodes after one node's failed addition,
- added unit tests
- added counters for successful/failed bookie adds/removal
(PR description content here)...

UpdateLedgerOpTest failed but it seems to be known/unrelated issue.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #425 from dlg99/fix/rackaware

TREE:tree 757b804f2c609dc779a8daf7edf6896457115fdb ------
TIME:08/16/2017 03:41:49

COMMIT:ISSUE #537: Compilation warning on unchecked cast

Descriptions of the changes in this PR:

add `SuppressWarnings("unchecked")` in TestPrometheusMetricsProvider.java

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #538 from sijie/fix_compilation_error, closes #537

TREE:tree 535f41b0c30dca8e7ca92ea9794711d64cd62246 ------
TIME:10/04/2017 09:30:49

COMMIT:ISSUE #535: Prometheus metrics provider fails to initialize

Descriptions of the changes in this PR:

- the parameter of `collectorNames` should be Collector rather than String
- add test case for prometheus metrics provider
- rename the classes to under `org.apache.bookkeeper.stats.prometheus` rather than taking the common `stats` package.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #536 from sijie/fix_promethus, closes #535

TREE:tree ed6d33b0ed366fd1eaf73a3143d17cfc25abe425 ------
TIME:10/04/2017 04:51:08

COMMIT:ISSUE #532: Drop all @Test(timeout) annotations

Simply drop the 'timeout' parameter for Test annotations, we have already a global timeout set in surefire configuration

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #533 from eolivelli/task/cleaup-timeouts, closes #532

TREE:tree 94475fde1aff0593530cc86d62554f4c7a70ad97 ------
TIME:10/04/2017 04:46:18

COMMIT:Updated site at revision 8399707

TREE:tree 12ca0a521251dc508177f52dc9668dfd350cab0c ------
TIME:10/03/2017 12:50:13

COMMIT:ISSUE #527: Introduce backoff and retry utilities

Descriptions of the changes in this PR:
Mainly want to  Introduce backoff and retires utilities:
Backoff implements various backoff strategiesis, and id intended to determine the duration after which a task is to be retried.
Retries is a util class for supporting retries with customized backoff.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #528 from zhaijack/retries_backoff, closes #527

TREE:tree 131eb6da996b706afce4b16459e393f1e89d9411 ------
TIME:10/03/2017 12:46:14

COMMIT:Updated site at revision 2bbecd7

TREE:tree f2ed850b97144903266ca6dfdeb227239e8f6143 ------
TIME:10/03/2017 12:37:21

COMMIT:BOOKKEEPER-1106: Introduce write FileInfo cache and read FileInfo cache

Problem: when read behind happens, it would quickly read bunch of ledgers, which will evict current active ledgers for writing from the ledger cache. with the ledger being evicted from cache, it would impact the write performance.

This feature is contributed by sijie , in which we introduced write file info cache and read file info cache to cache the ledger index separately for read and write, so that when catch up read happens, it will not evict the file info for writes.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>, Jia Zhai

This closes #513 from yzang/yzang/BOOKKEEPER-1106

TREE:tree 871a91f5c90bb9c9a61a41032e5622f2c9202ae8 ------
TIME:10/03/2017 12:31:59

COMMIT:ISSUE #517: port shared-resource-manager utils from distributredlog

Descriptions of the changes in this PR:

Try to portshared-resource-manager utils  from DistributedLog, so it can be used later on.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #518 from zhaijack/shared_resource, closes #517

TREE:tree 410875b931c06451399790383fd60a7cf0adae50 ------
TIME:09/27/2017 11:03:33

COMMIT:ISSUE #499: make a package contains all the jar

Descriptions of the changes in this PR:
This is a sub-task for #458:
Make Prometheus provider the default in bk_server.conf,
Include stats providers in a -all package,

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #500 from zhaijack/all_bin, closes #499

TREE:tree c30b8c588bf7441d25d59ad091f6ecfc05ab821d ------
TIME:09/20/2017 16:36:39

COMMIT:Updated site at revision 3ede9c6

TREE:tree a45a8d0056b93c9dcf7d6fcc42cfe2215a147ea4 ------
TIME:09/19/2017 11:14:38

COMMIT:ISSUE #508: Introduce lifecycle components for managing components in bookie server

Descriptions of the changes in this PR:

The motivation of creating lifecycle components is described in #508.

This changes include:

- create bookkeeper-common module, move some common classes (such as interface annotations) to common module.
- add the lifecycle components in bookkeeper-common module.
- add a package `org.apache.bookkeeper.server` for keeping all server related classes.
- rewrite BookieServer using the lifecycle components: stats provider | bookie server | auto recovery | http endpoint
- BookieServer is still kept for backward compatible, all the main functions are delegated to `org.apache.bookkeeper.server.Main`.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #509 from zhaijack/metadata/lifecycle_management, closes #508

TREE:tree 2dab96ca8b91ea8e3da15e1e0d398f7c4685c143 ------
TIME:09/19/2017 11:10:28

COMMIT:Updated site at revision eba4d6e

TREE:tree 70d804ac8c254c15fd3c4c3e813a3bae4043e11f ------
TIME:09/19/2017 01:26:53

COMMIT:ISSUE #515: Run bookies using hostIP instead of containerIP in k8s

Descriptions of the changes in this PR:

- use `status.hostIP` rather than `status.containerIP`. so the identifier (ip) of a bookie pod will not be changed after it is restarted.
- use `adverstiseAddress` to advertise hostip as the ip of a bookie pod
- change it to use `hierarchical` ledger manager

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #516 from sijie/run_bookie_using_hostport_bk, closes #515

TREE:tree 503bf4b831ca8fa20032d7983426c530642606cb ------
TIME:09/19/2017 01:23:24

COMMIT:Issue 505: Remove old generated content from http://bookkeeper.apache.org/docs/ (#512)

This closes #505 
TREE:tree 950177f7d84f30b27c11e1e468a59b1d730b52cd ------
TIME:09/16/2017 05:55:07

COMMIT:Updated site at revision aa03c52

TREE:tree cb14fc3df0bc35e08539309b345a91abcc10ed5c ------
TIME:09/16/2017 04:41:58

COMMIT:Updated site at revision aa03c52

TREE:tree 317d0da283622394272e366cf24cdec9b0d90621 ------
TIME:09/16/2017 04:41:29

COMMIT:BOOKKEEPER-31: Project Logo

Descriptions of the changes in this PR:

- upload the bookkeeper logo to site directory (including both svg and png format)
- add &trademark; to Apache BookKeeper.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #511 from sijie/BOOKKEEPER-31

TREE:tree 9c6090141b78823b6482b42f0266b1164dd27d3b ------
TIME:09/16/2017 04:38:26

COMMIT:Updated site at revision 131d127

TREE:tree ccf8c1dfef471f2a430a1b60849d6958621396de ------
TIME:09/13/2017 11:16:07

COMMIT:ISSUE #507: Introduce @FlakyTest annotation for marking a few tests as flaky

Descriptions of the changes in this PR:

- introduced FlakyTest annotation
- mark a few tests as flaky tests (create issues for them)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #504 from sijie/mark_test_as_failures, closes #507

TREE:tree dbcef4e1892384b0e5923d62ec38dee2db8887ac ------
TIME:09/13/2017 11:12:24

COMMIT:Updated site at revision d338add

TREE:tree f58ca1d269e5290069489507821ae1518bf18786 ------
TIME:09/07/2017 14:20:04

COMMIT:Updated site at revision d338add

TREE:tree f74cbcbd3fe879c4f4b52403c3fef20215b66988 ------
TIME:09/07/2017 14:19:38

COMMIT:ISSUE #494: Rename ZkVersion to LongVersion

Descriptions of the changes in this PR:

- rename `ZkVersion` to `LongVersion`
- move it from `meta` package to `versioning` package

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #495 from zhaijack/metadata/rename_zkversion_to_longversion, closes #494

TREE:tree 33b25538c4c18148d7d7b9a98a9e4c0c1ab4c68a ------
TIME:09/07/2017 14:16:27

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 16988370b71301dfd935cb988d5793a0bb293d54 ------
TIME:09/07/2017 09:37:47

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 9ad882938f460301a6ee7b0b8134d1be4e2dcd8a ------
TIME:09/07/2017 09:37:47

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 9421274146b8bbf90b7da0bebea26c50e6b4ecfb ------
TIME:09/07/2017 09:37:47

COMMIT:[maven-release-plugin] prepare branch release-0.5.0

TREE:tree 6f5f813d0baa8d41cd274ea68b6f1d4e7c186eaa ------
TIME:09/07/2017 09:37:17

COMMIT:ISSUE #160: Introduce backward compatibility testing

Descriptions of the changes in this PR:

The core testing logic is in `tests/bin/docker-backward-test.sh`.

- introduce an all module for packaging
- add docker images for 0.3.51, 0.4.0-incubating and latest
- add two backward compat testing module
- using docker images for backward compatibility testing

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <None>

This closes #175 from sijie/docker_image, closes #160

TREE:tree f478220a2bca9e03d7131817914b4677b898693d ------
TIME:09/07/2017 08:33:28

COMMIT:Updated site at revision 96a45e2

TREE:tree f58ca1d269e5290069489507821ae1518bf18786 ------
TIME:09/06/2017 05:31:07

COMMIT:ISSUE #496: some docker images don't need port forwarding

Descriptions of the changes in this PR:

some docker images don't need port forwarding. remove port forwarding from them.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #497 from sijie/remove_docker_port, closes #496

TREE:tree 86f965f79b180956dbda2cfc331112a94b26529b ------
TIME:09/06/2017 05:27:45

COMMIT:ISSUE #166: Code cleanup for 0.5.0 release

Descriptions of the changes in this PR:

- add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface.
- avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core
- enable ImportOrder checkstyle rule in some modules
- move `org.apache.distributedlog.io` to `distributedlog-common` module
- rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <None>

This closes #172 from sijie/finalize_api, closes #166

TREE:tree f9b17b1da98723ed01d9d72e208baf856355c5ac ------
TIME:09/06/2017 05:24:42

COMMIT:ISSUE #166: Code cleanup for 0.5.0 release

Descriptions of the changes in this PR:

- add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface.
- avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core
- enable ImportOrder checkstyle rule in some modules
- move `org.apache.distributedlog.io` to `distributedlog-common` module
- rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <None>

This closes #172 from sijie/finalize_api, closes #166

TREE:tree 8a192020a09a5cd4671b283d19d673c72b5f2711 ------
TIME:09/06/2017 05:24:42

COMMIT:ISSUE #166: Code cleanup for 0.5.0 release

Descriptions of the changes in this PR:

- add InterfaceAudience and InterfaceStability for public API to inform people what changes would be expected for those interface.
- avoid using guava classes in public API since we will provide a shaded jar for distributedlog-core
- enable ImportOrder checkstyle rule in some modules
- move `org.apache.distributedlog.io` to `distributedlog-common` module
- rename `setReadyToFlush` to `flush` and rename `flushAndSync` to `commit` for the new API

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <None>

This closes #172 from sijie/finalize_api, closes #166

TREE:tree 0b54d82498fd67c6b315d80bd7b57c23ea01c894 ------
TIME:09/06/2017 05:24:42

COMMIT:ISSUE #492: set the protobuf syntax to 'proto2'

Descriptions of the changes in this PR:

Explicitly set protobuf syntax to `proto2`.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #493 from zhaijack/metadata/set_protobuf_syntax_version, closes #492

TREE:tree 3579bab6b5121feb069ba44284b5f61fe80ad1a0 ------
TIME:09/06/2017 03:28:40

COMMIT:Updated site at revision efc115a

TREE:tree 8ddb92ee61a64afbc732938105d7c65cff4feea5 ------
TIME:09/01/2017 18:25:09

COMMIT:Updated site at revision efc115a

TREE:tree faccb1e9ef4bc222db770ec1d141f5119ec86c3f ------
TIME:09/01/2017 18:24:32

COMMIT:Updated site at revision 34b2920

TREE:tree 8ddb92ee61a64afbc732938105d7c65cff4feea5 ------
TIME:09/01/2017 18:21:56

COMMIT:Updated site at revision 34b2920

TREE:tree 2ccd0476b506aa94a3acd16250d1048ec2956e3f ------
TIME:09/01/2017 18:21:27

COMMIT:Issue #430: Add an instruction in docker README to run standalone cluster

Descriptions of the changes in this PR:
Add an instruction in docker README to run standalone cluster, and change the docker image description more accurately

Author: Arvin <arvindevel@gmail.com>

Reviewers: Francesco Caliumi <None>, Jia Zhai <None>

This closes #470 from ArvinDevel/issue_430, closes #430

TREE:tree 12d04e909f5f51c8a7c20c34bbb160ba652c3e29 ------
TIME:09/01/2017 18:20:53

COMMIT:y

Descriptions of the changes in this PR:
When added the documentation, the sidebar was not updated, need to update to include k8s deployment.

After fix:
<img width="1371" alt="default" src="https://user-images.githubusercontent.com/26834121/29860959-4101c23a-8d9a-11e7-8e6b-3eeb17a3a5b4.png">

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #484 from zhaijack/fix_sidebar

TREE:tree 9852eecf70595fd59159b6343b20483ea9bcecb2 ------
TIME:09/01/2017 18:18:16

COMMIT:Updated site at revision fd27e99

TREE:tree 81c2e1126c989046c6e7c46db219515294f8b0e7 ------
TIME:09/01/2017 02:16:32

COMMIT:Updated site at revision fd27e99

TREE:tree 1701d4d29a849eb258e7ae0100e6c30fe1bf38f9 ------
TIME:09/01/2017 02:16:16

COMMIT:ISSUE #485: Change 'segment' to 'fragment' in docs

Descriptions of the changes in this PR:
 Change  'segment' to 'fragment' in docs, and make some relative code more clearer

Author: Arvin <arvindevel@gmail.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #486 from ArvinDevel/issue_485, closes #485

TREE:tree f4c70f645349adb76b161d0e9d8f247a3ed4cde4 ------
TIME:09/01/2017 02:12:57

COMMIT:DL-45: DL should allow ByteBuf based API to avoid copying bytes array

Descriptions of the changes in this PR:

This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry, and avoid copying bytes from DL to BK client.

This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.

Author: Sijie Guo <sijie@apache.org>
Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Leigh Stewart <None>

This closes #151 from sijie/zero_copy

TREE:tree 0211bd0faea8cbba206ad8cbbd775b8c33360f17 ------
TIME:08/31/2017 08:50:53

COMMIT:DL-45: DL should allow ByteBuf based API to avoid copying bytes array

Descriptions of the changes in this PR:

This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry, and avoid copying bytes from DL to BK client.

This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.

Author: Sijie Guo <sijie@apache.org>
Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Leigh Stewart <None>

This closes #151 from sijie/zero_copy

TREE:tree df78a0039fa554545c9c91bbf0fd5d1e09e16a4e ------
TIME:08/31/2017 08:50:53

COMMIT:DL-45: DL should allow ByteBuf based API to avoid copying bytes array

Descriptions of the changes in this PR:

This change leverages the `ByteBuf` api introduced in bookkeeper 4.5.0. It will avoid copying bytes array between LogRecord and LogRecordSet/Entry, and avoid copying bytes from DL to BK client.

This change also bump the lz4 library to `1.3.0` to leverage the `ByteBuffer` binding.

Author: Sijie Guo <sijie@apache.org>
Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Leigh Stewart <None>

This closes #151 from sijie/zero_copy

TREE:tree 3b3ed3014c965385ac948f370e9b32cdfee22b4f ------
TIME:08/31/2017 08:50:53

COMMIT:ISSUE #156: Provide a shading jar for distributedlog-core

Descriptions of the changes in this PR:

- provide a shade-all jar (shading all the dependencies) for distributedlog-core. the `shade-all` jar is classified as `shaded`.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #161 from zhaijack/shade_libs, closes #156

TREE:tree 52af7464056a30be095e9b9332c74b81478ff176 ------
TIME:08/31/2017 08:47:45

COMMIT:Updated site at revision 29e7422

TREE:tree 960bae466140eee21f1af998b7971bb9663583df ------
TIME:08/30/2017 09:36:16

COMMIT:ISSUE #274: Ensuring the right number of bookies are passed.

Descriptions of the changes in this PR:
This fixes #274. Ensures that benchmark measure right number of bookies for the warmup.

Author: arvindkandhare <arvind.kandhare@emc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #482 from arvindkandhare/issue-274-benchmarkfix, closes #274

TREE:tree b284bd8d55cdf2339b75fd3380d1f0111908f99b ------
TIME:08/30/2017 09:30:31

COMMIT:Updated site at revision dd96803

TREE:tree cc0e5a2522a11f3060d81d232f8eb7ce997c81d3 ------
TIME:08/30/2017 01:40:57

COMMIT:ISSUE #463: Improve bookkeeper unit test

Descriptions of the changes in this PR:

- remove `timeout` on individual tests, instead setting globalTimeout on base test `BookKeeperClusterTestCase` to simplify managing timeout on individual tests
- use maven docker build to run unit tests
- zookeeper cluster uses port 0

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #481 from sijie/merge_fix, closes #463

TREE:tree b3b979a29777eb6f053392dbde593e8926354921 ------
TIME:08/30/2017 01:37:04

COMMIT:Updated site at revision ae58e92

TREE:tree 960bae466140eee21f1af998b7971bb9663583df ------
TIME:08/29/2017 10:11:55

COMMIT:ISSUE #479: CompactionTest#testCompactionWithEntryLogRollover failed

Descriptions of the changes in this PR:

- restart bookie with disabling gc for #testCompactionWithEntryLogRollover
- improve other tests to remove `Thread.sleep` and use a more deterministic way for doing gc

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #480 from sijie/fix_compaction_test, closes #479

TREE:tree f6ec5915494814b1c47c2db22367361883281cd6 ------
TIME:08/29/2017 10:05:18

COMMIT:Updated site at revision c0fdfa5

TREE:tree cc0e5a2522a11f3060d81d232f8eb7ce997c81d3 ------
TIME:08/28/2017 11:13:48

COMMIT:Updated site at revision c0fdfa5

TREE:tree 98a920b8bf7fbba82b7c846b9e6544b20521ae5c ------
TIME:08/28/2017 11:12:49

COMMIT:ISSUE #468: Introduce JMH for micro benchmarking

Descriptions of the changes in this PR:

- add a `test/jmh` module for micro-benchmarking
- add a protocol related test: serializing and deserializing requests

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #469 from sijie/add_jmh_benchmark, closes #468

TREE:tree faa8575adffb95f6193b361e705afc0630011a1a ------
TIME:08/28/2017 11:09:45

COMMIT:Updated site at revision 6e6556f

TREE:tree cc0e5a2522a11f3060d81d232f8eb7ce997c81d3 ------
TIME:08/28/2017 11:04:34

COMMIT:Updated site at revision 6e6556f

TREE:tree 98a920b8bf7fbba82b7c846b9e6544b20521ae5c ------
TIME:08/28/2017 11:04:19

COMMIT:ISSUE #475: Move code-coverage activation to a Maven profile

Move JaCoCo and Coveralls.io configuration to a separate code-coverage profile

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #476 from eolivelli/issue-475-profile-codecoverage, closes #475

TREE:tree 2ce97011a986e497b44989590b46bfe38a9b3262 ------
TIME:08/28/2017 11:01:43

COMMIT:Updated site at revision 5c83b6e

TREE:tree cc0e5a2522a11f3060d81d232f8eb7ce997c81d3 ------
TIME:08/28/2017 11:01:16

COMMIT:ISSUE #462: TestTLS failures

Descriptions of the changes in this PR:

Problem:

The behavior of loading configuration in `AbstractConfiguration` was changed recently.
So the TLS provider was not cleared correctly for the failed tests.

Solution:

Explicitly clear TLS provider for each configuratio to address the failed tests.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #478 from sijie/fix_tls_test, closes #462

TREE:tree 908909c87dc33400f03781225329b5733737f891 ------
TIME:08/28/2017 11:00:53

COMMIT:Updated site at revision 5c83b6e

TREE:tree 960bae466140eee21f1af998b7971bb9663583df ------
TIME:08/28/2017 10:58:01

COMMIT:Updated site at revision 5c83b6e

TREE:tree cc0e5a2522a11f3060d81d232f8eb7ce997c81d3 ------
TIME:08/28/2017 10:57:41

COMMIT:ISSUE #343: TestFencing.testManyOpenParallel

Descriptions of the changes in this PR:

Problem:

The `LastAddConfirmed` was advanced due to piggyback on recovery adds. It will cause recovery adds become stall because
of the entry id check.

This problem only occurs when there are multiple clients concurrently recover same ledger.

Solution:

Disable lac piggyback on recovery adds.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #477 from sijie/tests, closes #343

(cherry picked from commit 5c83b6e2ab7329c428b2c63415f3c695f4edaf12)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree d8b16997590293adcaa21b91cf686b051c832f0f ------
TIME:08/28/2017 10:54:27

COMMIT:ISSUE #343: TestFencing.testManyOpenParallel

Descriptions of the changes in this PR:

Problem:

The `LastAddConfirmed` was advanced due to piggyback on recovery adds. It will cause recovery adds become stall because
of the entry id check.

This problem only occurs when there are multiple clients concurrently recover same ledger.

Solution:

Disable lac piggyback on recovery adds.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #477 from sijie/tests, closes #343

TREE:tree 17078fa74b03374f3e0a8e22ab58ad4a1bf664d1 ------
TIME:08/28/2017 10:54:27

COMMIT:Updated site at revision 814edb6

TREE:tree 928b84f12458634ac9ac7bb39abfbaead17817ec ------
TIME:08/27/2017 03:03:21

COMMIT:Updated site at revision 814edb6

TREE:tree d1b409407c9b69bf224adabe2ac8eb24bb314277 ------
TIME:08/27/2017 03:03:04

COMMIT:ISSUE #473: Bump protobuf version from 2.x to 3.x

Descriptions of the changes in this PR:

- Bump protobuf version from 2.x to 3.x
- Removed the generated protobuf files from source repo.
- Use maven protobuf plugin to generate the protobuf files.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #474 from sijie/protobuf3, closes #473

TREE:tree b5f00ef5de47e1731f0e3bbeedcf4fa21b0861fb ------
TIME:08/27/2017 02:59:50

COMMIT:Updated site at revision 160e975

TREE:tree 928b84f12458634ac9ac7bb39abfbaead17817ec ------
TIME:08/27/2017 02:58:14

COMMIT:Updated site at revision 160e975

TREE:tree d1b409407c9b69bf224adabe2ac8eb24bb314277 ------
TIME:08/27/2017 02:57:51

COMMIT:ISSUE #466: Move backward compatibility tests into a separate module

Descriptions of the changes in this PR:

- move backward compatibility test related stuffs to a separate module `test/backward`.
- fix checkstyle for backward compatibility related tests
- other pom file changes: move common dependencies to root pom, use variables
- for bookkeeper-server module, produce a non-shaded jar and a shaded jar. so applications can choose what jar to use.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #467 from sijie/integration_tests, closes #466

TREE:tree d144e79672246c4dd27a81b53adce467825fb6e1 ------
TIME:08/27/2017 02:54:41

COMMIT:Updated site at revision 51c660e

TREE:tree 11a9966a08369c07f87323c8e057b3c8c0a81fa3 ------
TIME:08/24/2017 12:03:32

COMMIT:Updated site at revision 51c660e

TREE:tree 3da3b078329a1df13de84dcd3706c8cebfcc89e2 ------
TIME:08/24/2017 12:03:14

COMMIT:ISSUE #337: Docker image: K8s for bookkeeper and instructions on usage

Descriptions of the changes in this PR:

K8s deployment for bookkeeper and instructions on usage

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>

This closes #461 from zhaijack/issue_337, closes #337

TREE:tree 38550ab379be13dca4788d036a12fa6dac887429 ------
TIME:08/24/2017 11:59:45

COMMIT:Updated site at revision 17c5c44

TREE:tree 581e4bc493c8cec0b62d365aaa41fdc4ad182919 ------
TIME:08/24/2017 09:35:56

COMMIT:ISSUE #464: Add JaCoCo code coverage configuration to master pom.xml

Introduce JaCoCo configuration to the master pom.xml.
JaCoCo handles Java8 syntax better than Cobertura

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #465 from eolivelli/issue-464-jacoco, closes #464

TREE:tree 993e11b0277ae5665d496e22b259008be14e1fa8 ------
TIME:08/24/2017 09:29:10

COMMIT:DL-206: Delete the log should also delete the underline ledgers

Problem:
We're not deleting the ledgers when we delete the whole log stream using dlm.delete() API. This would cause a lot of garbage/orphan ledgers in Bookkeeper.

The fix is to delete the ledger when we delete the log stream. Also added a test to validate.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #152 from yzang/yzang/DL-206

TREE:tree 5857157fc97354a749ee914a5825f8a2b8c28300 ------
TIME:08/24/2017 07:25:40

COMMIT:Updated site at revision f4a9a53

TREE:tree 13e5237b754b9a3deb0941a38927f983b3996392 ------
TIME:08/23/2017 15:13:21

COMMIT:Updated site at revision f4a9a53

TREE:tree b3f6f7b3aaae4d9832ef4a91b11086b7f18c355a ------
TIME:08/23/2017 15:10:46

COMMIT:ISSUE #459: fix loadConf in AbstractConfiguration

Descriptions of the changes in this PR:
In loadConf, call setProperty for all k-v in baseConf.
Please reference #459 for more anlysis and details.

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #460 from zhaijack/issue_459, closes #459

TREE:tree 8eee0e3f6e2bdd43b0eb94f1a57d849af9fbef46 ------
TIME:08/23/2017 15:07:26

COMMIT:Updated site at revision e28ea6b

TREE:tree 13e5237b754b9a3deb0941a38927f983b3996392 ------
TIME:08/22/2017 20:42:24

COMMIT:Updated site at revision e28ea6b

TREE:tree b3f6f7b3aaae4d9832ef4a91b11086b7f18c355a ------
TIME:08/22/2017 20:42:03

COMMIT:ISSUE #410: BookKeeper binary distribution package contains a CHANGES.txt file

Drop CHANGES.txt

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #456 from eolivelli/issue-410, closes #410

(cherry picked from commit e28ea6baecc181f90b5e26f5456ec3b657938b24)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree e9b38b335bb628b900e3ecf6d4e2d552c1b66c8b ------
TIME:08/22/2017 20:38:25

COMMIT:Updated site at revision 35cffdf

TREE:tree 13e5237b754b9a3deb0941a38927f983b3996392 ------
TIME:08/22/2017 20:38:26

COMMIT:ISSUE #410: BookKeeper binary distribution package contains a CHANGES.txt file

Drop CHANGES.txt

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #456 from eolivelli/issue-410, closes #410

TREE:tree 45228048cc9eefc7eee01beb962c4e3870e2e391 ------
TIME:08/22/2017 20:38:25

COMMIT:Updated site at revision 35cffdf

TREE:tree 581e4bc493c8cec0b62d365aaa41fdc4ad182919 ------
TIME:08/22/2017 20:38:10

COMMIT:ISSUE #453: fix image broken in website

Descriptions of the changes in this PR:
Fix image broken in website

After fix, image works well.
<img width="1535" alt="default" src="https://user-images.githubusercontent.com/26834121/29500286-ee3e4d88-8651-11e7-80c2-d4febffb0bfe.png">

Author: Jia Zhai <zhaijia@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #455 from zhaijack/issue_453, closes #453

TREE:tree ba9f0d2263528896f11f598917b6a6a08ee7b531 ------
TIME:08/22/2017 20:34:43

COMMIT:Updated site at revision b15e167

TREE:tree 5c2bb79b1fd8c9b5a99a08d0577bc5d714f1b2e5 ------
TIME:08/22/2017 15:06:16

COMMIT:Updated site at revision b15e167

TREE:tree c74b0d607c055a35618e80f59d567e61d34e1816 ------
TIME:08/22/2017 15:05:49

COMMIT:ISSUE #254: Remove BookKeeperTools

Descriptions of the changes in this PR:
remove the BookKeeperTools,
update the latest admin docs and BookieRecoveryTest's annotation.

Author: Arvin <arvindevel@gmail.com>

Reviewers: Jia Zhai <None>, Enrico Olivelli <eolivelli@gmail.com>

This closes #452 from ArvinDevel/master, closes #254

TREE:tree 3704ecea9640923d1ed37fe27605cf8b6daafb91 ------
TIME:08/22/2017 15:02:31

COMMIT:Updated site at revision 3e4c027

TREE:tree 43f897b2e7d986f7d3d7a8c9ba346b010da54984 ------
TIME:08/21/2017 21:42:01

COMMIT:Updated site at revision 3e4c027

TREE:tree 06c3fd50d7f84ddbaa5536847c943dbbe2bbdbe7 ------
TIME:08/21/2017 21:41:37

COMMIT:ISSUE #407: Enable allowLoopback when starting localbookie

Add allowLoopback=true flag in ServerConfiguration used in main() of LocalBookie facility

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #457 from eolivelli/issue-407, closes #407

TREE:tree b8ce2fcb8ddd5636a9da04f284b806a26bb56b49 ------
TIME:08/21/2017 21:38:05

COMMIT:DL-2: DistributedLog should work with the official apache bookkeeper

This change is to upgrade bookkeeper version to BK 4.5.0.

- upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287
  - change registerSuccessEvent for StatsLogger to add TimeUnit
  - use netty4 eventloop
  - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.

This change is a collaboration change with sijie

We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.

Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>

This closes #135 from zhaijack/bump_dl_version

TREE:tree 4f61e5a5835e76ba34b35c543e9ddb405afb7aa4 ------
TIME:08/18/2017 01:51:53

COMMIT:DL-2: DistributedLog should work with the official apache bookkeeper

This change is to upgrade bookkeeper version to BK 4.5.0.

- upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287
  - change registerSuccessEvent for StatsLogger to add TimeUnit
  - use netty4 eventloop
  - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.

This change is a collaboration change with sijie

We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.

Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>

This closes #135 from zhaijack/bump_dl_version

TREE:tree bb1490e78fa8b24f0555b2ea372b20d90b8b35b4 ------
TIME:08/18/2017 01:51:53

COMMIT:DL-2: DistributedLog should work with the official apache bookkeeper

This change is to upgrade bookkeeper version to BK 4.5.0.

- upgrade bookkeeper version to 4.5.0-SNAPSHOT (still waiting a few pull requests to merge apache/bookkeeper#297 apache/bookkeeper#287
  - change registerSuccessEvent for StatsLogger to add TimeUnit
  - use netty4 eventloop
  - move twitter repository dependencies to proxy related module only. core library will not depend on scala dependency anymore.

This change is a collaboration change with sijie

We will provide a performance comparison between 0.4.0 (using Twitter BK) and 0.5.0 (using BK 4.5.) in a separate pull request or email.

Author: Jia Zhai <zhaijia03@gmail.com>
Author: Jia Zhai <zhaijia@apache.org>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>

This closes #135 from zhaijack/bump_dl_version

TREE:tree 4cdf9768bd6bd14939351c5e28dd86d76f1c77d5 ------
TIME:08/18/2017 01:51:53

COMMIT:Updated site at revision f5d2ba6

TREE:tree 43f897b2e7d986f7d3d7a8c9ba346b010da54984 ------
TIME:08/16/2017 03:48:29

COMMIT:Updated site at revision f5d2ba6

TREE:tree 4d124e2cc01382b7ac2efbd3d8c8e7340c68aa5d ------
TIME:08/16/2017 03:45:01

COMMIT:BOOKKEEPER-1105: RackAwarePolicy: Failure to map node into rack may result in failure to add other nodes.

- RackAwarePolicy's no longer uses /default-region if rack mapping fails unless required (by RegionAwarePolicy)
- it no longer fails to add rest of nodes after one node's failed addition,
- added unit tests
- added counters for successful/failed bookie adds/removal
(PR description content here)...

UpdateLedgerOpTest failed but it seems to be known/unrelated issue.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #425 from dlg99/fix/rackaware

TREE:tree b52e8195c9ca5ee805a84f6a458b2d7c51bf2cac ------
TIME:08/16/2017 03:41:49

COMMIT:Updated site at revision de9eecc

TREE:tree d8437b8b0c3f86a8702f4ddc93671e4101f9fb78 ------
TIME:08/16/2017 03:40:51

COMMIT:Updated site at revision de9eecc

TREE:tree d21d24790e49ebde8aacbea6e135e00f37982b2c ------
TIME:08/16/2017 03:40:31

COMMIT:BOOKKEEPER-1100: Add module for Bookkeeper Http Endpoint

Add Bookkeeper Http Server as a new module [bookkeeper-http]

1. Add children module [http-server], which provide generic api for setting up a Http Server for bookkeeper, allowing to plugin different Http frameworks and inject the implementation of different BK related services to Http Handler to handle different endpoints

2. Add children module [vertx-http-server], which is a Vertx.io based http server implementation

3. Add children module [twitter-http-server], which is a TwitterServer based http server implementation

4. Add a package or org.apache.bookkeeper.http in [bookkeeper-server], which include all the implementation for the services that handle different http endpoint request.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #278 from yzang/yzang/BOOKKEEPER-1100

TREE:tree c1dbb6a2bfb25f9c274079ccf958f255c61d2f42 ------
TIME:08/16/2017 03:37:04

COMMIT:Issue 141: graduation changes, remove/change incubate related things

- remove the "-incubating" from the code base.
- change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog
- change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog
- git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git
- remove website foot, whch contains incubate infos in websiteindex.md
- remove Disclaimer file and its references

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #143 from zhaijack/issue_141

TREE:tree 00b8e355edb8f702f774bd2c9b0d61a6befab640 ------
TIME:08/15/2017 03:13:08

COMMIT:Issue 141: graduation changes, remove/change incubate related things

- remove the "-incubating" from the code base.
- change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog
- change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog
- git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git
- remove website foot, whch contains incubate infos in websiteindex.md
- remove Disclaimer file and its references

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #143 from zhaijack/issue_141

TREE:tree 8cb894f9fcef2449de89a491552317ed8377ef40 ------
TIME:08/15/2017 03:13:08

COMMIT:Issue 141: graduation changes, remove/change incubate related things

- remove the "-incubating" from the code base.
- change website link from http://distributedlog.incubator.apache.org into https://bookkeeper.apache.org/distributedlog
- change repo from https://github.com/apache/incubator-distributedlog into https://github.com/apache/distributedlog
- git from https://git-wip-us.apache.org/repos/asf/incubator-distributedlog.git into https://gitbox.apache.org/repos/asf/distributedlog.git
- remove website foot, whch contains incubate infos in websiteindex.md
- remove Disclaimer file and its references

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #143 from zhaijack/issue_141

TREE:tree 5ef8406f7ee77982d05bd8ca45cd210c545cf462 ------
TIME:08/15/2017 03:13:08

COMMIT:Update site at revision 2bdb069b9ea9bf114d7beed9d3a4502702fc444a (merged by sijie@apache.org)

TREE:tree b5b6d87cd586f1145262dee5afd36075af553b77 ------
TIME:08/15/2017 02:30:41

COMMIT:ISSUE #304: New Release Guide

Descriptions of the changes in this PR:

This is an attempt to improve the current release guide base on a few references :  [Beam](https://beam.apache.org/contribute/release-guide/) [Pulsar](https://github.com/apache/incubator-pulsar/wiki/Release-process)

Add this in main repo for reviews. We can later on make it part of website once #293 is completed.

A few items are TBD. comments are welcome.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #305 from sijie/release_guide, closes #304

TREE:tree ed390c8da2afea65424a75a6a2a438f81dc7c094 ------
TIME:08/15/2017 02:27:22

COMMIT:ISSUE #434: Move the content from wikis to website

Descriptions of the changes in this PR:

copied bunch of links from wiki pages and re-organized the links under `community`.

- first section: mailing list, issue tracking, release schedule and community meetings.
- second section: a few guides on how to contribute, how to report issue and how to release
- last section: resources (e.g. presentations, proposals)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #448 from sijie/sijie/move_contents, closes #434

TREE:tree c4545b8db1747133f9817892f603173eca2f7e60 ------
TIME:08/15/2017 02:22:07

COMMIT:Manually update site

TREE:tree 768fba34f88750009a8be16b5c1b333d674f7a0e ------
TIME:08/14/2017 21:11:21

COMMIT:ISSUE #443: Update the mailing list

Descriptions of the changes in this PR:

Add a section about `issues` mailing list.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #445 from sijie/issue_443, closes #443

TREE:tree c2f313b2a97dda11d5945fbe21fe8f52cc26e682 ------
TIME:08/14/2017 20:06:31

COMMIT:ISSUE #440: Update "who are we?" page

Descriptions of the changes in this PR:

- add new DL PPMC members to BK PMC
- fix full name and affiliations for a few members

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #447 from sijie/issue_440-, closes #440

TREE:tree 6e532b1cd9a7f59e0855416e31168397a862c3a2 ------
TIME:08/14/2017 20:05:34

COMMIT:ISSUE #444: remove doc directory

Descriptions of the changes in this PR:

The doc directory was used by CMS to generate the old bookkeeper website. since we already moved to a new jekyll website, the files in this directory are not used anymore. we can remove them.

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #446 from zhaijack/issue_444, closes #444

TREE:tree be67791d5f886c78b091512dd66ff7348888daae ------
TIME:08/14/2017 19:37:41

COMMIT:ISSUE #441: fix typos

Descriptions of the changes in this PR:
Fix typos in docker readme.
"Apache ZooKeeper is a software project of the Apache Software Foundation"
->
"Apache Bookkeeper is a software project of the Apache Software Foundation"

"bookkepeer servers" -> "bookkeeper servers"

"The client only need to connect to a Zookkeeper server in the ensamble"
->
"The client only need to connect to a Zookeeper server in the ensemble"

typo of other place:
bookeeper
->
bookkeeper

wile
->
while

acknoledge
->
acknowledge

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #442 from zhaijack/issue_441, closes #441

(cherry picked from commit e988a3cb876b5939e103e36b985ddab05173569c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 744aa716a3a03d014666c4459c258f5b8d0d845e ------
TIME:08/14/2017 06:54:08

COMMIT:ISSUE #441: fix typos

Descriptions of the changes in this PR:
Fix typos in docker readme.
"Apache ZooKeeper is a software project of the Apache Software Foundation"
->
"Apache Bookkeeper is a software project of the Apache Software Foundation"

"bookkepeer servers" -> "bookkeeper servers"

"The client only need to connect to a Zookkeeper server in the ensamble"
->
"The client only need to connect to a Zookeeper server in the ensemble"

typo of other place:
bookeeper
->
bookkeeper

wile
->
while

acknoledge
->
acknowledge

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #442 from zhaijack/issue_441, closes #441

(cherry picked from commit e988a3cb876b5939e103e36b985ddab05173569c)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree b239426686ae5c8eb847f41664e9fec727286a4e ------
TIME:08/14/2017 06:54:08

COMMIT:ISSUE #441: fix typos

Descriptions of the changes in this PR:
Fix typos in docker readme.
"Apache ZooKeeper is a software project of the Apache Software Foundation"
->
"Apache Bookkeeper is a software project of the Apache Software Foundation"

"bookkepeer servers" -> "bookkeeper servers"

"The client only need to connect to a Zookkeeper server in the ensamble"
->
"The client only need to connect to a Zookeeper server in the ensemble"

typo of other place:
bookeeper
->
bookkeeper

wile
->
while

acknoledge
->
acknowledge

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #442 from zhaijack/issue_441, closes #441

TREE:tree b5cc033fd02a8e27c6a69edacc32ffaf5d06d872 ------
TIME:08/14/2017 06:54:08

COMMIT:ISSUE #418: bump docker to use bk - 4.5.0

Descriptions of the changes in this PR:
-  bump the docker image to use 4.5.0 binary, update pgp_key and bk version.
-  delete yum install for md5sum and sha1sum, since they are already in coreutils, which is default installed; and left them here will report error: 'No Match for argument: md5sum/sha1sum', while 'yum remove' in docker build.

have tested by running make run-dice.

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Francesco Caliumi <None>

This closes #436 from zhaijack/issue_418, closes #418

(cherry picked from commit 739540896357e0079a946b95881a3cef4e6f9a72)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree f8b467f76450b58a294ae6baa0205b806c7db8fd ------
TIME:08/12/2017 00:38:28

COMMIT:406

Descriptions of the changes in this PR:
- Fix non-privileged user execution
- Change the Makefile in order to always use current user when run the bk image
- Fix Makefile in order to run "make run-demo"
- Adjust unneeded packages remove in Dockerfile

Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>

Reviewers: Jia Zhai <None>, Matteo Merli <None>, Sijie Guo <None>

This closes #406 from caiok/master

TREE:tree 11657c3e93d8b1be748cbd7a1c0d085036e4a324 ------
TIME:08/08/2017 01:56:06

COMMIT:Fix zkCli issue

Descriptions of the changes in this PR:
/opt/zk/bin/zkCli.sh was leaked to replace by /opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain and cause:

/opt/bookkeeper/entrypoint.sh: line 61: /opt/zk/bin/zkCli.sh: No such file or directory

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <None>

This closes #404 from zhaijack/docker_fix

TREE:tree 87f471055d9478759a8cb7ed2eec014af2a749c6 ------
TIME:08/07/2017 12:43:55

COMMIT:ISSUE #338: add first draft Docker image including community suggestions

This is the first part of #335. And it is based on #197
Main changes:
 327: Docker image: Drop versions and Alpine support.
 260: Docker image: provide a way to pass any desired configuration property via ENV vars.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Matteo Merli <None>, Sijie Guo <None>

This closes #342 from zhaijack/issue_338, closes #338

TREE:tree c093d315830d9c940847675157ec66b0e02c4951 ------
TIME:08/06/2017 15:08:11

COMMIT:Updated site at revision 7395408

TREE:tree 5f26d27b5d8674ae6b9a006eb7b6fa4572da396d ------
TIME:08/12/2017 00:41:49

COMMIT:Updated site at revision 7395408

TREE:tree 168fa048ec132741828a39537624924a57e1431f ------
TIME:08/12/2017 00:41:41

COMMIT:ISSUE #385: Upgrade to commons-lang 2.6

Upgrade to commons-lang 2.6 which can run on Java9
see explanation on #385

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #386 from eolivelli/commonslang26, closes #385

TREE:tree ddc05f2205862502925d2694aa01aeeb46202df6 ------
TIME:08/12/2017 00:40:56

COMMIT:ISSUE #418: bump docker to use bk - 4.5.0

Descriptions of the changes in this PR:
-  bump the docker image to use 4.5.0 binary, update pgp_key and bk version.
-  delete yum install for md5sum and sha1sum, since they are already in coreutils, which is default installed; and left them here will report error: 'No Match for argument: md5sum/sha1sum', while 'yum remove' in docker build.

have tested by running make run-dice.

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Francesco Caliumi <None>

This closes #436 from zhaijack/issue_418, closes #418

(cherry picked from commit 739540896357e0079a946b95881a3cef4e6f9a72)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 90d0396d9aed4c8e03a873df9d7b229e522c0a11 ------
TIME:08/12/2017 00:38:28

COMMIT:ISSUE #418: bump docker to use bk - 4.5.0

Descriptions of the changes in this PR:
-  bump the docker image to use 4.5.0 binary, update pgp_key and bk version.
-  delete yum install for md5sum and sha1sum, since they are already in coreutils, which is default installed; and left them here will report error: 'No Match for argument: md5sum/sha1sum', while 'yum remove' in docker build.

have tested by running make run-dice.

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Francesco Caliumi <None>

This closes #436 from zhaijack/issue_418, closes #418

TREE:tree f267de3654b7002b6de242f75ef353d83f3d1725 ------
TIME:08/12/2017 00:38:28

COMMIT:Updated site at revision caba6b1

TREE:tree 5f26d27b5d8674ae6b9a006eb7b6fa4572da396d ------
TIME:08/12/2017 00:30:56

COMMIT:Updated site at revision caba6b1

TREE:tree b438756e90acc5481d4e2728acb3e4015d8def60 ------
TIME:08/12/2017 00:30:33

COMMIT:ISSUE #435: Build javadoc for releases

Descriptions of the changes in this PR:

- add javadoc links on sidebar and overview pages (try to promote this link for users to find the link easier)
- update javadoc-gen.sh to be able to generate latest javadoc and all javadocs for versions under `docs`

minor fixes:
- pass "JEKYLL_ENV=production" to docker because ci uses docker to build the documentation
-

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #438 from sijie/publish_javadocs, closes #435

TREE:tree 218469f458784122c5d48f0a3dbeb88866dee7ab ------
TIME:08/12/2017 00:27:27

COMMIT:Updated site at revision 1ff17d8

TREE:tree c3a3012ecbbfc2d07c190289f43e74b3119e4dd3 ------
TIME:08/12/2017 00:26:02

COMMIT:ISSUE #431 ISSUE #221: merge scripts should mark milestone when merging pull requests

Descriptions of the changes in this PR:

improve merge script to do:

- assign a milestone
- add `area/` label
- add `type/` label
- add `release/` label
- when a change needs to merge to a different branch, add the bug fix `release/` label

This also addresses #221 to trim the template from pull request body.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <zhaijia03@gmail.com>

This closes #437 from sijie/merge_script_for_bug_releases, closes #431, closes #221

TREE:tree 9cb36ddad325c2d24370b09317f6dcd84107ae65 ------
TIME:08/12/2017 00:19:32

COMMIT:Updated site at revision b4a1c76

TREE:tree d660635ab78b19452167a1c6e73376c27e97a0c0 ------
TIME:08/11/2017 12:26:06

COMMIT:ISSUE #414: use a clone of baseconf in new ServerConfiguration(baseConf)

Descriptions of the changes in this PR:
This PR fix Issue #414 , and in the comments of that issue contains the anysis of the bug.  Main changes:
- Privde a clone of baseConf while do loadconf(baseConf), so make baseConf and newConf work independently.
- Remove 'loadConf(Configuration otherConf) ', since Configuration is an interface in common-configs and not have a clone method.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #424 from zhaijack/issue_414, closes #414

TREE:tree f795c7544bd660720f874a7a26e0cf1c6f14c425 ------
TIME:08/11/2017 12:23:08

COMMIT:ISSUE #432: Add "Google Analytics" to the website

Descriptions of the changes in this PR:

Add "google analytics" script to the website for tracking the documentation traffic. We can learn the pattern and improve documentation.

The google account for analytics is managed by bookkeeper pmc.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #433 from sijie/google_analytics, closes #432

TREE:tree 654501020a8efd22e34c5efba0b3eb918ae1365e ------
TIME:08/10/2017 23:22:05

COMMIT:ISSUE #356: Release notes 4.5.0

Descriptions of the changes in this PR:

- summary for release 4.5.0
- highlights for 4.5.0
- full list of JIRA and Github issues.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #402 from sijie/release_notes_4.5.0, closes #356

TREE:tree 4a0f9b59d48492d4c471f4d428de5ee56790ac48 ------
TIME:08/10/2017 22:28:33

COMMIT:ISSUE #427: [WEBSITE] sidebar doesn't work on documentation index page

Descriptions of the changes in this PR:

sidebar uses `../../` for relative paths. in order to make this work, we need to move any pages under `docs` on level down and not use `index.md`.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Luc Perkins <None>, Matteo Merli <None>

This closes #428 from sijie/issue_427, closes #427

TREE:tree 1e1b84b45ff7096d0b1e0db420442a0fc9f3e195 ------
TIME:08/10/2017 03:41:20

COMMIT:406

Descriptions of the changes in this PR:
- Fix non-privileged user execution
- Change the Makefile in order to always use current user when run the bk image
- Fix Makefile in order to run "make run-demo"
- Adjust unneeded packages remove in Dockerfile

Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>

Reviewers: Jia Zhai <None>, Matteo Merli <None>, Sijie Guo <None>

This closes #406 from caiok/master

TREE:tree db11fa866ba5f8d5877c6b0fee8bedcb5398b9b8 ------
TIME:08/08/2017 01:56:06

COMMIT:release 4.5.0: update website

Descriptions of the changes in this PR:

under `site`, run `./scripts/release.sh`

what the script does:

- copy the `latest` to `4.5.0`.
- finalize the version
- update config yml

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #429 from sijie/update_website_for_4.5_release

TREE:tree 15ece1712d78da80e94071835eaa988a356d753e ------
TIME:08/10/2017 21:56:48

COMMIT:Fix typo: TSL should be TLS in server_conf

TSL should be TLS in server_conf

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <None>

This closes #421 from zhaijack/fix_conf_typo

TREE:tree dc3c7e36ab9580f671caceda55b6f6743fb24227 ------
TIME:08/09/2017 05:42:09

COMMIT:Flip apache baseurl from `/test/content` to `/`

Descriptions of the changes in this PR:

INFRA is cutting the bookkeeper website from CMS to git. we need to flip '/test/content' to '/'.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>

This closes #411 from sijie/sijie/move_baseurl_to_root

TREE:tree 2976b98d887810cff60bea3467c14190345e4195 ------
TIME:08/07/2017 22:52:24

COMMIT:Fix zkCli issue

Descriptions of the changes in this PR:
/opt/zk/bin/zkCli.sh was leaked to replace by /opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain and cause:

/opt/bookkeeper/entrypoint.sh: line 61: /opt/zk/bin/zkCli.sh: No such file or directory

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <None>

This closes #404 from zhaijack/docker_fix

TREE:tree 5bc893a59cf8887b192515000a4759585de436ea ------
TIME:08/07/2017 12:43:55

COMMIT:ISSUE #338: add first draft Docker image including community suggestions

This is the first part of #335. And it is based on #197
Main changes:
 327: Docker image: Drop versions and Alpine support.
 260: Docker image: provide a way to pass any desired configuration property via ENV vars.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Matteo Merli <None>, Sijie Guo <None>

This closes #342 from zhaijack/issue_338, closes #338

TREE:tree 9e1c8e29707995c3f43588fa2b3b69ac5b4c8114 ------
TIME:08/06/2017 15:08:11

COMMIT:ISSUE #397: [CI] publish-website job failed when mvn:release bump version to 4.6.0-SNAPSHOT

Descriptions of the changes in this PR:

Use `mvn install` rather than `mvn compile`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>

This closes #398 from sijie/issue_397, closes #397

TREE:tree ce79af6c6e0b34002f90b69c95489b3f6812123e ------
TIME:08/06/2017 00:13:02

COMMIT:Updated site at revision 88a61ee

TREE:tree e84a5bbe9d3c67868020961dc4094617cbb0edf8 ------
TIME:08/11/2017 01:55:13

COMMIT:Updated site at revision 88a61ee

TREE:tree 59d7769561fbbfc43e507c68df3f52e2a56315b0 ------
TIME:08/10/2017 23:25:07

COMMIT:ISSUE #432: Add "Google Analytics" to the website

Descriptions of the changes in this PR:

Add "google analytics" script to the website for tracking the documentation traffic. We can learn the pattern and improve documentation.

The google account for analytics is managed by bookkeeper pmc.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #433 from sijie/google_analytics, closes #432

TREE:tree 659b00b9e35018e70ca0eb50b28800fcf3511e31 ------
TIME:08/10/2017 23:22:05

COMMIT:Updated site at revision 3ebd429

TREE:tree 1386042154597e9aff3e0ffa45d9695eee1e2d9c ------
TIME:08/10/2017 22:31:34

COMMIT:ISSUE #356: Release notes 4.5.0

Descriptions of the changes in this PR:

- summary for release 4.5.0
- highlights for 4.5.0
- full list of JIRA and Github issues.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

This closes #402 from sijie/release_notes_4.5.0, closes #356

TREE:tree a0b33ddabcd531e42b401bd352a575238fc62525 ------
TIME:08/10/2017 22:28:33

COMMIT:Updated site at revision 4615742

TREE:tree 363826f4940309c19c3b9aab0ee4523e8a157a6a ------
TIME:08/10/2017 22:00:03

COMMIT:Updated site at revision 4615742

TREE:tree 5d9b9272c228286cfc377cefd30b5fcc6f95e6d4 ------
TIME:08/10/2017 21:59:49

COMMIT:release 4.5.0: update website

Descriptions of the changes in this PR:

under `site`, run `./scripts/release.sh`

what the script does:

- copy the `latest` to `4.5.0`.
- finalize the version
- update config yml

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #429 from sijie/update_website_for_4.5_release

TREE:tree d65e2c0ba7d8898111f58be139c4ca3a529c33c6 ------
TIME:08/10/2017 21:56:48

COMMIT:Updated site at revision f5c96eb

TREE:tree 2ba5fe99c242712afe58d1b2f3c44178948eb501 ------
TIME:08/10/2017 03:46:55

COMMIT:Updated site at revision f5c96eb

TREE:tree 9d9d4175ca17c605a14868e497c8d9c2d74de3dd ------
TIME:08/10/2017 03:44:22

COMMIT:ISSUE #427: [WEBSITE] sidebar doesn't work on documentation index page

Descriptions of the changes in this PR:

sidebar uses `../../` for relative paths. in order to make this work, we need to move any pages under `docs` on level down and not use `index.md`.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Luc Perkins <None>, Matteo Merli <None>

This closes #428 from sijie/issue_427, closes #427

TREE:tree b8d1b138ac07cb6022f282a093fec67830060ae1 ------
TIME:08/10/2017 03:41:20

COMMIT:Updated site at revision eb31639

TREE:tree 953ea5ea8991140e0a61e1af7e6bf1683b7fc352 ------
TIME:08/09/2017 23:02:36

COMMIT:Issue #416: Some small post-release documentation fixes

There were a few issues pointed out with the new BookKeeper website/documentation. This fixes issue #416 and makes a handful of spelling and wording fixes.

Author: Luc Perkins <lucperkins@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #426 from lucperkins/docs/small-post-release-fixes, closes #416

(cherry picked from commit eb316394c7d4c4426cfb86d2a9fc794302e5ad0d)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 94fc620694267f60cf221496e932a9642a995fc1 ------
TIME:08/09/2017 22:59:26

COMMIT:Issue #416: Some small post-release documentation fixes

There were a few issues pointed out with the new BookKeeper website/documentation. This fixes issue #416 and makes a handful of spelling and wording fixes.

Author: Luc Perkins <lucperkins@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #426 from lucperkins/docs/small-post-release-fixes, closes #416

TREE:tree 240ee0e8488400b6e60c0d45160b349bcd1e2abf ------
TIME:08/09/2017 22:59:26

COMMIT:Updated site at revision 6e99bb7

TREE:tree 6feedb60f86c43bce7d16f9613465db94ff209c1 ------
TIME:08/09/2017 20:34:57

COMMIT:ISSUE #422: Don't use community layout for documentation pages

Descriptions of the changes in this PR:

The layout of documentation page is marked as community. when users navigate to this page, it is a bit difficult for the users to figure out where they are. We should stick documentation pages to doc layout.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #423 from sijie/documentation_index, closes #422 and squashes the following commits:

4ec16d6 [Sijie Guo] remove community layout for docs page
21320b4 [Sijie Guo] The index page for documentation should use documentation layout rather than community layout

(cherry picked from commit 6e99bb7344463f6b132dd2df5ecc0f5de31909be)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree e9ada49dca80f3f98b858e431b7717933467b0c0 ------
TIME:08/09/2017 20:29:02

COMMIT:ISSUE #422: Don't use community layout for documentation pages

Descriptions of the changes in this PR:

The layout of documentation page is marked as community. when users navigate to this page, it is a bit difficult for the users to figure out where they are. We should stick documentation pages to doc layout.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #423 from sijie/documentation_index, closes #422 and squashes the following commits:

4ec16d6 [Sijie Guo] remove community layout for docs page
21320b4 [Sijie Guo] The index page for documentation should use documentation layout rather than community layout

TREE:tree c6af275a4f9d88b9d3a8762da41bb5a428d1ff45 ------
TIME:08/09/2017 20:29:02

COMMIT:Updated site at revision bbcf1d8

TREE:tree 1fc7574c2bacb81cd740c2aae38f1b4a4a3f2941 ------
TIME:08/09/2017 05:45:13

COMMIT:Fix typo: TSL should be TLS in server_conf

TSL should be TLS in server_conf

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <None>

This closes #421 from zhaijack/fix_conf_typo

TREE:tree 431982612696acd7004a0b918fd7802c4acdf943 ------
TIME:08/09/2017 05:42:09

COMMIT:406

Descriptions of the changes in this PR:
- Fix non-privileged user execution
- Change the Makefile in order to always use current user when run the bk image
- Fix Makefile in order to run "make run-demo"
- Adjust unneeded packages remove in Dockerfile

Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>

Reviewers: Jia Zhai <None>, Matteo Merli <None>, Sijie Guo <None>

This closes #406 from caiok/master

TREE:tree 90d2ec670dc859335941d687f062c598bf64a46a ------
TIME:08/08/2017 01:56:06

COMMIT:Issue 412: css and js files are broken in `archives` links (#413)

This closes #412 
TREE:tree b2523eec4bd93abf0824b10ecc3c4e014b6b147c ------
TIME:08/08/2017 00:55:26

COMMIT:Updated site at revision b7b0a68

TREE:tree 21555942f6dcdb81347342149f315ca499e43770 ------
TIME:08/07/2017 22:55:21

COMMIT:Flip apache baseurl from `/test/content` to `/`

Descriptions of the changes in this PR:

INFRA is cutting the bookkeeper website from CMS to git. we need to flip '/test/content' to '/'.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>

This closes #411 from sijie/sijie/move_baseurl_to_root

TREE:tree a91cadf6c99b46268a576d8461fa332cc6b99371 ------
TIME:08/07/2017 22:52:24

COMMIT:Updated site at revision bee5434

TREE:tree 17a82bf4fd230ee358001c32840ae1ea82593061 ------
TIME:08/07/2017 22:15:48

COMMIT:ISSUE #349: Move `security` docs under `latest` (hotfix)

Descriptions of the changes in this PR:

#325 moved the docs to under `docs/latest`. so we need to move `security` docs to under `docs/latest/security`.

At the same time, fix two broken links.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #408 from sijie/fix_bad_merges, closes #349

(cherry picked from commit bee543487a2dd18034df2030a175b8f437f8fae3)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 7c722b4db9d27aa0d2b6f2bacbc3d9b9d4374670 ------
TIME:08/07/2017 22:12:28

COMMIT:ISSUE #349: Move `security` docs under `latest` (hotfix)

Descriptions of the changes in this PR:

#325 moved the docs to under `docs/latest`. so we need to move `security` docs to under `docs/latest/security`.

At the same time, fix two broken links.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #408 from sijie/fix_bad_merges, closes #349

TREE:tree 542c334f47acd99ba96b9acd2766e12b1b933c5c ------
TIME:08/07/2017 22:12:28

COMMIT:Updated site at revision 49b90a6

TREE:tree e07011c94d96182944333f258f1f98257a694812 ------
TIME:08/07/2017 20:50:06

COMMIT:ISSUE #349: Documentation for security feature in 4.5.0

Descriptions of the changes in this PR:

- add a section for `security`
- overview to introduce security feature
- encryption and authentication using tls
- sasl authentication
- zookeeper authentication

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #350 from sijie/security_docs, closes #349

(cherry picked from commit 49b90a66f830482fc970ba625057c7101c201f62)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 15746ad699523f4cede55e9cf2fa3326be58134c ------
TIME:08/07/2017 20:46:19

COMMIT:ISSUE #349: Documentation for security feature in 4.5.0

Descriptions of the changes in this PR:

- add a section for `security`
- overview to introduce security feature
- encryption and authentication using tls
- sasl authentication
- zookeeper authentication

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #350 from sijie/security_docs, closes #349

TREE:tree ea9eda000a21d3d24d0626a5a0fc3850ff3a660c ------
TIME:08/07/2017 20:46:19

COMMIT:Updated site at revision f90fa78

TREE:tree 5441e545a0b08d4a9f17a0f0527bde2805bcdc03 ------
TIME:08/07/2017 20:44:41

COMMIT:ISSUE #355: upgrade guide

Descriptions of the changes in this PR:

- provide a general upgrade guide
- document notes for upgrading from 4.4 to 4.5.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Jia Zhai <None>

This closes #403 from sijie/upgrade_guide, closes #355

(cherry picked from commit f90fa787522d59114caa3fe8b70345effb627f8e)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 949a8bbddd5d11bab5919ac7fbe54c32433e809c ------
TIME:08/07/2017 20:41:46

COMMIT:ISSUE #355: upgrade guide

Descriptions of the changes in this PR:

- provide a general upgrade guide
- document notes for upgrading from 4.4 to 4.5.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Jia Zhai <None>

This closes #403 from sijie/upgrade_guide, closes #355

TREE:tree b4e0c88b9b28309d11b3f4d0bc94a5e2f9762367 ------
TIME:08/07/2017 20:41:46

COMMIT:Updated site at revision 188d7e5

TREE:tree 352ba65a0a4c8abadea58d4cfbffeda62cddb8ed ------
TIME:08/07/2017 20:35:21

COMMIT:ISSUE #366: [DOCUMENTATION] LedgerHandleAdv

Descriptions of the changes in this PR:

- add documentation about LedgerHandleAdv
- update overview

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #401 from sijie/issue_366, closes #366

TREE:tree b975c064a2066bddbf61be460b150de839c05133 ------
TIME:08/07/2017 20:32:22

COMMIT:ISSUE #366: [DOCUMENTATION] LedgerHandleAdv

Descriptions of the changes in this PR:

- add documentation about LedgerHandleAdv
- update overview

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #401 from sijie/issue_366, closes #366

TREE:tree 2e426d838154b7a51094524872e2c66e90b8ed5f ------
TIME:08/07/2017 20:32:22

COMMIT:Updated site at revision ae1ba84

TREE:tree 3e0e2ceab8ea6fb6be3b4085dc399f021c5a2013 ------
TIME:08/07/2017 20:28:00

COMMIT:ISSUE #325: [WEBSITE] how to manage documentation between releases

Descriptions of the changes in this PR:

- move `docs` to `docs/latest`
- add a script to proceed release steps
   - copy `docs/latest` to `docs/{version}`
   - in docs/{version}, replace versions
   - bump versions in `_config.yml`
   - generate placeholders for releaseNotes

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Jia Zhai <None>

This closes #400 from sijie/release_versions, closes #325

(cherry picked from commit ae1ba84f0935fdac43e7dd500647a70b2c4ca7f3)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree fec145a6f2242ab247af087dacfc0802442e41df ------
TIME:08/07/2017 20:25:02

COMMIT:ISSUE #325: [WEBSITE] how to manage documentation between releases

Descriptions of the changes in this PR:

- move `docs` to `docs/latest`
- add a script to proceed release steps
   - copy `docs/latest` to `docs/{version}`
   - in docs/{version}, replace versions
   - bump versions in `_config.yml`
   - generate placeholders for releaseNotes

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Jia Zhai <None>

This closes #400 from sijie/release_versions, closes #325

TREE:tree 16ad6f5cf3f8ca0b22915c400ca50a8ee2c313f1 ------
TIME:08/07/2017 20:25:02

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.5.0

TREE:tree 81d23fcb629385d3e138a0902d7190198e4dac19 ------
TIME:08/07/2017 12:58:29

COMMIT:Fix zkCli issue

Descriptions of the changes in this PR:
/opt/zk/bin/zkCli.sh was leaked to replace by /opt/bookkeeper/bin/bookkeeper org.apache.zookeeper.ZooKeeperMain and cause:

/opt/bookkeeper/entrypoint.sh: line 61: /opt/zk/bin/zkCli.sh: No such file or directory

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <None>

This closes #404 from zhaijack/docker_fix

TREE:tree 80955188b9f50bcd66877b36517290e15a8915df ------
TIME:08/07/2017 12:43:55

COMMIT:[maven-release-plugin] prepare release release-4.5.0

TREE:tree e0ef31d668d2a22bcebfdb1b186c98186da7b44e ------
TIME:08/07/2017 12:38:00

COMMIT:ISSUE #338: add first draft Docker image including community suggestions

This is the first part of #335. And it is based on #197
Main changes:
 327: Docker image: Drop versions and Alpine support.
 260: Docker image: provide a way to pass any desired configuration property via ENV vars.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Matteo Merli <None>, Sijie Guo <None>

This closes #342 from zhaijack/issue_338, closes #338

TREE:tree 330765195080bf5db0977a11e78266f08ddfd613 ------
TIME:08/06/2017 15:08:11

COMMIT:ISSUE #397: [CI] publish-website job failed when mvn:release bump version to 4.6.0-SNAPSHOT

Descriptions of the changes in this PR:

Use `mvn install` rather than `mvn compile`

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>

This closes #398 from sijie/issue_397, closes #397

TREE:tree 915f7ab6f46f7261e74f87260b7ef16523ce2623 ------
TIME:08/06/2017 00:13:02

COMMIT:Updated site at revision 59562a7

TREE:tree 72465a28f7dd1b64e672c0bc43b4ea5f737ffb38 ------
TIME:08/05/2017 23:01:15

COMMIT:[maven-release-plugin] rollback changes from release preparation of release-4.5.0

TREE:tree 81d23fcb629385d3e138a0902d7190198e4dac19 ------
TIME:08/05/2017 21:15:05

COMMIT:Removed javadoc plugin for bookkeeper-server and bookkeeper-stats

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>
Reviewed-by: Sijie guo

TREE:tree e04afebf14ba422da812111bac20de8d860648d4 ------
TIME:08/05/2017 20:43:45

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree d6321a37a053638b95d4ddc5526abeace0b48004 ------
TIME:08/05/2017 20:05:55

COMMIT:[maven-release-plugin] prepare branch branch-4.5

TREE:tree 65a80c03386147db4f3c0d812044f30de24c79d5 ------
TIME:08/05/2017 20:05:50

COMMIT:ISSUE #390: [CI] Test errors in TestRackawareEnsemblePlacementPolicyUsingScript

Descriptions of the changes in this PR:

`Shell` class was ported from hadoop, but it contains a lot of unused code. Especially there is not `HADOOP_HOME` will set, so an exception will be thrown. (although the issue seems to be hidden in mac)

This change is to clean up the `Shell` class. The `Shell` class is only used for executing shell script configured in rackaware placement policy.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Enrico Olivelli <None>

This closes #396 from sijie/sijie/cleanup_shell, closes #390

TREE:tree d7fb91a7ba1243c5646ceab015816a26941148e4 ------
TIME:08/05/2017 10:33:00

COMMIT:ISSUE #393: [CI] publish-website job will be marked as failure if it is an empty commit

Descriptions of the changes in this PR:

- use `git diff-index` to checkout if there is any changes to commit or not
- port some changes from CI back to script.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #394 from sijie/issue_393, closes #393

TREE:tree 561bf07af9e2274aa17c21152222a637fa311712 ------
TIME:08/05/2017 08:37:43

COMMIT:Updated site at revision 31960b0

TREE:tree ce5e0f129520300eb4b63614634e1a1eb3bd1bf8 ------
TIME:08/05/2017 08:15:41

COMMIT:ISSUE #367: [DOCUMENTATION] add api readUnconfirmedEntries in website doc

Descriptions of the changes in this PR:

add api readUnconfirmedEntries in website doc

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #371 from zhaijack/issue367, closes #367

TREE:tree a201f8817a2ffadaa1f05a8f91d01138eb0f46e4 ------
TIME:08/05/2017 08:13:48

COMMIT:ISSUE #391: CI failed with java.lang.ClassNotFoundException: org.hamcrest.SelfDescribing

Descriptions of the changes in this PR:

- include hamcrest dependency for tests (according to [junit](https://github.com/junit-team/junit4/wiki/Download-and-Install) instruction)
- exclude `.repository` to turn ci builds to run with its own local repository
- dump the rat check output to console (easier for debugging on jenkins)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #392 from sijie/bookkeeper-test, closes #391

TREE:tree 08ac44ee54cf9b82930621c2811eab5fd9425f17 ------
TIME:08/05/2017 01:46:34

COMMIT:ISSUE #383: mvn release:branch fails

Descriptions of the changes in this PR:

- change `compilerArguments` to `compilerArgs`
- use `compilerArg` for configuring the arguments for compilation.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #384 from sijie/sijie/fix_release, closes #383

TREE:tree 588e8aead28d53607cb2e40fd3481aa1f2221a13 ------
TIME:08/04/2017 22:53:41

COMMIT:Updated site at revision 18f5c6a

TREE:tree 4dac6469a6850210880007d1043393841b6564ce ------
TIME:08/04/2017 09:53:11

COMMIT:ISSUE #262: Useless option explicitLacInterval is set to 1 in default bk_server.conf

Remove an useless line from default bk_server.conf file

Author: eolivelli <eolivelli@apache.org>
Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #375 from eolivelli/issue-262, closes #262

TREE:tree e5be5e96486e6ee4e859712136e312c8abc60b23 ------
TIME:08/04/2017 09:50:50

COMMIT:Updated site at revision 423fa65

TREE:tree d37e6510bb6e27d1ce33fe6def907ece6f01c5d9 ------
TIME:08/04/2017 07:50:41

COMMIT:Updated site at revision 423fa65

TREE:tree c1557b125aaaded9e88aa6d5c0a45aec4e405710 ------
TIME:08/04/2017 07:44:47

COMMIT:ISSUE #381: update old releases url to achives

Descriptions of the changes in this PR:

- the cms content has been copied from cms to asf-site branch under /content/archives. it is available under http://bookkeeper.apache.org/test/content/archives/
- update the release url from 'bookkeeper.apache.org/docs/rx.y.z' to '{{ site.baseurl }}achives/rx.y.z'

scripts:

- update the scripts to use clone and copy to avoid trash everything in remote. this would prevent overwrite `archives` directory.

content:

- fix syntax error in `shell.yaml` to be able to build website

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #382 from sijie/fix_links, closes #381

TREE:tree 290599e1e3d2d80010ed58f5aa99c77d0854b197 ------
TIME:08/04/2017 07:22:47

COMMIT:ISSUE #376: Skip getSysFileDescriptor if JournalRemovePagesFromCache=false

Skip illegal reflective calls if not needed, this way the Bookie will run on Java9 cleanly

We need to access internals of FileDescriptor class only if JournalRemovePagesFromCache=true.
This change will allow to run the bookie on Java9 just by using JournalRemovePagesFromCache=false.

see #376

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #380 from eolivelli/issue-376-minimal-java9, closes #376

TREE:tree d481e48e9f291db588c0e8efc3d173b83941b13b ------
TIME:08/04/2017 06:19:46

COMMIT:ISSUE #269: upgrade findbugs to 3.0.4

Just update findbugs plugin to latest version. No new warnings to address

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #379 from eolivelli/findbugs-304, closes #269

TREE:tree 967056dc223e0fb919ea52fde6bc9b321c345106 ------
TIME:08/04/2017 06:16:25

COMMIT:Copy the old cms content from 'https://svn-master.apache.org/repos/infra/websites/production/bookkeeper'

TREE:tree cc888ab7f2739adb22a448bc2fc1b05cc608cf77 ------
TIME:08/04/2017 02:57:04

COMMIT:Issue #372: Allow to configure advertised address in bookies

Add option to configure advertised address for bookies.

Reasons for this are outlined in #372

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>, Sijie Guo <None>

This closes #373 from merlimat/advertised-address, closes #372

TREE:tree a36f1874a74e96e4401bd83915164955e6ea33cf ------
TIME:08/03/2017 23:20:47

COMMIT:Issue #377: Make Prometheus stats logger registration idempotent

Make sure the metric are only registered once on Prometheus client lib.

Discusses in #377.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>, Sijie Guo <None>

This closes #378 from merlimat/fix-metrics-double-registration, closes #377

TREE:tree c38a26f7b68bfab7296db30243a3e25f2393647a ------
TIME:08/03/2017 23:00:09

COMMIT:ISSUE #362: [DOCUMENTATION] update command line tools

Descriptions of the changes in this PR:

enrich doc for bookie shell

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Luc Perkins <None>, Sijie Guo <None>

This closes #369 from zhaijack/issue_362, closes #362

TREE:tree 64199ea682e1f2333c536f88895bbedb7e5300e2 ------
TIME:08/03/2017 10:18:01

COMMIT:ISSUE #360: [DOCUMENTATION] configuration settings

Descriptions of the changes in this PR:
-  make sure bk_server.conf contains all the settings in ServerConfiguration.java
-  update site/docs/reference/config.md (http://bookkeeper.apache.org/test/content/docs/reference/config/)

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Luc Perkins <None>, Sijie Guo <None>

This closes #368 from zhaijack/issue_360, closes #360

TREE:tree 284f9de204c59621d577f89b818d3e3dff00bc5d ------
TIME:08/03/2017 10:14:31

COMMIT:Updated site at revision 23f9d81

TREE:tree 5d51900b470c09f2cfe2fe98afebaa8c4af0be22 ------
TIME:08/03/2017 00:42:47

COMMIT:Fix navbar hover issue on the main page

This PR fixes the navbar dropdown UX issue shown in the attached image.

<img width="681" alt="screen shot 2017-08-02 at 10 04 20 am" src="https://user-images.githubusercontent.com/1523104/28886622-05333fcc-776f-11e7-8bea-163f60acaaa1.png">

Author: Luc Perkins <lucperkins@gmail.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #370 from lucperkins/docs/fix-dropdown

TREE:tree df498d261c573f61d3b46bbf8921b3dca9637229 ------
TIME:08/02/2017 22:52:17

COMMIT:ISSUE #351: Apache rat check failed on master

Descriptions of the changes in this PR:

This fix on #352 was adding the exclusion rule in wrong location. this fix is to address that.

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #353 from zhaijack/fix_rat_issue, closes #351

TREE:tree a8948a448a6ee30f07b9e9ba2b59ec02d4f5b9d1 ------
TIME:08/02/2017 22:51:44

COMMIT:ISSUE #351: Apache rat check failed on master

Descriptions of the changes in this PR:

Excludes cacerts from apache-rat check

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #352 from zhaijack/fix_rat_issue, closes #351

TREE:tree eb06827bffd582f1c62830110f9f7afeeb03e56d ------
TIME:08/02/2017 08:18:08

COMMIT:Address the problem on merging #183

Descriptions of the changes in this PR:

listenOn should be running in constructing netty server. because we use binding to prevent two bookies start at the same time. #183

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>

This closes #348 from sijie/ssl_merge, closes #183

TREE:tree 6689cd0b2c98b81615cb82dcd40a0d1abd10fa9c ------
TIME:08/02/2017 03:16:31

COMMIT:BOOKKEEPER-588: SSL Support for Bookkeeper

+ Merged changes from eoliville
+ Mutual Authentication

Author: kishorekasi <kkasiud1@gmail.com>
Author: Kishore Kasi Udayashankar <kudayashankar@salesforce.com>
Author: Kishore Udayashankar <kudayashankar@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #183 from kishorekasi/BOOKKEEPER-588-kishore

TREE:tree 4bcf68828a8046cd18e6babd1a3082f78e34170f ------
TIME:08/02/2017 00:49:46

COMMIT:Updated site at revision 45e7f08

TREE:tree e80b5161d74d80b465cddc39152480a598fa8b29 ------
TIME:08/01/2017 23:21:11

COMMIT:ISSUE #333: [WEBSITE] add bookkeeper slack channel to README.md and website

Descriptions of the changes in this PR:

- add slack channel to README
- add slack channel to website

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Luc Perkins <lucperkins@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #341 from zhaijack/issue_333, closes #333

TREE:tree 6a2a55460ed5e7fa9a68760aa0e7ca796edeeb69 ------
TIME:08/01/2017 23:18:24

COMMIT:ISSUE #344: add a releases page

Descriptions of the changes in this PR:

Add a releases page for keeping the history of apache releases.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>

This closes #345 from sijie/redirection_on_old_releases, closes #344

TREE:tree 59c76c089a2c8dd9b1af67f6aaa3d384c254a895 ------
TIME:08/01/2017 23:17:19

COMMIT:ISSUE #339: Use ephemeral port for bookkeeper tests and variable unit test improvements

Descriptions of the changes in this PR:

- Enable ephemeral port by default for all BookKeeperClusterTestCase based test cases
- Removed Multi* based classes. A lot of unit tests unnecessarily extended from those base classes. Converted them to extend BookKeeperClusterTestCase directly. Confirmed this with sijie
- Reduce sleep period for some test cases

LedgerEntry fixes for #317
- use checkState rather than checkNull to keep the behavior consistent as before
- fix BookKeeperTest#testReadEntryReleaseByteBufs

TestBackwardCompat:
- removed testCompact400 (400 has been very long time ago, no one is running 400)
- BookKeeperNettyServer should shut down netty server when failed to construct a bookie

TestDiskChecker:
- increased the threshold to 0.99f. be consistent with TestBKConfiguration

BookieInitializationTest
- make each test method using different ledgers path, so registration won't be conflicting between tests

BookieJournalRollingTest
- make sure bookie port is used correctly on restarting bookies.

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #340 from zhaijack/use_ephemral_ports, closes #339

TREE:tree f05ad6492926dbfd45c9b4ea72a4fc329c76d5e3 ------
TIME:08/01/2017 21:58:19

COMMIT:ISSUE #321: Update "who are we?"

Descriptions of the changes in this PR:

- add JV to the PMC list
- add siddharth and charan to the committers list
- sort the people by apache ids

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #334 from sijie/sijie/update_who_are_we, closes #321

TREE:tree af305e424ca37c2c60cea8f5ae36b0600c5537d8 ------
TIME:08/01/2017 21:54:18

COMMIT:Issue 324: Add htaccess for handling redirections to old releases (#346)

This closes #324 .
TREE:tree ff3b33220e50b950408d8846e88f7e8d7c078f6b ------
TIME:08/01/2017 21:34:39

COMMIT:BOOKKEEPER-1102: Clarify BookieInfoReader and fix associated test flappers

BookieInfoReader:

The previous syncronization logic wasn't really correct, and the logic
at the top of the method was far more complicated than it needed to be.
Restrict bookies to be non-null.  Restructure the code to simply use
the BookieInfoReader instance as a single lock.

One significant behavioral change is that we scan every bookie not in
the map, and we clear from the map bookies which returned an error.

Also, explicitely cache the most recent bookie set reported by the
BookieWatcher.  This eliminates the need to call into BookieWatcher
from getReadWriteBookieInfo and the corresponding error path.  The
periodic scan continues to explicitely check.

Another departure is the addition of an explicit retry-on-error param to
trigger retry if any of the requests failed
(getBookieInfoRetryIntervalSeconds).  We'll only retry the ones that
actually failed (along with any new additions since the last run).  This
is useful because bookie startup triggers the addition of the bookie
node to zk before the bookie actually becomes available for the bookie
info request, so there can be rare races in the unit tests between
BookieInfoReader requesting the info and the bookie actually being up.

Also, add a method to allow tests to wait for updates to be reflected.

PerChannelBookieClient: fix error handling for BookieInfo keys

Passing a key corresponding to a GET_BOOKIE_INFO operation to
errorOutReadKey results in a casting exception, clean up the invalid
calls.

BookKeeperClusterTestCase: add killBookieAndWaitForZK

Should reduce the need for tests to wait for an arbitrary period to let
the cluster "settle".

BookKeeperDiskSpaceWeightedLedgerPlacementTest:

This test was heavily time dependent, and the Thread.sleep values did
not work universally.  Instead, eliminate the arbitrary Thread.sleep
values and instead verify the free space changes on each change.

Also, switch the delay on
testDiskSpaceWeightedBookieSelectionWithPeriodicBookieInfoUpdate
to simply use an atomic boolean to signal the value switch.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #275 from athanatos/forupstream/BOOKKEEPER-1102

TREE:tree 4dba2e3de7a6f79798c80b1d2d606fad0ec621a4 ------
TIME:08/01/2017 08:34:07

COMMIT:ISSUE #314: Enable checkstyle on bookkeeper-server

Descriptions of the changes in this PR:

- enable checkstyle plugin in bookkeeper-server with a suppression configuration file
- enable sort order rule (it was disabled when the rule was imported)

Author: Jia Zhai <zhaijia03@gmail.com>
Author: zhaijack <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #315 from zhaijack/enable_checkstyle, closes #314

TREE:tree 5519d1f7e4d589d500567c2028f5fae37d5ac44c ------
TIME:08/01/2017 08:14:30

COMMIT:Updated site at revision 50f6736

TREE:tree ee897cfc73ba2bd0cd8a6a3daa44967546bd9ca3 ------
TIME:08/01/2017 01:50:30

COMMIT:ISSUE #323: [WEBSITE] ci job to automatically publish website to apache once the pull request is merged

Descriptions of the changes in this PR:

- add a Dockerfile to use ruby:2.4.1 to build website
- add scripts to run docker file interactively (run.sh) and in ci (ci.sh)
- also remove a few scripts that were not used by jenkins anymore.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

This closes #332 from sijie/sijie/jenkin_jobs, closes #323

TREE:tree 2ce825ce1813bfb0676561a3021a0aeb09212b60 ------
TIME:07/31/2017 23:45:57

COMMIT:ISSUE #320: add scripts for publishing new website to staging and apache

Descriptions of the changes in this PR:

- script for staging changes to a staging-site repo
- steps for how to staging changes for reviews
- script for pushing changes to apache

Author: Sijie Guo <sijie@apache.org>

Reviewers: Luc Perkins <lucperkins@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #322 from sijie/publish_scripts, closes #320

TREE:tree 1d6c19b4a9cc2698fc3a9a0a451e24915da3d0e3 ------
TIME:07/29/2017 02:59:48

COMMIT:Updated site at revision fb50a50

TREE:tree 274faa0fc333915c2427cbee12bfc65bab38279b ------
TIME:07/29/2017 02:21:45

COMMIT:Updated site at revision 2fc1e36

TREE:tree 1b89a80b69ffa9fc4780c4d96b15c0e8dfd1fce5 ------
TIME:07/29/2017 02:19:06

COMMIT:Updated site at revision 95d4322

TREE:tree 84de711ea618da486d97101965af3f92bec9b46b ------
TIME:07/29/2017 02:12:52

COMMIT:BOOKKEEPER-1103: Fix LedgerMetadataCreateTest random id loop

The previous version would loop indefinitely upon collision.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #303 from athanatos/forupstream/BOOKKEEPER-1103

TREE:tree 93fea7e42efff503c758ae40367f1d870fa16a32 ------
TIME:07/28/2017 22:34:58

COMMIT:ISSUE #294: Beta version of the new website

A generated version of the new site can be seen here:

https://lucperkins.github.io/bookkeeper/

Author: Luc Perkins <lucperkins@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #293 from lucperkins/documentation-changes, closes #294

TREE:tree 6451b0333c436dd0c3c3f7cc43ddb066b1b207a7 ------
TIME:07/28/2017 21:54:34

COMMIT:BOOKKEEPER-935: Javadoc improvements and publish sources and javadocs to Maven Central

Descriptions of the changes in this PR:

- sources: attached source jar for each module
- javadocs: attached javdocs jar for bookkeeper-server, bookkeeper-stats (they are client-facing modules)

for javadocs:
- improve javadoc:aggregate to generate new client-facing api doc. it is comprised with 3 sections now : bookkeeper client, bookkeeper stats api, bookkeeper stats providers
- auditing the client package to make changes to avoid expose internal classes to public.
- introduce interface audience and stability for documenting public interfaces
- improve javadoc for publish api

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This patch had conflicts when merged, resolved by
Committer: Sijie Guo <sijie@apache.org>

This closes #311 from sijie/attach_sources_jar

TREE:tree 5d3a304293cf65684b558038d750d32e9115b86f ------
TIME:07/28/2017 20:12:37

COMMIT:ISSUE #300: EnsemblePlacementPolicy must not use com.google.common.base.Optional but java.util.Optional

Use standard java8 java.util.Optional instead of Optional from Guava.
In BookKeeper 4.5 we are shading Guava so this class is not available to downstream projects

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>, Sijie Guo <None>

This closes #302 from eolivelli/issue-300-no-guava, closes #300

TREE:tree 5c5c7e44bc77714ac1744c595e128610275a9a42 ------
TIME:07/28/2017 11:31:43

COMMIT:BOOKKEEPER-1104: Fix testWithDiskFullAndAbilityToCreateNewIndexFile

The usage threshhold was chosen to be very close to the actual disk
usage at test time.  This made the test unnecessarily fragile in the
case that there other things concurrently using the disk.  Since we
aren't really testing that here, simply set the threshhold to be really
low.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #310 from athanatos/forupstream/BOOKKEEPER-1104

TREE:tree 1a42c6d5fb7ae01810ed10e836f516c4242f6959 ------
TIME:07/28/2017 06:39:03

COMMIT:ISSUE #296: Bookie supports ephemeral port

Descriptions of the changes in this PR:

- add a flag to allow/disable using ephemeral ports
- change the initialization sequence to support ephmeral port
- added two tests on verifying this behavior

Author: zhaijack <zhaijia03@gmail.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>

This closes #297 from zhaijack/issue_296, closes #296

TREE:tree 3f41e972f3dcfd63830a0959ba743257448e0a58 ------
TIME:07/28/2017 05:11:17

COMMIT:ISSUE #306: Update SCM info for using mvn:release

Descriptions of the changes in this PR:

- update the SCM info in the pom files, so that mvn:release is able to create release branch.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Matteo Merli <None>

This closes #307 from sijie/use_maven_release, closes #306

TREE:tree efba9acb5847674aed1d784fb6db55e6b2966c3e ------
TIME:07/28/2017 03:08:52

COMMIT:Add a placeholder `index.html` for enabling gitpubsub

TREE:tree 821ddf7d71ceef28c34b33bd1a80404f29eca484 ------
TIME:07/27/2017 19:35:52

COMMIT:ISSUE #308: LocalBookKeeper.java rethrow Exception in case of failed boot

Do not swallow generic Exceptions during the boot of LocalBookKeeper and let the caller handle errors

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <None>

This closes #309 from eolivelli/issue-308-localboo-exce, closes #308

TREE:tree 8ec7106ddb169bea08c1093bc0079d963593d4ed ------
TIME:07/27/2017 17:07:13

COMMIT:ISSUE #271: LedgerHandle#readEntries leaks ByteBufs

Add a setNettyUsePooledBuffers() client configuration option to let the user decide to use Pooled vs Unpooled ByteBufs.
Using v2 wire protocol Application receives the original ByteBuf return from Channel and it is responsible for 'releasing' it.

Add assertions on LedgerEntry to prevent the user from accessing data more then once

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Matteo Merli, Sijie Guo

This closes #276 from eolivelli/issue-271-leaks, closes #271

TREE:tree 05702eec1b5237582d955ff97cbbb19bb3b07231 ------
TIME:07/27/2017 05:04:03

COMMIT:Initialize asf-site branch for hosting new bookkeeper website

TREE:tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904 ------
TIME:07/26/2017 20:53:43

COMMIT:ISSUE #295: LocalBookKeeper fails to start up

Descriptions of the changes in this PR:

remote the zk port and zk servers from the classes and use the values passed in from the method.

Author: Jia Zhai <zhaijia03@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #298 from zhaijack/issue_295, closes #295

TREE:tree 9117fe8e5f1f4a3af23a47baaa78c81b9edd7f47 ------
TIME:07/26/2017 16:28:37

COMMIT:ISSUE #196: Create Jenkins configuration using OpenStack Jenkins Job Builder

Descriptions of the changes in this PR:

Introduction of Jenkins Job Builder script, in order to have the configuration of Jenkins jobs directly stored in GIT repo.
This will enable reviews of Jenkins configuration

Author: Nicolò Boschi <nicolo.boschi@diennea.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>, Sijie Guo <sijie@apache.org>

This closes #206 from nicoloboschi/JenkinsJobBuilder, closes #196

TREE:tree a8f4591d5cc34aadf4a7762d164dcc375a70ddb9 ------
TIME:07/26/2017 13:00:06

COMMIT:BOOKKEEPER-1017: Create documentation for ZooKeeper ACLs

This is the documentation for ZooKeeper security and there is an intro about security in general.
It is work-in-progress, I created this PR in order to make it visible and gather suggestions while writing

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <None>

This closes #185 from eolivelli/BOOKKEEPER-1017-zookeeper-docs

TREE:tree f6664632b2cae866278cdaa6e3450dfba6acfca8 ------
TIME:07/26/2017 11:06:52

COMMIT:ISSUE #247: Missing JavaDoc for classes

Descriptions of the changes in this PR:

- Addressed the `TODO` comments by adding JavaDoc
- Make sure there is a Github issue for each unaddressed `TODO` comment

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #285 from sijie/issue_247, closes #247

TREE:tree 61546e91a12d9aadfbf93da01095c29c533a918f ------
TIME:07/25/2017 11:08:03

COMMIT:BOOKKEEPER-1044: Entrylogger is not readding rolled logs back to the logChannelsToFlush list when exception happens while trying to flush rolled logs

Descriptions of the changes in this PR:

This is a straightforward fix to add unflushed list of entry log files back to flushed list.

Test is missing at this point because it is a bit complicated to test this without proper mocking. I would defer adding the test later and creating a github issue later on if it makes sense.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #286 from sijie/BOOKKEEPER-1044

TREE:tree de111394cc97be20907b8b9bd08ce7c5a617dbb2 ------
TIME:07/25/2017 11:04:36

COMMIT:Issue#243 - asyncAddEntry fails with NPE with LedgerHandlerAdv

Fix asyncAddEntry on LedgerHandleAdv and clean up the asyncAddEntry API, drops BKException which is never thrown in asynch functions

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo

This closes #244 from eolivelli/asyncadd-adv, closes #243

TREE:tree c339c75d238c8d9879fd5badd3b182188c3f94a4 ------
TIME:07/24/2017 16:03:02

COMMIT:Provide a minimal test case using v2wireprotocol option

Add testcases on addEntry/readEntries and basic fencing

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo

This closes #273 from eolivelli/issue-272-testv2

TREE:tree f975f697cc2aaf16d0ffd289784d32a733dd6c3c ------
TIME:07/24/2017 13:08:02

COMMIT:ISSUE #263: Enable request rate limiter in zookeeper client

Descriptions of the changes in this PR:

Eanble request rate limiter in zookeeper client. The rate limiter logic is in place, but is never enabled. This change is to expose the settings in configurations and enable them in zookeeper client at both client and server.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>

This closes #264 from sijie/interface_syncs, closes #263

TREE:tree dcfc0cdbfa9db72fd3f87a13de7964f26a2d2ef1 ------
TIME:07/21/2017 04:31:25

COMMIT:ISSUE #267: Bookie should serve in read only mode during shutting down.

Descriptions of the changes in this PR:

Set the bookie in readonly mode during shutting down. (contributed by yzang)

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>

This closes #268 from sijie/readonly_on_shutdown, closes #267

TREE:tree d61e70e98834a114337862b45eba9d0cbf59bf02 ------
TIME:07/21/2017 02:35:25

COMMIT:BOOKKEEPER-1027: Cleanup README

Descriptions of the changes in this PR:

- Move README to README.md (written it in markdown syntax)
- Organized the README as below:
  - what is bookkeeper and what it can be used for
  - getting started
  - documentation
  - contribution

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli, Jia Zhai

This closes #248 from sijie/update_readme

TREE:tree d4954863251f990ac9dd53c52809af8af20f57ad ------
TIME:07/20/2017 15:24:34

COMMIT:ISSUE #258: BookieInitializationTest.testRegNodeExistsAfterSessionTimeOut failed

Descriptions of the changes in this PR:

Construct new zookeeper client to ensure the tests get new zookeeper session.

(this change is based on 77c7721 )

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #259 from sijie/issue_258, closes #258

TREE:tree 60c9eedc26436aa164327d91fb6f603094e28062 ------
TIME:07/19/2017 09:31:04

COMMIT:ISSUE #256: BookieInitializationTest.testWithDiskFullAndAbilityToCreateNewIndexFile failed

Descriptions of the changes in this PR:

in c49621b, we allow creating FileInfo even when disk is full to allow fence requests succeed at this case.

it is conflicted with Charan's change. Since there is already a setting to configure the min usable size to allow index file creation. if we configure that to be zero, it is same as allowing index file creation even disks are full. so removing the fallback logic introduced in c49621b.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Charan Reddy Guttapalem, Enrico Olivelli

This closes #257 from sijie/issue_256, closes #256

TREE:tree 35b5b0e6c57b751aa14d6226c8f57effcde4509c ------
TIME:07/19/2017 08:43:14

COMMIT:ISSUE #249: Organize findbugs and checkstyle files in buildtools module

Descriptions of the changes in this PR:

Organize findbugs and checkstyle files in buildtools module

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Matteo Merli <None>

This closes #250 from sijie/buildtools, closes #249

TREE:tree 717750754e908dc37ed3679272cd7ba6208cc352 ------
TIME:07/18/2017 10:50:57

COMMIT:BOOKKEEPER-980: BookKeeper Tools doesn't process the argument correctly

Descriptions of the changes in this PR:

Fix the issue described in [BOOKKEEPER-980](https://issues.apache.org/jira/browse/BOOKKEEPER-980).

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>, Venkateswararao Jujjuri (JV) <None>

This closes #255 from sijie/BOOKKEEPER-980

TREE:tree decc5497be34ab2b3c0849a17d4aebec48ab1fcd ------
TIME:07/18/2017 10:47:43

COMMIT:ISSUE #252: Enable four-letter-words zookeeper commands in localbookie

Descriptions of the changes in this PR:

Enable four-letter-words zookeeper commands in localbookie

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>, Matteo Merli <None>

This closes #253 from sijie/fix_4letters_issue, closes #252

TREE:tree 25c7cce4d0101e4502e8292cca86a4f0e11709bb ------
TIME:07/18/2017 10:34:47

COMMIT:ISSUE #230: Add Checkstyle to the build process (Part 2)

Fix issues checkstyle reported in
  - org.apache.bookkeeper.auth
  - org.apache.bookkeeper.bookie

Checkstyle is not added to the bookkeeper-server yet.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: sigee <sigee15@gmail.com>

Reviewers: Jia Zhai <None>, Sijie Guo <None>

This closes #234 from sigee/checkstyle2, closes #230

TREE:tree 08686e16e8b0a92957b7a52c4987d88cb92d94cf ------
TIME:07/18/2017 05:02:03

COMMIT:BOOKKEEPER-1095: Long Poll - Server and Client Side Changes

Descriptions of the changes in this PR:

- changes on FileInfo to support notifications on LAC changes
- a new ReadEntryLongPollV3 processor to process readEntry requests with long poll flags
- a new public API for long poll: readLastConfirmedAndEntry. if it is reading beyond the LAC, it will become a long poll request and wait for advancing LAC on bookie side; if it isn't reading beyond the LAC it will be normal reads.
- also have a speculative mechanism for long poll reads.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #220 from sijie/BOOKKEEPER-1094

TREE:tree 01b0e4ee75cfaf81d51e3e68b29bc698f2805e16 ------
TIME:07/17/2017 23:27:13

COMMIT:ISSUE #237: Upgrade to ZooKeeper 3.5.3-BETA

Descriptions of the changes in this PR:

Update ZooKeeper dependency from 3.5.1-alpha to 3.5.3-beta.
This will enable ZooKeeper over SSL

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x ] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [ x] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #238 from eolivelli/zookeeper-3.5.3, closes #237

TREE:tree 7a8e9ee89f14086da66cb1c6f00d7e36bfe09f3e ------
TIME:07/17/2017 23:08:42

COMMIT:Add Checkstyle to the build process (Part 1)

Add checkstyle to
- bookkeeper-benchmark
- Stats API for bookkeeper
- Stats provider for codahale metrics
- Stats provider for Prometheus
- Stats provider for Finagle stats
- Stats provider for twitter-ostrich package
- Stats provider for twitter-stats package

and fix issues checkstyle reported.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [ ] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: sigee <sigee15@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #231 from sigee/checkstyle

TREE:tree 40a17f5bb5ee069fc2baa07eea63c857396747a4 ------
TIME:07/17/2017 23:00:39

COMMIT:ISSUE #228: BookKeeper Server: Index Page Management Memory Growth

Descriptions of the changes in this PR:

** Improvements **

- Never delete a LedgerEntryPage that has been allocated.
- Track free LedgerEntryPage in a separate list
- Use pages from the free pages list as though they were being freshly allocated
- This guarantees that the direct buffer allocation never exceeds the allocated space for index pages

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

This closes #229 from sijie/lru_related_changes, closes #228

TREE:tree f3f9873b699757581dfa4a001d1b726109950344 ------
TIME:07/17/2017 22:53:38

COMMIT:ISSUE #208: Improve ledger fence logic

Descriptions of the changes in this PR:

Problem:
    When bookie receive a fence request and couldn't find any writable dirs for the new index file, it will throw exception. This behavior can be improved, because as long as ledger fence request be persisted in Journal, we can say the fence request succeed. It should not depends on the success of flushing new index file.

Solution:

- Add option to fall back to pick from all directories regardless of writable or not when we getFileInfo for a new ledger
- Return success only when ledger fence request has been persisted in Journal

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x] Make sure the PR title is formatted like:
    `<Issue #>: Description of pull request`
    `e.g. Issue 123: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue #>` in the title with the actual Issue number, if there is one.

---

Author: Sijie Guo <sijie@apache.org>
Author: Yiming Zang <yzang@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #205 from sijie/improve_fencing_behavior, closes #208

TREE:tree 2ac3831f9ce7f2e880152ee5cbbf4fac01337f9e ------
TIME:07/17/2017 22:47:37

COMMIT:ISSUE #232: Add code-coverage report

Introduce Cobertura And Coveralls.io plugins in order to run code coverage reports

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

This closes #233 from eolivelli/code-coverage, closes #232

TREE:tree 307517db8940b626b0efcabd3dd3de26a5968024 ------
TIME:07/16/2017 14:01:43

COMMIT:y

Descriptions of the changes in this PR:
Handle handle non-ascii chars in username in merge script.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [X] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [X] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [X] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: jiazhai <zhaijia@live.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #242 from jiazhai/issue_241

TREE:tree 813b36f1bcfc25816db087f06aad308ca081860e ------
TIME:07/14/2017 12:36:07

COMMIT:ISSUE #239: typo in class name SpeculativeRequestExecutor (#240)


TREE:tree e82b36bb0f160b5036582319fbfd709d1a79595c ------
TIME:07/13/2017 11:37:13

COMMIT:ISSUE #235: Setter for JournalMaxGroupWaitMSec/JOURNAL_MAX_GROUP_WAIT_M…

Add a setter for JournalMaxGroupWaitMSec configuration property

- [x] Make sure the PR title is formatted like:
    `<Issue # or BOOKKEEPER-#>: Description of pull request`
    `e.g. Issue 123: Description ...`
    `e.g. BOOKKEEPER-1234: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue # or BOOKKEEPER-#>` in the title with the actual Issue/JIRA number.

---

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>

This closes #236 from eolivelli/JOURNAL_MAX_GROUP_WAIT_MSEC, closes #235

TREE:tree afefc756e2ce67157af866ede4a723125440de05 ------
TIME:07/09/2017 09:36:11

COMMIT:BOOKKEEPER-1033: Handle DirsPartitionDuplication

- Provide configuration for allowDirsPartitionDuplication
- while calculating total disk metrics account Partition Duplication

Author: cguttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <guosijie@gmail.com>

This closes #189 from reddycharan/dirspartitionduplication and squashes the following commits:

99fc6fc1 [cguttapalem] BOOKKEEPER-1033: Handle DirsPartitionDuplication
1d453975 [cguttapalem] BOOKKEEPER-1033: Handle DirsPartitionDuplication

TREE:tree b6d9b09654591fb6a01efbc87a376dedbc0f4d57 ------
TIME:07/07/2017 08:19:57

COMMIT:BOOKKEEPER-1028 and BOOKKEEPER-1029

    BOOKKEEPER-1028: inc/excl opts listunderreplicated

    - Introduce including and excluding BookieId options
    for listunderreplicatedLedgers

    - But there is limitation that, since replicaslist wont be
    updated in underreplicatedledger zNode there is possibility
    of stale information

      ---------------------------------------------------------

    BOOKKEEPER-1029: BookieDecommision Workflow

    - LostBookieRecoveryDelay config param is stored in ZK
    - if LostBookieRecoveryDelay is reset to same value then it force triggers audit immediately
    - Added logic to trigger immediately or schedule pending audittask depending on the changed value in ZK
    - good number of testcases validating focetrigger/reschedluing audittask
    - added bookieshell command to get/set LostBookieRecoveryDelay from ZK
    - added bookieshell command to triggeraudit by resetting LostBookieRecoveryDelay
    - added decommissionbookie bkshell command, which validates the complete replication of ledgers stored in the bookie

Author: cguttapalem <cguttapalem@salesforce.com>
Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <guosijie@gmail.com>

This closes #127 from reddycharan/listunderreplicatedpredicate and squashes the following commits:

34bacf3c [cguttapalem] BOOKKEEPER-1029: BookieDecommision Workflow
eb43ec49 [Charan Reddy Guttapalem] BOOKKEEPER-1029: BookieDecommision Workflow
fcb399df [cguttapalem] BOOKKEEPER-1028: inc/excl opts listunderreplicated

TREE:tree e98151a8e437c09a3c7815f472e7f4add1cfc2a3 ------
TIME:07/07/2017 05:11:25

COMMIT:Add missed tests for SortedLedgerStorage

Added two missed tests for SortedLedgerStorage. It was missed when we (twitter) merged the SortedLedgerStorage back.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli, Jia Zhai

This closes #227 from sijie/more_memory_table_related_tests

TREE:tree 23bba80d94ac2e93e09f5281d43fd29d5d4b0fbd ------
TIME:07/04/2017 08:24:28

COMMIT:BOOKKEEPER-772: Reorder Read Sequence

Descriptions of the changes in this PR:

    - for rackware placement policy, the bookie in the same rack will be preferred.
    - for region-aware placement policy, the bookie in the same region will be preferred.
    - for any readonly or unavailable (high score in bookie failure history) bookies, they will be at the last position in the sequence.

This change is based on #220 . Please review gitsha 1f7dccd for the reorder change.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Matteo Merli <None>

This closes #224 from sijie/reorder_reads

TREE:tree ba9401aaa89e1c51e917fb22f613a3d50192da87 ------
TIME:07/04/2017 06:27:21

COMMIT:Issue 223: Code cleanups

Descriptions of the changes in this PR:

There are some different kind of cleanups by commits. To make the code more readeable and improve code quality and improve performance in some cases.
E.g.:
 - Remove unnecessary semicolons
 - Remove unused/unneeded/duplicated imports
- Replace l to L in long literals
- Remove boxing on an already boxed value
- Replace iterations to bulk operations

Author: sigee <sigee15@gmail.com>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>, Sijie Guo <None>

This closes #217 from sigee/cleanups

TREE:tree 8e67252b110969c03fe689db38d294b1167a034c ------
TIME:07/04/2017 06:14:11

COMMIT:Issue 225: Remove Parameterized from CompactionTest

Descriptions of the changes in this PR:

- Split the CompactionTest into two, one is by bytes, while the other one is by entries.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>

This closes #226 from sijie/compaction_tests

TREE:tree 6bb6f57a0d6b767773439edfae33e2f166730042 ------
TIME:07/04/2017 05:59:41

COMMIT:ISSUE #221: Make netty server shutdown idempotent

Descriptions of the changes in this PR:

(see the detailed discussion in #221 )

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>

This closes #222 from sijie/make_shutdown_idempotent, closes #221

TREE:tree 3989a8759e7d3ccc026f8932440a561a64d78b56 ------
TIME:07/01/2017 09:05:43

COMMIT:ISSUE #198: TestBackwardCompat.testCompat410 often fails due to io.netty.util.IllegalReferenceCountException

Descriptions of the changes in this PR:

Problem:

in TestBackwardCompat#testCompact400, the test is to verify the current client can't talk to a 4.0.0 server.

The 4.5.0 client is sending a protobuf encoded request to 4.0.0 server. The 4.0.0 server will interpret the 4.5.0 protobuf encoded request, but it will realize this is bad request and sending v2 protocol encoded response. because the request is a bad request, 4.0.0 server sent a response back with unknown op code.

In current v2 ResponseEnDecoder (listed as below), when it doesn't know the op code, it will return the buffer to the channel. this might cause the misbehavior in the channel pipeline to decrement reference count.

Solution:

throw exception in the EnDeCoder when receiving unknown op code. so the netty can close the connection, error out the pending requests and cleaning up the resources.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <None>

This closes #219 from sijie/issue_198, closes #198

TREE:tree 67ae0fb04cb2f2bbd8c1c1e9653d1f2db7f85e15 ------
TIME:06/30/2017 07:10:42

COMMIT:BOOKKEEPER-759: Delay Ensemble Change & Disable Ensemble Change

Descriptions of the changes in this PR:

This pull request contains the changes around ensemble change.

- Delay Ensemble Change: Provide a flag to allow delay ensemble change. if that is set to change, will not do ensemble change until it breaks ack quorum requirements.
- Disable Ensemble Change: Provide a runtime feature flag to allow disabling ensemble change. The ensemble change behavior can be disabled on-the-fly via the FeatureProvider.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x] Make sure the PR title is formatted like:
    `<Issue #>: Description of pull request`
    `e.g. Issue 123: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue #>` in the title with the actual Issue number, if there is one.

---

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

This closes #202 from sijie/client_changes/delay_ensemble_changes

TREE:tree 9a59988e18f787c00228f160da7a4983f8d2cd2c ------
TIME:06/30/2017 00:12:40

COMMIT:ISSUE #209: Introduce Speculative Read/Read LAC policy

Descriptions of the changes in this PR:

    - Separate out the logic that determines when speculative reads are scheduled from the individual requests into a separate SpeculativeRequestExecutionPolicy
    - Implement the default speculative read execution policy based on the current mechanism of using first and max timeout
    - Initialize the policy once in the BookKeeper object and use it for individual requests by keeping information about the requests in the call chain.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x] Make sure the PR title is formatted like:
    `<Issue #>: Description of pull request`
    `e.g. Issue 123: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue #>` in the title with the actual Issue number, if there is one.

---

Author: Sijie Guo <sijieg@twitter.com>
Author: Robin Dhamankar <rdhamankar@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

This closes #200 from sijie/client_changes/speculative_policy, closes #209

TREE:tree b719e6e936a869e640b0dcead563115845dab49f ------
TIME:06/30/2017 00:08:17

COMMIT:ISSUE #207: change the HashSet to BitSet to handle duplicated bookies on reading entries

Descriptions of the changes in this PR:

Problem:

If there happens to have duplicated bookies in same ledger (it happened before when ensemble change still has problem), the read doesn't work as expected. It hang forever.

Solution:

Change the HashSet to BitSet to use bookieIndex rather than InetSocketAddress to track the heardfrom bookies set.

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x] Make sure the PR title is formatted like:
    `<Issue #>: Description of pull request`
    `e.g. Issue 123: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue #>` in the title with the actual Issue number, if there is one.

---

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #199 from sijie/client_changes/bitset, closes #207

TREE:tree fb90aa85f5feddd2e5e0a1f05e7e00d3ad9f7e30 ------
TIME:06/29/2017 23:57:16

COMMIT:Issue 212: change github PR template to adjust both issue# and jira# (#213)

change PR template to adjust both issue# and jira#

closes #212 


TREE:tree 526900d9f8b1fed243c235f3f407a16f798e5449 ------
TIME:06/29/2017 10:17:58

COMMIT:BOOKKEEPER-1086: ZkUnderreplicationManager cache watcher

Previously, getLedgerToReplicate left watches each time it traversed the
tree until it found a suitable replication target.  Since we don't have
a way of canceling watches, these watches tended to get abandoned,
particularly on interior nodes, which aren't changed much.  Thus,
over time, some nodes would build up a very large number of watch.

Instead, introduce a caching mechanism to remember outstanding watches
and avoid ever creating two watches on the same node.

Author: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #193 from athanatos/forupstream/BOOKKEEPER-1098

TREE:tree 592639cb9c2a0fe7d7aedca8c27cb64bcbba1c87 ------
TIME:06/28/2017 23:28:38

COMMIT:BOOKKEEPER-1034: Bookie start in RO when diskfull

When the disk is above threshold, Bookie goes to RO. If we have to restart the
bookie, on the way back, bookie tries to create new entrylog and other files,
which will fail because disk usage is above threshold,
hence bookie refuses to come up. So with this fix we will try to start in RO
mode if RO is enabled.

Also, if bookie has died abruptly then it may missed flushing EntryMemtable and
IndexInMemoryPageManager. So next time when it starts when disc is full
it is failing to create index file and it is shutting down, though we expect it
to start in readonlymode. So Bookie should be able to create index file
though it has reached the diskusagethreshold, while starting the Bookie in
Readonly Mode. But ofcourse there should be some config to safeguard when
disk usable space is so low.

Minor fixes in shutdown logic of Bookie and Bookieserver.

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #190 from reddycharan/bookiestartinreadonlywhendiskfull

TREE:tree 22733b7e6ec8bf40046a47f246b8a45d022609ba ------
TIME:06/28/2017 23:24:05

COMMIT:ISSUE #216: Remove useless and misleading '&= true'

This is just a super minor issue, I stumbled upon it looking into https://github.com/apache/bookkeeper/pull/58...

Assignments like 'shutDownTask =& true' aren't useful at all. I presume that compiler could strip them out but the code is less readable. (Just note that 'x & true == x').

Removed useless assignments.

Author: Diego Salvi <lothruin.mirwen@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #215 from diegosalvi/master, closes #216

TREE:tree f2e0765f752f68b1e5cd43f886b4bdf3e4c055ae ------
TIME:06/28/2017 23:09:37

COMMIT:ISSUE #203: TestFencing is failing due to LAC piggyback changes

Descriptions of the changes in this PR:

Problem:

TestFencing is failing after merging LAC piggyback changes. Because LAC piggyback will advance last add confirmed when reading entries.

Solution:

Move the addEntry verification to after reading entries.

At the same time, add more logging to #testManyOpen

---
Be sure to do all of the following to help us incorporate your contribution
quickly and easily:

- [x] Make sure the PR title is formatted like:
    `<Issue #>: Description of pull request`
    `e.g. Issue 123: Description ...`
- [x] Make sure tests pass via `mvn clean apache-rat:check install findbugs:check`.
- [x] Replace `<Issue #>` in the title with the actual Issue number, if there is one.

---

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #204 from sijie/fix_test_fencing, closes #203

TREE:tree dccd1be3b480d679b4432021ef77062ec1cfbb50 ------
TIME:06/22/2017 16:21:00

COMMIT:BOOKKEEPER-1097: GC test when no WritableDirs

- Functional test validating that Compaction takes place even if there
are no writableledgerdir but there are ledgerdirs according to
LedgerDirsManager.getWritableLedgerDirsForNewLog

- end-to-end testcase of Bookie recovery, incase of Bookie ledgerdir reaching
the threshold, and recovering by forcing the gc/compaction

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Sijie Guo <sijie@apache.org>

This closes #188 from reddycharan/gctestnowritabledirs

TREE:tree 753eadebb59cadf66b45def09b9da9c21bf5221e ------
TIME:06/21/2017 21:07:39

COMMIT:BOOKKEEPER-1092: Ledger Recovery (Part 5) - Add Test Case for Parallel Ledger Recovery

This change is based on #180 (ebf7020 is the change for review)

- Add test case for parallel ledger recovery
- More stats for ledger recovery

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #182 from sijie/recovery_improvements_part5

TREE:tree 8b0eaea557c38f76bffbb3c8884337f1c30cc7a7 ------
TIME:06/21/2017 21:00:15

COMMIT:BOOKKEEPER-1093: Piggyback LAC on ReadResponse

This change is based #178 - (you can review git sha 40ca8c2)

bookkeeper: LAC piggyback at read response

        - bookie server changes
          * cache maximum lac in file info
          * provide getLastAddConfirmed & setLastAddConfirmed in ledger storage
          * addEntry will set its lac thru setLastAddConfirmed
          * readEntry will read latest lac and piggyback
        - client change
          * check whether the response has lac piggybacked, if there is lac update lac in its corresponding ledger handle.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #180 from sijie/piggyback_lac

TREE:tree 4000c3d3e8f66d2ef43d64ad845facefa77aab0b ------
TIME:06/21/2017 19:58:00

COMMIT:BOOKKEEPER-1089: Ledger Recovery (part-4) - allow batch reads in ledger recovery

This change is based on #178 - (you can review git sha 82f73ef)

bookkeeper recovery improvement (part-4): allow batch reading in ledger recovery

    - enable batch read in ledger recovery, so we could parallel reading to improve recovery time.

    RB_ID=266145

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

This closes #181 from sijie/recovery_improvements_part4

TREE:tree 5c706e13539ce1a64007f2cc50afa4ca66dbc394 ------
TIME:06/21/2017 19:50:23

COMMIT:DL-124: Use Java8 Future rather than twitter Future

Switch to use Java8 CompletableFuture, to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).

This change is based on #132 . Gitsha ce0686e is the change to review.

The changes:

- Change Future to CompletableFuture
- Map to thenApply
- flatMap to thenCompose
- Added a FutureEventListener, and switch addEvenListener to whenComplete (or whenCompleteAsync)
- setValue to complete
- setException to completeExceptionally
- add rescue, ignore, ensure to FutureUtils as util functions.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #133 from sijie/change_twitter_future_to_java_future

TREE:tree 174fedc43686af62642edafe4723e0fbfcda91ed ------
TIME:06/21/2017 19:20:15

COMMIT:DL-124: Use Java8 Future rather than twitter Future

Switch to use Java8 CompletableFuture, to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).

This change is based on #132 . Gitsha ce0686e is the change to review.

The changes:

- Change Future to CompletableFuture
- Map to thenApply
- flatMap to thenCompose
- Added a FutureEventListener, and switch addEvenListener to whenComplete (or whenCompleteAsync)
- setValue to complete
- setException to completeExceptionally
- add rescue, ignore, ensure to FutureUtils as util functions.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #133 from sijie/change_twitter_future_to_java_future

TREE:tree ed9bac3b34966d1e1c46260725c759204c581443 ------
TIME:06/21/2017 19:20:15

COMMIT:DL-124: Use Java8 Future rather than twitter Future

Switch to use Java8 CompletableFuture, to reduce dependencies introduced by twitter future and make it more friendly to users (users don't think of using which version of scala).

This change is based on #132 . Gitsha ce0686e is the change to review.

The changes:

- Change Future to CompletableFuture
- Map to thenApply
- flatMap to thenCompose
- Added a FutureEventListener, and switch addEvenListener to whenComplete (or whenCompleteAsync)
- setValue to complete
- setException to completeExceptionally
- add rescue, ignore, ensure to FutureUtils as util functions.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #133 from sijie/change_twitter_future_to_java_future

TREE:tree 3ec14787334c59838f410ef320193a6a000ea031 ------
TIME:06/21/2017 19:20:15

COMMIT:ISSUE #191: add template for ISSUE and PR

Following BP-9, provide a template for ISSUE and PR.
When create issue, will use ISSUE template; while create PR will use PR template.

Author: jiazhai <zhaijia@live.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

This closes #192 from jiazhai/issue_191, closes #191

TREE:tree 532cc11925a17b588f759a8cd1a0deedde41cbf9 ------
TIME:06/21/2017 19:13:17

COMMIT:ISSUE #184: Support GitHub issues in bk-merge script

- Recoganize the issue title and normalize it
- Close the corresponding issue when closing the pr

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

This closes #194 from sijie/support_github_issues, closes #184

TREE:tree 39ddd544849a986db7e9506a1212794336c9e8e7 ------
TIME:06/16/2017 09:23:31

COMMIT:DL-204: Bump libthrift to latest version for distributedlog-core

Currently finagle heavily depends on an out-of-dated version - libthrift 5.0. Proxy modules (client, server) depend on this version, however the core library doesn't really depend on libthrift.

This change is to change libthrift to 0.9.* in distributedlog-core and shade it to avoid it conflict with the version used by finagle.

This change is based on #131 . The main change is at gitsha [6e58786](https://github.com/apache/incubator-distributedlog/commit/6e587869f87cdce50ae93ba3d52767719d1ab5a6)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #132 from sijie/change_thrift_for_core_module

TREE:tree 4c25806bdb02272286e7a1b70b1eb819d5264bf1 ------
TIME:06/12/2017 23:12:13

COMMIT:DL-199: Be able to support filesystem-path like name

In order to support hierarchical namespace, we need to be able to support filesystem path like log name.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #130 from sijie/DL_199

TREE:tree 11d2baa27bbe2c053ea1a0195fa56291465c50f9 ------
TIME:06/12/2017 21:55:41

COMMIT:DL-205: Remove StatusCode dependency on DLException

- Remove StatusCode from exceptions. Use integer as exception codes.
- Also re-organize the modules:

- [ ] distributedlog-protocol (for core structures) and distributedlog-core (for core library).
- [ ] proxy: distributedlog-proxy-protocol (new module for thrift generated protocol), distributedlog-proxy-client (proxy client) and distributedlog-proxy-server (proxy server)
- [ ] benchmark & tutorials.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #131 from sijie/new_layout

TREE:tree ce3759401a622a59e5ad5ea694265b5073b35c79 ------
TIME:06/12/2017 17:45:01

COMMIT:DL-205: Remove StatusCode dependency on DLException

- Remove StatusCode from exceptions. Use integer as exception codes.
- Also re-organize the modules:

- [ ] distributedlog-protocol (for core structures) and distributedlog-core (for core library).
- [ ] proxy: distributedlog-proxy-protocol (new module for thrift generated protocol), distributedlog-proxy-client (proxy client) and distributedlog-proxy-server (proxy server)
- [ ] benchmark & tutorials.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <None>, Leigh Stewart <lstewart@apache.org>

Closes #131 from sijie/new_layout

TREE:tree e9d1d10bbaa2243d9ef20824caab46b7f48bba98 ------
TIME:06/12/2017 17:45:01

COMMIT:BOOKKEEPER-1096: recursive znode delete

When ledger is deleted, along with leaf node
all the eligible branch nodes should be
deleted in ZooKeeper.

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #186 from reddycharan/recursiveznodedelete

TREE:tree 119d0a6044d461a0e8a2fee6628b1b2352237cb3 ------
TIME:06/12/2017 17:20:53

COMMIT:BOOKKEEPER-1088: CompactionTest tests are broken because of

Problem:

5fe86525a9c823f79b3e97fd82ea4aa1c75c79eb this commit broken the master. It is because the merge/rebase introduce duplicated lines

Solution:

This change is to remove the duplicated lines introduced at 5fe86525a9c823f79b3e97fd82ea4aa1c75c79eb

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #187 from sijie/sijie/fix_merge_issue

TREE:tree e076f8cc7801b72f13026e91edb413db37b0a122 ------
TIME:06/10/2017 13:55:37

COMMIT:BOOKKEEPER-748: Move fence requests out of read threads

This change is moving the fence request out of current read threads and using callback to trigger scheduling read entry and also it refactors the ReadEntryProcessV3 to support long poll in the subsequent requests.

Major changes:

- change fence request to use SettableFuture
- refactor ReadEntryProcessV3: to support run fence request in callback and support long poll (in subsequent requests)
- fix stats issue: requests stats measure the latency from bookie receives the request until it sends the response.
- remove "public static final" for state fields. it is not needed for variables in Interface.

Author: Sijie Guo <sijie@apache.org>
Author: Robin Dhamankar <rdhamankar@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>

Closes #174 from sijie/longpoll/part1_server_side_change

TREE:tree 03c42f4d681db1cd981519f25f32d171940bdb8a ------
TIME:06/05/2017 22:25:17

COMMIT:BOOKKEEPER-1088: Ledger Recovery (part-3) - Add a ReadEntryListener to callback on individual request

THIS CHANGE IS BASED ON #177  (you can review 868a3c8 for the only change that belongs to BOOKKEEPER-1088).

bookkeeper recovery improvement (part-3): add a ReadEntryListener to callback on individual request.

- add read entry listener which allow doing batch read, but callback on individual entries in sequence. so in recovery op, we could issue batch reads, then on each individual callback do add entry and stop when received NoSuchEntry.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Venkateswararao Jujjuri (JV) <None>

Closes #178 from sijie/recovery_improvements_part3 and squashes the following commits:

dd24faf [Sijie Guo] Merge branch 'master' into recovery_improvements_part3
2e1ebb9 [Sijie Guo] Merge branch 'master' into recovery_improvements_part3
8b8a3c8 [Sijie Guo] bookkeeper recovery improvement (part-3): add a ReadEntryListener to callback on individual request.
db3e98b [Sijie Guo] Address conflicts
f0fb89c [Sijie Guo] bookkeeper recovery improvement (part-2): add a parallel reading request in PendingReadOp
80ffc6c [Sijie Guo] Address conflicts
3db0b84 [Sijie Guo] bookkeeper recovery improvement (part-1): refactor PendingReadOp

TREE:tree e577a16bd6819c71479cc142d8ef97c310549d2c ------
TIME:06/05/2017 22:13:31

COMMIT:BOOKKEEPER-1087: Ledger Recovery (part 2) - Add a parallel reading request in PendingReadOp

THIS CHANGE IS BASED ON #176 (you can review f0fb89c)

bookkeeper recovery improvement (part-2): add a parallel reading request in PendingReadOp

- add a parallel reading request in PendingReadOp
- allow PendingReadOp to configure whether to do parallel reading or not
- add flag in ClientConfiguration to allow configuring whether to do parallel reading in LedgerRecoveryOp or not.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #177 from sijie/recovery_improvements_part2

TREE:tree 99920a485c05889f776ad872f3c4d29de386a534 ------
TIME:06/05/2017 21:48:33

COMMIT:BOOKKEEPER-944: LowWaterMark Storage Threshold

BOOKKEEPER-944: LowWaterMark Storage Threshold

LowWaterMark Storage Threshold and code refactoring

    - Current implementation toggles READONLY status of the bookie as soon as a directory usage falls below the disk storage threshold.
      Added LowWaterMark parameter that limits such switches.
    	1. Bookie transition from RW to RONLY only when all the ledger dirs usage > HWM (storage threshold)
    	2. Bookie transition from RONLY to  RW only when total system disk usage (ledger/index disks) capacity is < LWM
    	3. When bookie is in RW mode all disks which are < HWM (storage threshold) are RW
    - refactored code and separated LedgerDirsMonitor from LedgerDirsManager, to remove circular dependency
      between LedgerDirsManager and LedgerDirsMonitor and also it improves testability by making them separate classes.
      It becomes easier to do functional/unit level testing and fault-injection testing at LedgerDirsMonitor class level.
    - relevant testcases

Author: Andrey Yegorov <ayegorovsalesforce.com>
Co-Author: Charan Reddy Guttapalem <cguttapalemsalesforce.com>

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #108 from reddycharan/lwmhwm

TREE:tree d5c2d02280a8d90998b4dfe06fd0ab9481c681dd ------
TIME:06/05/2017 20:30:52

COMMIT:BOOKKEEPER-1090: Use LOG.isDebugEnabled() to avoid unexpected allocations

Using `LOG.debug(...)` can lead to multiple unexpected memory allocation, even when the logger it's turned off.
For example, int and long parameter are boxed into Integer and Long objects and the var-arg parameters are using an `Object[]` to hold
them.
We should guard all usages of `LOG.debug()` with the `if (LOG.isDebugEnabled()` guard.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli, Sijie Guo

Closes #179 from merlimat/if-debug

TREE:tree 56e7d86b61b42f188d1115ea6a697fb587f24bad ------
TIME:06/01/2017 23:58:21

COMMIT:BOOKKEEPER-989: Enable Travis CI for Apache BookKeeper

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <None>, Matteo Merli <mmerli@apache.org>

Closes #168 from sijie/enable_travis_ci

TREE:tree a637838806ac40e42419c5b5b6ec5aae8963634f ------
TIME:06/01/2017 22:59:44

COMMIT:BOOKKEEPER-1086: Ledger Recovery - Refactor PendingReadOp

this change is the first part of improving ledger recovery. it is basically a refactor change, which:

- abstract an interface for LedgerEntryRequest in PendingReadOp
- rename current implementation to SequenceReadRequest, which read the entry in the sequence of quorum.

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #176 from sijie/recovery_improvements

TREE:tree a82a0e92480c40a970a7cd0eaf96874d5a32541a ------
TIME:06/01/2017 22:39:28

COMMIT:BOOKKEEPER-1056: Removed PacketHeader serialization/deserialization allocation

When parsing the request packet header, use static methods to avoid creating a `PacketHeader` instance.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <None>, Sijie Guo <None>, Venkateswararao Jujjuri (JV) <None>

Closes #175 from merlimat/packet-header-parsing

TREE:tree 16eb4021653eb76fc3686207800167c5350d5785 ------
TIME:06/01/2017 21:20:59

COMMIT:BOOKKEEPER-1074: Remove JMX Bean

This change is based on #160 , the change here is: gitsha [b3be81f](https://github.com/sijie/bookkeeper/commit/b3be81fadae50f2d4a2e938c2735fa35c6c31421)

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Enrico Olivelli, Matteo Merli

Closes #161 from sijie/remove_jmx_beam

TREE:tree 03b85f60f0780e0af4ab770e96f621c73ddd7984 ------
TIME:06/01/2017 13:19:58

COMMIT:BOOKKEEPER-1085: Introduce the AlertStatsLogger

Introduce the AlertStatsLogger used to increment a metric whenever an event that should never happen is detected. Allow specifying an optional scope to better classify the error conditions

RB_ID=598662

Author: Sijie Guo <sijie@apache.org>
Author: Robin Dhamankar <rdhamankar@twitter.com>

Reviewers: Enrico Olivelli, Jia Zhai

Closes #173 from sijie/add_alert_state_logger

TREE:tree 7183ed790b8bdd495da855469d1c43aa0186c916 ------
TIME:06/01/2017 13:16:48

COMMIT:BOOKKEEPER-1083: Improvements on OrderedSafeExecutor

    - use listeningscheduledexecutorservice for the threads
    - as a general util class, expose chooseThread to allow applications use specific thread
    - add a method to force shutdown executor

Author: Robin Dhamankar <rdhamankar@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli

Closes #171 from sijie/add_monitored_thread_pool

TREE:tree 3cfc5c70d6f78fdd0d89c3e10ed1fc91b619a34f ------
TIME:06/01/2017 12:30:54

COMMIT:BOOKKEEPER-1084: Make variables finale if necessary

not all logger in bookkeeper & hedwig are static. some class like PendnigReadOp and LedgerEntry would have lots of objects, it might be bad. so this task is to make logger as a static variable if it didn't.

with benefit, cleaning up the imports when touching that file.

RB_ID=141138

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Jia Zhai, Enrico Olivelli

Closes #172 from sijie/make_finale

TREE:tree 09ac41a3a4286e7601c4b43a33c6f4f07423d1d2 ------
TIME:06/01/2017 11:42:04

COMMIT:BOOKKEEPER-1078: Local BookKeeper enhancements for testability

BookKeeper: Local Bookkeeper enhancements for testability

1. Allow creating local bookies without always starting a zookeeper server - This is required as tests may want to create and use their own instance of a test zookeeper
2. Allow using non default zookeeper host and more importantly non default ZK port
3. Allowing the caller to specify the initial port for the bookies
4. Optionally shutdown bookies when the bookie thread exits

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>
Author: Robin Dhamankar <rdhamankar@twitter.com>

Reviewers: Enrico Olivelli, Jia Zhai

Closes #164 from sijie/local_bookkeeper_enhancements

TREE:tree bd53cb049d6409b506dc8a09b906b633dbbd22c8 ------
TIME:06/01/2017 11:31:14

COMMIT:BOOKKEEPER-1071: Use per connection instances of request encoder/decoder

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli, Sijie Guo

Closes #170 from merlimat/bk-1071

TREE:tree a29b6b84b49c973f8afbfc45e4c2297eab2fffb7 ------
TIME:06/01/2017 09:47:28

COMMIT:BOOKKEEPER-1073: Several stats provider related changes.

- add finagle stats provider
- provide the ability to remove gauge and scopes
- update jetty versions for twitter-sciences stats provider

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai, Enrico Olivelli

Closes #160 from sijie/add_channel_writer_timer

TREE:tree 9b950a3add4440406096317395f2cdd0d31b9e56 ------
TIME:06/01/2017 08:55:45

COMMIT:BOOKKEEPER-1079: shell lastMark throws NPE

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Sijie Guo

Closes #167 from eolivelli/BOOKKEEPER-1079

TREE:tree 216abc6586b1f99b6541d9b20f0def0552483032 ------
TIME:05/26/2017 21:44:27

COMMIT:BOOKKEEPER-1010: Moving Guava to 20.0

This patch updates Guava to version 20.0 and shades it

Author: arvindkandhare <arvind.kandhare@emc.com>
Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo, Enrico Olivelli

Closes #166 from eolivelli/guava_version

TREE:tree 49cf3761aeeb7efe02d331814c8a733e26bf419d ------
TIME:05/26/2017 16:52:57

COMMIT:BOOKKEEPER-1077: Allow configuration journal/ledger paths for local bookkeeper.

Author: Sijie Guo <sijieg@twitter.com>
Author: Robin Dhamankar <rdhamankar@twitter.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #163 from sijie/to_string_mark

TREE:tree 8f42c771ee5db9f9c64166f39288cfe7bf3f718f ------
TIME:05/26/2017 12:38:28

COMMIT:BOOKKEEPER-1075: BK LedgerMetadata: more memory-efficient parsing of configs

It is the contribution from Alex Yarmula

commit 9d9d7dd26235a9beda4421b7bed750fea1789076
Author: Alex Yarmula <aktwitter.com>
Date: Wed Sep 23 05:57:30 2015 -0700

BK LedgerMetadata: more memory-efficient parsing of configs
Looking at the most prevalent client-side memory allocations, I noticed that we allocate 4KB every time we open a ledger. This is caused by allocating a 4KB buffer (in TextFormat.toStringBuilder) to account for the maximum possible Protobufs message, which is unnecessary in our case: we know the exact size of the metadata ( << 500 B) and don't need to allocate more.
TextFormat.merge(Readable, Message.Builder) is the current method we use. This changes to use TextFormat.merge(CharSequence, Message.Builder), which avoids the extra 4K allocation conversion + an extra StringBuilder.

RB_ID=745700

Author: Alex Yarmula <ak@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli, Sijie Guo

Closes #162 from sijie/bk_ledger_metadata_efficiency

TREE:tree e9c3131704bcf82d4b30ce4462e495e3adca9291 ------
TIME:05/25/2017 14:31:57

COMMIT:BOOKKEEPER-1068: Expose ByteBuf in LedgerEntry to avoid data copy

To avoid copying the entries payloads when writing/reading on a ledger and having to allocate a lot of `byte[]` on the JVM heap, we need to accept Netty ByteBuf buffer.

By passing a ByteBuf, an application can use a pooled buffer, pointing to direct memory, to the `LedgerHandle.addEntry()` and have the same buffer forwarded on the connection sockets to the bookies.

The same thing on the read side, `LedgerEntry` exposes an additional `getEntryBuffer()` method that can be used to get the underlying buffer and possibly forward that to some other connection, with zero-copy behavior (excluding getting data in-out of the kernel).

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Jia Zhai, Sijie Guo, Enrico Olivelli

Closes #155 from merlimat/byte-buf-ledger-entry

TREE:tree 135bfe763d01eba9dc3e2130ec6bbb470ce6b86e ------
TIME:05/25/2017 14:23:03

COMMIT:BOOKKKEEPER-1072: CompactionTest is flaky when disks are almost full

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <None>, Jia Zhai <None>

Closes #159 from sijie/BOOKKEEPER-1072

TREE:tree 497282c4058f700e948f49dea2f6c3cbff5fb727 ------
TIME:05/25/2017 13:37:29

COMMIT:BOOKKEEPER-391: Support Kerberos authentication of bookkeeper

This patch contains a very basic AuthProvider which uses JAAS and so enables the usage or GSSAPI/Kerberos for BookKeeper authentication

Author: eolivelli <eolivelli@apache.org>
Author: eolivelli <eolivelli@gmail.com>

Reviewers: Robert (Bobby) Evans <None>, Sijie Guo <None>

Closes #110 from eolivelli/BOOKKEEPER-391-kerberos

TREE:tree e72b262526a46f59e83339aaabc785c4de9c6456 ------
TIME:05/25/2017 13:31:04

COMMIT:Remove package-info.java under com.twitter.distributedlog.subscription

There is still one file left under com.twitter.distributedlog after repackage. This change is to delete this file.

https://github.com/apache/incubator-distributedlog/tree/master/distributedlog-core/src/main/java/com/twitter/distributedlog/subscription

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <zhaijia03@gmail.com>

Closes #129 from sijie/sijie/remove_subscription_files

TREE:tree d4d5e66e5db9027911b3d84ab995d9669c758116 ------
TIME:05/24/2017 19:08:43

COMMIT:BOOKKEEPER-1070: bk-merge-pr.py use apache-rat:check goal

Author: eolivelli <eolivelli@apache.org>

Reviewers: Jia Zhai <None>

Closes #158 from eolivelli/BOOKKEEPER-1070-rat

TREE:tree 9c262c79e496b89e103eb96735fee7dcaa6e58dc ------
TIME:05/18/2017 16:21:37

COMMIT:BOOKKEEPER-1055: Optimize handling of masterKey in case it is empty

On each request client and bookies are exchanging the ledger masterKey, which is a 20 bytes MAC digest of the ledger password.

For each request there is a considerable overhead in allocating byte arrays when parsing the add/read requests.

If the client is a passing an empty password, we should optimize the data path to skip all allocations (related to the masterKey) and instead rely on a static byte array.

Author: Matteo Merli <mmerli@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

Closes #156 from merlimat/empty-password

TREE:tree d42b7e76cd66f3d8132587c98fa71a055f3e3adc ------
TIME:05/17/2017 08:57:37

COMMIT:BOOKKEEPER-1069: If client uses V2 proto, set the connection to always decode V2 messages

Avoid handling parsing exception for each request and instead adapt to what the client is sending.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <None>, Sijie Guo <None>

Closes #157 from merlimat/always-v2

TREE:tree 75ec3609c8c4adad877b3cbe19c0d3130fa67936 ------
TIME:05/16/2017 13:20:56

COMMIT:BOOKKEEPER-1048: Use ByteBuf in LedgerStorage interface

To pass ref-counted buffer from Netty directly to the storage and the Journal, we need to have LedgerStorage to accept ByteBuf instead of ByteBuffer

#### Note

This commit is on top of BOOKKEEPER-1048 / #138. Once that gets merged, I will rebase. Posting now to get Jenkins run. Please review last commit f53f772f79d0a334edc0f05e66edb7cc645b1ffa in this PR for now.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <None>

Closes #139 from merlimat/bytebuf-in-ledger-storage

TREE:tree 6e967d2e03fc7889d32650d7493c74c8dbe4171a ------
TIME:05/16/2017 00:31:56

COMMIT:BOOKKEEPER-1061: BookieWatcher should not do ZK blocking operations from ZK async callback thread

In some cases, the BookieWatcher can get the ZK event thread stuck. This happens when a ZK blocking request is issued from a ZK callback thread.

We should decouple the blocking requests in a separate executor to avoid deadlocking ZK client.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>, Sijie Guo <sijie@apache.org>

Closes #149 from merlimat/bookie-watcher-thread

TREE:tree 113b57dd53d20439a3a781ee1ba6bbe40cca70d8 ------
TIME:05/15/2017 21:35:26

COMMIT:BOOKKEEPER-1067: Add Prometheus stats provider

Prometheus (https://prometheus.io) is a metrics collection system, similar but much more flexible than graphite.

It would be good to expose the Bookie and BookKeeper client stats directly so that a Prometheus instance can collect them (and also check the process status and add alerts).

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #154 from merlimat/prometheus

TREE:tree e5cec77b5d4bb9a76fb9d0dc2d79d9fec34bb57b ------
TIME:05/15/2017 21:25:18

COMMIT:BOOKKEEPER-1008: Netty 4.1

Added more ref-count fixes from yahoo-4.3 branch on top of #116

Author: Matteo Merli <mmerli@apache.org>
Author: Matteo Merli <mmerli@yahoo-inc.com>
Author: Kishore Kasi Udayashankar <kudayashankar@salesforce.com>

Reviewers: Jia Zhai <zhaijia03@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #138 from merlimat/netty-4.1

TREE:tree 79301fd6e43643bca7e19a0d8f90f11f6cc95155 ------
TIME:05/15/2017 19:52:53

COMMIT:BOOKKEEPER-1058: Ignore already deleted ledger on replication audit

Replication auditor should skip ledgers that were deleted since the auditing was started.

Author: rdhabalia <rdhabalia@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #146 from merlimat/ignore-deleted-ledgers-in-replication

TREE:tree bfad1a88f1c759db05174fb619b824766dfe9f65 ------
TIME:05/15/2017 19:32:26

COMMIT:BOOKKEEPER-1063: Use executor.execute() instead of submit()

… creation of unused FutureTask

When submitting tasks to an executor, if the `FutureTask` object is not being used we should use `execute()` instead of `submit()` in order to avoid the task object allocation.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #150 from merlimat/executor-execute

TREE:tree f4b093df6a7a317df49807ad01b8a63d177f1ec3 ------
TIME:05/12/2017 16:39:04

COMMIT:BOOKKEEPER-1064: ConcurrentModificationException in AuditorLedgerCheckerTest

As seen in:
https://builds.apache.org/job/bookkeeper-master-git-pullrequest/371/

The test is iterating over a hash map that gets updated by a different thread. The map needs to be concurrent.

```
java.util.ConcurrentModificationException
	at org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.stopAuditorElectors(AuditorLedgerCheckerTest.java:130)
	at org.apache.bookkeeper.replication.AuditorLedgerCheckerTest.tearDown(AuditorLedgerCheckerTest.java:114)
```

All subsequent tests in the same class are failing because of the 1st test not cleaning up properly.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #151 from merlimat/bk-1064-auditor-ledger-test

TREE:tree 7e1bacfb9a80ae6f93888c68b64ec94c8a8f5f0b ------
TIME:05/12/2017 15:20:31

COMMIT:BOOKKEEPER-1066: Introduce GrowableArrayBlockingQueue

In multiple places, (eg: journal, ordered executor, etc..), we are using `LinkedBlockingQueue` instances to pass objects between threads.

The `LinkedBlockingQueue` differs from the `ArrayBlockingQueue` in that it doesn't require to define a max queue size, though, being implemented with a linked list, it requires to allocates list nodes each time an item is added.

We can use a `GrowableArrayBlockingQueue` that behaves in the same way as the `LinkedBlockingQueue`, but it's implemented with an array that can be resized when the queue reaches the capacity.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #153 from merlimat/growable-blocking-queue

TREE:tree 78eb93e173bad38732377ba9615ce51ebb827f90 ------
TIME:05/12/2017 15:17:36

COMMIT:BOOKKEEPER-1054: Add gitignore file

We should have a .gitignore file to hide all build generated files.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>

Closes #144 from merlimat/git-ignore

TREE:tree 83626b270e835c9272c10ba5d8d1ab9f4a972c99 ------
TIME:05/10/2017 23:17:43

COMMIT:BOOKKEEPER-1059: Upgrade to SLF4J-1.7.25

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>

Closes #147 from merlimat/slf4j-1.7

TREE:tree 6ab804944364ba11149d2bc22bc024bbe2d0ad66 ------
TIME:05/10/2017 23:15:05

COMMIT:BOOKKEEPER-1060: Add utility to use SafeRunnable from Java8 Lambda

Since BK-4.5.0 is already switched to Java8, we should have a simple and concise way to pass lambdas where a `SafeRunnable` is required.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>

Closes #148 from merlimat/safe-runnable

TREE:tree ab2918947a30bddeb14d435f76b01b0a67c7d4d7 ------
TIME:05/10/2017 22:47:02

COMMIT:BOOKKEEPER-1053: Upgrade RAT maven version to 0.12 and ignore Eclipse project files

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Jia Zhai <None>

Closes #143 from merlimat/rat

TREE:tree 722501ae96249f0950029f9beffb517ee34b8ee0 ------
TIME:05/10/2017 03:17:19

COMMIT:BOOKKEEPER-1052: Print autorecovery enabled or not in bookie shell

Print the current status of auto-recovery, whether it's enabled or disabled.

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Enrico Olivelli <None>

Closes #142 from merlimat/autorecovery-enabled

TREE:tree 287e87a020c1d76b6c7e8ffdc7f3f52008cdb8c3 ------
TIME:05/09/2017 23:07:45

COMMIT:BOOKKEEPER-1051: Fast shutdown for GarbageCollectorThread

Several unit tests are taking very long time to complete (eg: `BookieLedgerIndexTest` taking ~10 minutes).
The reason is that these tests are playing with the ZK quorum shutting it down and after the test succeeds, the shutdown phase is taking long time, since we try to do graceful shutdown with 1min wait time.
I think is better to interrupt immediately the garbage collector thread when shutting down the bookie.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>

Closes #141 from merlimat/fast-gc-thread-shutdown

TREE:tree b338b2e146b7197cb182e80de98ae43f74bd6910 ------
TIME:05/09/2017 23:06:02

COMMIT:BOOKKEEPER-1050: Cache journalFormatVersionToWrite when starting Journal

Reading the journal version format from `ServiceConfiguration` each time is inefficient.
`ServiceConfiguration` is based on Java properties which is based on a String to object hashtable. Each read implies acquiring a mutex and converting from object to int.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <None>

Closes #140 from merlimat/cache-journal-conf

TREE:tree 5112013b385282d7e89807a7f05aace760956dde ------
TIME:05/09/2017 22:24:53

COMMIT:BOOKKEEPER-1047: Add missing error code in ZK setData return path

The log warning is not printing the error code returned by ZooKeeper

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #137 from merlimat/missing-error-msg

TREE:tree 86939e077f5d55b7fd9fbef3ace4f7acf061764b ------
TIME:05/04/2017 20:58:41

COMMIT:BOOKKEEPER-1046: Avoid long to Long conversion in OrderedSafeExecutor task submit

When submitting tasks to an OrderedSafeExecutor, most of the time a ledger id is being passed. Given that the method accepts and Object, the primitive `long` is boxed into a `Long` allocated on the heap.

Added specific method overload to directly accept longs as the key in the OrderedSafeExecutor.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@apache.org>

Closes #136 from merlimat/executor-long-conversion

TREE:tree 92f4366ccf8465d422b1bb1720a49763bb49f324 ------
TIME:05/04/2017 20:54:13

COMMIT:BOOKKEEPER-1045: Execute tests in different JVM processes

The current Maven Surefire configuration is using:
```xml
<forkMode>always</forkMode>
```

This is a deprecated config and apparently it's not creating new processes for each test as intended.

Currently the tests are leaking a big number of files and threads due to several reasons:
 * Tests that instantiate bookies and call shutdown() without calling start() before are creating and initializing the ledger storage but not closing it, leaking threads and several fds
  * ZooKeeperClient sometimes doesn't shutdown the zk handle if the test completes too quickly, leaking sockets.
 * Several tests are passing bad config, so the bookie/client start gets exception (on purpose) and then doesn't clean up some partial objects.
 * ...

That make running the test suite to be dependent on ulimit of the machine.

Until we can fix (almost) all the test to do proper cleanup, we should make maven to run tests in separated processes.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli<eolivelli@apache.org>, Jia Zhai <zhaijia@apache.org>

Closes #135 from merlimat/bk-1045-test-forks

TREE:tree 37172a5ad2233a55e23d9b58ff54b1e3be8e1954 ------
TIME:05/04/2017 10:27:44

COMMIT:BOOKKEEPER-552: 64 Bits Ledger ID Generation

This PR supersedes #112

Instead of moving LongHierarchicalLedgerManager to HierarchicalLedgerManager, LongHierarchicalLedgerManager is still a stand-alone manager. HierarchicalLedgerManager has been moved to LegacyHierarchicalLedgerManager, and a new HierarchicalLedgerManager class has been put in its place, which is backwards-compatible with the original (now legacy) HierarchicalLedgerManager.

This new HierarchicalLedgerManager leverages the new LongZkLedgerIdGenerator to generate Ids, and uses the LongHierarchicalLedgerManager to manage metadata for ledger IDs > 31 bits long. For shorter ledger ids, the LegacyHierarchicalLedgerManager is used, to keep backwards-compatibility.

Author: Kyle Nusbaum <knusbaum@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>, Venkateswararao Jujjuri (JV) <None>

Closes #114 from knusbaum/BOOKKEEPER-552

TREE:tree d7abc89a7c5cca24ef394c6906142a083b2da8da ------
TIME:05/02/2017 23:04:57

COMMIT:BOOKKEEPER-1019: Support for reading entries after LAC

This patch introduces a new client-side configuration option to allow reads outside the boundary of the local LastAddConfirmed value.

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

Closes #121 from eolivelli/BOOKKEEPER-1019-read-after-lac

TREE:tree f769b28fd31a7218b7003d428b5653e2f0bec00d ------
TIME:05/02/2017 22:07:24

COMMIT:BOOKKEEPER-1042: Deploy SNAPSHOTS of master to public Apache Repository

Make all pom.xml files have a -SNAPSHOT version.

Currently we have the 'compats' subprojects which have a strange versioning scheme.
Actual versioning scheme for that poms will clash will other versions of the project, because they are fixed and do not depend on the common parent pom.

Changing the version will make the build more reproducible and it is a prerequisite for the deployment of -SNAPSHOT version to the official Apache Snapshots Repository

Author: Enrico Olivelli <eolivelli@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

Closes #134 from eolivelli/BOOKKEEPER-1042-pom-for-snapshots

TREE:tree e1137ea0384ed45634389d995226f3993ec42908 ------
TIME:05/01/2017 21:55:22

COMMIT:BOOKKEEPER-1043: Upgrade Apache Parent Pom Reference to latest version

Author: eolivelli <eolivelli@apache.org>

Reviewers: Ivan Kelly <ivan@ivankelly.net>

Closes #133 from eolivelli/BOOKKEEPER-1043-upgrade-pom

TREE:tree 3a7cd8ae9c6a21bcc1f00c1ab4b1e34ae69dc0bb ------
TIME:04/24/2017 14:30:06

COMMIT:BOOKKEEPER-1038: Fix findbugs warnings and upgrade to 3.0.4

- upgrade to findbugs 3.0.4
- fix DLS_DEAD_LOCAL_STORE At BookieInfoReader.java (introduce a constant)
- fix EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC At PerChannelBookieClient.java (introduce a V3CompletionKey)

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #131 from eolivelli/BOOKKEEPER-1038-findbugs

TREE:tree 4214744cdbb488eaf79fea116c3b1f8a1e8ba15b ------
TIME:04/20/2017 19:55:16

COMMIT:BOOKKEEPER-1039: bk-merge-pr.py ask to run findbugs and rat before merge

Add the ability to optionally run findbugs and apache RAT before every merge using the PR merge script

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #132 from eolivelli/BOOKKEEPER-1039-merge-findbugs

TREE:tree 5b34e69f673a499910421caa0813a9c87a6780e4 ------
TIME:04/18/2017 19:59:33

COMMIT:BOOKKEEPER-1018: Allow client to select older V2 protocol (no protobuf)

Tested manually - running all tests locally. Will tag contributors. when ready for review (for now putting up to test via Screwdriver and manual review)

Author: Govind Menon <govindappumenon@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #126 from govind-menon/BOOKKEEPER-1018

TREE:tree 1d15e074d0f635977af77c2774995e14f9b6ea19 ------
TIME:04/15/2017 13:58:34

COMMIT:DL-174: added getParent method to Utils to replace usage of File.getParent which changes / to \ on Windows

…ich changes / to \ in Windows.

Author: adamtracymartin <atmartin@yahoo.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #104 from adamtracymartin/DL-174

TREE:tree bc4c0e0443ecd6b7640ab3222d00384d4ad0412f ------
TIME:04/13/2017 06:38:32

COMMIT:DL-173: changed FileUtils.deleteDirectory to FileUtils.forceDeleteOnExit so d…

I am doing a new pull request because I deleted the branch in the remote.
Actions done to fix the conflict.
1. git checkout DL-173
2. git checkout master distributedlog-protocol/src/main/thrift/service.thrift
3. git fetch
4. git add *
5. git commit with message

The actual fix for this branch is changing FileUtils.deleteDirectory to FileUtils.forceDeleteOnExit.

Author: adamtracymartin <atmartin@yahoo.com>

Reviewers: Jia Zhai <zhaijia03@gmail.com>, Sijie Guo <sijie@apache.org>, Leigh Stewart <lstewart@apache.org>

Closes #116 from adamtracymartin/DL-173

TREE:tree 2e4a3aaef48de443c532c9926fcff64dc81269ed ------
TIME:04/13/2017 06:36:19

COMMIT:DL-196: Remove 'Copyright 2017 The Apache Software Foundation' from license header

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <zhaijia03@gmail.com>

Closes #126 from sijie/sijie/fix_license_headers

TREE:tree acd2c126ad11dfde4782f04657e2f1f56ba8554b ------
TIME:04/13/2017 05:54:11

COMMIT:BOOKKEEPER-997: Wire protocol change for supporting long poll

adding fields in ReadRequest to support piggying back lac on read responses and support long poll requests.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Matteo Merli <mmerli@apache.org>

Closes #125 from sijie/longpoll/part0_wire_protocol_changes

TREE:tree 3a8f81f8eb814389240692e7c0c3ff81e339d085 ------
TIME:04/11/2017 20:20:29

COMMIT:BOOKKEEPER-1022: Make BookKeeperAdmin implement AutoCloseable

Author: eolivelli <eolivelli@apache.org>

Reviewers: Robert (Bobby) Evans <None>, Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

Closes #128 from eolivelli/BOOKKEEPER-1022-bkadmin-autocloseable

TREE:tree defd45728ea7206bf4b275c23d70dd62b86d25f9 ------
TIME:04/11/2017 20:19:22

COMMIT:BOOKEEPER-1002: Limiting the number of open files to avoid process max

Author: Matteo Merli <matteo.merli@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #129 from kishorvpatil/bk1002

TREE:tree e2cb52fd938a70a6ab28ad64c45aab6af5b887a3 ------
TIME:04/11/2017 20:15:19

COMMIT:BOOKKEEPER-1031: close the ledger handle in ReplicationWorker.rereplicate

…cate

Otherwise, we build up an unbounded set of Listeners in the
AbstractZkLedgerManager listenerSet structure which never go
away.

Signed-off-by: Samuel Just <sjustsalesforce.com>

Author: Samuel Just <sjust@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #130 from athanatos/forupstream/BOOKKEEPER-1031

TREE:tree 6373d66c4212c5fb4bcc1b2f3fed93c0d3cc40c5 ------
TIME:04/11/2017 20:14:19

COMMIT:BOOKKEEPER-1021: Improve merge script to handle github reviews api

Author: Sijie Guo <sijie@apache.org>

Reviewers: Govind Menon <None>

Closes #123 from sijie/sijie/improve_merge_scripts

TREE:tree 19b4e0458d3198b09e17bb328c00742f4beb4f1c ------
TIME:04/11/2017 08:28:37

COMMIT:BOOKKEEPER-1018: Revert ": Allow client to select older V2 protocol (no…

… protobuf)"

This reverts commit 9001e300ce0d5d2655d437e3eaa52f91487caed6.

I broke trunk - not exactly sure how - I will fix it and put up the PR again. For now I'm reverting the commit.

Author: Govind Menon <govindappumenon@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #124 from govind-menon/BOOKKEEPER-1018-Revert

TREE:tree 8179e3bd52a8c6f6cc21882a325842123d197e8a ------
TIME:04/04/2017 03:22:07

COMMIT:BOOKKEEPER-1018: Allow client to select older V2 protocol (no protobuf)

Originally done by Matteo Merli (merlimat). Tagging sijie and eolivelli  for review.

Author: Govind Menon <govindappumenon@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #120 from govind-menon/BOOKKEEPER-1018

TREE:tree 47654ac1545ccff03d4e39b02ebdd99099c94a6a ------
TIME:04/03/2017 21:31:47

COMMIT:BOOKKEEPER-1020: Fix Explicit LAC tests on master

Author: eolivelli <eolivelli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Robert (Bobby) Evans <evans@yahoo-inc.com>

Closes #122 from eolivelli/BOOKKEEPER-1020-fix-explicitlac-test

TREE:tree 8179e3bd52a8c6f6cc21882a325842123d197e8a ------
TIME:04/03/2017 18:57:40

COMMIT:BOOKKEEPER-390: Provide support for ZooKeeper authentication

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #76 from eolivelli/BOOKKEEPER-390

TREE:tree 956ac07d30f280bea7e1b3c0ea8e49b7455c3dee ------
TIME:03/28/2017 22:40:35

COMMIT:BOOKKEEPER-1004: Allow bookie garbage collection to be triggered manu…

Ran CompactionTest#testForceGarbageCollection

Author: Govind Menon <govindappumenon@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #109 from govind-menon/BOOKKEEPER-1004

TREE:tree 6dde607e510cc49d3426ed9357c5093f4d1e9947 ------
TIME:03/28/2017 22:39:22

COMMIT:BOOKKEEPER-852: Release LedgerDescriptor and master-key objects when not used anymore

Maps with ledger descriptors and master-keys are not cleaned after a ledger gets deleted.

For this PR, please only take a look at the last commit 18e3455. The other 2 commits are already in separate PRs. I'll rebase this PR once they'll get merged.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #78 from merlimat/bk-ledger-descriptor

TREE:tree 2c97b7f92b675bc96be336141b7913ffbda35fcb ------
TIME:03/28/2017 22:37:16

COMMIT:BOOKKEEPER-950: Ledger placement policy to accomodate different storage capacity of bookies

…ge capacity of bookies

This change introduces Disk weight based ledger placement. Currently free disk space is the only supported
weight for a bookie. This change also introduces a new protocol message between bk client and server
called GET_BOOKIE_INFO. This message is used by the client to retrieve the free disk space info from
all the bookies. The existing placement policies: DefaultPlacementPolicy and RackAwarePlacementPolicy
have been enhanced to make use of the weight while selecting bookies. New test cases have been added to
test RackawarePlacement with weights. A new test class has been added to test the weight based selection
algorithm in a stand alone fashion.

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #93 from rithin-shetty/weightBasedPlacementDec13

TREE:tree 5bf5cccebb6da57735683713345b1fa674d461b2 ------
TIME:03/28/2017 22:35:30

COMMIT:DL-184: reduce server_graceful_shutdown_period_ms from 35s to 20s, which is smaller than the default daemon stop timeout value

Author: xieliang <xieliang007@gmail.com>

Reviewers: Leigh Stewart <lstewart@apache.org>, Sijie Guo <sijie@apache.org>

Closes #115 from xieliang/DL-184-graceful

TREE:tree dfcb1f99400488ec7c42285644252859b48391c7 ------
TIME:03/28/2017 09:09:47

COMMIT:BOOKKEEPER-970: Bump the zookeeper version to 3.5

in DL, we need to leverage the asynchronous version of 'multi' in zookeeper. so this jira is to bump the zookeeper version to 3.5 to support async multi.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #79 from sijie/sijie/bump_zookeeper_version

TREE:tree ff9a6e3df1a012d7e21d2c244b1f481365dfadc9 ------
TIME:03/23/2017 15:59:01

COMMIT:BOOKKEEPER-1001: Make LocalBookiesRegistry.isLocalBookie() public

Author: Francesco Caliumi - Diennea <francesco.caliumi@diennea.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

Closes #106 from caiok/BOOKKEEPER-1001

TREE:tree b838e3e85d42cdd9b03894b20108951ae27a311e ------
TIME:03/23/2017 15:58:08

COMMIT:BOOKKEEPER-1013: Fix findbugs errors on latest master

- 100% synchronization on _explicitLac_ on FileInfo
- 100% synchronization on _length_ on LedgerHandle
- fixed the print format issue on journal dir names array
- fix checkpointsource list hashCode, equals()

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #118 from sijie/sijie/bk_1013

TREE:tree 90f35e46a2149d9d3b55fd96d78d6c3974531b94 ------
TIME:03/23/2017 15:55:12

COMMIT:DL-191: Fix license header issues

the copyright year is wrong.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>, Flavio Junqueira <fpj@apache.org>

Closes #121 from sijie/sijie/fix_license_header

TREE:tree b86a73284a63b4bc4b20401712de92d781b5b614 ------
TIME:03/23/2017 04:27:19

COMMIT:BOOKKEEPER-1007: Explicit LAC: make the interval configurable in ms

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Robert (Bobby) Evans <None>, Venkateswararao Jujjuri (JV) <None>, Sijie Guo <sijie@apache.org>

Closes #111 from eolivelli/BOOKKEEPER-1007-explicitlac-ms

TREE:tree 28289d8c5eb6590dcd66c7db89fdb93a80ac3a7d ------
TIME:03/23/2017 00:59:53

COMMIT:BOOKKEEPER-1003: Fix TestDiskChecker so it can be used on /dev/shm

The test generates a threshold which is negative if used on a disk where
the usable disk size is very close to the total disk size. A negative
threshold is invalid so the test fails in the wrong way. This fix stops
the threshold from going negative.

Full disclosure, most of these changes were actually done by ivankelly  For this I am mostly just putting them back into open source.

Author: Kishor Patil <kpatil@yahoo-inc.com>

Reviewers: Venkateswararao Jujjuri (JV) <vjujjuri@salesforce.com>, Sijie Guo <sijie@apache.org>

Closes #107 from kishorvpatil/BOOKKEEPER-1003

TREE:tree 72f032f73ef69a56c2495dcc7ccf17c9cd9991f7 ------
TIME:03/23/2017 00:54:42

COMMIT:BOOKKEEPER-999: Stop leaking threads in BookKeeper client

Author: Robert (Bobby) Evans <evans@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <eolivelli@gmail.com>, Jia Zhai <zhaijia03@gmail.com>, Kai S <None>, Venkateswararao Jujjuri (JV) <None>

Closes #105 from revans2/BOOKKEEPER-999

TREE:tree 0141076d804af8e631f576dc7a0d22f1fd9be4b2 ------
TIME:03/23/2017 00:51:48

COMMIT:BOOKKEEPER-998: Increased the max entry size to 5MB

Full disclosure, most of these changes were actually done by merlimat For this I am mostly just putting them back into open source.

Author: Robert (Bobby) Evans <evans@yahoo-inc.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Venkateswararao Jujjuri (JV) <None>

Closes #104 from revans2/BOOKKEEPER-998

TREE:tree 549c20fa3d6e4f01839232573f720d1c6f8d2056 ------
TIME:03/23/2017 00:48:06

COMMIT:BOOKKEEPER-1009: Use multiple journals in bookie

Mostly https://github.com/apache/bookkeeper/pull/71 with comments addressed

Will shortly add tests.

merlimat  Would it be ok to close 71?

Author: Govind Menon <govindappumenon@gmail.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #115 from govind-menon/BOOKKEEPER-1009_B

TREE:tree b46bb727e85f81e419601c34543565257135dae8 ------
TIME:03/22/2017 22:54:46

COMMIT:BOOKKEEPER-996: LongHierarchicalLedgerManagerFactory is missing license header

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #103 from sijie/sijie/fix_rat_issue

TREE:tree 9edfc7566eb75c216a9805cf5d3ea6709dbbe533 ------
TIME:01/31/2017 22:45:36

COMMIT:BOOKKEEPER-874: Explict LAC from Writer to Bookies

Introduce a new feature for sending explicit LAC to bookies.
A writable LedgerHandle creates a timer thread to send explicit LACs
at the intervals specified through configuration paramenter,
explicitLacInterval. If this is set to zero, this feature is disabled,
no timer thread is created.

Explicit LAC is sent only if the client did not get a chance to send
LAC through piggyback method for "explicitLacInterval" time.
To implement this, introduced two new protocol messages to the
Bookkeeper protocol -  WRITE_LAC and READ_LAC, in addition to its
current READ_ENTRY and ADD_ENTRY.

Reviewed-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>
Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
Co-Author : Charan Reddy Guttapalem <cguttapalemsalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #89 from reddycharan/explicitlacsinglecommit

TREE:tree ec09df8672ca6bf63684e6f9f462c4cbc95c48de ------
TIME:01/31/2017 04:01:48

COMMIT:DL-186: fix common.sh grep bug; kill MultiReader java process as expected

Author: xieliang <xieliang007@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #114 from xieliang/DL-186-smoketest

TREE:tree fd36f011de30a300dcec020562b1d0bb137e4a21 ------
TIME:01/31/2017 02:52:29

COMMIT: BOOKKEEPER-873 and BOOKKEEPER-553

    BOOKKEEPER-873: CreateLedgerAPI to accept ledgerId
    Add ledgerCreateAdv with ledgerId interface to Bookkeeper
    and corresponding Junit tests.

    BOOKKEEPER-553: LongHierarchicalLedgerManager
    - LongHierarchicalLedgerManager to support 63 bits ledgerid (positive long)
    - LongHierarchicalLedgerManager splits the generated id into 5 parts (3-4-4-4-4)

Author: Venkateswara <vjujjuri@salesforce.com>
Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #88 from reddycharan/ledgerhandleadvwithledgerid

TREE:tree 300d59465ad5d55a09a9160a93fe1a52c841134a ------
TIME:01/31/2017 02:41:54

COMMIT:BOOKKEEPER-959: ClientAuthProvider and BookieAuthProvider Public API used Protobuf Shaded classes

This fix removes the explicit usage of protobuf from ClientAuthProvider and BookieAuthProvider API, since protobuf library is shaded and relocated on the distributed public version of BookKeeper

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #67 from eolivelli/BOOKKEEPER-959

TREE:tree 2fa02bf21dc1841cf5ee5c30087d60dfa24bae55 ------
TIME:01/31/2017 02:14:22

COMMIT:BOOKKEEPER-968: Entry log flushes at configurable chunks

With this patch one can configure interval (in bytes) for entry log to flush writes to the disk.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #77 from dlg99/task/entry-log-flush

TREE:tree a2667d5d24000cfe901f09408cec9261c221e0df ------
TIME:01/31/2017 02:11:29

COMMIT:BOOKKEEPER-949: Allow entryLog creation for compaction

Allow entryLog creation even when bookie
is in RO mode for compaction

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>
Reviewed-by: Andrey Yegorov <ayegorovsalesforce.com>
Reviewed-by: Charan Reddy Guttapalem <cguttapalemsalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #99 from reddycharan/entrylogcreationforcompaction

TREE:tree 70591deca340717c5e403e99c29cb47a7cb302ac ------
TIME:01/30/2017 23:25:01

COMMIT:BOOKKEEPER-907: EntryFormatter should be configured

for ReadLedgerEntriesCmd, EntryFormatter should
be configurable and HexDumpEntryFormatter should
be one of them.

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #101 from reddycharan/entryformatter

TREE:tree d162bd4ff07971824f8f2a3e3b893f9f6288f063 ------
TIME:01/30/2017 21:31:01

COMMIT:BOOKKEEPER-943: Reduce log level of AbstractZkLedgerManager

Just change from "info" to "debug"

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #98 from eolivelli/BOOKKEEPER-943-reduce-logs

TREE:tree ea870394de4c7f24e3b976a942ae411b6f02c02f ------
TIME:01/11/2017 07:41:21

COMMIT:BOOKKEEPER-991: Get list of disk files

BKShell Command for
Getting list of DiskFiles -
Journals/EntryLogs/IndexFiles

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #100 from reddycharan/listfilesondisc

TREE:tree bda8986a65a6001ccb881348d710a4c01cb250e6 ------
TIME:01/11/2017 07:37:55

COMMIT:BOOKKEEPER-992: ReadLog Command Enhancement

- Take arguments lid and eid and prints just that entry
- Take arguments of position range and print entries
which are located in that position range

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #102 from reddycharan/readlogcommand

TREE:tree f02293edf56761b6808ec4dbb3f0b2650d77f265 ------
TIME:01/11/2017 07:34:59

COMMIT:Fix the script to make sure binary package can execute scripts correctly

- fix the release jar path
- copy the common script to each modules otherwise the built package won't be able to execute
- change the type of runner and copy the runner script to each tutorial module

Author: Sijie Guo <sijie@apache.org>

Reviewers: Jia Zhai <zhaijia@apache.org>

Closes #111 from sijie/sijie/copy_all_scripts_to_modules

TREE:tree 33a2978c45029cec8ffdfa218e5e12b25469eb5f ------
TIME:01/11/2017 06:45:42

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree cc1850a02ddbb8db84294cc3d85ad98a1e0eac08 ------
TIME:01/08/2017 23:46:53

COMMIT:[maven-release-plugin] prepare for next development iteration

TREE:tree 38ed55c445c396be21df3768e920594990a69219 ------
TIME:01/08/2017 23:46:53

COMMIT:[maven-release-plugin] prepare branch release-0.4.0-incubating

TREE:tree d39022ef5a0f74885c03ee4574a6302e0f0bd45c ------
TIME:01/08/2017 23:46:49

COMMIT:[maven-release-plugin] prepare branch release-0.4.0-incubating

TREE:tree 82bb65d22b1a02a616e8687ee55f0a70c58b8049 ------
TIME:01/08/2017 23:46:49

COMMIT:Remove Xlint compiler arguments for building release

TREE:tree fa52c6c4ded843b9590e77d46dcc0d101ff1246d ------
TIME:01/08/2017 23:46:02

COMMIT:DL-170: All dependency versions should be defined in the parent pom

make all dependencies' version be defined in the parent pom file.

Author: Gerrit Sundaram <gerritsundaram@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #97 from gerritsundaram/DL-170

TREE:tree fd736d7d5f29e8f276252a9d0cb25ad21fa74cbe ------
TIME:01/08/2017 23:10:37

COMMIT:DL-170: All dependency versions should be defined in the parent pom

make all dependencies' version be defined in the parent pom file.

Author: Gerrit Sundaram <gerritsundaram@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #97 from gerritsundaram/DL-170

TREE:tree 57f57b28760ead76b12a60694afb6bde0fa7b37c ------
TIME:01/08/2017 23:10:37

COMMIT:DL-28: changed // comments to /* */

Author: adamtracymartin <atmartin@yahoo.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #100 from adamtracymartin/DL-28

TREE:tree a7db566b36fc9add88b22626c79ad745a02e8bab ------
TIME:01/08/2017 23:03:13

COMMIT:DL-83: Add javadoc to website

- update the javadoc plugin to aggregate api by 'core library' and 'proxy service'. (turn some java class to package private and delete unused files. so they won't appear in java doc)
- improve the website build script to include javadoc
- update some readme files to include user mail list and slack channel

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #96 from sijie/sijie/merge_website_script

TREE:tree 1ba9eb1a553c74e128365d0eb186bc2bf4356613 ------
TIME:01/08/2017 23:01:35

COMMIT:DL-83: Add javadoc to website

- update the javadoc plugin to aggregate api by 'core library' and 'proxy service'. (turn some java class to package private and delete unused files. so they won't appear in java doc)
- improve the website build script to include javadoc
- update some readme files to include user mail list and slack channel

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #96 from sijie/sijie/merge_website_script

TREE:tree d0af21d9f5a5c7cd8fe6d70d305dff6dea3c3c37 ------
TIME:01/08/2017 23:01:35

COMMIT:DL-176: Rename the DL artifact from com.twitter to org.apache.distributedlog

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Dave Rusek <drusek@apache.org>, Leigh Stewart <lstewart@apache.org>

Closes #102 from sijie/sijie/fix_pom_file_layout

TREE:tree aa7e16e7d34b2791b0e3dd5d274e314fa1a54544 ------
TIME:01/07/2017 01:51:06

COMMIT:DL-176: Rename the DL artifact from com.twitter to org.apache.distributedlog

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Dave Rusek <drusek@apache.org>, Leigh Stewart <lstewart@apache.org>

Closes #102 from sijie/sijie/fix_pom_file_layout

TREE:tree c6ea0c1cdad1363bac8cf7fb3d9889b22d2850cf ------
TIME:01/07/2017 01:51:06

COMMIT:DL-171: adding a short sleep to let the WriteCompleteListener have time to run before the final position be requested

once the "writer.write" is done, if "writer.position()" be invoked easier than the WriteCompleteListener onSuccess callback, due to the "synchronized", the position result will be 0, not the expected 33. we can just add a short sleep to avoid this test issue.

Author: xieliang <xieliang007@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #98 from xieliang/DL-171-Fix-TestAppendOnlyStreamWriter

TREE:tree 0753a4cd18ccf36f11c358d94e68e03d620ff7e1 ------
TIME:01/07/2017 01:30:32

COMMIT:DL-4: Repackage the source under apache namespace

TREE:tree 4546553375a118b2da915a6f7d7cbd6f9dd2f6f5 ------
TIME:01/05/2017 01:44:15

COMMIT:DL-4: Repackage the source under apache namespace

TREE:tree 2e66ee03e7030863d4701de47eae1b21e40c43f1 ------
TIME:01/05/2017 01:44:15

COMMIT:DL-165: Add TestTimedOutTestsListener to dump timed out cases thread dump

Author: xieliang <xieliang007@gmail.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #91 from xieliang/DL-165-TimedOutTestsListener

TREE:tree 4d5b754609369f91940ea8daa3edcfb18d3937f0 ------
TIME:01/05/2017 01:09:01

COMMIT:DL-165: Add TestTimedOutTestsListener to dump timed out cases thread dump

Author: xieliang <xieliang007@gmail.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #91 from xieliang/DL-165-TimedOutTestsListener

TREE:tree ae02c3a37ddea6e03ab3804c7930973630e46b89 ------
TIME:01/05/2017 01:09:01

COMMIT:DL-140: Fix distributedlog-core findbug inconsistent synchronization warings

Author: xieliang <xieliang007@gmail.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #71 from xieliang/DL-140

TREE:tree e4fb9e050371769d1e2e79b07a973ddc47a0055f ------
TIME:01/04/2017 09:41:56

COMMIT:DL-164: Create stream operation should not be submitted by StreamImpl

TREE:tree 8e961c6f2253f3f1bf7e20fcceb05c3bad36d1a7 ------
TIME:12/29/2016 04:09:59

COMMIT:DL-163: clean up direct zookeeper and bookkeeper usage and use metadata/data store abstraction

- introduce NamespaceDriver class to manage metadata/data store abstractions
- clean up direct zookeeper and bookkeeper usage and use metadata/data store abstraction
- separate MetadataAccessor from DistributedLogManager
- remove deprecated classes

TREE:tree 23a00d2bc1d7a0b34d9855c8002d8421e82b3292 ------
TIME:12/29/2016 02:47:12

COMMIT:DL-162: Use log segment entry store interface

- Use log segment entry store interface
- Delete the old readahead implementation

TREE:tree 223a39a8465bc77586e284da4bd1eb8efe6bcbbf ------
TIME:12/29/2016 02:09:57

COMMIT:DL-161: Rename ledger id to log segment id

Along with providing log segment store related interfaces, clean up the naming from 'ledger id' to 'log segment id'. So it would become clear when we can plugin different log segment store.

TREE:tree f2d0ecd295027820444329c4857447d28ff869b6 ------
TIME:12/29/2016 01:48:47

COMMIT:DL-160: Remove 'DLSN' suffix from async and sync readers

TREE:tree 4725684317e6cdf54499117a1839221bbf6be572 ------
TIME:12/29/2016 01:27:38

COMMIT:DL-159: ReadAhead Improvement (part 2) - New ReadAhead Reader using the LogSegmentEntryReader interface

Provide a new ReadAhead reader using the log segment entry reader interface. It does reading entries in a batch in parallel for batches, rather than reading entries in batch by batch. This would help mitigate the slow bookie problem.

The core change is the new ReadAheadEntryReader.

TREE:tree 2da1b03ca782e77b847d58c3c150d025e4b3c383 ------
TIME:12/29/2016 00:09:38

COMMIT:DL-159: ReadAhead Improvement (part 2) - New ReadAhead Reader using the LogSegmentEntryReader interface

Provide a new ReadAhead reader using the log segment entry reader interface. It does reading entries in a batch in parallel for batches, rather than reading entries in batch by batch. This would help mitigate the slow bookie problem.

The core change is the new ReadAheadEntryReader.

TREE:tree 7a4090a302f0394ecf4ce199af0887a6bbdfc0bd ------
TIME:12/29/2016 00:09:38

COMMIT:DL-195: ReadAhead Improvement (part 1) - Interface for LogSegmentEntryReader and LogSegmentEntryWriter

Create interface for log segment entry reader and writer to abstract data write/read operations.

TREE:tree 2a39684236d6cce394956ab553b11eb5b358bbf5 ------
TIME:12/28/2016 23:51:54

COMMIT:DL-195: ReadAhead Improvement (part 1) - Interface for LogSegmentEntryReader and LogSegmentEntryWriter

Create interface for log segment entry reader and writer to abstract data write/read operations.

TREE:tree 750b4d9cc5c2a7e972d77bdb3da72339bbfa2741 ------
TIME:12/28/2016 23:51:54

COMMIT:DL-158: update truncation status for all completed log segments

update turncation status for all completed log segments, when purge truncated log segments we will leave one complete log segment.

TREE:tree 16b662189ca3d3caf56ec51c34dbbe10f7814250 ------
TIME:12/28/2016 23:49:50

COMMIT:DL-157: resource placement for write proxy

TREE:tree 0c8280a6b97729b9ce70b6fc704417eb10b9915f ------
TIME:12/13/2016 20:11:03

COMMIT:DL-119: Fix the logging on closing readahead worker

TREE:tree f3a1d436692e42cd1459b1791d7a69094ee29b10 ------
TIME:12/01/2016 03:21:08

COMMIT:DL-118: Stream metadata store followup - rename ZKLogMetadata* to LogMetadata*

As the followup change, this change is to remove 'ZK' from 'ZKLogMetadata*' class

TREE:tree e1b454ce63ac6e683103b19e302d32e861e952cc ------
TIME:12/01/2016 03:17:46

COMMIT:DL-117: Stream metadata store

This change is to abstract the zookeeper operations into a stream metadata store, so we can replace zookeeper with other metadata store easily.

So the metadata operations in distributedlog now are managed by 3 classes:

- LogMetadataStore : it is the namespace metadata store : it manages the location (uri) mapping for streams and handle namespace operations.
- LogStreamMetadataStore: it is the stream metadata store : it manages the metadata for a single stream, such as managing read/write lock, retriving/creating stream metadata, deleting metadata and such.
- LogSegmentMetadataStore: it is the segment metadata store : it manages the log segment metadata for individual log segment.

LogMetadataStore and LogSegmentMetadataStore are already there. This change focus on LogStreamMetadataStore

Changed:

* abstract all the zookeeper metadata operation in log handlers to LogStreamMetadataStore
* remove disabling max tx id santify check, as maxTxId update is part of the metadata update transaction

Not changed:

the name of ZKLogMetadataForReader and ZKLogMetadataForWriter are not changed. I will send out a change to rename these two classes as they are not related to zookeeper anymore.

TREE:tree 71efddc72d1edb15012af9f92a34b9e0394b0dff ------
TIME:12/01/2016 02:14:05

COMMIT:DL-116: Add tool for deleting subscriber from subscription store

Test Plan:

1. manually create znode for subscribers resume point
2. use the tool to delete the subscriberId

TREE:tree 337f126062021055c2e0914c6386601a16718bd9 ------
TIME:11/30/2016 23:16:14

COMMIT:DL-115: fix force get log segment logic

Summary:

We should remove the ledger closed check:

- force to get log segments if the reader has been idle for a while after open the ledger
- idleReaderWarnThreshold should be 2x larger than readLACLongPollTimeout

TREE:tree 431547f3be655371c782a7cde16ff20a5e64c82d ------
TIME:11/16/2016 23:14:52

COMMIT:DL-114: Add namespace watch tool

Port simple namespace watch tool from downstream

Author: Leigh Stewart <agrodellic@gmail.com>
Author: Leigh Stewart <lstewart@twitter.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #80 from leighst/lstewart/dlog/watch_tool

TREE:tree 445bdd72b6ddf2329f6ef3c686892af72639be84 ------
TIME:12/29/2016 07:46:48

COMMIT:DL-113: Improve the sync reader benchmark

Add more logging information for calcuating the stats for catching up reads

TREE:tree 427a07228613f4348ba15111bc64f7655df9910a ------
TIME:11/22/2016 02:41:26

COMMIT:DL-112: Improve SyncReader to access readahead cache directly

This changes the implementation of SyncReader to let it access the read ahead cache directly, rather
than calling AsyncReader to fetch the entries. It would reduce the function calls that SyncReader spends
on reading individual records.

TREE:tree 845509a4756f5d2224c2bc553a1835f6e216ebd6 ------
TIME:11/22/2016 02:35:40

COMMIT:DL-111: ReadAhead Cache should cache entries rather than records

Current readahead cache cache records. So it will be a lot of callbacks (function calls) when polling a record off the readahead cache. Most of the cpu cycles are unnecessarily spent
on function calls on polling records off the readahead cache. It is the throughput bottleneck for a DL reader.

This change is to change ReadAhead cache to cache entries rather than records. Defer the deserilization of records later on when the reader wants to access the records. It also make
the cache more efficient to reduce the memory footprint.

TREE:tree cf5d8fc47615d5d9ede194babfb82229c53f6777 ------
TIME:11/22/2016 02:30:13

COMMIT:DL-110: Write control record if necessary when roll a log segment

TREE:tree 64d0474f9d173a91c10a563ba46067101cbaa83c ------
TIME:11/22/2016 01:17:51

COMMIT:DL-109: Add a tool to find the stream containing the given ledger

TREE:tree 2af0faee4cf4362e45676147f1bf85775dd2f5d0 ------
TIME:10/27/2016 19:18:52

COMMIT:DL-108: Log rate limiting more clearly

TREE:tree 6f189b34227cb819b9cbf2a775d86ee17f8f9a9d ------
TIME:09/17/2016 02:35:51

COMMIT:DL-107: Added unregistering gauges for distributedlog-core and distributedlog-benchmark

TREE:tree 2f343fcc2b7218549de17880f600770031688b78 ------
TIME:08/23/2016 02:47:28

COMMIT:DL-106: Use namespace after it is closed will throw AlreadyClosedException

TREE:tree f7ca3e6f6aad65bf1f9e2e5b428ea993d5f0ceb7 ------
TIME:08/12/2016 19:30:39

COMMIT:DL-102: Add routing service to write proxy server side

this change is to add getOwner rpc in write proxy. so we can change the client side to get owner from write proxy first for routing service. in this way, we can start experiementing any resource placement algorithms.

TREE:tree 6ccbfb21586d6f26afcd214eecf7ea376778576b ------
TIME:07/29/2016 06:36:49

COMMIT:DL-105: Make compression stats available per stream

TREE:tree 7c984fc47ad0d90ef0b9fc9fad40aa36104afe57 ------
TIME:08/11/2016 01:18:53

COMMIT:DL-104: BKClientReadTimeout can be equal to getReadLACLongPollTimeout so current config validates

TREE:tree a7f5c8e33eff03bca47bed97b65bd977dac016e1 ------
TIME:08/09/2016 20:36:53

COMMIT:DL-102: Add routing service to write proxy server side

this change is to add getOwner rpc in write proxy. so we can change the client side to get owner from write proxy first for routing service. in this way, we can start experiementing any resource placement algorithms.

TREE:tree 047140cf84544f62388cb5f706c09ff83d8d092c ------
TIME:07/29/2016 06:36:49

COMMIT:DL-101: Improve session expire handling on fetching log segments for readers

This change focuses on improving the session expire handling on fetching log segments for readers.

The log segment management in DL is now done by 3 parts.

- a LogSegmentMetadataStore (one per namespace instance): it is used for fetching the log segments from log segment metadata store (ZooKeeper). it doesn't do any caching.
- a LogSegmentMetadataCache (one per namespace instance): it is a guava cache based metadata cache. it maintains a mapping between log segment metadata path and the log segment metadata. it manages the cache for the log segments that will be accessed in this namespace instance. it doesn't manage the sequence of the log segments for streams.
- a PerStreamLogSegmentCache for each BKLogHandler. the log segment cache is per stream. it maintains the sequence of the log segments.

BKLogWriteHandler doesn't watch the log segment changes. It fetches minimal number of log segments when it is created and fetches the full list of log segments for truncations. New log segments will be added to the per stream log segment cache with log segment rolling.

BKLogReadHandler watch the log segments changes and only notify when the list of log segments is changed. the session handling which is specific to the metadata store is hidden to the implementations of LogSegmentMetadataStore.

The change tries to cleanup bunch of unused methods in BKLog{Read,Write}Handler too.

TREE:tree d3ac8d2663d6889fd8510a0a67abe1105835a7ed ------
TIME:07/29/2016 06:10:33

COMMIT:DL-101: Improve session expire handling on fetching log segments for readers

This change focuses on improving the session expire handling on fetching log segments for readers.

The log segment management in DL is now done by 3 parts.

- a LogSegmentMetadataStore (one per namespace instance): it is used for fetching the log segments from log segment metadata store (ZooKeeper). it doesn't do any caching.
- a LogSegmentMetadataCache (one per namespace instance): it is a guava cache based metadata cache. it maintains a mapping between log segment metadata path and the log segment metadata. it manages the cache for the log segments that will be accessed in this namespace instance. it doesn't manage the sequence of the log segments for streams.
- a PerStreamLogSegmentCache for each BKLogHandler. the log segment cache is per stream. it maintains the sequence of the log segments.

BKLogWriteHandler doesn't watch the log segment changes. It fetches minimal number of log segments when it is created and fetches the full list of log segments for truncations. New log segments will be added to the per stream log segment cache with log segment rolling.

BKLogReadHandler watch the log segments changes and only notify when the list of log segments is changed. the session handling which is specific to the metadata store is hidden to the implementations of LogSegmentMetadataStore.

The change tries to cleanup bunch of unused methods in BKLog{Read,Write}Handler too.

TREE:tree 1355832bb5242813bcacb79d90d5d00adf212620 ------
TIME:07/29/2016 06:10:33

COMMIT:DL-151: TestBKLogReadHandler#testGetFirstDLSNWithOpenLedger is flaky

- Flush/Commit records only after the data are written
- Disable immediate flush
- Reduce num writes from 100 to 10

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #84 from sijie/sijie/FixTestGetFirstDLSNWithOpenLedger

TREE:tree f1734261fbc795c8fd85d25bfc4013093e05d948 ------
TIME:12/28/2016 01:47:06

COMMIT:DL-150: Ensure namespace path is created for TestZKLogMetadataForWriter

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #83 from sijie/sijie/FixTestCreateLogMetadata

TREE:tree 7e9ed0b5ef37c79f6e1292ef2e80724d34de97f1 ------
TIME:12/28/2016 01:45:43

COMMIT:DL-155: fix flaky TestAsyncReaderLock#testReaderLockMultiReadersScenario

Ran the case with changed patch 30 times, all are passed;   and it'll fail w/o patch

Author: xieliang <xieliang007@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #88 from xieliang/DL-155

TREE:tree 585dafdca7462493c313d918a652bbac4ed6e789 ------
TIME:12/27/2016 18:05:00

COMMIT:DL-145: the write requests should be error out immediately even if the rolling writer still be creating

Passed all test cases locally, now TestDistributedLogService#testServiceTimeout case is stable on my box

Author: xieliang <xieliang007@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #78 from xieliang/DL-145

TREE:tree 5c52598be548f2b635c2eb88b52d116212be793b ------
TIME:12/27/2016 17:57:27

COMMIT:BOOKKEEPER-964: Ignore findbugs warnings

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #96 from eolivelli/BOOKKEEPER-964-findbugs

TREE:tree 48bb4238e581db4c7c092c009b46cb423d98c074 ------
TIME:12/21/2016 19:40:28

COMMIT:DL-97: Remove unused methods in BKLogHandler

merge code change on remove unused methods in BKLogHandler.

Author: Sijie Guo <sijie@apache.org>
Author: Sijie Guo <sijieg@twitter.com>
Author: Leigh Stewart <lstewart@twitter.com>
Author: Jordan Bull <jbull@twitter.com>
Author: Dave Rusek <dave.rusek@gmail.com>
Author: Dave Rusek <drusek@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #69 from sijie/merge/DL-97

TREE:tree acf1793a946991db1dd306041a3b72e92705c587 ------
TIME:12/21/2016 09:09:57

COMMIT:DL-129: Enable checkstyle plugin for distributedlog-protocol module

- add build-tools module for check style configurations
- fix style problems in distributedlog-protocol
  * sorted import
  * fix javadoc
  * constant static name and static name

Author: Xi Liu <xiliuant@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #54 from xiliuant/xi/checkstyle

TREE:tree e95449a50d3782e86acd6994d5a427e3f9c2d25f ------
TIME:12/21/2016 02:00:37

COMMIT:BOOKKEEPER-986: Handle memtable flush failure

- If the memtable flush is failed previously then
for the next addEntry call it will try to flush the
existing snapshot

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #92 from reddycharan/handlememtableflushfailure

TREE:tree 1868d413d75da93b57ad48616ef10b6956012f43 ------
TIME:12/21/2016 01:48:48

COMMIT:BOOKKEEPER-983: BookieShell LedgerDelete Command

BookieShell Command for LedgerDelete

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #90 from reddycharan/ledgerdeletecommand

TREE:tree 01147014a8d231def240e631c9b54b7c1156feff ------
TIME:12/21/2016 01:42:33

COMMIT:BOOKKEEPER-988: Add missing license header

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #95 from sijie/sijie/fix_license_header

TREE:tree e96269aee28ffda779806a6dd8aa23070c1e7450 ------
TIME:12/20/2016 22:43:08

COMMIT:DL-91: Be able to close writer within a timeout duration

merge twitter's change on closing writer.

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>
Author: Jordan Bull <jbull@twitter.com>
Author: Leigh Stewart <lstewart@twitter.com>
Author: Dave Rusek <dave.rusek@gmail.com>
Author: Dave Rusek <drusek@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #64 from sijie/merge/DL-91

TREE:tree f789a972e73ada0b542dc8bd5c1f48828ca8a974 ------
TIME:12/20/2016 09:04:51

COMMIT:DL-28: using /* */ style comment to avoid scrooge windows platform issue

Author: xieliang <xieliang007@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Leigh Stewart <lstewart@apache.org>

Closes #73 from xieliang/DL-28

TREE:tree ac7435806f64ba77994e9924ccaf5faefde51035 ------
TIME:12/20/2016 07:28:24

COMMIT:DL-122: Use assertions from Junit rather than assert() for tests

* changed all instances of `assert()` to junit versions in `src/test`

Here is the script I used to find all instances of `assert()` inside the `src/test` folder:

```
grep -r "assert(" * 2>/dev/null | grep -v "main"
```

The `grep -v "main"` removes all instances of the usage within the main source tree (which there are quite a few). I did this as I assumed the JIRA ticket spirit was not to remove those instances from the main tree and thus would require including `junit` in core compilation rather than scoped for `test` as is.

Author: Brennon York <brennon.york@capitalone.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #77 from brennonyork/DL-122

TREE:tree fcb3adb6392a7c564c62027a1352d64bbf789891 ------
TIME:12/20/2016 07:25:03

COMMIT:DL-123: Every tests should have timeout

* used a simple bash script to find any tests without a timeout

Here is the below bash executed from the root directory. This could be expanded to take in more than one line above the initial `grep` although, for more, it only reduces the false positive rate. After this patch there are only 4 false positives (tests where the text immediately above is not `Test(timeout = ...)`).
```
grep -r "public void test" -B 1 * | awk '($NR+1) % 3 !=0 {printf $0; printf " "} NR % 3 == 0 {print " "}' | grep -v "timeout"
```

Author: Brennon York <brennon.york@capitalone.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #75 from brennonyork/DL-123

TREE:tree b8bf9689a7b29b44480e030bc1d42125e6269bbc ------
TIME:12/20/2016 07:22:37

COMMIT:DL-136: Avoid empty catch blocks

* resolves the 9 empty catch blocks in `src/main`
* leaves 49 errors within `src/test` unchanged
  * if we want to resolve those as well let me know, wasn't sure how we wanted to handle that

Used an independent checkstyle that looked for [empty catch blocks](http://checkstyle.sourceforge.net/config_blocks.html#EmptyBlock). Did a quick manual analysis and cannot find any other empty catch blocks in `src/main` so cannot rectify the original 22 as stated in the [Kiuwan blog](https://www.kiuwan.com/blog/analyzing_distributedlog_twitter-2/).

Author: Brennon York <brennon.york@capitalone.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #74 from brennonyork/DL-136

TREE:tree f71f5be416676e0c33e84fc99f6c67fb503c9c6a ------
TIME:12/20/2016 07:20:52

COMMIT:DL-90: Don't use stack and codec together for configuring thriftmux

merge Twitter's change on thriftmux

Author: Sijie Guo <sijieg@twitter.com>
Author: Jordan Bull <jbull@twitter.com>
Author: Sijie Guo <sijie@apache.org>
Author: Leigh Stewart <lstewart@twitter.com>
Author: Dave Rusek <dave.rusek@gmail.com>
Author: Dave Rusek <drusek@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #62 from sijie/merge/DL-90

TREE:tree fd34a29d4b563b87b26d125e919e3ca46ca3ea60 ------
TIME:12/17/2016 08:55:48

COMMIT:DL-88: remove watches when unregister children watches

merge twitter's change from Sijie Guo

Author: Sijie Guo <sijieg@twitter.com>
Author: Jordan Bull <jbull@twitter.com>
Author: Leigh Stewart <lstewart@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #60 from sijie/merge/DL-88

TREE:tree 4c21e5feccfc6e2ff9354953e80d14ab7364fbfb ------
TIME:12/17/2016 07:50:41

COMMIT:DL-87: Introduce periodic keepalive control record in writer

merge twitter's change from Leigh Stewart

Author: Jordan Bull <jbull@twitter.com>
Author: Sijie Guo <sijieg@twitter.com>
Author: Leigh Stewart <lstewart@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #59 from sijie/merge/DL-87

TREE:tree d8177bcdbf6a1bbef30bcab0b031b3aa1bbfb90d ------
TIME:12/17/2016 07:43:24

COMMIT:DL-86: Improve handling of lock conflicts in zk session lock

merge twitter's change from Sijie Guo.

Author: Jordan Bull <jbull@twitter.com>
Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #58 from sijie/merge/DL-86

TREE:tree 1cde26be7012b3676735e624f635c2b21bf1e357 ------
TIME:12/17/2016 06:51:03

COMMIT:BOOKKEEPER-966: change bookieServer cmdline to make conf-file and option co-exist

Currently, when using bookieServer cmdline to start a bookie, you will either give it a cofiguration file by "-c booke.conf"; or add some options like "<bookie_port> <zk_servers> <journal_dir> <ledger_dir [ledger_dir]>" in a fix sequential.
It may not satisfy some of the requirement. So changed it to be co-exist for configuration file and options.

By this change, it will first use settings in configuration file; and then use options to overwrite some of the settings, if there are some options provided.

Here is an example after this change:
```
BookieServer -c bookie.conf -z localhost:2181 -m /bookkeeper/ledgers -p 3181 -j /mnt/journal -l "/mnt/ledger1 /mnt/ledger2 /mnt/ledger3”
```
Here, in this command:
-z is for “Zookeeper client instance”;
-m is for "Zookeeper ledgers root path for bookies";
-p is for "bookie service port exported";
-j is for "bookie journal directory";
-l is for "bookie ledgers directories".

Author: jiazhai <jia.zhai@emc.com>
Author: jiazhai <jiazhai@users.noreply.github.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #75 from jiazhai/BOOKKEEPER-966

TREE:tree bac3c0cacff758d91d8988286b38f9e4e90d1df4 ------
TIME:12/17/2016 02:45:11

COMMIT:BOOKKEEPER-946: Provide an option to delay auto recovery of lost bookies

Fixing a bug in the test AuditorLedgerCheckerTest.testDelayedAuditOfLostBookies which
fails sometimes with:
AuditorLedgerCheckerTest.testDelayedAuditOfLostBookies:367->_testDelayedAuditOfLostBookies:345 audit of lost bookie isn't delayed

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #82 from rithin-shetty/audit_delay_fix

TREE:tree 7e13f864c34bff7a67b14e129bc8b4496c41a28d ------
TIME:12/17/2016 02:44:24

COMMIT:BOOKKEEPER-971: update bk codahale stats provider version

Update bk stats provider: from codahale to yammer.
Currently io.dropwizard.metrics 3.1.0 is used most widely. will change version to 3.1.0.

And change CodahaleMetricsProvider.getMetrics() to public, since this would be used outside package.

And a small bug here:
```
            File outdir;
            if (Strings.isNullOrEmpty(prefix)) {  < === if (!)
                outdir = new File(csvDir, prefix);
            } else {
                outdir = new File(csvDir);
            }
```

Author: jiazhai <jia.zhai@emc.com>
Author: jiazhai <jiazhai@users.noreply.github.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #83 from jiazhai/BOOKKEEPER-971

TREE:tree d0c5a012fbced43ec9424007999f64cc5d58db37 ------
TIME:12/17/2016 02:43:34

COMMIT:BOOKKEEPER-967: New testsuite for RackPlacement

Added New Testsuite for testing
RackAwareEnsemblePlacementPolicy using
ScriptBasedMapping. It works
only on Unix based OS, because of Shell
script.

This testsuite has similar testscenarios as in
TestRackawareEnsemblePlacementPolicy.java.

Also here it is assumed that the script file
has execution permission.

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #86 from reddycharan/testrackawareusingscript

TREE:tree c083aa7d99d881737aa36c38290a9bae78278779 ------
TIME:12/17/2016 02:42:18

COMMIT:BOOKKEEPER-987: BookKeeper build is broken due to the shade plugin

This is simply an upgrade of the maven-shade-plugin to version 2.4.3

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Rithin Shetty <rithin@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #94 from eolivelli/BOOKKEEPER-987

TREE:tree ce414a7ad3924939bf1f5f02df36a77effbc0d51 ------
TIME:12/17/2016 02:40:25

COMMIT:BOOKKEEPER-984: Fix BookieClientTest.testWriteGaps

in commit 9359d682a1598e30364eca6021d976f911e055b2, the third field (last add confirmed) in the message. changed the test to include the lac in the test so the test logic can work as expected.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>

Closes #91 from sijie/sijie/BOOKKEEPER-984

TREE:tree 61c8d26464b57d1652d6cf01dfc8fd6541dfdcbd ------
TIME:12/17/2016 02:39:40

COMMIT:DL-141: Fix broken scripts in tutorials and add integration test to travis ci

- fix the broken scripts used in tutorials
- fix the write_proxy configuration (a change was merged to validate configuration which it brokes the configuration too)
- add integration test to validate the basic end-to-end functionalities

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #76 from sijie/sijie/script_for_ci

TREE:tree 9965296227ce45c1cf0095d1d143c787fc63193f ------
TIME:12/16/2016 20:15:21

COMMIT:Clean up and fix a few shell scripts

This is still in progress.

- remove trailing white spaces in a few places
- fix some scripts (not rely on git); style consistency
- validate that the vagrant configuration works
- one of the Dockerfile was not correct

Author: Franck Cuny <fcuny@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #55 from franckcuny/fcuny/hack-week-cleanup and squashes the following commits:

fe3965d [Franck Cuny] Fix dlog script for core.
f15cefd [Franck Cuny] fix a few more things in the common script.
c32dee2 [Franck Cuny] Remove useless cd
622d3ab [Franck Cuny] Fix bundle for service.
93e9485 [Franck Cuny] A few more fixes for benchmarks' scripts.
a3fc4ef [Franck Cuny] Remove trailing white spaces in the doc
27f90f1 [Franck Cuny] Rename bookkeeper hosts from node to bk.
21d89f8 [Franck Cuny] Do not assume git is available in the shell scripts.
480bc34 [Franck Cuny] Remove comment from Dockerfile
a7ac7c0 [Franck Cuny] Git ignore pid files
179eddc [Franck Cuny] Ignore .vagrant directory created by vagrant.
9bf33fc [Franck Cuny] Create a valid snapshot.
5800829 [Franck Cuny] Remove Dockerfile and docker directory.

TREE:tree cad5d59193e642dd9a7a0ec93b7606e999f10ab1 ------
TIME:12/16/2016 01:20:57

COMMIT:DL-127: Fix coverall report

Author: Sijie Guo <sijie@apache.org>

Reviewers: Franck Cuny <franck.cuny@gmail.com>

Closes #53 from sijie/sijie/remove_reporting

TREE:tree 2daba8d0ea8a5d23969aacc8c078450796fbc323 ------
TIME:12/13/2016 00:37:54

COMMIT:DL-127: Fix coverall report

Author: Sijie Guo <sijie@apache.org>

Reviewers: Franck Cuny <franck.cuny@gmail.com>

Closes #53 from sijie/sijie/remove_reporting

TREE:tree 275e307bcffe2c887cba40c449422172ae07843a ------
TIME:12/13/2016 00:37:54

COMMIT:DL-49: Support building project with scala 2.10 and 2.11

Author: Sijie Guo <sijieg@twitter.com>
Author: Sijie Guo <sijie@apache.org>

Reviewers: Franck Cuny <franck.cuny@gmail.com>

Closes #22 from sijie/sijie/support_scala_2.10_and_2.11

TREE:tree c8f066ded4edfef4db75609d66302a20132ee4e4 ------
TIME:12/03/2016 07:45:43

COMMIT:Update a couple of scripts

Mostly style.

Author: Franck Cuny <fcuny@apache.org>
Author: Leigh Stewart <lstewart@twitter.com>
Author: Khurrum Nasim <khurrumnasimm@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #46 from franckcuny/fcuny/update-scripts and squashes the following commits:

50c16ec [Franck Cuny] Rename a variable in one of the shell script.
924ba7e [Franck Cuny] Run `git rev-parse` only once when building the bundle.
f1d3b3f [Franck Cuny] Remove more duplicated shell scripts.
90ce66f [Franck Cuny] Do not duplicate code for the 'bundle' script.
13987ea [Franck Cuny] Build cobertura report only on master for successful builds
525ec9a [Khurrum Nasim] Fix deadlock on BKSyncLogReaderDLSN
23c9190 [Leigh Stewart] Add documentation for distributedlog-benchmark
85aa8a7 [Franck Cuny] Make the shell style more consistent.
4f81ba2 [Franck Cuny] Rely on git to find the root directory.

TREE:tree 1f8166a3171e689f72df580842d5b5bc581a586d ------
TIME:12/03/2016 04:53:39

COMMIT:BOOKKEEPER-976 Fix license headers

…ftware Foundation"

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #84 from eolivelli/BOOKKEEPER-976

TREE:tree 2ab84c2a6856382443ba49469b42d9cb7b0674e1 ------
TIME:11/30/2016 00:19:07

COMMIT:BOOKKEEPER-964: Add concurrent maps and sets for primitive types

In BookKeeper there are many instances of maps and sets that use ledger id
and entry ids as keys or values. JDK concurrent collections have the overhead
of boxing all the primitive values into objects (eg: long --> Long) that would
need to be allocated from the heap. In addition to that, JDK map implementations
are closed hash tables and they will require at least one more allocation to hold
the linked-list/tree node.

There are already available libraries that offer primitive collections with
zero-allocation, but none of these support concurrent maps/sets.

We have added a handful of specializations, all based on the same implementation
idea. We have a hash table which is broken down into multiple sections. Each
sections, on its own, is an open hash table with linear probing, protected by
a stamped lock.

All insertions, lookups and iterations on these collections are allocation free.

```
ConcurrentLongHashMap: Map<long, Object>
ConcurrentLongHashSet: Set<long>
ConcurrentLongLongHashMap: Map<long, long>
ConcurrentLongLongPairHashMap: Map< Pair<long, long>, Pair<long, long> >
ConcurrentOpenHashMap: Map<Object, Object>
ConcurrentOpenHashSet: Set<Object>
```

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>, Enrico Olivelli <Enrico.olivelli@diennea.com>

Closes #72 from merlimat/bk-collections

TREE:tree fce07974a9aae01db840af48f0f2c654a5da1d6e ------
TIME:11/30/2016 00:17:46

COMMIT:BOOKKEEPER-955: in listLedgers method currentRange variable has to be…

… updated to the next iterator

in BookKeeperAdmin listLedgers method currentRange variable is not getting updated to next iterator
when it has run out of elements

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Venkateswararao Jujjuri <vjujjuri@salesforce.com>

Closes #63 from reddycharan/listledgersfix

TREE:tree 2ade7f100256f3f3881ae33f61a0979c949ed104 ------
TIME:11/30/2016 00:07:42

COMMIT:BOOKKEEPER-948: Provide an option to add more ledger/index directorie…

…s to a bookie

This change allows the addition of new ledger and index directories to a bookie. Thus
increasing ts storage capacity. The option is exposed via 'allowStorageExpansion'
boolean configuration option. Also, the newly added directories need to be empty to be
accepted. Two new test cases have been added to test this functionality.

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #59 from rithin-shetty/storage_expansion

TREE:tree 576abbc73cd40dfa61dc6a3b167acf9f261d5fe5 ------
TIME:11/30/2016 00:02:27

COMMIT:Fix deadlock on BKSyncLogReaderDLSN

Change the lastSeenDLSN to volatile to remove the synchronization block to avoid deadlock with sharedLock

Author: Khurrum Nasim <khurrumnasimm@gmail.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #42 from khurrumnasimm/kn/fix_deadlock

TREE:tree dfac5d4316f4f304fc8fb86e00aa9cd6c1a45598 ------
TIME:11/29/2016 20:50:17

COMMIT:BOOKKEEPER-912: Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support)

Author: eolivelli <eolivelli@gmail.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #68 from eolivelli/BOOKKEEPER-912 and squashes the following commits:

6c1eaca [eolivelli] BOOKKEEPER-912 Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support)
7c0ab37 [eolivelli] BOOKKEEPER-912 Allow EnsemblePlacementPolicy to choose bookies using ledger custom data (multitenancy support)

TREE:tree b9cbaf66aeddc5566aa8a6bf8ebad01870f38cc3 ------
TIME:11/18/2016 00:44:06

COMMIT:BOOKKEEPER-965: Long Polling Part I: Changes in the write path

This is the first in the series of changes for enabling long polling between bookkeeper client and the bookkeeper server. The changes were originally implemented in the Twitter fork and these pull request combine multiple commits from Twitter's bookkeeper fork as they include not only the changes made initially but also bug fixes added since.

The first change captures the changes on the write path (AddEntry). We track the last add confirmed in the FileInfo so that we can trigger actions when the value is updated

Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #73 from robindh/LongPollWritePath

TREE:tree 269232dc148c6711faf1c47e18e7875b5864c080 ------
TIME:11/18/2016 00:18:35

COMMIT:BOOKKEEPER-962: Add more journal timing stats

It is useful to know the sync latency on the journal to identify disk/filesystem
related latency spikes that will cause all the entries to queue up. In the same
line, it's useful to track the amount of time spent in the journal queue.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #70 from merlimat/bk-journal-latency

TREE:tree a70cbc6e0de43ef9edb25e8f0aff4ce5514bacf4 ------
TIME:11/12/2016 03:37:35

COMMIT:BOOKKEEPER-961: Assign read/write requests for same ledger to a single thread

When entries for the same ledger are processed by the bookie we should avoid
the reordering of the request. Currently, if multiple read/write threads are
configured, the requests will be passed to the executor and writes for same
ledger will be spread across multiple threads.

This poses 2 issues:
 1. Mutex contention to access the LedgerDescriptor
 2. If the client receives add-entry acks out of order it has anyway to wait
    for the acks of previous entries before acknowledging the whole sequence
    to the application. In practice, the reordering is increasing the latency
   experienced by the application.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #69 from merlimat/bk-fixed-ledger-thread

TREE:tree d174ae15ef0041851204da5f05fe24fa1e5360c1 ------
TIME:11/12/2016 03:35:13

COMMIT:BOOKKEEPER-958: Fix for ZeroBuffer Bug

Fix for readOnlyBuffer of ZeroBuffer bug

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #66 from reddycharan/zerobufferfix

TREE:tree b4da82094d9f1dca6d7211d79f5ac79728052be1 ------
TIME:11/09/2016 08:49:20

COMMIT:BOOKKEEPER-957: LedgerHandleAdv fixes

- making addToLength call synchronized
- adding op to pendingAddOps after doing sanity check

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #65 from reddycharan/ledgerhandleadvfix

TREE:tree cf84872bc569d3c8b079878dad7a09ded3a185ba ------
TIME:11/09/2016 08:44:54

COMMIT:BOOKKEEPER-956: Fix for HierarchicalLedgerRangeIterator

Fix for HierarchicalLedgerRangeIterator, to make it work
for LedgerIds of length 9 and 10

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #64 from reddycharan/hierarchicalledgermanagerfix

TREE:tree 7a0cb48fee8f26022dc168eac24288214b5c6109 ------
TIME:11/09/2016 03:08:44

COMMIT:BOOKKEEPER-903: metaformat command fix

metaformat command should delete underreplicated ledger
znodes and lock nodes

Author: Charan Reddy Guttapalem <cguttapalem@salesforce.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #62 from reddycharan/metaformatfix

TREE:tree 50f8944b496fe2c1748a27a92fa562ba81ff8f48 ------
TIME:11/09/2016 03:05:57

COMMIT:BOOKKEEPER-946: Provide an option to delay auto recovery of lost bookies

If auto recovery is enabled, and a bookie goes down for upgrade or even if it looses zk connection
intermittently, the auditor detects it as a lost bookie and starts under replication detection and
the replication workers on other bookie nodes start replicating the under replicated ledgers. All
of this stops once the bookie comes up but by then a few ledgers would get replicated. Given the
fact that we have multiple copies of data, it is probably not necessary to start the recovery as
soon as a bookie goes down. We can wait for an hour or so and then start recovery. This should
cover cases like planned upgrade, intermittent network connectivity loss, etc.

This change:
    1) Provides a bookie option 'lostBookieRecoveryDelay' in secs, which when set to a non zero value,
       will delay the start of recovery by that number of seconds. By default, this option is set to 0;
       which means the audit is not delayed.
    2) If another bookie were to go down in this interval, the recovery is immediately started and the
       one scheduled for future is canceled.
    3) Adds counters to track how many audits were delayed(#1) and how many scheduled audits were
       canceled due to multiple bookie failures(#2).
    4) Three junit tests to verify the new feature.

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: siddharth.boobna@gmail.com <siddharth.boobna@gmail.com>, Enrico Olivelli <eolivelli@gmail.com>

Closes #58 from rithin-shetty/audit_delay

TREE:tree 1deaa3134f10ff69b99deb44863dc8de847af52a ------
TIME:11/09/2016 03:02:34

COMMIT:BOOKKEEPER-952: Fix RegionAwareEnsemblePlacementPolicy

allocate bookies evenly as much as possible across all regions

https://issues.apache.org/jira/browse/BOOKKEEPER-952

RB_ID=880463

Author: Yiming Zang <yzang@twitter.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #61 from yzang/apache_master and squashes the following commits:

a0a9979 [Yiming Zang] fix Inefficient use of keySet iterator instead of entrySet iterator
d882c28 [Yiming Zang] fix RegionAwareEnsemblePlacementPolicy test case fix the algorithm for balanced placement across regions.

TREE:tree f51f61912b9c841f0fe35a7ac4e798d3aed13c92 ------
TIME:10/20/2016 19:38:33

COMMIT:DL-32: Fix Findbug warnings

- Bump the version to 3.0.3
- Fix all the findbug warnings
- Enable findbugs:check on travis ci

Author: Jon Derrick <jonathan.derrickk@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #19 from jderrickk/jd/fix_findbugs_error and squashes the following commits:

c48c89c [Jon Derrick] Merge branch 'master' into jd/fix_findbugs_error
d9b0425 [Jon Derrick] verify findbugs on travis ci
985501b [Jon Derrick] Fix findbug errors on all modules
18e8267 [Jon Derrick] Remove distributedlog-example
ffa8361 [Jon Derrick] Fix findbugs in distributedlog-protocol

TREE:tree 038080dfab5cf3c36295d97c53dac1ae6fd61667 ------
TIME:10/13/2016 09:47:11

COMMIT:DL-32: Fix Findbug warnings

- Bump the version to 3.0.3
- Fix all the findbug warnings
- Enable findbugs:check on travis ci

Author: Jon Derrick <jonathan.derrickk@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #19 from jderrickk/jd/fix_findbugs_error and squashes the following commits:

c48c89c [Jon Derrick] Merge branch 'master' into jd/fix_findbugs_error
d9b0425 [Jon Derrick] verify findbugs on travis ci
985501b [Jon Derrick] Fix findbug errors on all modules
18e8267 [Jon Derrick] Remove distributedlog-example
ffa8361 [Jon Derrick] Fix findbugs in distributedlog-protocol

TREE:tree 7ec78e44081e1f589553d41f43412bb37a738762 ------
TIME:10/13/2016 09:47:11

COMMIT:BOOKKEEPER-924: addEntry() is susceptible to spurious wakeups

Use Java8 CompletableFuture instead of SyncCounter

Author: eolivelli <eolivelli@gmail.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #60 from eolivelli/BOOKKEEPER-924 and squashes the following commits:

61e6b1a [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups
7d7eaf7 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups
f865610 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups
e75569a [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups
cdd32c3 [eolivelli] BOOKKEEPER-924 addEntry() is susceptible to spurious wakeups

TREE:tree bf823000cc2827958beba614671f89cb1de7c456 ------
TIME:10/13/2016 09:27:18

COMMIT:BOOKKEEPER-612: Region aware placement

- Introduce the concept of a two level Network Topology with region as the first level and rack as the second level
- NodeBase, Node and NetworkTopology manage this two level hierarchy and position of individual nodes in this hierarchy
- An implementation of RegionawareEnsemblePlacementPolicy that distributes nodes across regions and within regions uses rack aware placement to place nodes

This is a stacked diff (opening to start a review), we would still merge the dependent pull request first.

Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #56 from robindh/RegionAwarePlacement

TREE:tree 67e24ecb59a109277593b9109574114e7615f55d ------
TIME:10/13/2016 07:50:42

COMMIT:Add infinite retry policy to zookeeper client used by tests

This change is to improve the tests running on travis ci

Author: jiazhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #25 from jiazhai/zhaijia/fix_federated_namespace

TREE:tree 835814fc7402157bf6be9ba0057d7ebc83e00b73 ------
TIME:09/13/2016 03:51:44

COMMIT:BOOKKEEPER-945: Add counters to track the activity of auditor and repl…

…ication workers

Once we enable auto recovery, auditor and replication workers start their activity.
Today there is no way to monitor it using counters. This change introduces the
following counters to track various activities of auditor and replication workers like:

- Time taken by auditor to build the bookie->ledger list
- No. of under replicated ledgers detected
- Time taken by auditor to publish the under replicated ledger list
- Time taken by auditor to check all the ledgers in the cluster
- No. of ledgers replicated by each replication worker
- No. of entries and bytes of data read and written by each replication worker
- Auditor can also report the distribution of ledgers within the cluster: how many bookies own a piece of ledger, etc.

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #57 from rithin-shetty/auto_recovery_counters

TREE:tree 54ba4de845df52326a791530990cc2886fe5b652 ------
TIME:09/10/2016 21:01:27

COMMIT:BOOKKEEPER-930: Option to disable Bookie networking

Author: eolivelli <eolivelli@gmail.com>

Reviewers: sijie@apache.org <sijie@apache.org>

Closes #49 from eolivelli/BOOKKEEPER-930

TREE:tree 52b5c1ff5fa401707779487a1612a7f8f03ba866 ------
TIME:09/10/2016 20:27:43

COMMIT:Mark some dl tests as flaky

mark some dl tests as flaky and link the corresponding investigation jiras

Author: jiazhai <zhaijia03@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #20 from jiazhai/zhaijia/fix_travis_build

TREE:tree e627e19ea2d07638b437188ba72ca8e672622e37 ------
TIME:09/07/2016 10:38:27

COMMIT:DL-36: travis ci build failed with assembly plugin

- use 'mvn package' instead of 'mvn verify'
- fix the assembly script
- added missed license headers

Author: Jon Derrick <jonathan.derrickk@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #14 from jderrickk/jd/fix_assembly_package

TREE:tree 2846c26fe4d4c9ab9b30fd441c64f6091ce34e98 ------
TIME:08/27/2016 06:09:07

COMMIT:DL-31: Provide flag to disable zk based distributed lock

DL doesn't enforce any leader election. However it still provides a zookeeper ephemeral znode based lock for leader election. It is unnecessary if applications use core library directly already have its own leader election mechanism.

This change is to provide a flag to allow disable the zk based lock.

Author: Sijie Guo <sijieg@twitter.com>

Reviewers: Leigh Stewart <lstewart@apache.org>

Closes #9 from sijie/sijie/flag_to_disable_lock

TREE:tree 4a4281f2d40e70b34d41d912a9fd4d357b8e4fef ------
TIME:08/23/2016 03:05:39

COMMIT:DL-1: Clean up the distributedlog pom files

- changed the version to 0.4.0-incubating
- changed names to include 'Apache DistributedLog' and use '::' as separator
- add developers, mail lists and jira

Author: jiazhai <zhaijia03@gmail.com>

Reviewers: Franck Cuny <franck.cuny@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #10 from jiazhai/zhaijia/fix_apache_version

TREE:tree 01ca402562ce9874d5919a680fbebdbce118907b ------
TIME:08/23/2016 03:00:13

COMMIT:DL-1: Clean up the distributedlog pom files

- changed the version to 0.4.0-incubating
- changed names to include 'Apache DistributedLog' and use '::' as separator
- add developers, mail lists and jira

Author: jiazhai <zhaijia03@gmail.com>

Reviewers: Franck Cuny <franck.cuny@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #10 from jiazhai/zhaijia/fix_apache_version

TREE:tree cc1ab4642a0737ad72dbd641e6c858efe103a765 ------
TIME:08/23/2016 03:00:13

COMMIT:DL-21: Fix DL flaky test cases

DL-21: Fixed a few DL flaky test cases.

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #5 from yzang/yzang/fix_flaky_test

TREE:tree 27ae6e65ffae9f6fc068ebcb2214054eb59ffb92 ------
TIME:08/16/2016 21:02:06

COMMIT:BOOKKEEPER-937: Upgrade protobuf to 2.6

protobuf/protoc 2.4 cannot be installed with brew on mac and building it on mac always result is build errors hence leaves an option of switching to linux to run protoc.
I upgraded to 2.6 instead. It is compatible with 2.4 on the wire and shaded so should not create any problems. All tests passed.
Please ignore changes in java files in attached patch during review; these are auto-generated.

protobuf 2.4 in compat* dependencies is shaded now to not conflict with 2.6.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: eolivelli@gmail.com <eolivelli@gmail.com>, zhaijia03@gmail.com <zhaijia03@gmail.com>, sijie@apache.org <sijie@apache.org>

Closes #51 from dlg99/task/BOOKKEEPER-937

TREE:tree 96cee4b6ccfb46aab6f1f1ef7ae1f4a6f1185445 ------
TIME:08/16/2016 19:42:13

COMMIT:BOOKKEEPER-938 ledger digestType autodetection on open

Currently digestType verification in LedgerOpenOp seems to be treated as part of security logic.
Since it is checked after password and error explicitly states that digestType mismatched,
all that evil hacker has to do is to change digest type to another one. There are only two of them after all.

here is the scenario significantly affected by current behavior:

1. user rolls out clients with digestType set to MAC and creates lots of ledgers.
2. user notices that MAC is slower than CRC32 and decides to change digestType.
3. more ledgers created with CRC32.
4. user tries to read old and new ledgers
-> now old ledgers cannot be read because of the digest type mismatch.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #52 from dlg99/fix/BOOKKEEPER-938-digest-autodetect

TREE:tree 13c72b0dd1a7701f57ce84b339cb6cd9571cde9a ------
TIME:08/01/2016 08:04:09

COMMIT:DL-20: Validate bk read timeout in configuration

DL-20: Ensure bkcReadTimeoutSeconds is larger than readLACLongPollTimeout

Author: Yiming Zang <yzang@twitter.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #4 from yzang/yzang/validate_configuration

TREE:tree 7fcde1e9ce9906a27d9bbfd53289d8945c1bf653 ------
TIME:07/31/2016 09:57:41

COMMIT:BOOKKEEPER-941: Feature Switches for controling client and server behavior

- Introduce Features that are dynamic configuration options
- Allow specifying Features as configuration parameters

This is a port of the feature switches following changes
https://github.com/twitter/bookkeeper/commit/c2a092ab9b585f1d30d9e9b9dead0533efa49855
https://github.com/twitter/bookkeeper/commit/f9762d126e311a6b129e6e169dc62c2a0bdb7b4a

Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

Closes #54 from robindh/FeatureSwitches

TREE:tree 126946e4d21a5ee1aed142f4632375528a62d764 ------
TIME:07/31/2016 07:56:28

COMMIT:BOOKKEEPER-933: ClientConfiguration always inherits System properties

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #50 from eolivelli/BOOKKEEPER-933 and squashes the following commits:

0bcae1e [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties
beb68fb [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties

TREE:tree ea2027b7d436abdaff6a04e5dae302244b20ea8f ------
TIME:07/31/2016 07:53:28

COMMIT:BOOKKEEPER-927: LedgerHandleAdv to handle disabled ledgers operation …

…throttling

BOOKKEEPER-886 missed taking care of LedgerHandleAdv.
This takes care of that issue.

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #45 from jvrao/bookkeeper-927

TREE:tree 0b3705ba03739b3a04f84269af8399b421acf365 ------
TIME:07/26/2016 00:22:34

COMMIT:BOOKKEEPER-940: Fix findbugs warnings after bumping to java 8

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

Closes #55 from eolivelli/BOOKKEEPER-940

TREE:tree 942bcd0bf39497232f54b6fec22a012fc4311c4f ------
TIME:07/14/2016 23:02:33

COMMIT:BOOKKEEPER-939: Fix typo of bookkeeper merge pr script

There is typo of bk-merge-pr.py script on merging pr without a jira id.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #53 from sijie/sijie/fix_merge_script

TREE:tree a38148fe1425e48b5a8a113f71069f94e9de0e75 ------
TIME:07/12/2016 00:19:33

COMMIT:BOOKKEEPER-932: Move to JDK 8

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #48 from merlimat/bk-932

TREE:tree b3bf883f58f525c5ed51cd709d6d9e7c73788dc9 ------
TIME:07/11/2016 23:06:34

COMMIT:BOOKKEEPER-922: CreaterId in ledger metadata

Introduces a generic Map<String, byte[]> customMetadata to be stored as part of ledger metadata on the metadata server(zk).

Author: Rithin Shetty <rithingmail.com>

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>

Closes #46 from rithin-shetty/JIRA-922-ledgerCustomMetadata

TREE:tree b51fe1337c79982c6935b47b0cb70b41613f3c24 ------
TIME:07/11/2016 23:01:30

COMMIT:BOOKKEEPER-908: BKLedgerExistException creation is missing

Add missing case statement for Code.LedgerExistException
in the crearte() function of BKException class

Signed-off-by: Venkateswararao Jujjuri (JV) <vjujjurisalesforce.com>

Author: JV <vjujjuri@salesforce.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #44 from jvrao/bookkeeper-908

TREE:tree 4afc908ae4880cb16b37c07555e5a343945a8d92 ------
TIME:07/11/2016 22:53:23

COMMIT:A few changes to the shell scripts to start bookies

Author: Franck Cuny <franckcuny@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #43 from franckcuny/fcuny/scripts-start-server

TREE:tree 1043ef61425ca34e9bddca2696cfdae059527a18 ------
TIME:07/11/2016 20:54:15

COMMIT:Add executions for maven-assembly-plugin.

Add the executions steps to produce a single archive with all the jars,
scripts and configuration files.

Author: Franck Cuny <fcuny@twitter.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #42 from franckcuny/fcuny/maven-assembly

TREE:tree c3adccd824a540c794a4d04185fa214064d48024 ------
TIME:07/11/2016 08:41:06

COMMIT:Merge remote-tracking branch 'origin/master' into dockerize

TREE:tree 92c25ebf2c692fbf84e405119538e9a1a971a35c ------
TIME:06/24/2016 17:02:39

COMMIT:Vagrant based solution to create multi-node deployment (#34)

* Added vagrant files to start 3 ZK nodes and 3 BK nodes with writeproxy

* Removed comments

* Setting env vars for writeproxy

* Got it working for proxy and normal writes

* Fixing minor bugs

* Updated with comments on the pull request

* Creating a docker file which calls into the vagrant bookkeeper script

* Updated to the public version of twitter bookkeeper

TREE:tree 92c25ebf2c692fbf84e405119538e9a1a971a35c ------
TIME:06/24/2016 03:46:29

COMMIT:BOOKKEEPER-881: Upgrade surefire plugin to 2.19.1

Upgrade to using maven surefire plugin version 2.19.1

Author: Rithin Shetty <rithingmail.com>

Author: Rithin <rithin.shetty@salesforce.com>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #47 from rithin-shetty/surefire-upgrade

TREE:tree 6f5452576810556b7fb0d76946c90c3a9bdedcc3 ------
TIME:06/09/2016 01:04:54

COMMIT:Added vagrant files to start 3 ZK nodes and 3 BK nodes with writeproxy

TREE:tree 92c25ebf2c692fbf84e405119538e9a1a971a35c ------
TIME:05/26/2016 19:08:24

COMMIT:Add documents on running distributedlog in distributed mode

TREE:tree 42faba9423425b9de3485863a45ebea51deffebb ------
TIME:05/24/2016 12:20:34

COMMIT:Fixes #14: remove concurrency from ConfigurationSubscription tests (#16)
TREE:tree 934c5a922de5c320c4e1bb576ba3b505d6732b7c ------
TIME:05/13/2016 04:18:32

COMMIT:Initial Check-in for distributedlog oss

TREE:tree f28af668cffdb31c14b0442372870b7a62e5210b ------
TIME:05/09/2016 21:06:08

COMMIT:Initial Check-in for distributedlog oss

TREE:tree 8d21214bb3b3390deed2244c1a84dabe8c49a98b ------
TIME:05/09/2016 21:06:08

COMMIT:Release 4.4.0

TREE:tree 1d7931279f19baacfb69d1f150c7935db0a4ef3b ------
TIME:05/05/2016 18:16:27

COMMIT:Bump version to 4.5.0-SNAPSHOT

TREE:tree 1f608cc6ebdde5e32a8bb3b57eeab5e55554273b ------
TIME:05/05/2016 18:21:18

COMMIT:Updated CHANGES.txt for release 4.4.0

TREE:tree d1eab9d2e19c271b68efa570a5d6f56149780765 ------
TIME:05/05/2016 16:06:45

COMMIT:BOOKKEEPER-926: Compacted entries are not properly synced before updating index

…ting index

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Guo Sijie <sijie@apache.org>

Closes #41 from merlimat/bk-926

TREE:tree 1b0df4cbd6745d5a1d03589caa1a254739a0da3d ------
TIME:05/04/2016 15:55:46

COMMIT:BOOKKEEPER-925: Fix FindBugs discovered issues in master

sijie Fixed the other findbugs error

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Guo Sijie <sijie@apache.org>

Closes #40 from merlimat/bk-925

TREE:tree c336e182aff1ca26590499f0b92096c8128bc2b9 ------
TIME:04/29/2016 05:05:37

COMMIT:BOOKKEEPER-925: Fix FindBugs discovered issues in master

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Siddharth Boobna <siddharth.boobna@gmail.com>, Guo Sijie <sijie@apache.org>

Closes #39 from merlimat/bk-925

TREE:tree 654cb3a3a05978fdde638e168647198e861c19b3 ------
TIME:04/27/2016 21:11:27

COMMIT:BOOKKEEPER-921: Typo in LocalBookkeeper: Use InetAddress.getHostAddress instead of InetAddress

TREE:tree fcbf127df5becf0f5998d7849eff0243aec68c46 ------
TIME:04/27/2016 10:05:23

COMMIT:BOOKKEEPER-895: GC ledgers that are no longer a part of the ensemble

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Guo Sijie <sijie@apache.org>

Closes #25 from sboobna/BOOKKEEPER-895

TREE:tree c65a825214d648e8802e869e612609b3eaf25bf3 ------
TIME:04/27/2016 09:55:19

COMMIT:Auditor is sometimes marking as failed a bookie switching from available to read-only mode

…hing from available to read-only mode

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Enrico Olivelli <eolivelli@gmail.com>, Guo Sijie <sijie@apache.org>

Closes #37 from merlimat/bk-919

TREE:tree 7c3253ce7bd08d3bd0a3733b5e20beda67163fe8 ------
TIME:04/27/2016 09:30:36

COMMIT:BOOKKEEPER-920: Extend bk-merge-pr.py to add more info to Jira ticket…

… when merging

Author: user.email <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #36 from merlimat/bk-920

TREE:tree 3dfc6be96739d39254b6c858afc41060fe4e1eb8 ------
TIME:04/27/2016 09:07:08

COMMIT:BOOKKEEPER-911: Fix TestReplicationWorker tests in master

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>, Flavio Junqueira <fpj@apache.org>

Closes #29 from merlimat/bk-911

TREE:tree 0832ca87b8b7d574092b7246fd0f7453ce6dbcc8 ------
TIME:04/27/2016 09:00:34

COMMIT:BOOKKEEPER-870: Change the default value for bookie settings.

- ENTRY_LOG_SIZE_LIMIT to 1GB
- increase GC_WAIT_TIME to 10 minutes, since 1 second isn't good for a real production environment
- FLUSH_INTERVAL to 10 second. lowering this value won't help since the actual checkpoint only happened on entry log file rolling
- OPEN_FILE_LIMIT to 20000.
- JOURNAL_MAX_GROUP_WAIT_MSEC to 2 ms. make the default value for low latency
- READ_ONLY_MODE_ENABLED to true. enable readonly mode by default.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #35 from sijie/sijie/BOOKKEEPER-870

TREE:tree 59bf04ef542ff78393db45c27987dc6b92ecc710 ------
TIME:04/14/2016 00:51:44

COMMIT:BOOKKEEPER-917: LocalBookKeeperTest seems to be silently failing

Fixing the `AuthHandler` to use localhost address when passed a `LocalChannel`

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #34 from merlimat/bk-917

TREE:tree 4398e5e5bb1568e1033510114a059121028dd29c ------
TIME:04/10/2016 05:58:40

COMMIT:BOOKKEEPER-913: Fix flakiness in TestBackwardCompat

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #31 from merlimat/bk-913

TREE:tree 9a25a9679e9f7f12e15c91b47556e593877d2f74 ------
TIME:04/10/2016 05:19:58

COMMIT:BOOKKEEPER-880: Make LedgerHandle implement AutoCloseable

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Rakesh R <rakeshr.radhakrishnan.potty@intel.com>

Closes #33 from eolivelli/BOOKKEEPER-880

TREE:tree 60f274c4a625264871b6534f6a8b8ab90da4df6a ------
TIME:04/08/2016 19:43:09

COMMIT:BOOKKEEPER-914: ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly is intermettently failing

BOOKKEEPER-914 fixed testBookieShouldTurnWritableFromReadOnly flapping.
Now test waits for bookie to transition to read-only.

Author: Andrey Yegorov <ayegorov@salesforce.com>

Reviewers: Matteo Merli <mmerli@apache.org>, Sijie Guo <sijie@apache.org>

Closes #32 from dlg99/bugfix/BOOKKEEPER-914

TREE:tree ec9d744c78150bcb10e40fe8c361134aa4c4b3a8 ------
TIME:04/07/2016 21:39:46

COMMIT:BOOKKEEPER-904: BookieInitializationTest.testDuplicateBookieServerStartup fails on non-english machines

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #30 from eolivelli/master

TREE:tree 1e647c85fd3dba34859ffa1a624f0bd56c3407ac ------
TIME:04/06/2016 18:38:15

COMMIT:BOOKKEEPER-910: In LocalBookkeeper, Zookeeper server and client use different host addresses

Author: Arun M. Krishnakumar <akrishnakumar@salesforce.com>

Reviewers: Matteo Merli <mmerli@apache.org>

TREE:tree 01c7767c2ca5afbcc2b6a523c33cf86495b1c4ab ------
TIME:04/05/2016 21:52:16

COMMIT:BOOKKEEPER-896: VM-local transport

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Matteo Merli <mmerli@apache.org>

Closes #21 from eolivelli/BOOKKEEPER-896

TREE:tree 6c8d8219ddb0f1a366246497acc4800ba7c553a1 ------
TIME:04/05/2016 18:47:07

COMMIT:BOOKKEEPER-578: LedgerCacheImpl is reserving 1/3 of Heap size but allocates NonHeap memory

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #28 from merlimat/bk-578

TREE:tree c5387783136a5c7ef8c37e34c46d40b125399291 ------
TIME:04/05/2016 08:50:37

COMMIT:BOOKKEEPER-901: Authentication framework

Author: Ivan Kelly <ivank@yahoo-inc.com>

Reviewers: Sijie Guo<sijie@apache.org>

Closes #23 from merlimat/authentication-framework and squashes the following commits:

aa01548 [Ivan Kelly] BOOKKEEPER-901: Add an authentication framework
f930fbd [Ivan Kelly] BOOKKEEPER-794 BookkeeperProtocol.Response.status is completely ignored

TREE:tree 96d35a1c3ed84c969a61298a281fb785116c430b ------
TIME:04/05/2016 08:45:51

COMMIT:BOOKKEEPER-909: ZooKeeper of LocalBookkeeper should use the correct tickTime

Reviewers: Matteo Merli <mmerli@apache.org>

TREE:tree c762d0457aae30b149b987480ebe2f53b7582915 ------
TIME:03/31/2016 22:51:45

COMMIT:BOOKKEEPER-894: add command to read ledger entries form shell

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #24 from sboobna/BOOKKEEPER-894

TREE:tree 16a84cb6e03c76166251b9a5027c8cd92c925d16 ------
TIME:03/16/2016 05:03:33

COMMIT:BOOKKEEPER-594: AutoRecovery shutting down on SyncDisconnected

Author: Matteo Merli <matteo.merli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #26 from merlimat/bk-594

TREE:tree 892f02f3827a59501d267b1e796f64dc7fb60163 ------
TIME:03/16/2016 04:51:00

COMMIT:BOOKKEEPER-769: Remove the Hedwig Code

- Remove code directories for Hedwig code
- Remove code directories under compat
- Remove Hedwig related documentation
- Remove references to Hedwig code in pom files

* There is an unrelated findbugs violation in BookieWatcher which is not related to this change
* There were flaky tests that failed locally but passed when I reran them

Author: Robin Dhamankar <robindh@Robins-MacBook-Air.local>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #27 from robindh/RemoveHedwig

TREE:tree 02ef5a2fa0c8090e5e410f5804a51ce5a0cf7ff0 ------
TIME:03/16/2016 04:43:54

COMMIT:BOOKKEEPER-902: Test failures in EntryLogTest

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #22 from merlimat/bk-902

TREE:tree 65ecc673097a2220bfb61283e3cca8dae443f196 ------
TIME:03/14/2016 06:39:15

COMMIT:BOOKKEEPER-898: listen to read only bookie changes also in auditor

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #19 from sboobna/BOOKKEEPER-898

TREE:tree a2edeada552c98edfcdef8f78f50db19ebafd826 ------
TIME:03/08/2016 07:18:12

COMMIT:read only bookie runs replicator and does not release the under replicated lock after failing

… only bookie

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #17 from sboobna/BOOKKEEPER-900

TREE:tree 1b29da0a65aba170413f0cfd7670a984540c6fd1 ------
TIME:03/08/2016 07:16:03

COMMIT:Bookie should return to read-write mode once the disk usage drops before the threshold

…o read only mode

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #18 from sboobna/BOOKKEEPER-899

TREE:tree c1633e679477c08cd2e3627be6cb2c9ff214e298 ------
TIME:03/08/2016 07:14:10

COMMIT:BookKeeper client should try not to use bookies with errors/timeouts when forming a new ensemble

…hen forming ensembles

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #11 from sboobna/BOOKKEEPER-889

TREE:tree e1ab94df31725d225deca78ae538dd4f7c737ddc ------
TIME:03/08/2016 07:06:40

COMMIT:BOOKKEEPER-851: Configurable LedgerStorage implementation

sijie Addressed almost all comments from https://reviews.apache.org/r/33096

Only point still open is how to treat the `SortedLedgerStorage` and the flag `sortedLedgerStorageEnabled=true` in the config file

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #6 from merlimat/bk-851-configurable-ledger-storage

TREE:tree 721240859601a5665403af908739d162e57aeec2 ------
TIME:03/08/2016 06:49:52

COMMIT:BOOKKEEPER-841: Bookie should calculate ledgers map writing a new entry log file

sijie I've addressed all comments from https://reviews.apache.org/r/33061

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #5 from merlimat/bk-841

TREE:tree e50681bda13143d397362d69cba867571f7dff07 ------
TIME:02/24/2016 00:44:31

COMMIT:BOOKKEEPER-897: Fix findbugs warnings and missing apache license header

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #15 from sijie/sijie/BOOKKEEPER-897

TREE:tree 6ead082273560e69d7eab2459c538610ad5db772 ------
TIME:02/24/2016 00:34:30

COMMIT:BOOKKEEPER-879: Record ledger creation time

Author: eolivelli <eolivelli@gmail.com>

Reviewers: Sijie Guo <sijie@apache.org>, Flavio Junqueira <fpj@apache.org>

Closes #2 from eolivelli/master and squashes the following commits:

509ad4f [eolivelli] BOOKKEEPER-879: Record ledger creation time
227d50c [eolivelli] BOOKKEEPER-879: Record ledger creation time
94cdee6 [eolivelli] BOOKKEEPER-879: Record ledger creation time
2a8e700 [eolivelli] BOOKKEEPER-879: Record ledger creation time
c43f0b4 [eolivelli] BOOKKEEPER-879: Record ledger creation time
e33f2e0 [eolivelli] BOOKKEEPER-879: Record ledger creation time

TREE:tree e3ddc371af9725b87a8fde2babba7bab5e9739d5 ------
TIME:02/23/2016 19:16:06

COMMIT:BOOKKEEPER-891: Read entries failure should trigger callback only once

When reading multiple entries with `LedgerHandle.asyncReadEntries()`, in case there is a read error, the callback is currently being invoked for each of the requested entries.
Since a single "success" callback is expected, we should also have a single "failure" callback invocation.

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #12 from merlimat/bk-891-read-callbacks

TREE:tree 43b03c3435a1c5a94b3d16a31fb234b6c7afc8b6 ------
TIME:02/09/2016 08:39:50

COMMIT:BOOKKEEPER-893: explicitly call bk shutdown to set the exit code

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #14 from sid825/BOOKKEEPER-893

TREE:tree e95b55ab52be3497c29be2a83e01ee37010b9815 ------
TIME:02/09/2016 08:37:03

COMMIT:BOOKKEEPER-886: Allow to disable ledgers operation throttling

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #7 from merlimat/bk-886-disable-throttling

TREE:tree 143fc5fe4da5045e9ac8d07ecef9a2be3e66d985 ------
TIME:02/09/2016 08:32:28

COMMIT:BOOKKEEPER-888: Dispatch individual callbacks from journal in different threads

Currently the journal is sending all the responses from a single thread, after the entries in a batch are synced. Since a thread pool has been configured, it is better to spread the send-response tasks to all the available threads.

Author: Matteo Merli <mmerli@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #8 from merlimat/bk-888

TREE:tree 14d13a71bbf55398aa392d5fadcc130226910cdb ------
TIME:02/09/2016 08:30:29

COMMIT:BOOKKEEPER-892: Bookie sanity test

Author: Siddharth Boobna <sboobna@yahoo-inc.com>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #13 from sid825/BOOKKEEPER-892

TREE:tree d2ec66a872e12f459bff2985d37e621b638eff76 ------
TIME:02/09/2016 08:28:09

COMMIT:BOOKKEEPER-890: Concurrent modification exception when removing listener in…

… Bookkeeper ZK ledger manager

Author: Matteo Merli <mmerli@apache.org>

Reviewers: Sijie Guo <sijie@apache.org>

Closes #9 from merlimat/bk-890-concurrent-modification

TREE:tree 0854b340e5f57df01538daa1916fd9f569882e30 ------
TIME:02/09/2016 08:23:34

COMMIT:BOOKKEEPER-883: Test timeout in bookkeeper-benchmark

Problem:

The BenchReadThroughputLatency is tight with FlatLedgerManager. so lots of assumptions are made based on how the znodes are changed when ledgers are created. There was a change introduced LedgerIdGenerator, which broke the assumptions that made by BenchReadThroughputLatency.

Fix:

- Use a hashset to cache processed ledgers on reacting on children changes
- Remove unpredictable test on next ledger
- Fix an error logging on FlatLedgerManager processing ledgers

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #10 from sijie/BOOKKEEPER-883

(cherry picked from commit 8729d12be50295086e7440dfa5d0256abb7688d5)
Signed-off-by: Sijie Guo <sijie@apache.org>

TREE:tree 0b1531814d0805976ac00e58db56a09afaca1501 ------
TIME:02/09/2016 08:12:03

COMMIT:BOOKKEEPER-883: Test timeout in bookkeeper-benchmark

Problem:

The BenchReadThroughputLatency is tight with FlatLedgerManager. so lots of assumptions are made based on how the znodes are changed when ledgers are created. There was a change introduced LedgerIdGenerator, which broke the assumptions that made by BenchReadThroughputLatency.

Fix:

- Use a hashset to cache processed ledgers on reacting on children changes
- Remove unpredictable test on next ledger
- Fix an error logging on FlatLedgerManager processing ledgers

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #10 from sijie/BOOKKEEPER-883

TREE:tree 881d2f575817c9d5869d1b8df3e2a3b11f1afe85 ------
TIME:02/09/2016 08:12:03

COMMIT:BOOKKEEPER-855: handle session expire event in bookie (sijie)

This change is to retry bookie registration when zookeeper session expired.

Author: Sijie Guo <sijie@apache.org>

Reviewers: Ivan Kelly <ivank@apache.org>, Matteo Merli <mmerli@apache.org>

Closes #1 from sijie/sijie/BOOKKEEPER-855

TREE:tree 326589376eb95680d026897e16fe52e812808f11 ------
TIME:01/26/2016 22:11:04

COMMIT:BOOKKEEPER-885: Script to merge github pull request (sijie via mmerli)

Utility for creating well-formed pull request merges and pushing them to Apache. A modified version based on Spark project (https://github.com/apache/spark/blob/master/dev/merge_spark_pr.py)

Author: Sijie Guo <sijie@apache.org>

Reviewers: Matteo Merli <mmerli@apache.org>

Closes #4 from sijie/sijie/BOOKKEEPER-885

TREE:tree 9ee3dd8ad9152cbc3425a38be42f2bde13c38ed6 ------
TIME:01/24/2016 18:39:50

COMMIT:BOOKKEEPER-877: Script for generating patch for reviews (sijie)

TREE:tree 940ac67d0e4aa5c17dffbef949f3a3c1da914af8 ------
TIME:01/22/2016 06:19:02

COMMIT:BOOKKEEPER-438: Move ledger id generation out of LedgerManager (Sijie via mmerli) [missing files]

TREE:tree b562e2c67537f7db9b47478cd959e0b328c33a84 ------
TIME:11/17/2015 20:30:45

COMMIT:Preparing release 4.3.2

TREE:tree 1bc34eb056012564fc2b6ae1638f7853a70c1087 ------
TIME:11/13/2015 08:16:30

COMMIT:BOOKKEEPER-438: Move ledger id generation out of LedgerManager (Sijie via mmerli)

TREE:tree ae183cba45a4a736c9f0529154e7f65301d07766 ------
TIME:11/13/2015 07:53:19

COMMIT:BOOKKEEPER-867: New Client API to allow applications pass-in EntryId. (Venkateswararao Jujjuri via sijie) (missing CHANGES.txt)

TREE:tree 58edd8f29a314e284af4c924eef634197186a33b ------
TIME:10/22/2015 09:24:14

COMMIT:BOOKKEEPER-867: New Client API to allow applications pass-in EntryId. (Venkateswararao Jujjuri via sijie)

TREE:tree d757a091d5304a09db789e3ad47ce0b1370fce06 ------
TIME:10/22/2015 09:22:36

COMMIT:BOOKKEEPER-866: Fix compile issue when Updating junit to latest release version( 4.12) in the test of  Bookkeeper-server. (Jia Zhai via sijie)

TREE:tree 74d9e2246526a158cfdc074341fc2228ecabe666 ------
TIME:10/16/2015 07:00:57

COMMIT:BOOKKEEPER-872: Resource leak with unclosed LedgerManager in HierarchicalLedgerManagerFactory#format() (Ted Yu via sijie)

TREE:tree 2ae191fe833fd4351a528524fb239b7192895eaa ------
TIME:10/10/2015 18:38:11

COMMIT:BOOKKEEPER-826: PendingAddOp is ignoring ack response after meet ack quorum constraint (sijie)

TREE:tree db39a5a50242d25277cf46b817b3984352f5677a ------
TIME:10/06/2015 11:12:15

COMMIT:BOOKKEEPER-868: Add ADD_ENTRY quorum timeout (Leigh Stewart via sijie)

TREE:tree 720cd24e9e8c8d960ea1d65170bb592b69b83b98 ------
TIME:10/06/2015 10:48:46

COMMIT:BOOKKEEPER-862: Add tracing and stats to OrderedSafeExecutor for debugging slow tasks (Leigh Stewart via sijie)

TREE:tree 13f6df0d18334c487c4328494540a876a35a070d ------
TIME:10/06/2015 10:05:18

COMMIT:Release 4.3.2

TREE:tree 3e2257fa36d30d3fd884b32e9b1fac3ed14db035 ------
TIME:09/25/2015 08:11:07

COMMIT:BOOKKEEPER-695: Some entry logs are not removed from the bookie storage (Matteo Merli via sijie)

TREE:tree 3591b683b5ad2be2710b996a4700fa7cdbb07f6e ------
TIME:04/21/2015 09:44:52

COMMIT:BOOKKEEPER-438: Move ledger id generation out of LedgerManager (Tong Yu via sijie)

TREE:tree a2dc66d99f2be13da46eec95086f024ef7b9b767 ------
TIME:09/15/2015 10:38:26

COMMIT:BOOKKEEPER-802: Bookkeeper protocol documentation (ivank via sijie)

TREE:tree bd0231354bf4571eb9adef58cea6d82854922593 ------
TIME:09/07/2015 17:58:26

COMMIT:BOOKKEEPER-863: Potential resource leak with unclosed LedgerManager in BookieShell (Ted Yu via sijie)

TREE:tree c1e17cc73074e0dee628ce3f7c7842561afbfb71 ------
TIME:08/12/2015 04:00:52

COMMIT:BOOKKEEPER-760: Don't close PCBC proactively if bookies disappeared from zookeeper znodes (sijie via fpj)

TREE:tree 0036033eff46901c5933dce28e10df5a927cc0ca ------
TIME:07/28/2015 13:44:30

COMMIT:BOOKKEEPER-687: Use static final Logger for hedwig related modules (Ankur Garg via sijie)

TREE:tree 313e5adc4660340e32ed79e31eaed137fa939fba ------
TIME:07/16/2015 08:28:46

COMMIT:BOOKKEEPER-796: Make bookkeeper client use reconnectable zookeeper wrapper (sijie via fpj)

TREE:tree fe95145eecf70b9c147bf0b16471011f0aeed9a0 ------
TIME:07/10/2015 22:48:59

COMMIT:BOOKKEEPER-823: Clean up temp files created by hedwig tests (Jia Zhai via sijie)

TREE:tree 366e22223b1b45c1bbdecd9af09f2c97646634c3 ------
TIME:07/07/2015 08:24:26

COMMIT:BOOKKEEPER-858: Fix broken links and typos in bookkeeper documents (Youngjoon Kim via sijie)

TREE:tree ce733bc42448c1a0b9cfb7fed4f8a797dfbb1424 ------
TIME:06/02/2015 08:02:06

COMMIT:Add 4.3.2 unrelease in CHANGES.txt

TREE:tree bd4487126911141911506a595697efec3059f068 ------
TIME:05/27/2015 10:54:23

COMMIT:BOOKKEEPER-821: Failing to write lastId to ledger directories should not fail startup of bookies (zhaijia via sijie)

TREE:tree 92f64c6fa4b0a6d5235fdca5b4086f8d27df6885 ------
TIME:05/20/2015 08:20:04

COMMIT:Release 4.3.1

TREE:tree 054f6c3d80c024e971053cc1fc678c4f1b11ddcc ------
TIME:05/19/2015 09:44:47

COMMIT:BOOKKEEPER-854: NPE on InterleavedLedgerStorage.onRotateEntryLog (sijie)

TREE:tree ff52ba2d7d5dd83cf9980834cb778519e4c488ce ------
TIME:05/20/2015 06:22:47

COMMIT:BOOKKEEPER-854: NPE on InterleavedLedgerStorage.onRotateEntryLog (sijie)

TREE:tree 952f5c4cc2f83e2e01e2d65d8b398398f17a3d0a ------
TIME:05/20/2015 06:15:45

COMMIT:BOOKKEEPER-835: Update copyright for 2015 on all active branches (sijie) (missing CHANGES.txt file)

TREE:tree 7111bf777682ae1e7af8a7ef9dc8b17cd74ee57d ------
TIME:05/19/2015 09:42:23

COMMIT:BOOKKEEPER-835: Update copyright for 2015 on all active branches (sijie) (missing CHANGES.txt file)

TREE:tree 831010ea6b326f3ee4e1b1c035321d415a92d077 ------
TIME:05/19/2015 09:41:30

COMMIT:BOOKKEEPER-835: Update copyright for 2015 on all active branches

TREE:tree cf241b62c51835ff1420357dcf62e7f532a95401 ------
TIME:05/19/2015 09:38:15

COMMIT:BOOKKEEPER-835: Update copyright for 2015 on all active branches

TREE:tree a59d2c57651c0ce4bf6bed2bc28f2578a8f76572 ------
TIME:05/19/2015 09:36:14

COMMIT:BOOKKEEPER-846: TestLedgerChecker times out (rakeshr via sijie)

TREE:tree d7808faead06bf8fe1da79dba05f155842600f5f ------
TIME:04/21/2015 10:19:24

COMMIT:BOOKKEEPER-846: TestLedgerChecker times out (rakeshr via sijie)

TREE:tree e0026229c02725a4e718771d267c107ef0a1526e ------
TIME:04/21/2015 10:14:25

COMMIT:BOOKKEEPER-833: EntryLogId and EntryLogLimit should not be larger than Integer.MAX_VALUE (sijie)

TREE:tree 17d4311b07c75d4b6e5fe790ad089112e9109338 ------
TIME:04/21/2015 10:08:20

COMMIT:BOOKKEEPER-833: EntryLogId and EntryLogLimit should not be larger than Integer.MAX_VALUE (sijie)

TREE:tree 47de1d1b43d703f92fdeca563559ccfbec87ca80 ------
TIME:04/21/2015 10:02:38

COMMIT:BOOKKEEPER-836: disable compaction when disk becomes full, otherwise compaction will fill up disk quickly (zhaijia via sijie)

TREE:tree 3b79c457c8f4d8925a82fc08c6cde28d549e71f7 ------
TIME:04/21/2015 09:55:03

COMMIT:BOOKKEEPER-695: Some entry logs are not removed from the bookie storage (Matteo Merli via sijie)

TREE:tree 959f2148afa2363432ca732122cdb249f5efcfb9 ------
TIME:04/21/2015 09:44:52

COMMIT:BOOKKEEPER-848: Use volatile for lastAddConfirmed (Matteo Merli via sijie)

TREE:tree c168cea0a3f3e80c96fb94d71fdaff76df439a7f ------
TIME:04/21/2015 09:39:31

COMMIT:BOOKKEEPER-847: ArrayIndexOutOfBoundsException in LedgerFragmentReplicator::updateEnsembleInfo (zhaijia via sijie)

TREE:tree dcd11ca0c3f3eb7b4aa7461699cbfc20a0c14ce6 ------
TIME:04/21/2015 09:35:22

COMMIT:BOOKKEEPER-850: Use nanoseconds to calculate poll timeout when doing group commit (Matteo Merli via sijie)

TREE:tree 8f2e7e356bd662625eb572b3c0937e92806cd33c ------
TIME:04/21/2015 09:23:48

COMMIT:BOOKKEEPER-849: Collect stats with sub-milliseconds precision (Matteo Merli via sijie)

TREE:tree 395b08652beeb2e6d834995141cbd57ff240a4b2 ------
TIME:04/21/2015 09:17:45

COMMIT:BOOKKEEPER-844: Add more metrics about latency and bytes characteristics on bookie operations (Tong Yu via sijie) (missing file)

TREE:tree d5e6a3fcf279aebd805a1591d5fcfc34bb71edc2 ------
TIME:03/18/2015 07:41:02

COMMIT:BOOKKEEPER-844: Add more metrics about latency and bytes characteristics on bookie operations (Tong Yu via sijie)

TREE:tree 24ed75eb0af09f2dbed588904cc773c8af8e5be5 ------
TIME:03/18/2015 07:38:24

COMMIT:BOOKKEEPER-834: test case error in test class TestDiskChecker (zhaijia via sijie)

TREE:tree aa52f2ad4dafaac5f57f6cb41c84ab56b7079edc ------
TIME:03/18/2015 07:36:18

COMMIT:BOOKKEEPER-834: test case error in test class TestDiskChecker (zhaijia via sijie)

TREE:tree 20763895acb7ae98308342839127d8e6040fb648 ------
TIME:03/18/2015 07:31:32

COMMIT:BOOKKEEPER-828: Script for updating docs on website from master branch (ivank via sijie)

TREE:tree 6ab6e5e8d1c801d798d7553f60474c2bf1dfa0ed ------
TIME:03/18/2015 07:18:10

COMMIT:BOOKKEEPER-840: Deadlock on flushLock on compaction (sijie)

TREE:tree 42e0f7afdbac4e3e1bf6598eb815640c5ce77b5c ------
TIME:03/18/2015 06:40:30

COMMIT:BOOKKEEPER-840: Deadlock on flushLock on compaction (sijie)

TREE:tree ffa094b4afa2e132128306eaec4bc32675565542 ------
TIME:03/18/2015 06:23:37

COMMIT:BOOKKEEPER-831: Outdated links in tutorial (ivank via sijie)

TREE:tree 958e2e8b78342a51f7d0e8fb74f05bfdd1cb9246 ------
TIME:03/12/2015 08:56:42

COMMIT:BOOKKEEPER-837: UpdateLedgerOp - Replace AbstractFuture with SettableFuture (rakeshr via sijie)

TREE:tree 1f6ff15eb1d37f360d6208dcd981214a2cd63c63 ------
TIME:03/12/2015 08:40:08

COMMIT:BOOKKEEPER-837: UpdateLedgerOp - Replace AbstractFuture with SettableFuture (rakeshr via sijie)

TREE:tree 76c5238222312c97bb4ecdf3d4b9023679ed2d29 ------
TIME:03/12/2015 08:37:20

COMMIT:BOOKKEEPER-839: AuditorPeriodicCheckTest timeout (rakeshr via sijie)

TREE:tree 3b43126118a16d20d307dab21f727c6ee52c08d0 ------
TIME:03/12/2015 08:24:50

COMMIT:BOOKKEEPER-839: AuditorPeriodicCheckTest timeout (rakeshr via sijie)

TREE:tree 6e99e3b2704fbc7be7d00f09b8b8454a6bfb3100 ------
TIME:03/12/2015 08:21:29

COMMIT:BOOKKEEPER-838: ForceWriteThread::run() leaks “logFile.close()” when interrupt comes (zhaijia via sijie)

TREE:tree a62e6f43d5369ba2d5f921f48a86968ecb3b7eff ------
TIME:02/23/2015 08:19:57

COMMIT:BOOKKEEPER-838: ForceWriteThread::run() leaks “logFile.close()” when interrupt comes (zhaijia via sijie)

TREE:tree 018143b48fa8632ed8cbb5539bdc21e8547894ca ------
TIME:02/23/2015 08:11:31

COMMIT:BOOKKEEPER-830: Documentation has no structure (ivank via fpj)

TREE:tree ed13dad34ea688513ac2643bda32e8f6e33f405d ------
TIME:01/19/2015 22:01:43

COMMIT:BOOKKEEPER-827 change throttle in GarbageCollector to use either "by entry" or "by byte" (Jia Zhai via fpj)

TREE:tree beb6378c05394a980400d33352067f250983698f ------
TIME:01/16/2015 15:57:03

COMMIT:BOOKKEEPER-634: Provide admin tool to rename bookie identifier in ledger metadata (rakeshr via ivank)

TREE:tree dfaee1f304fba76b6aef2d727aa2b139cb079889 ------
TIME:01/13/2015 13:06:18

COMMIT:BOOKKEEPER-634: Provide admin tool to rename bookie identifier in ledger metadata (rakeshr via ivank)

TREE:tree 3db6425ba6049cb5ac6e6c8870cc81f5d02dc937 ------
TIME:01/13/2015 13:06:18

COMMIT:BOOKKEEPER-832: Allow starting bookie in ReadOnly mode (zhaijia via ivank)

TREE:tree 5877ad37bff714d3578b57d35508949483f2800a ------
TIME:01/12/2015 15:18:55

COMMIT:Update versions for 4.2.4 release

TREE:tree 9a245417ac5f1a2f761fbffb2f0dbf0c47416a48 ------
TIME:12/19/2014 20:07:54

COMMIT:BOOKKEEPER-803: Guide for making a replicated log out of ledgers (ivank)

TREE:tree 5d2b27a22277d2084fe0bcaf59ec496a41e06df9 ------
TIME:12/12/2014 12:14:32

COMMIT:BOOKKEEPER-801: Bookkeeper client tutorial (ivank)

TREE:tree b9e62edea6e82c00a3af0d8e7e64d66416d72fcb ------
TIME:12/12/2014 12:09:02

COMMIT:BOOKKEEPER-814: clean up temp files that generated by test cases. (zhaijia via ivank)

TREE:tree 963a40558a9d22b661d421d9055690beb2c13862 ------
TIME:12/10/2014 19:43:24

COMMIT:BOOKKEEPER-814: clean up temp files that generated by test cases. (zhaijia via ivank)

TREE:tree 05768d7014b80df4256e071c36c649040bb0f57c ------
TIME:12/10/2014 19:43:24

COMMIT:BOOKKEEPER-795: Race condition causes writes to hang if ledger is fenced (sijie via ivank)

TREE:tree 7481b68b21855d70cb26a3e1db27e938a251e031 ------
TIME:12/09/2014 19:57:43

COMMIT:BOOKKEEPER-799: Distribution schedule coverage sets don't take gaps in response lists into account when writequorum > ackquorum (ivank)

TREE:tree e530dc9b63bd551faf62ee6c38cb104a36d3a8f4 ------
TIME:12/05/2014 17:51:16

COMMIT:BOOKKEEPER-795: Race condition causes writes to hang if ledger is fenced (sijie via ivank)

TREE:tree 09619de58eec79c69c4a964f73e3b0d300abd5c8 ------
TIME:12/09/2014 19:57:43

COMMIT:BOOKKEEPER-795: Race condition causes writes to hang if ledger is fenced (sijie via ivank)

TREE:tree 7c63196b4e43b7e553182be81be6ff5e13bf07bf ------
TIME:12/09/2014 19:57:43

COMMIT:BOOKKEEPER-811: Recovery tool doesn't remove cookie after recovering one bookie (Charles Xie via sijie)

TREE:tree 28ba031e6a48459482863e503e720588e54968f5 ------
TIME:12/06/2014 08:05:36

COMMIT:BOOKKEEPER-811: Recovery tool doesn't remove cookie after recovering one bookie (Charles Xie via sijie)

TREE:tree f1666ffb93be1e463a7a33fc47d2e66a84215d90 ------
TIME:12/06/2014 08:03:13

COMMIT:BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)

TREE:tree dcf60aff2076aa69aa857b10a7dd2fcfe0254b36 ------
TIME:12/06/2014 07:56:49

COMMIT:BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)

TREE:tree a0a6a0ed5777a972f3ead50f5c41004361727a5a ------
TIME:12/06/2014 07:54:41

COMMIT:BOOKKEEPER-813: BookieShell doesn't find index directory (Charles Xie via sijie)

TREE:tree 5b6ce29ea4d847d8f7739e8cbe15c8f62d829a37 ------
TIME:12/06/2014 07:49:31

COMMIT:BOOKKEEPER-813: BookieShell doesn't find index directory (Charles Xie via sijie)

TREE:tree 9c45487ab72f24742b8314bce7fef9549a68d0f6 ------
TIME:12/06/2014 07:47:33

COMMIT:BOOKKEEPER-804: Client program is not terminated when using openLedgerNoRecovery (ivank via sijie)

TREE:tree 11de5450a1c6117bd8c41dd4ef08659f87fe2f99 ------
TIME:12/06/2014 07:42:07

COMMIT:BOOKKEEPER-804: Client program is not terminated when using openLedgerNoRecovery (ivank via sijie)

TREE:tree 2f24ef83e5954bb382d204b71e44b65f756d4f8c ------
TIME:12/06/2014 07:38:44

COMMIT:BOOKKEEPER-820: print out fi.isFenced() in BookieShell (zhaijia via sijie)

TREE:tree 3e78deca67502436680739bd28c92b92bebab6a2 ------
TIME:12/06/2014 07:28:51

COMMIT:BOOKKEEPER-820: print out fi.isFenced() in BookieShell (zhaijia via sijie)

TREE:tree 36b36c3c0dae41c6aaab5e3ac61ebb103b0663ac ------
TIME:12/06/2014 07:26:19

COMMIT:BOOKKEEPER-809: Wrong metric on LedgerDeleteOp and LedgerOpenOp (Charles Xie via sijie) (missing CHANGES.txt)

TREE:tree a47bd24c04479cc77c4b3ea857a04f831169d6ae ------
TIME:12/06/2014 07:13:19

COMMIT:BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie) (missing CHANGES.txt)

TREE:tree 70b7ada326f28d27af793d54c2e527a17e402113 ------
TIME:12/06/2014 07:12:29

COMMIT:BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie) (missing CHANGES.txt)

TREE:tree cb78c1445ee351579fe6a35c9d4696fe3d5b4dde ------
TIME:12/06/2014 07:11:10

COMMIT:BOOKKEEPER-809: Wrong metric on LedgerDeleteOp and LedgerOpenOp (Charles Xie via sijie)

TREE:tree 84b8a66a0677d9bdfb3f5e3f76e10d91d3c32e87 ------
TIME:12/06/2014 07:09:15

COMMIT:BOOKKEEPER-809: Wrong metric on LedgerDeleteOp and LedgerOpenOp (Charles Xie via sijie)

TREE:tree 4cffd2c3847e014451a1cbeda77227082e88cd48 ------
TIME:12/06/2014 07:05:19

COMMIT:BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie)

TREE:tree c22f402d6c7853635f8042a351f01e09069daa1c ------
TIME:12/06/2014 06:59:46

COMMIT:BOOKKEEPER-805: NullPointException in bookie server when using twitter-ostrich-provider (Youngjoon Kim via sijie)

TREE:tree 69a4e4c9a0b46415e6c2e8aeec1fa0e3f1844116 ------
TIME:12/06/2014 06:54:19

COMMIT:BOOKKEEPER-799: Distribution schedule coverage sets don't take gaps in response lists into account when writequorum > ackquorum (ivank)

TREE:tree 1d1a9675702cf0f24849d3075f5ca0c99291dc29 ------
TIME:12/05/2014 17:51:16

COMMIT:BOOKKEEPER-799: Distribution schedule coverage sets don't take gaps in response lists into account when writequorum > ackquorum (ivank)

TREE:tree a0b5fad6c793002630998ccf46c5bc3bb8fd8cf6 ------
TIME:12/05/2014 17:51:16

COMMIT:BOOKKEEPER-800: Expose whether a ledger is closed or not (ivank)

TREE:tree 26f8bc72c8cb532ef68784d1a63314341a119cf8 ------
TIME:12/05/2014 14:10:20

COMMIT:BOOKKEEPER-800: Expose whether a ledger is closed or not (ivank)

TREE:tree 0c6eff3da193e45efdcee77ccc1b94ad909763a3 ------
TIME:12/05/2014 14:10:20

COMMIT:BOOKKEEPER-800: Expose whether a ledger is closed or not (ivank)

TREE:tree 1d589756382f37a39a85af4578990b7ab9529b51 ------
TIME:12/05/2014 14:10:20

COMMIT:BOOKKEEPER-815: Ledger fence state is lost when the ledger file is evicted (Charles Xie via ivank)

TREE:tree a5c6a41d02d0848efbd48d93279153751e94e7df ------
TIME:12/04/2014 12:28:25

COMMIT:BOOKKEEPER-815: Ledger fence state is lost when the ledger file is evicted (Charles Xie via ivank)

TREE:tree 62fedffea639071bf5d41514aef26e36b798dc83 ------
TIME:12/04/2014 12:28:25

COMMIT:Prep for 4.2.4-snapshot

Change-Id: I3f9698c9861f2afa588c993d9448cf12a911c3e2

TREE:tree 7eb6393f27b172c0a83a48ed44c48d232ecf1ab3 ------
TIME:12/04/2014 12:42:01

COMMIT:Changed version 4.3.0 -> 4.3.1-SNAPSHOT, and prepared CHANGES.txt

Change-Id: I92bde89473a0551c9d59d7620d582e57a3014ffd

TREE:tree 57c20658e4fd63e75c0c9e3e6341ef2ea54fffb4 ------
TIME:12/04/2014 12:33:03

COMMIT:BOOKKEEPER-815: Ledger fence state is lost when the ledger file is evicted (Charles Xie via ivank)

Change-Id: I7de7a893043f1304b75d7545899ec5b022148e6b

TREE:tree 3bcf2629f67cfef964d7345dbdd0426767714f9d ------
TIME:12/04/2014 12:28:25

COMMIT:BOOKKEEPER-797: IllegalArgumentException when calling CodahaleOpStatsLogger#toOpStatsData()

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1640597 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a214d88c83949d1aea0062e469803af5cb464448 ------
TIME:11/19/2014 18:00:11

COMMIT:BOOKKEEPER-793: Move to java 7

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631943 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cdece91b20ed75bf814a98056b0ced713a987748 ------
TIME:10/15/2014 07:27:01

COMMIT:Add JNA license in NOTICE files

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631683 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1cdb0c0974c8e0e9d780b37de15e31f21da261f6 ------
TIME:10/14/2014 10:49:20

COMMIT:Update README to reflect bookkeeper modules

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1631681 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fa516768d8e5c101d3706447e17126efe9a45c7a ------
TIME:10/14/2014 10:47:10

COMMIT:BookKeeper 4.3.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.3.0@1630047 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3b22b005a758b3c811347ddf4272c5336353d634 ------
TIME:10/08/2014 11:35:37

COMMIT:undo bad copy

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.3.0@1630040 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 80cab6f26bf2ac6382fe97f335bfd8427516aaf7 ------
TIME:10/08/2014 11:27:14

COMMIT:BookKeeper 4.3.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.3.0@1630038 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0444ea6874c3f1003e7c49d1c941cf908093e83f ------
TIME:10/08/2014 11:08:17

COMMIT:BOOKKEEPER-789: Update README to reflect bookkeeper modules (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.3@1630031 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3b22b005a758b3c811347ddf4272c5336353d634 ------
TIME:10/08/2014 10:43:26

COMMIT:BOOKKEEPER-790: Add JNA license in NOTICE files (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.3@1630029 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aec28550ffbccbb12f76f0027104bdd499239561 ------
TIME:10/08/2014 10:41:10

COMMIT:BookKeeper 4.3.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.3.0@1629145 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 80cab6f26bf2ac6382fe97f335bfd8427516aaf7 ------
TIME:10/03/2014 10:49:29

COMMIT:Bump version number to 4.4.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1629127 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 374c29158eb4239de4856307d8b6c5e1e37e29c0 ------
TIME:10/03/2014 09:30:30

COMMIT:Update release version 4.3.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.3@1629126 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 80cab6f26bf2ac6382fe97f335bfd8427516aaf7 ------
TIME:10/03/2014 09:26:44

COMMIT:Branching for 4.3 releases

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.3@1629125 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 763fac2fca02cf4c7f45cfcc6153a3c84de043b4 ------
TIME:10/03/2014 09:22:30

COMMIT:Preparing for release 4.3.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1629124 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 763fac2fca02cf4c7f45cfcc6153a3c84de043b4 ------
TIME:10/03/2014 09:21:37

COMMIT:BOOKKEEPER-773: Provide admin tool to rename bookie identifier in Cookies (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1628193 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4a202b0ee67ea0809efbbe3a6f78c58b86b3ca2e ------
TIME:09/29/2014 16:29:22

COMMIT:BOOKKEEPER-787: Modify Cookie by removing 'znodeVersion' state/field (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1627068 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e32161c852941e52259d0cda716be2e7035dbf61 ------
TIME:09/23/2014 17:53:40

COMMIT:BOOKKEEPER-786: Fix Findbugs Error In Codahale Stats Provider (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1626721 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 84ab16ad4e13df6c4cb8e91d9732e3b48c20fcb2 ------
TIME:09/22/2014 12:11:35

COMMIT:BOOKKEEPER-782: Use builder pattern for Cookie (rakeshr via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625888 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e2037712e927654eab4f912586c244f51f5764d ------
TIME:09/18/2014 06:57:17

COMMIT:BOOKKEEPER-784: BookKeeperCloseTest#testLedgerCheck is failing intermittently (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625886 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f550195f97d1428d45776989b7298ff27889ad0f ------
TIME:09/18/2014 06:53:21

COMMIT:BOOKKEEPER-785: Fix javadoc warnings in trunk (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625885 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 79151a5f7ca8980ec6f32ccd58c127d8368315ac ------
TIME:09/18/2014 06:47:22

COMMIT:BOOKKEEPER-783: Avoid running out of fds in MutlipleThreadReadTest (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1625611 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 58919cc76ab9df32c27ec078a8be67460b0520ed ------
TIME:09/17/2014 16:32:48

COMMIT:BOOKKEEPER-775: Improve MultipleThreadReadTest to reduce flakiness (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1624161 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4815d61e2601c872c2054d283f6338e3791ac9f7 ------
TIME:09/11/2014 00:41:28

COMMIT:BOOKKEEPER-776: Flaky test BookieRecoveryTest (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623741 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 26e371ae4f6f369fc133e0047db807625898368b ------
TIME:09/09/2014 12:40:01

COMMIT:BOOKKEEPER-781: Fix OOM on Hedwig Tests (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623713 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5726478141815aa0975f8644842182d966b11f90 ------
TIME:09/09/2014 11:03:00

COMMIT:BOOKKEEPER-778: Flake in TestTryReadLastConfirmed (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1623618 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree db2663f57ac7db9042a38318ffe7ba22060764b2 ------
TIME:09/09/2014 05:57:10

COMMIT:BOOKKEEPER-736: Stats for AutoRecovery (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622832 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8f941e722790e145726db0ad505c750cad8b6323 ------
TIME:09/06/2014 07:58:47

COMMIT:BOOKKEEPER-718: AuditorLedgerCheckerTest is flakey (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622830 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1bac5d50ce5d98e7133c7cbfbf5095ca3f7f9e7f ------
TIME:09/06/2014 07:51:08

COMMIT:BOOKKEEPER-779: jmx reporter for codahale metrics provider (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622828 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 419bc810b2d3d011efc5e9a70dfbbae487973b35 ------
TIME:09/06/2014 07:27:02

COMMIT:BOOKKEEPER-777: Flake in LedgerCloseTest (ivank via fpj)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622827 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b0609b8b5e5d3ccef6ae0d93f002efd5755795db ------
TIME:09/06/2014 07:13:53

COMMIT:BOOKKEEPER-780: Findbug issue in trunk (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622568 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 58d7f8da82f43d3f27b1cfb7df27ef7e45b29689 ------
TIME:09/04/2014 23:49:31

COMMIT:BOOKKEEPER-704: reconnectable zookeeper client wrapper (sijie via ivank) [missing file]

Change-Id: I46cf3237ec5e1998039fedee9d127752c1389a73

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618817 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7ade001338a80cd9b191a1a55a6d11cacfb02724 ------
TIME:08/19/2014 10:32:23

COMMIT:BOOKKEEPER-630: Add tag to o.a.b.net.* to indict which release of hadoop they came from, move DNS to o.a.b.net.* and indent (sijie via ivank)

Change-Id: I9dd16912da6f23543d069434e9419495fdf8f314

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618737 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f90bea53214cda44705431243cc3c99f96fc1bc4 ------
TIME:08/18/2014 23:03:41

COMMIT:BOOKKEEPER-704: reconnectable zookeeper client wrapper (sijie via ivank)

Change-Id: I00c73788f4ed5911713906b4d7622ca6dcec79a5

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1618732 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3b362c62c00a7277182ac8d8feeec09d4ed5bd3b ------
TIME:08/18/2014 23:00:15

COMMIT:BOOKKEEPER-774: Flaky test org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1617888 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 54068cbff5cad0ecf2c63aba8f4af47121c3eef5 ------
TIME:08/14/2014 08:15:59

COMMIT:BOOKKEEPER-697: stats collection on bookkeeper server (sijie via fpj) (missing file)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1616094 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bfd06cffa13e6aad5f9de2cebdcfd6b4005d4b1c ------
TIME:08/06/2014 06:48:42

COMMIT:BOOKEEPER-697. stats collection on bookkeeper server (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1615338 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d73e6050bec15c1a02f072bf7bf842464d3258f3 ------
TIME:08/02/2014 20:02:06

COMMIT:BOOKKEEPER-582: Make bookie and client use protobuf for requests (non-wire part) (missing files) (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1613567 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eb3d529171231dd617cb8662d41bb902f4a3ce8f ------
TIME:07/26/2014 08:51:52

COMMIT:BOOKKEEPER-582: Make bookie and client use protobuf for requests (non-wire part)
(sijie via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1613315 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d83d0e5168bb347efae558c4af8eb106a74d083b ------
TIME:07/25/2014 00:34:19

COMMIT:BOOKKEEPER-739: Test timeouts mostly ignored (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1612972 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d6326435122e5b8fb124f603eb94e5c8382c4a00 ------
TIME:07/24/2014 01:41:19

COMMIT:BOOKKEEPER-768: fix typo seconds to milliseconds in benchmark output (jialin via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1610596 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c5851aff651d8e627aa2d7b3c7127e9981e04432 ------
TIME:07/15/2014 09:09:21

COMMIT:BookKeeper 4.2.3 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.3@1604842 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1ef62477baca6dd9c8ef1aa01c7821fd71559c87 ------
TIME:06/23/2014 17:40:42

COMMIT:Update release date in CHANGES.txt

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1604840 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1ef62477baca6dd9c8ef1aa01c7821fd71559c87 ------
TIME:06/23/2014 17:37:38

COMMIT:BookKeeper 4.2.3 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.3@1601594 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb1aebdb310ab79939380bd1caf9dbee1ec772ef ------
TIME:06/10/2014 12:04:57

COMMIT:BOOKKEEPER-765: bookkeeper script should fall back to java in path if JAVA_HOME is not set (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1601593 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb1aebdb310ab79939380bd1caf9dbee1ec772ef ------
TIME:06/10/2014 12:04:00

COMMIT:BOOKKEEPER-765 bookkeeper script should fall back to java in path if JAVA_HOME is not set (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1601592 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a993ecd52afc91703df176727a9b7515c4be9037 ------
TIME:06/10/2014 12:01:45

COMMIT:BOOKKEEPER-767: Allow loopback in tests (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1600884 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d0ac18050d1d0bb70bd2e7586b616b1217d779d7 ------
TIME:06/06/2014 15:32:15

COMMIT:BOOKKEEPER-767: Allow loopback in tests (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1600881 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3a2c7733cb0f2022f8039e945cd780eaf3f2e15d ------
TIME:06/06/2014 15:29:47

COMMIT:BOOKKEEPER-766: Update notice.txt files to include 2014 (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1600594 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e966490e3ddf371d9009412026d2c0be971d2027 ------
TIME:06/05/2014 12:56:29

COMMIT:BOOKKEEPER-766: Update notice.txt files to include 2014 (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1600592 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree beadec09bb5c3b3894fd6580511b4768cca36e04 ------
TIME:06/05/2014 12:53:22

COMMIT:BookKeeper 4.2.3 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.3@1599634 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bab0b4853e82f3050c61a05213833b43b187982b ------
TIME:06/03/2014 17:55:43

COMMIT:Updating version numbers for 4.2.3 release

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599600 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bab0b4853e82f3050c61a05213833b43b187982b ------
TIME:06/03/2014 17:20:10

COMMIT:BOOKKEEPER-750: Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599591 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6e641a205736149a49b7aee167b6d3a78fbb5a87 ------
TIME:06/03/2014 16:48:51

COMMIT:BOOKKEEPER-725: AutoRecoveryMain should exit with error code if deathwatcher finds dead thread (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599546 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fc3660254d091d9498260d4449e213af13020770 ------
TIME:06/03/2014 15:50:12

COMMIT:Fix for some jiras in wrong section in CHANGES.txt

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599541 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0c228a47d6c7fbefd10bf8f1446536b7f7cb080b ------
TIME:06/03/2014 15:39:49

COMMIT:BOOKKEEPER-746: 5 new shell commands. List ledgers, list metadata, list underreplicated, show auditor and simpletest (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599492 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0617435fef94cb5d2ffbd71d0001ad7674f58e7f ------
TIME:06/03/2014 13:56:25

COMMIT:BOOKKEEPER-746: 5 new shell commands. List ledgers, list metadata, list underreplicated, show auditor and simpletest (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1599470 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f724534511c12a86b1847d552c964ec711f3f83f ------
TIME:06/03/2014 12:35:13

COMMIT:BOOKKEEPER-745: Fix for false reports of ledger unreplication during rolling restarts. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599251 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree df68d577fa9f21edec0cbc080271bb841c44974a ------
TIME:06/02/2014 17:54:33

COMMIT:BOOKKEEPER-745: Fix for false reports of ledger unreplication during rolling restarts. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1599145 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f53e37605d2c0ea391eeb3e5bb9976710a2328f7 ------
TIME:06/02/2014 11:54:03

COMMIT:BOOKKEEPER-751: Ensure all the bookkeeper callbacks not run under ledger handle lock (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1598644 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4b59927270fe939c01088a16c283c16b64e178f4 ------
TIME:05/30/2014 17:41:38

COMMIT:BOOKKEEPER-673: Ledger length can be inaccurate in failure case (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1598614 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6402692290d0429bcc736b7fadce55336eeac739 ------
TIME:05/30/2014 16:32:47

COMMIT:BOOKKEEPER-751: Ensure all the bookkeeper callbacks not run under ledger handle lock (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598585 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1af0ee3ef25c2d438f11c88b629e903cdeafdde5 ------
TIME:05/30/2014 15:07:14

COMMIT:BOOKKEEPER-758: Add TryReadLastAddConfirmed API (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598565 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f1386f7530cb4c522aa18146e5680575df066096 ------
TIME:05/30/2014 14:01:34

COMMIT:BOOKKEEPER-763: findbugs fails to run on jenkins (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1598541 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7f0c3cdd67ad7b1c18825b35a471fa968ce038e6 ------
TIME:05/30/2014 12:41:47

COMMIT:BOOKKEEPER-756: Use HashedwheelTimer for request timeouts for PCBC (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597752 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 54478650ccc7acd747f50d16d198ac1e5242dfe3 ------
TIME:05/27/2014 13:56:01

COMMIT:BOOKKEEPER-752: Deadlock on NIOServer shutdown (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1597744 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3138441632673a2fc1441ecccdcf1ebe7fcdd474 ------
TIME:05/27/2014 12:52:49

COMMIT:BOOKKEEPER-750. Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597125 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 959bdd5a32ad5ef9034b5243afe49fb3eef4328b ------
TIME:05/23/2014 18:48:11

COMMIT:BOOKKEEPER-750. Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1597124 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c8bb61438abab86d0884383c865f5ae451490aa0 ------
TIME:05/23/2014 18:46:05

COMMIT:BOOKKEEPER-755: Incorrect number of seconds specified in a day (Joseph Redfern via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1594745 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3b39505f21b46bd1d3917569597d9f47f8a58d45 ------
TIME:05/15/2014 00:43:33

COMMIT:BOOKKEEPER-755: Incorrect number of seconds specified in a day (Joseph Redfern via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1594744 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5bfc21b2660ebaa224caf0e953309976295f7068 ------
TIME:05/15/2014 00:41:03

COMMIT:BOOKKEEPER-747: Implement register/unregister LedgerMetadataListener in MSLedgerManagerFactory (fpj via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1593896 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 28d095928bb8ab88587c96bf6b4272e99470d21a ------
TIME:05/12/2014 08:35:56

COMMIT:BOOKKEEPER-747: Implement register/unregister LedgerMetadataListener in MSLedgerManagerFactory (fpj via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1593889 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6c5ce9abc6c00cc9bab42dd1425301273f68fbd2 ------
TIME:05/12/2014 08:10:00

COMMIT:BOOKKEEPER-629: Support hostname based ledger metadata to help users to change IP with existing installation (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1593518 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8bba00d437cf64434f54ebea8b1508c6da8176f3 ------
TIME:05/09/2014 14:04:45

COMMIT:BOOKKEEPER-744: Run the auditor bookie check periodically (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1592739 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aab47b53ffca8ea1a6b7162cdbe2d01854aaf6ea ------
TIME:05/06/2014 15:13:16

COMMIT:BOOKKEEPER-744: Run the auditor bookie check periodically (ivank) [missing files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1592706 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e24bb024196859f12f61bb4cf7f13b1414566896 ------
TIME:05/06/2014 12:40:02

COMMIT:BOOKKEEPER-744: Run the auditor bookie check periodically (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1592705 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d259c1be237ff2b7ec2ad0d884708f0654427c9f ------
TIME:05/06/2014 12:30:54

COMMIT:BOOKKEEPER-716: padding writes for bookie journal (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1591079 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 16d9381f583def0d10809b7f56feafe103be85b3 ------
TIME:04/29/2014 22:07:12

COMMIT:BOOKKEEPER-743: Periodic ledger check running too often as doc doesn't match implementation. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1589695 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5573562227b3fd5a74f12d05e46d74265ab9bfbd ------
TIME:04/24/2014 14:44:49

COMMIT:BOOKKEEPER-743: Periodic ledger check running too often as doc doesn't match implementation. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1589694 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b3f0980d2994d822c4b6ae706c2e38c60c2e04db ------
TIME:04/24/2014 14:44:34

COMMIT:BOOKKEEPER-742: Fix for empty ledgers losing quorum. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1589675 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d39fd842b4641d813b63d26dbea3bdb96cf6eb82 ------
TIME:04/24/2014 13:40:47

COMMIT:BOOKKEEPER-742: Fix for empty ledgers losing quorum. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1589636 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a3388554156e41450cafa0b8694a4fd9608b06c5 ------
TIME:04/24/2014 10:43:56

COMMIT:BOOKKEEPER-710. OpenLedgerNoRecovery should watch ensemble change. (sijie, ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1586799 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b8ed0deb271e0d40bceb2d47b113191e354a41d7 ------
TIME:04/12/2014 01:34:52

COMMIT:BOOKKEEPER-432: Improve performance of entry log range read per ledger entries (yixue, sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1576883 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8e7167794c9e510931d198e245caf85db8bba10f ------
TIME:03/12/2014 21:26:58

COMMIT:BOOKKEEPER-740: AutoRecoveryMainTest#testAutoRecoverySessionLoss is failing (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575795 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 25eae68d6a3efe4bed6cf066ae5ce6192abdbfde ------
TIME:03/10/2014 03:14:35

COMMIT:BOOKKEEPER-726: PerChannelBookieClient should print address that it failed to connect to when it fails to correct (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1575794 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bbe92584abd943b54637c1ab5568342f62cd6c0e ------
TIME:03/10/2014 03:10:33

COMMIT:BOOKKEEPER-714: Logging channel exceptions in PerChannelBookieClient (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1575793 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c5009dcd569b77d372cbd62dbd7ded67cd9f6f50 ------
TIME:03/10/2014 03:07:03

COMMIT:BOOKKEEPER-602: we should have request timeouts rather than channel timeout in PerChannelBookieClient (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1575792 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 35369cdd03666d5bdb74abe87557ae025b6b7291 ------
TIME:03/10/2014 02:58:19

COMMIT:BOOKKEEPER-730: Shade pom file missing apache license header (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1575347 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6a140736e5e1705b2351d0d3ad6af0bf26f80b55 ------
TIME:03/07/2014 19:05:59

COMMIT:BOOKKEEPER-708: Shade protobuf library to avoid incompatible versions (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1575343 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f5133b300b2337da16e2739b0fd9aa2b1d2e6d3d ------
TIME:03/07/2014 18:54:49

COMMIT:BOOKKEEPER-363: Re-distributing topics among newly added hubs. (aniruddha via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575338 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e7a8aa33d120d8ab80e2fe3543d8fb11a105783d ------
TIME:03/07/2014 18:39:37

COMMIT:BOOKKEEPER-730: Shade pom file missing apache license header (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575247 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 11bc13257b10ca7a536837e2a9484a6da1b73b9b ------
TIME:03/07/2014 13:34:19

COMMIT:BOOKKEEPER-715: bookie: delay dropping journal cached pages (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575246 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 174d506138d4b8ba0545c595e09c6f02ea954eab ------
TIME:03/07/2014 13:30:54

COMMIT:BOOKKEEPER-717: journal should look forward to group time-out entries (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1575243 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3ea36a4addb1af729b6f0ac2e4ebe87bf7f1197f ------
TIME:03/07/2014 13:14:45

COMMIT:BOOKKEEPER-688: NPE exception in PerChannelBookieClient (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1573930 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b89b1f66fa8220081ea9e2819656a0bc817381a0 ------
TIME:03/04/2014 09:20:31

COMMIT:BOOKKEEPER-654: Bookkeeper client operations are allowed even after its closure, bk#close() (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1570647 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4cdc5225d81aafa5d3ccceffb1d14590b5a873c2 ------
TIME:02/21/2014 19:01:17

COMMIT:BOOKKEEPER-731: Missing BOOKIE_PID_DIR and BOOKIE_STOP_TIMEOUT in env variables list (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1566512 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1a22db273fb8b82e4d6c788b2e8c96fa21470422 ------
TIME:02/10/2014 06:53:57

COMMIT:BOOKKEEPER-732: Add env variable ENTRY_FORMATTER_CLASS to the bkenv.sh (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1566510 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e3a5830301cafccf07237d08d0f0397c9e5cafa7 ------
TIME:02/10/2014 06:52:20

COMMIT:BOOKKEEPER-724: Shade introduces RAT error (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565180 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4bc6cf52b4280feb9fc352a4511451355850d3ec ------
TIME:02/06/2014 12:32:14

COMMIT:BOOKKEEPER-726: PerChannelBookieClient should print address that it failed to connect to when it fails to correct (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565115 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bbea7388b2e9980feb48f8a38c4fdf48148160a3 ------
TIME:02/06/2014 09:34:15

COMMIT:BOOKKEEPER-725: AutoRecoveryMain should exit with error code if deathwatcher finds dead thread (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565112 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9c2464b187d02bfefdbb6b84ae518442db3e8cfa ------
TIME:02/06/2014 09:31:11

COMMIT:BOOKKEEPER-729: Bookie shouldn't exit with 0, if exiting from deathwatcher and thread death was caused by OOM (ivank via fpj)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565109 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 61d48e7d6a6f7e0cd53617279a26d28d0db02332 ------
TIME:02/06/2014 09:25:45

COMMIT:BOOKKEEPER-728: Bookkeeper#Builder is not public, so can't be used outside of client package (ivank via fpj)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1565105 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fd30efde2586f21da0f7cbc36ef5e5c0e1b4b4b6 ------
TIME:02/06/2014 09:21:08

COMMIT:BOOKKEEPER-727: Names of bookie write/read threads are backwards (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1564949 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 545db74db578bdc3404942c3e190ed8573867609 ------
TIME:02/05/2014 22:52:05

COMMIT:BOOKKEEPER-644: Provide a bookie address wrapper (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1564946 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 223e727d17c627b8503f75e322450364cc081bbc ------
TIME:02/05/2014 22:43:39

COMMIT:BOOKKEEPER-708: Shade protobuf library to avoid incompatible versions (rakesh, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1563566 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2f141a039ba2c62f034b102bef211ba7c7cfd95f ------
TIME:02/02/2014 06:33:45

COMMIT:BOOKKEEPER-703: Document all the settings added in BOOKKEEPER-656 (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560917 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cabaf160983765e348e05f21dcb84e998ac8b602 ------
TIME:01/24/2014 09:26:14

COMMIT:BOOKKEEPER-643: Improve concurrency of entry logger (sijie & Aniruddha via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560348 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 66fb4b29882c7294e181f79fd3bd92fb2eac2ff2 ------
TIME:01/22/2014 14:35:03

COMMIT:BOOKKEEPER-720: CheckpointSource.MIN#compareTo does exactly the opposite of what it should (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560263 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0f30405e791916799e4512fa6cc367da9192eb02 ------
TIME:01/22/2014 07:37:35

COMMIT:BOOKKEEPER-661: Turn readonly back to writable if spaces are reclaimed. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560066 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 32c648d0b6dde3685792d19e27aaf0c35a39c2e5 ------
TIME:01/21/2014 17:26:23

COMMIT:BOOKKEEPER-719: Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560045 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3da582cefc1fca4e283c94a17c39f217eb38843c ------
TIME:01/21/2014 16:41:29

COMMIT:BOOKKEEPER-696: stats collection on bookkeeper client (Aniruddha, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559918 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a24158365e07fe9910cbcadc530dabc6b0e307da ------
TIME:01/21/2014 05:19:09

COMMIT:BOOKKEEPER-429: Provide separate read and write threads in the bookkeeper server (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559917 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 71934c18ea057ace4ff08fcf22be27c0102dd78b ------
TIME:01/21/2014 05:05:00

COMMIT:BOOKKEEPER-710: OpenLedgerNoRecovery should watch ensemble change. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1559192 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3d2a940492746fdab9bde11cc33a9f88df9159e7 ------
TIME:01/17/2014 18:13:43

COMMIT:BOOKKEEPER-662: Major GC should kick in immediately if remaining space reaches a warning threshold (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1558410 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fcfa206229217b0ca6183731b8090307c3123845 ------
TIME:01/15/2014 15:58:00

COMMIT:BOOKKEEPER-714: Logging channel exceptions in PerChannelBookieClient (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1556732 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6f27922d9b0e252e514700192c3b3f2e0cf33cac ------
TIME:01/09/2014 07:30:11

COMMIT:BOOKKEEPER-709: SlowBookieTest#testSlowBookie fails intermittently (Rakesh R via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1555158 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 374efa0912694ca04f745e844031d4a6a498d7d4 ------
TIME:01/03/2014 18:12:42

COMMIT:BOOKKEEPER-701: Improve exception handling of Bookkeeper threads (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548385 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 956efc2d5d517e160feaab3b2d2ff95f3c474229 ------
TIME:12/06/2013 07:39:36

COMMIT:BOOKKEEPER-712: bookkeeper script should use java from JAVA_HOME (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1548026 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c6cbe95db7532cbee504b40e6edbadc104e4590e ------
TIME:12/05/2013 07:43:36

COMMIT:BOOKKEEPER-711: bookkeeper-daemon.sh will not remove the pid file one successful stop (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1548025 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 42000d5b05f7ae50dc47287eb2eede9da501e7d3 ------
TIME:12/05/2013 07:41:27

COMMIT:BOOKKEEPER-712: bookkeeper script should use java from JAVA_HOME (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548024 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 155af3b650c356bc32e587aa52720520e67c50e4 ------
TIME:12/05/2013 07:35:56

COMMIT:BOOKKEEPER-711: bookkeeper-daemon.sh will not remove the pid file one successful stop (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1548023 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ba776ffc342a66a94fed70e7bcceee1444a3c53d ------
TIME:12/05/2013 07:33:31

COMMIT:BOOKKEEPER-565: Make an option to separate storing entry log files from index files. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1547123 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7239e3019c48d73e0a15078affeca281e82da06f ------
TIME:12/02/2013 18:45:13

COMMIT:BOOKKEEPER-678: BookieServer shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1544452 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 265fcb6292be46acdb6aac0a8cd919fded8017c2 ------
TIME:11/22/2013 10:40:15

COMMIT:BOOKKEEPER-699: Codahale metrics implementation of stats API (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1540366 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e6197d9308d96c8f4dfdfd38ac387a5d0454fee6 ------
TIME:11/09/2013 19:49:55

COMMIT:BOOKKEEPER-700: GarbageCollectorThread exsiting with ArrayIndexOutOfBoundsException (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1537130 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 407b088fe8cc67e6360f8a56228a72349a331b3d ------
TIME:10/30/2013 16:23:54

COMMIT:BOOKKEEPER-698: Bookie client closure is not considering timeoutExecutor (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536965 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a32584dbef82eff62f3193985abc1a12faed3af5 ------
TIME:10/30/2013 05:59:47

COMMIT:BOOKKEEPER-615: Twitter stats implementation of stats interface (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536635 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c7cc1a3407d5c57f0ba9b25c95669aa318c11060 ------
TIME:10/29/2013 10:58:02

COMMIT:BOOKKEEPER-614: Generic stats interface, which multiple providers can be plugged into (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536616 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4937ab50d9fb238a0c92ce8b1f1e603177c50cf1 ------
TIME:10/29/2013 10:08:54

COMMIT:BOOKKEEPER-602: we should have request timeouts rather than channel timeout in PerChannelBookieClient (Aniruddha, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536584 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dbad826dbd34a3e9be25c2efdb4d51c4754f4d88 ------
TIME:10/29/2013 05:14:18

COMMIT:BOOKKEEPER-659: LRU page management in ledger cache. (Aniruddha, Robin Dhamankar & sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534640 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0fdd91807a28bf458a476a4e83cb884d6a36989d ------
TIME:10/22/2013 16:21:28

COMMIT:BOOKKEEPER-664: Compaction increases latency on journal writes (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534503 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 92133aaccbff38a5ec7c5d53a0dc11027494a654 ------
TIME:10/22/2013 07:44:13

COMMIT:BOOKKEEPER-688: NPE exception in PerChannelBookieClient (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1534498 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6108a2b0546199dbdae765c9d6f03ef47a294ddc ------
TIME:10/22/2013 07:35:46

COMMIT:BOOKKEEPER-673: Ledger length can be inaccurate in failure case (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531970 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 43f82fad414259c4ccb0ccb90a4696475c8b6f23 ------
TIME:10/14/2013 18:32:27

COMMIT:BOOKKEEPER-676: Make add asynchrounous in ledger recovery (aniruddha via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531944 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 31159222716de7454c6d40d162f071d7538ca956 ------
TIME:10/14/2013 17:38:44

COMMIT:BOOKKEEPER-605: Use static Logger objects everywhere for bookkeeper (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531920 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d1d906c398d6f70adb141ed4941583146a7bfbd2 ------
TIME:10/14/2013 16:43:24

COMMIT:BOOKKEEPER-657: Journal Improvement (Robin Dhamankar via sijie) (add missing file)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531495 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7ee1a1a6cea863f811382c0086ac9c6578483d30 ------
TIME:10/12/2013 05:43:30

COMMIT:BOOKKEEPER-657: Journal Improvement (Robin Dhamankar via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531494 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2e8f913c6b740b2e679ef53d140fcc34081a0d3b ------
TIME:10/12/2013 05:42:21

COMMIT:BOOKKEEPER-638: Two bookies could start at the same time to access bookie data. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531302 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 52d711b92305da2107157e4b1f02081c0cc8190f ------
TIME:10/11/2013 16:18:40

COMMIT:BOOKKEEPER-658: ledger cache refactor (Robin Dhamankar via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531203 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8c6e629b9b46c5b466892dfcac1d802b5477fc3a ------
TIME:10/11/2013 08:36:27

COMMIT:BookKeeper 4.2.2 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.2@1528470 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 44df4f9b9ae3ac4f43b7c9f3d967bb4b02678f68 ------
TIME:10/02/2013 15:37:05

COMMIT:Update release date in CHANGES.txt

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1528468 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 44df4f9b9ae3ac4f43b7c9f3d967bb4b02678f68 ------
TIME:10/02/2013 15:34:52

COMMIT:BOOKKEEPER-685: Race in compaction algorithm from BOOKKEEPER-664 (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1528399 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f049e4740c2a2618639c3d0c1d8f4c68c8e281be ------
TIME:10/02/2013 11:52:26

COMMIT:BOOKKEEPER-686: Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528307 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bdd19148d01e2d526b102178891f2dbde9b6b095 ------
TIME:10/02/2013 07:01:52

COMMIT:BOOKKEEPER-645: Bookkeeper shell command to get a list of readonly bookies (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528306 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a1cf823f5e7eac140e13e12e07c01312080cc58c ------
TIME:10/02/2013 06:54:35

COMMIT:BOOKKEEPER-666: Naming threads of ExecutorService (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528305 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f2029bf086d12f39d05f54262b427a189c7dd9c6 ------
TIME:10/02/2013 06:40:39

COMMIT:BOOKKEEPER-640: Log improvement - add shutdown/exit log message for the bookie services (rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528304 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a61fed8538543c9b037e680042d3e10a705ccdce ------
TIME:10/02/2013 06:23:33

COMMIT:BOOKKEEPER-683: TestSubAfterCloseSub fails on 4.2 (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1526841 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d9d149d6afbdbb6bba348d8d46325628c9fffa75 ------
TIME:09/27/2013 11:37:07

COMMIT:BOOKKEEPER-683: TestSubAfterCloseSub fails on 4.2 (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1526839 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 211c92d85c84abce1dceb8d5811bfdae5328acac ------
TIME:09/27/2013 11:20:49

COMMIT:BOOKKEEPER-684. ZK logging is oververbose, can cause oom in tests (ivank via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1524846 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7fb99c80b0fa11c9d09c182891fd9fc91b41b464 ------
TIME:09/19/2013 23:16:55

COMMIT:BookKeeper 4.2.2 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.2@1521668 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aa112454a27967a219595bfcf523103df6f0ffde ------
TIME:09/11/2013 00:41:13

COMMIT:BOOKKEEPER-675: Log noise fixup before cutting 4.2.2 (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1521667 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 68d3938f83ff50a377bdf2e7bde951b27a2f5802 ------
TIME:09/11/2013 00:34:06

COMMIT:Updating version numbers for 4.2.2 release

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521660 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aa112454a27967a219595bfcf523103df6f0ffde ------
TIME:09/10/2013 23:36:46

COMMIT:BOOKKEEPER-627: LedgerDirsMonitor is missing thread name (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521657 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 451c471b4e9954a7c54d8bf0dd021758acba8962 ------
TIME:09/10/2013 23:35:00

COMMIT:BOOKKEEPER-675: Log noise fixup before cutting 4.2.2 (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521624 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 582114bfe161b06be85a80504b7bc48a6be554ed ------
TIME:09/10/2013 22:13:14

COMMIT:BOOKKEEPER-446: BookKeeper.createLedger(..) should not mask the error with ZKException (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1521474 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 767838f3a63010b61a246903d44ab2a5c7b95cdd ------
TIME:09/10/2013 15:14:40

COMMIT:BOOKKEEPER-446: BookKeeper.createLedger(..) should not mask the error with ZKException (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521471 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 781ea762c2596c8302b6c95e7a7a7c3f201f69e4 ------
TIME:09/10/2013 15:13:52

COMMIT:BOOKKEEPER-669: Race condition in ledger deletion and eviction from cache (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521170 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 41a79a5c43b5213b79b6137f082116c7d3f720f6 ------
TIME:09/09/2013 18:00:56

COMMIT:BOOKKEEPER-679: Bookie should exit with non-zero if NIOServer crashes with Error (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521028 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fdca928cf2621ac7bbf0be070a6b044b08d0a950 ------
TIME:09/09/2013 12:29:09

COMMIT:BOOKKEEPER-664: Compaction increases latency on journal writes (ivank & sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521021 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 68d234fc39d1e7e9cc05962c3bf623591d31a4f3 ------
TIME:09/09/2013 11:54:28

COMMIT:BOOKKEEPER-580: improve close logic (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1516938 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cc567d06c2381404e7aa8d8645ad66fe5b0db3d3 ------
TIME:08/23/2013 19:20:13

COMMIT:BOOKKEEPER-580: improve close logic (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516929 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 366186621270df810631d6dae621afd211646e9e ------
TIME:08/23/2013 18:48:37

COMMIT:BOOKKEEPER-649: Race condition in sync ZKUtils.createFullPathOptimistic() (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1516482 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cf5af84a61d4bb28d026650c53ddab97bee9fd8c ------
TIME:08/22/2013 17:15:09

COMMIT:BOOKKEEPER-649: Race condition in sync ZKUtils.createFullPathOptimistic() (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516465 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 10d6358499dbbd11b7a55f7fdc8187b14628138c ------
TIME:08/22/2013 16:40:10

COMMIT:BOOKKEEPER-632: AutoRecovery should consider read only bookies (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1516162 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0cabae669cfd7a6713886349423e53f3ffeaf310 ------
TIME:08/21/2013 15:54:44

COMMIT:BOOKKEEPER-632: AutoRecovery should consider read only bookies (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1516139 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 560d294720e17e27908b65b6c4fb3b43274e881e ------
TIME:08/21/2013 13:19:21

COMMIT:BOOKKEEPER-660: Logs too noisy on NIOServerFactory when client drops a connection (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1515791 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 230b25c425233063aca2828a49d0b45672231b88 ------
TIME:08/20/2013 14:07:23

COMMIT:BOOKKEEPER-624: Reduce logs generated by ReplicationWorker (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1515774 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9b357a921d6cfbaeac490259af80fde9edce0000 ------
TIME:08/20/2013 13:02:59

COMMIT:BOOKKEEPER-624: Reduce logs generated by ReplicationWorker (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1515773 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 15e0cd7817f8a111ec48641deb0ae4a7f521199d ------
TIME:08/20/2013 13:02:43

COMMIT:BOOKKEEPER-668: Race between PerChannelBookieClient#channelDisconnected() and disconnect() calls can make clients hang while add/reading entries in case of multiple bookie failures (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1515769 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3d3c9546d399234aaaa92abd6bab59f8c20efc64 ------
TIME:08/20/2013 12:51:50

COMMIT:BOOKKEEPER-668: Race between PerChannelBookieClient#channelDisconnected() and disconnect() calls can make clients hang while add/reading entries in case of multiple bookie failures (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1515768 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f680042189cc9e2b04098c640da63b29b6f86dd9 ------
TIME:08/20/2013 12:50:35

COMMIT:BOOKKEEPER-667: Client write will fail with BadMetadataVersion in case of multiple Bookie failures with AutoRecovery enabled (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1513467 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 632c7a35166c68fab0f03db997d1a1fff5692930 ------
TIME:08/13/2013 15:01:59

COMMIT:BOOKKEEPER-667: Client write will fail with BadMetadataVersion in case of multiple Bookie failures with AutoRecovery enabled (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1513459 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fa865c5567f6c52d7ef685c7ff2ebcc705bf56cf ------
TIME:08/13/2013 14:32:37

COMMIT:BOOKKEEPER-604: Ledger storage can log an exception if GC happens concurrently. (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1513206 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cc27d69c54cad8db3281077b056e0902c15e8cf1 ------
TIME:08/12/2013 19:26:27

COMMIT:BOOKKEEPER-604: Ledger storage can log an exception if GC happens concurrently. (sijie & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1513198 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7c983a2b4a504685ce434be4e348f65c5b5a6f2b ------
TIME:08/12/2013 19:01:05

COMMIT:BOOKKEEPER-663: HierarchicalLedgerManager iterator is missing some ranges and the last ledger in the range (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1508005 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 883a3a629f41a801f15533bb70a7f14d06c4ea24 ------
TIME:07/29/2013 14:22:48

COMMIT:BOOKKEEPER-663: HierarchicalLedgerManager iterator is missing some ranges and the last ledger in the range (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1507997 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 821c7d41d5b45bdb665e8cc08665776be4179e03 ------
TIME:07/29/2013 12:30:32

COMMIT:BOOKKEEPER-642: Bookie returns incorrect exitcode, ExitCode.ZK_REG_FAIL is getting overridden (Rakesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1506584 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1a16790ed044497d351111f099dc2fef418221e4 ------
TIME:07/24/2013 16:56:01

COMMIT:BOOKKEEPER-642: Bookie returns incorrect exitcode, ExitCode.ZK_REG_FAIL is getting overridden (Rakesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1506582 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7a805d6376b6995a806c22dfa7ee862e0d6a8c8b ------
TIME:07/24/2013 16:55:31

COMMIT:BOOKKEEPER-653: Timeout option is missing in few testcases (Rakesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1506569 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aa1bfc59e2834112ab372f6baa359c077078233b ------
TIME:07/24/2013 16:14:38

COMMIT:BOOKKEEPER-625: On OutOfMemoryError in NIOServerFactory thread bookie should shutdown (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1506513 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ea38298b64fbf36540bf8cdbed0b7cf420b9b7d9 ------
TIME:07/24/2013 14:16:10

COMMIT:BOOKKEEPER-607: Filtered Messages Require ACK from Client Causes User Being Throttled Incorrectly Forever (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505735 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 197ba5e8e59d3d88b4c77665201536341c0ff73c ------
TIME:07/22/2013 19:18:01

COMMIT:BOOKKEEPER-607: Filtered Messages Require ACK from Client Causes User Being Throttled Incorrectly Forever (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505726 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 15e9b2f72abe87489654354a7b3ee64e16112735 ------
TIME:07/22/2013 18:03:38

COMMIT:BOOKKEEPER-652: Logger class name is wrong in LedgerCacheImpl.java (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505188 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ca37d15463c006ebddcd047afc16a6d1f70b69ae ------
TIME:07/20/2013 20:31:19

COMMIT:BOOKKEEPER-652: Logger class name is wrong in LedgerCacheImpl.java (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505185 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0683da9f672c940a018fe430d5b25f5eaff53dd0 ------
TIME:07/20/2013 20:30:04

COMMIT:BOOKKEEPER-646: BookieShell readjournal command is throwing BufferUnderflowException (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505183 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ce4bb6494106c1100fe9b627c80569358004e389 ------
TIME:07/20/2013 20:27:37

COMMIT:BOOKKEEPER-646: BookieShell readjournal command is throwing BufferUnderflowException (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505181 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8c63e4f90bd08e04752fc9c6b633b56636325888 ------
TIME:07/20/2013 20:24:54

COMMIT:BOOKKEEPER-635: jenkins build should highlight which lines of the patch cause raw analysis errors (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505180 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e89500e406d9bb5580fb70a858fa5d6e79c09cfe ------
TIME:07/20/2013 20:18:55

COMMIT:BOOKKEEPER-635: jenkins build should highlight which lines of the patch cause raw analysis errors (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505179 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 76928dea111afd057810db4906ef95b268e33f31 ------
TIME:07/20/2013 20:16:37

COMMIT:BOOKKEEPER-621: NPE in FileInfo.moveToNewLocation (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505176 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1f79676c8299d06facd4e87f10a1ae383fd68ed7 ------
TIME:07/20/2013 20:13:09

COMMIT:BOOKKEEPER-610: Make SyncThread use an executor (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505175 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5380345e4065d4650eb4856a47f355f82a9554b1 ------
TIME:07/20/2013 20:06:30

COMMIT:BOOKKEEPER-563: Avoid Journal polluting page cache (Robin Dhamankar via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1505174 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 25e8185a75491308ea636679f60b88448f1c2987 ------
TIME:07/20/2013 19:59:39

COMMIT:BOOKKEEPER-600: shouldClaim flag isn't cleared for hedwig multiplex java client (sijie via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1503077 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3dc3e5543a87583194d4991c22a91cd555a9510e ------
TIME:07/15/2013 01:02:59

COMMIT:BOOKKEEPER-600: shouldClaim flag isn't cleared for hedwig multiplex java client (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1503075 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 203dfd257a6f5c953f398e0a1dba1c673e9fe55a ------
TIME:07/15/2013 00:55:35

COMMIT:BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1502806 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 627763e1c94d17e774c012a7e931461e10fb7295 ------
TIME:07/13/2013 17:52:29

COMMIT:BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1502803 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 356561c904ba64a767d779398fa9e20ce4f41fff ------
TIME:07/13/2013 17:23:25

COMMIT:BOOKKEEPER-618: Better resolution of bookie address (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1502728 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 01353e887819826e624fa8da894f40eba205ec35 ------
TIME:07/13/2013 02:02:24

COMMIT:BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1499776 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 37223b561246d4dc8ea41137af2109a032f45db6 ------
TIME:07/04/2013 16:50:30

COMMIT:BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499731 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e79ff2eb54f0e4bee6f86cdf3f7d904b871c2ad9 ------
TIME:07/04/2013 14:01:37

COMMIT:BOOKKEEPER-641: DeathWatcher thread is unnecessarily running even after bookie shutdown (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499445 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b11dd61231791fe65d0bbd88bd7657ac04407a09 ------
TIME:07/03/2013 17:39:01

COMMIT:BOOKKEEPER-257: Ability to list all ledgers (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1499429 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 45ae2f6e1ab261b03442d768647bbbcb8a7a3285 ------
TIME:07/03/2013 16:52:46

COMMIT:BOOKKEEPER-637: NoSuchEntry exception when reading an entry from a bookie should not print ERROR level message (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1499037 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 13b69c4376fcdf8fba03dbf5c0114bf1ef841e5a ------
TIME:07/02/2013 19:47:06

COMMIT:BOOKKEEPER-637: NoSuchEntry exception when reading an entry from a bookie should not print ERROR level message (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1499032 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 09ff75fd0e69613d56e5fb6b70eb5c63fbf2467e ------
TIME:07/02/2013 19:41:39

COMMIT:BOOKKEEPER-620: PerChannelBookieClient race during channel disconnect (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1497824 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fbf148576163ce98b39c0047b7ebf221754730db ------
TIME:06/28/2013 17:59:22

COMMIT:BOOKKEEPER-620: PerChannelBookieClient race during channel disconnect (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1497814 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f2c37c797923056f70b47848546c7ebf18fbd184 ------
TIME:06/28/2013 17:27:08

COMMIT:BOOKKEEPER-623: LedgerChecker should avoid segments of closed ledger with higher start entryId than closed entry. (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1496708 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 320b4df9e93663321e880e88de5f657f46736256 ------
TIME:06/26/2013 03:45:58

COMMIT:BOOKKEEPER-633: ConcurrentModificationException in RackawareEnsemblePlacementPolicy when a bookie is removed from available list (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1496706 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4c0782473dae9508d9737ce86db8b61d5079614d ------
TIME:06/26/2013 03:35:18

COMMIT:BOOKKEEPER-623: LedgerChecker should avoid segments of closed ledger with higher start entryId than closed entry. (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1496705 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 086c6c3ce462566657f9e10a94ead731c50cc569 ------
TIME:06/26/2013 03:27:04

COMMIT:BOOKKEEPER-584: Data loss when ledger metadata is overwritten (sijie via ivank) [missing files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495517 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ed052621ebe0f6e8ec2bdc05625676423c165289 ------
TIME:06/21/2013 19:42:57

COMMIT:BOOKKEEPER-595: Crash of inprocess autorecovery daemon should not take down the bookie (ivank) [missing files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495516 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4e06c1176aa323dd5158fc28faff7fdc6f5c7402 ------
TIME:06/21/2013 19:42:14

COMMIT:BOOKKEEPER-313: Bookkeeper shutdown call from Bookie thread is not shutting down server (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495514 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 900158f5d3866dd76af0b5af40ae35185fc09d03 ------
TIME:06/21/2013 19:34:09

COMMIT:BOOKKEEPER-313: Bookkeeper shutdown call from Bookie thread is not shutting down server (vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1495513 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree be3055f2a9cc4969c0e94ec5479d6adf00eec492 ------
TIME:06/21/2013 19:26:37

COMMIT:BOOKKEEPER-619: Bookie should not create local cookie files if zookeeper is uninitialized (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495510 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ed4f680277b9621546974e32077a6f5c89e6c7be ------
TIME:06/21/2013 18:55:01

COMMIT:BOOKKEEPER-619: Bookie should not create local cookie files if zookeeper is uninitialized (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1495508 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cfdf97e58fa188d30c11c6830a8f08fcb3618087 ------
TIME:06/21/2013 18:51:00

COMMIT:BOOKKEEPER-618: Better resolution of bookie address (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493400 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b5fcc31ee0fd2641043e244371bbb90feffb6339 ------
TIME:06/15/2013 19:05:45

COMMIT:BOOKKEEPER-627: LedgerDirsMonitor is missing thread name (rakesh via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493377 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f0726198430f5b7e79ec145712ea6b92d5834f7b ------
TIME:06/15/2013 17:08:18

COMMIT:BOOKKEEPER-626: BOOKIE_EXTRA_OPTS are added twice (vinay via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1493375 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 16dd5fe3e462a9ec6e9e6fbd0657e1897bdde560 ------
TIME:06/15/2013 16:56:57

COMMIT:BOOKKEEPER-626: BOOKIE_EXTRA_OPTS are added twice (vinay via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1493373 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c1c22f93e3e5febc41436a94e4d9d7d9ed83af0b ------
TIME:06/15/2013 16:53:44

COMMIT:BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1492321 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 435253f1616be4892af5372eb35c893b4e450158 ------
TIME:06/12/2013 20:19:15

COMMIT:BOOKKEEPER-592: allow application to recommend ledger data locality (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1492274 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8669f4bd48d495972be15c430a9f2df6479fe9ac ------
TIME:06/12/2013 18:41:47

COMMIT:BOOKKEEPER-577: BookieFailureTest uses sync/wait()/notify() incorrectly (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1491372 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ba4142b9b050da738a62b270c490d3d0101c2b7b ------
TIME:06/10/2013 10:29:33

COMMIT:BOOKKEEPER-584: Data loss when ledger metadata is overwritten (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490797 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a4cddfe0b7826621b472e02986432e0e5004e47c ------
TIME:06/07/2013 21:42:49

COMMIT:BOOKKEEPER-603: Support Boost 1.53 for Hedwig Cpp Client (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490727 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 97c6286aab9a777f252c55c1450b9acbaaf5ba6c ------
TIME:06/07/2013 19:00:27

COMMIT:BOOKKEEPER-598: Fails to compile - RESUBSCRIBE_EXCEPTION conflict (Matthew Farrellee via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490725 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 52ba16ac503dba1bd0936c7ac78daac5177ce5ac ------
TIME:06/07/2013 18:56:31

COMMIT:BOOKKEEPER-596: Ledgers are gc'ed by mistake in MSLedgerManagerFactory. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490718 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree df074c69017f065f762cd8c009a7841307b02a7b ------
TIME:06/07/2013 18:46:10

COMMIT:BOOKKEEPER-595: Crash of inprocess autorecovery daemon should not take down the bookie (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490605 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fcf49ec2216ce74bc43f49349e49cac72b9fc469 ------
TIME:06/07/2013 14:13:38

COMMIT:BOOKKEEPER-581: Ledger recovery doesn't work correctly when recovery adds force changing ensembles. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490578 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a01abe4a95c960562ecd11cdb10e5c778cce648c ------
TIME:06/07/2013 12:44:24

COMMIT:BOOKKEEPER-585: Auditor logs noisily when a ledger has been deleted (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490557 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 87f2b3e3d5c8c934b8b99aaa8fbf907318ad91ea ------
TIME:06/07/2013 11:46:15

COMMIT:BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490548 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8fdf9bb4ba84beadbb9b050a2a678f84b5134eb4 ------
TIME:06/07/2013 10:55:50

COMMIT:BOOKKEEPER-559: Fix occasional failure in AuditorBookieTest (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490544 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 86072a45301c9a6535ce49c2064fe44f5b66b102 ------
TIME:06/07/2013 10:48:55

COMMIT:BOOKKEEPER-556: BookieServerMXBean#getServerState makes no sense (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490376 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1becc34d9ed57bab49b913ba6a76f536ffbbaecc ------
TIME:06/06/2013 19:42:42

COMMIT:Update version numbers to 4.2.2-SNAPSHOT

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1490368 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2c40fc058b13480d52ed51026fe4849a92dd0b0a ------
TIME:06/06/2013 19:28:49

COMMIT:BOOKKEEPER-617: BOOKKEEPER-544 breaks hedwig-server/bin/hedwig script (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1489775 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d748cf5ea5f789e912a32240bb1e2e550dc4ef5b ------
TIME:06/05/2013 11:49:01

COMMIT:BOOKKEEPER-603: Support Boost 1.53 for Hedwig Cpp Client (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1488954 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 780b14672954fd2762e0c05cafdeb7f5178dba74 ------
TIME:06/03/2013 13:03:30

COMMIT:BOOKKEEPER-611: Speed up bookkeeper tests (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1488138 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a0e8e61e70c6490381760787dcbca2111e4827f7 ------
TIME:05/31/2013 12:02:59

COMMIT:BOOKKEEPER-257: Ability to list all ledgers (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480978 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 23f5d69d8cf6ba71501036b5ef3c5de3295d3270 ------
TIME:05/10/2013 12:45:58

COMMIT:BOOKKEEPER-608: Make SyncThread a reusable component (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480580 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 458851943da6950179fec0204eb72ea588e365c8 ------
TIME:05/09/2013 11:41:35

COMMIT:BOOKkEEPER-577: BookieFailureTest uses sync/wait()/notify() incorrectly (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1480051 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d9f6220a22bfd227bee0b7e53a9401ea83284a9c ------
TIME:05/07/2013 21:49:19

COMMIT:BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1479649 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 06ff7c097a7eb69d4412a040758036c62ab5d5b6 ------
TIME:05/06/2013 19:32:45

COMMIT:BOOKKEEPER-564: Better checkpoint mechanism (sijie & ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1479085 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dba5fecdf9563f22ec400d2761aff7ec27f6cb01 ------
TIME:05/04/2013 14:22:10

COMMIT:BOOKKEEPER-584: Data loss when ledger metadata is overwritten (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1476283 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dc772396ef45aebe17d1624a66f4c65e7de285c2 ------
TIME:04/26/2013 18:38:02

COMMIT:BOOKKEEPER-598: Fails to compile - RESUBSCRIBE_EXCEPTION conflict (Matthew Farrellee via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1465438 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4208ba73769586eb8d70b60a55b2a7f43def54bf ------
TIME:04/07/2013 20:11:21

COMMIT:BOOKKEEPER-599: NPE in PerChannelBookieClient (jiannan via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1465437 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6db6919e4cd35c3ad62cbe61cc36d34e7afe31eb ------
TIME:04/07/2013 20:07:06

COMMIT:BOOKKEEPER-596: Ledgers are gc'ed by mistake in MSLedgerManagerFactory. (sijie & ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1464385 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 268f594f124ad00f1f62fb3162cfa8d5b40ff1ed ------
TIME:04/04/2013 11:21:26

COMMIT:BOOKKEEPER-595: Crash of inprocess autorecovery daemon should not take down the bookie (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1463599 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 159dbf08540ccfb8778bb922c8869c0ceff700d4 ------
TIME:04/02/2013 17:38:49

COMMIT:BOOKKEEPER-597: Add flag to output test logs to stdout (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1463555 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4019f0314fe91cab7376334e390ae5bc42051508 ------
TIME:04/02/2013 16:14:45

COMMIT:BOOKKEEPER-581: Ledger recovery doesn't work correctly when recovery adds force changing ensembles. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460765 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 89cdb320a68c06718625de98def4850ca57f8af6 ------
TIME:03/25/2013 18:02:41

COMMIT:BOOKKEEPER-506: Provide better topic release algorithm (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460751 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f746dafa6f186e8eb21170ca031fd1f8e6fb527d ------
TIME:03/25/2013 17:26:48

COMMIT:BOOKKEEPER-586: Remove recursive call in delivery manager (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460709 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 286d0011d6c961268271e52380c733e2f8c265ce ------
TIME:03/25/2013 16:10:21

COMMIT:BOOKKEEPER-583: Read from a ReadOnlyBookie fails if index fileinfo is not in ledger cache (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1460527 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 59492e486c017ce200fc97bc9b871ab9892c5e27 ------
TIME:03/25/2013 07:05:53

COMMIT:BOOKKEEPER-583: Read from a ReadOnlyBookie fails if index fileinfo is not in ledger cache (vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460524 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree effa3e92e565b3460aa3987b8a3c1ea805f3ba1c ------
TIME:03/25/2013 06:48:01

COMMIT:BOOKKEEPER-557: Compiler error showing up badly with jdk 7 (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1460523 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dccd0e497b52719d0aa5743174c4d4f3a151b312 ------
TIME:03/25/2013 06:27:23

COMMIT:BOOKKEEPER-573: Script to start a bookkeeper cluster (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457598 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8aa28eb5a709cf1d3d7a361d415bcaff73aaa529 ------
TIME:03/18/2013 00:40:07

COMMIT: BOOKKEEPER-585: Auditor logs noisily when a ledger has been deleted (ivank via sijie) 

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457596 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d0c1c374282495eddb9ee53af66c9719316e5df4 ------
TIME:03/18/2013 00:33:57

COMMIT:BOOKKEEPER-576: Bookie client should use netty Decoder/Encoder (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1457592 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7b2b5b24272412c8f67e6ae6d9243b5517e4a888 ------
TIME:03/18/2013 00:31:20

COMMIT:BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1454625 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f2e85f47f10d0ca242a9ab1bfb838747c386f223 ------
TIME:03/09/2013 00:42:44

COMMIT:BOOKKEEPER-559: Fix occasional failure in AuditorBookieTest. Contributed by Ivan Kelly.



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1452915 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 32298c55acbb52ed73ae728951af29c91ffac025 ------
TIME:03/05/2013 18:45:58

COMMIT:BOOKKEEPER-574: Extend the bookkeeper shell to get a list of available bookies. Contributed by Ivan Kelly



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1450005 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cd73882558c1e37996c34173b74e93ee8843440c ------
TIME:02/26/2013 04:12:24

COMMIT:BookKeeper 4.2.1 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.1@1447864 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 651216690c663ed743b5130c992a579c61652e6f ------
TIME:02/19/2013 19:41:29

COMMIT:Prep for 4.2.1 Release; Update version in pom.xml, CHANGES.txt

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1447857 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 651216690c663ed743b5130c992a579c61652e6f ------
TIME:02/19/2013 19:21:15

COMMIT:BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1447774 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e3f6f9a8e98df32be7c0642be7237c7a808e2f07 ------
TIME:02/19/2013 16:54:17

COMMIT:BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447772 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 57a72800548639dc41a1b225c48c0c2baaf4762f ------
TIME:02/19/2013 16:52:35

COMMIT:BOOKKEEPER-549: Documentation missed for readOnlyMode support (ivank) [Update CHANGES.txt]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1447761 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a248bc9e4de4ed100ebfea46374f094ae4a8b766 ------
TIME:02/19/2013 16:20:56

COMMIT:BOOKKEEPER-549: Documentation missed for readOnlyMode support (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1447760 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 59d5ad74f3fd389af97b18dd807b65c7504441f2 ------
TIME:02/19/2013 16:19:48

COMMIT:BOOKKEEPER-549: Documentation missed for readOnlyMode support (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447759 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9d868052e5c8766e983d42bea91b60f8dfa9f180 ------
TIME:02/19/2013 16:19:22

COMMIT:BOOKKEEPER-548: Document about periodic ledger checker configuration (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1447757 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4a500ea255227bcfd497d27e1dd20b5099d31254 ------
TIME:02/19/2013 16:16:56

COMMIT:BOOKKEEPER-548: Document about periodic ledger checker configuration (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1447756 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3ce3940cef1a613c462ba8734b15317ff62d46b3 ------
TIME:02/19/2013 16:15:47

COMMIT:BOOKKEEPER-569: Critical performance bug in InterleavedLedgerStorage (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1446902 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fe54a5e19f8fc5507d726c3368776efd6b8c4acf ------
TIME:02/16/2013 16:02:32

COMMIT:BOOKKEEPER-569: Critical performance bug in InterleavedLedgerStorage (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1446900 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8ffc3b9797267b21004532fd659e933f05f441d9 ------
TIME:02/16/2013 15:56:43

COMMIT:BOOKKEEPER-568: NPE during GC with HierarchicalLedgerManager (Matteo via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1446445 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d353ca747250a086f16e99215f1c45b26687ebe8 ------
TIME:02/15/2013 05:34:24

COMMIT:BOOKKEEPER-568: NPE during GC with HierarchicalLedgerManager (Matteo via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1446444 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6e6c8d9803f9c64e3a99d4f4de7ceb07526d64ed ------
TIME:02/15/2013 05:31:08

COMMIT:BOOKKEEPER-554: fd leaking when move ledger index file (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1445763 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree db59c2466673e2c1593887fbd28965ac41ff6932 ------
TIME:02/13/2013 18:37:18

COMMIT:Bumping version to 4.2.1-SNAPSHOT in branch-4.2

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1445755 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6f8f1bba2c48d202753d7f7ea88506f70792887e ------
TIME:02/13/2013 18:13:50

COMMIT:BOOKKEEPER-555: Make BookieServer use Netty rather than a custom IO server (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1445085 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2d067c3782fe429defb831b3060d86104e081bdd ------
TIME:02/12/2013 11:16:44

COMMIT:BOOKKEEPER-554: fd leaking when move ledger index file (sijie, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1445033 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 61751de438afd9d9c7fbb476e2959745450c41c4 ------
TIME:02/12/2013 06:00:18

COMMIT:BOOKKEEPER-556: BookieServerMXBean#getServerState makes no sense (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1444340 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5e5af0c627e633535f2cf20a0e596644714d10f0 ------
TIME:02/09/2013 08:59:47

COMMIT:BOOKKEEPER-561 Findbugs report errors with openjdk. Contributed by Ivan Kelly.



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1444174 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b613411e60727f962c5e628e354811ac1b44f8c8 ------
TIME:02/08/2013 19:08:49

COMMIT:BOOKKEEPER-526: multiple threads for delivery manager (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1443017 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9815e4056235eb0a7894d60902a8822ea66f6d6b ------
TIME:02/06/2013 16:28:24

COMMIT:BOOKKEEPER-312: Implementation of JMS provider (mridul via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1441108 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 94a9d345c735e8f1583c80cd617eff4ca3a42240 ------
TIME:01/31/2013 19:32:57

COMMIT:BOOKKEEPER-544: Modify hedwig server tests to allow client testcases to start/stop them as part of their tests (mridul via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1438120 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0d20bb39bd66b4ee7125b184b3344a94b1731215 ------
TIME:01/24/2013 19:35:47

COMMIT:BookKeeper 4.2.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.0@1433000 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree baa133d2e734c49293e22835f6a93bd1b8b405f4 ------
TIME:01/14/2013 18:29:50

COMMIT:Fixup for CHANGES.txt (some issues were missing or wrongly placed, also removed tabs)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1432980 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree baa133d2e734c49293e22835f6a93bd1b8b405f4 ------
TIME:01/14/2013 17:30:42

COMMIT:Fixup for CHANGES.txt (some issues were missing or wrongly placed, also removed tabs)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432977 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8edbf14619373af0fde2ed44d78240e84398739e ------
TIME:01/14/2013 17:29:28

COMMIT:BOOKKEEPER-472: Provide an option to start Autorecovery along with Bookie Servers (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1432966 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c20da01dafe5aad92558bdcc39bb0e04e275f48d ------
TIME:01/14/2013 17:02:47

COMMIT:BOOKKEEPER-472: Provide an option to start Autorecovery along with Bookie Servers (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432964 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 15ffe9bc0bda28ac0489ca89b85ecf44e910e5dc ------
TIME:01/14/2013 16:59:07

COMMIT:Updating version in pom.xml for 4.2.0 release

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1432922 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 976f398fdbc1418d582f832dd2473b1f8ed29090 ------
TIME:01/14/2013 14:53:50

COMMIT:Updating version in CHANGES.txt & pom.xml after branching for 4.2.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432921 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree befb3995e59f3332fb9e0d9e97ca74a34cc505b9 ------
TIME:01/14/2013 14:52:21

COMMIT:Branching for 4.2 releases

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1432918 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 60604a0da14db36e218fee4997f3d724d25366c2 ------
TIME:01/14/2013 14:49:20

COMMIT:Updating version in CHANGES.txt before branching for 4.2.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432916 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 60604a0da14db36e218fee4997f3d724d25366c2 ------
TIME:01/14/2013 14:48:28

COMMIT:BOOKKEEPER-513: TestMessageFilter fails periodically (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432902 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5fe48e63acea48298dee3da4b223b6396a60d4c4 ------
TIME:01/14/2013 13:45:49

COMMIT:BOOKKEEPER-503: The test case of TestThrottlingDelivery#testServerSideThrottle failed sometimes (jiannan & sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1432485 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0ae8700d7a938c51e67e490dd84dac9b2bbbd86d ------
TIME:01/12/2013 18:55:26

COMMIT:BOOKKEEPER-539: ClientNotSubscribedException & doesn't receive enough messages in TestThrottlingDelivery#testServerSideThrottle (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431869 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cd9c52ccc4c59b920dcae1394e9b7dd115cf33d5 ------
TIME:01/11/2013 05:16:41

COMMIT:BOOKKEEPER-538: Race condition in BookKeeper#close (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431536 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 07a4a2b1800333def202a1206992fb634a7ddceb ------
TIME:01/10/2013 19:13:58

COMMIT:BOOKKEEPER-530: data might be lost during compaction. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431378 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ce3f78e450b3a027a7ab0f7d0e24c46a562e04a2 ------
TIME:01/10/2013 15:19:56

COMMIT:BOOKKEEPER-540: #stopServingSubscriber when channel is disconnected. (Fangmin via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431235 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 480ac60c628c45afebaf043f7b1dd2971a2b88ef ------
TIME:01/10/2013 10:42:19

COMMIT:BOOKKEEPER-543: Read zk host list in a wrong way in hedwig server (Fangmin via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1431232 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0fa16374eea9b29cc9679e0b884edad953ad8879 ------
TIME:01/10/2013 10:39:25

COMMIT:BOOKKEEPER-542: Remove trailing spaces in IndexCorruptionTest (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430972 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 307ab3ccd21c9c89a0140fcd731f87261d9073ea ------
TIME:01/09/2013 18:48:51

COMMIT:BOOKKEEPER-529: stopServingSubscriber in delivery manager should remove stub callbacks in ReadAheadCache (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430954 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1040ff5f5f12fc235a99bf2880030f947078e6b1 ------
TIME:01/09/2013 17:47:36

COMMIT:BOOKKEEPER-533: TestSubAfterCloseSub fails strangely in tests (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430933 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1da49fc64f486b1af873a64b668dad7c38388b1d ------
TIME:01/09/2013 17:18:07

COMMIT:BOOKKEEPER-541: Add guava to notice file (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430898 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 70c5f3590c9c59fdf5799660d030cba6c890bade ------
TIME:01/09/2013 16:34:38

COMMIT:BOOKKEEPER-531: Cache thread should wait until old entries are collected (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430795 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7d399d4fc5b19ce93007edabdd4f82ae15aa2aed ------
TIME:01/09/2013 12:29:39

COMMIT:BOOKKEEPER-532: AbstractSubscriptionManager#AcquireOp read subscriptions every time even it already owned the topic. (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430091 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1cdd224aae3dceaf9e8c6f1b74ce5b413c4bf8df ------
TIME:01/08/2013 00:44:33

COMMIT:BOOKKEEPER-534: Flakeyness in AuditorBookieTest (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430041 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5a1b332c77adbbbd4a771929c1985a085edc8008 ------
TIME:01/07/2013 22:53:54

COMMIT:BOOKKEEPER-355: Ledger recovery will mark ledger as closed with -1, in case of slow bookie is added to ensemble during recovery add (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1429756 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0ebce665e8dee4441d9e07046b31b9662eeb3243 ------
TIME:01/07/2013 12:25:06

COMMIT:BOOKKEEPER-524: Bookie journal filesystem gets full after SyncThread is terminated with exception (Matteo, fpj via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1429650 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 612384edb115a0f02feeb202e8e5ea6a569a4001 ------
TIME:01/07/2013 03:48:26

COMMIT:BOOKKEEPER-293: Periodic checking of ledger replication status (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428777 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7a64e2e08fa871715352c27e8cff1bbbe5588825 ------
TIME:01/04/2013 11:32:49

COMMIT:BOOKKEEPER-507: Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client). (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428277 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e7bac60c3650a159b53fe9cd196e0ec07915e1d9 ------
TIME:01/03/2013 12:07:56

COMMIT:BOOKKEEPER-409: Integration Test - Perform bookie rereplication cycle by Auditor-RW processes (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428258 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2414eef4fd9a97a9c2508a4c5ec9c572b609f2b4 ------
TIME:01/03/2013 11:06:24

COMMIT:BOOKKEEPER-55: SubscribeReconnectRetryTask might retry subscription endlessly when another subscription is already successfully created previously (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1428059 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ebfe0f4b97d785334a31460479ef667c3513f1e1 ------
TIME:01/02/2013 22:24:33

COMMIT:BOOKKEEPER-523: Every test should have a timeout (ivank, sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426772 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 46f5cd6e18bf3e901c815746df3467c608cf82f8 ------
TIME:12/29/2012 16:31:46

COMMIT:BOOKKEEPER-514: TestDeadLock hanging sometimes (ivank, sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426461 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7837e9f85e7a67aec1c66bc681432d229b26b600 ------
TIME:12/28/2012 12:32:15

COMMIT:BOOKKEEPER-520: BookieFailureTest hangs on precommit build (sijie via fpj, jira reopened)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1426349 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 01d80c547aae127b5f9dcf74654f4462f3460e35 ------
TIME:12/27/2012 23:16:40

COMMIT:BOOKKEEPER-447: Bookie can fail to recover if index pages flushed before ledger flush acknowledged (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425588 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b4a630d417c960590296a5e9286e8e472a0dbd6e ------
TIME:12/24/2012 06:23:12

COMMIT:BOOKKEEPER-522: TestHedwigHub is failing silently on Jenkins (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425586 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f18db9a7935983eba26fc5407090b37d3b0bef87 ------
TIME:12/24/2012 06:05:49

COMMIT:BOOKKEEPER-463: Refactor garbage collection code for ease to plugin different GC algorithm. (Fangmin, ivank, fpj via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425585 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bbfbdced00c1898c7bdbd4a7bf87d3d15bb18f1d ------
TIME:12/24/2012 05:50:02

COMMIT:BOOKKEEPER-520: BookieFailureTest hangs on precommit build (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1424335 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7132c650a73f586cee9b6195739246b153aa4437 ------
TIME:12/20/2012 06:48:56

COMMIT:BOOKKEEPER-500: Fencing doesn't work when restarting bookies. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423419 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3ec5a619b9e7997e43d8ddc18999ae8a9b4ff733 ------
TIME:12/18/2012 13:04:51

COMMIT:BOOKKEEPER-496: Ensure that the auditor and replication worker will shutdown if they lose their ZK session (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423409 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e865bb161b39183058a19e9e6716fc86436526a9 ------
TIME:12/18/2012 12:00:49

COMMIT:BOOKKEEPER-509: TestBookKeeperPersistenceManager failed on latest trunk (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423405 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 086eb1787480cf02e09007b678efaff48727971a ------
TIME:12/18/2012 11:55:34

COMMIT:BOOKKEEPER-342: add documentation for hedwig metadata manager interface. (sijie, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423281 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 93f31ad7a9e8f72464f9629d4eb5c76ca77f5b42 ------
TIME:12/18/2012 06:52:21

COMMIT:BOOKKEEPER-490: add documentation for MetaStore interface (sijie, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1423278 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 55741a88b48b8fc2f28b3dcf8852c0ed0a1255a1 ------
TIME:12/18/2012 06:48:26

COMMIT:BOOKKEEPER-375: Document about Auto replication service in BK (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422952 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7c8906609850184b38bbb4819e773baeeec24b5e ------
TIME:12/17/2012 15:42:23

COMMIT:BOOKKEEPER-512: BookieZkExpireTest fails periodically (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422174 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 77f7232a4cde19a3936db351efb159ac614c6f63 ------
TIME:12/15/2012 03:08:32

COMMIT:BOOKKEEPER-511: BookieShell is very noisy (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422173 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a49bbe440c123419a913f6a74a13ec328a2e5cc4 ------
TIME:12/15/2012 02:45:06

COMMIT:BOOKKEEPER-428: Expose command options in bookie scripts to disable/enable auto recovery temporarily (rakesh, ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422056 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 451620377ba56bcf3263f2746cae729299d37d04 ------
TIME:12/14/2012 20:29:17

COMMIT:BOOKKEEPER-428: Expose command options in bookie scripts to disable/enable auto recovery temporarily (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1422054 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7d710f0c25eeb728740c75166b7d22739629c521 ------
TIME:12/14/2012 20:26:51

COMMIT:BOOKKEEPER-504: Fix findbugs warning in PendingReadOp (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421875 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b48112fcdfa284aa1200169bf4396f8b51b74351 ------
TIME:12/14/2012 15:14:53

COMMIT:BOOKKEEPER-426: Make auditor Vote znode store a protobuf containing the host that voted (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421781 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 35d802cef01c73201b88b67efbbd2a6b11002bb6 ------
TIME:12/14/2012 11:18:04

COMMIT:BOOKKEEPER-408: BookieReadWriteTest will enter the endless loop and will not leave out (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421401 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb5bffcee92cd44f5fe63710485cb0bc5d000bad ------
TIME:12/13/2012 18:34:03

COMMIT:BOOKKEEPER-341: add documentation for bookkeeper ledger manager interface. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421388 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a629b611d3d4dc144349eb96aa9a19838d83d71b ------
TIME:12/13/2012 18:12:42

COMMIT:BOOKKEEPER-262: Implement a meta store based hedwig metadata manager. (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421384 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8f89a82d2e7175ef3f30e0292bdca5112153e1f7 ------
TIME:12/13/2012 18:05:57

COMMIT:BOOKKEEPER-483: precommit tests only check toplevel rat file, not the one for submodules. (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421346 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 592663eacbe0aa7cdf749791a46c3329f79ac661 ------
TIME:12/13/2012 16:44:19

COMMIT:BOOKKEEPER-336: bookie readEntries is taking more time if the ensemble has failed bookie(s) (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421242 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 97c5c6ee11870b9dc00a6d5cf64c1556f6eb418b ------
TIME:12/13/2012 13:07:52

COMMIT:BOOKKEEPER-458:  Annoy BKReadException error when changing ledger. (jiannan via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421239 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5b05e5b655752dac0d4b4908c204e7b625a5948c ------
TIME:12/13/2012 12:51:05

COMMIT:BOOKKEEPER-365: Ledger will never recover if one of the quorum bookie is down forever and others dont have entry (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421235 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f077dfa20f89257cf601590e4132c3eb08fd53b2 ------
TIME:12/13/2012 12:33:11

COMMIT:BOOKKEEPER-404: Deprecate non-SubscriptionOptions Subscriber Apis (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1421083 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8741e6a1308e4322ce17c80612b574e9909c1474 ------
TIME:12/13/2012 07:26:32

COMMIT:BOOKKEEPER-493: moveLedgerIndexFile might have chance pickup same directory (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420854 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 63ea09b8f9edf8850847c25ed8882a2b74bf353e ------
TIME:12/12/2012 18:26:59

COMMIT:BOOKKEEPER-205: implement a MetaStore based ledger manager for bookkeeper client. (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420607 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c92156ce5b9ef531f98e1f2dbcc4a6ca8655bc46 ------
TIME:12/12/2012 11:20:38

COMMIT:BOOKKEEPER-497: GcLedgersTest has a potential race (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420532 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 279657aab9cd2185260c2afb10a86f7099c9f93a ------
TIME:12/12/2012 06:54:23

COMMIT:BOOKKEEPER-495: Revise BK config doc (fpj, ivank via fpj)
(a few extra edits to bookieCOnfigParams.textile)
 


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420318 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5170007640ce1c15485e2d55c236525e5e359e7c ------
TIME:12/11/2012 19:16:38

COMMIT:BOOKKEEPER-495: Revise BK config doc (fpj, ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420308 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 56e15ced9922e83fbeeae3040dcae53f0f4c5d2c ------
TIME:12/11/2012 18:59:21

COMMIT:BOOKKEEPER-491: Hedwig doc for configuration (fpj, sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420069 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7ba1b2964f21a9b8d79fbac28b8050b8669925ba ------
TIME:12/11/2012 11:15:19

COMMIT:BOOKKEEPER-498: BookieRecoveryTest.tearDown NPE (fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419496 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ce602f77e4029f3cec54e64bf9ac7fad5fc0526f ------
TIME:12/10/2012 16:02:42

COMMIT:BOOKKEEPER-465: CreateNewLog may overwrite lastLogId with smaller value (yixue, fpj via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419311 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 50eb0de4931e1eee1186b7e7747433643097d8ce ------
TIME:12/10/2012 11:04:18

COMMIT:BOOKKEEPER-469: Remove System.out.println from TestLedgerManager (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1419306 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 46b38590fd97899ba00d193dc6d6f3422dc52c33 ------
TIME:12/10/2012 10:58:19

COMMIT:BOOKKEEPER-474:  BookieReadWriteTest#testShutdown doesn't make sense (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418685 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 131153c296470e0007abc5ab72200baaba73f2d5 ------
TIME:12/08/2012 16:14:52

COMMIT:BOOKKEEPER-431: Duplicate definition of COOKIES_NODE (uma via fpj). 
Additional commit to fix the DEFAULT_ZK_LEDGERS_ROOT_PATH constant.



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418638 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f246ce4a8fe1af456cb53d06fd689f74280e47ea ------
TIME:12/08/2012 11:42:51

COMMIT:BOOKKEEPER-431: Duplicate definition of COOKIES_NODE (uma via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418637 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dbd24e1ca30b5a5d925b9490c9030d8d540ba23d ------
TIME:12/08/2012 11:18:30

COMMIT:BOOKKEEPER-453: Extract commonality from MultiplexSubscribeResponseHandler and SimpleSubscribeResponseHandler and put into an abstract class  (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1418280 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 46c911485787f0de932e5c90bdc5274aa58bb1aa ------
TIME:12/07/2012 12:21:52

COMMIT:BOOKKEEPER-475: BookieRecoveryTest#testSyncBookieRecoveryToRandomBookiesCheckForDupes() iterates too much (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417190 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7812bc5fe8860774a2d0d56392aaf54b2fd3e75c ------
TIME:12/04/2012 22:15:47

COMMIT:BOOKKEEPER-461: Delivery throughput degrades when there are lots of publishers w/ high traffic. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417066 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 08a4d586263414f2caa722c01b0b13f7f63ffb6d ------
TIME:12/04/2012 18:54:23

COMMIT:BOOKKEEPER-470: Possible infinite loop in simple.SubscribeReconnectCallback (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1417046 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3f46061d5f1b9319841ae7676bcab9f9f5e0b55a ------
TIME:12/04/2012 18:27:35

COMMIT:BOOKKEEPER-399: Let hub server configure write quorum from ack quorum. (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416677 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 345cddd8b99c9fdb4ebff87ebe056520ce631549 ------
TIME:12/03/2012 22:38:08

COMMIT:BOOKKEEPER-484: Misc fixes for test scripts (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416655 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d01edf399185c75779a9907341217379b3761065 ------
TIME:12/03/2012 21:31:51

COMMIT:BOOKKEEPER-347: Provide mechanism to detect r-o bookie by the bookie clients (Vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416590 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d36581ecdcc72309aebc26af1c02a8046d3f39c6 ------
TIME:12/03/2012 17:59:04

COMMIT:BOOKKEEPER-442: Failed to deliver messages due to inconsistency between SubscriptionState and LedgerRanges. (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416560 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 618480046e8ddc862c889030b0e8c91ed39e763c ------
TIME:12/03/2012 16:27:32

COMMIT:BOOKKEEPER-459: Rename metastore mock implementation to InMemory implementation (jiannan via ivank) [remove directory]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416526 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6ede40eeea557675f0290918084fe4c13a6baa95 ------
TIME:12/03/2012 15:04:38

COMMIT:BOOKKEEPER-459: Rename metastore mock implementation to InMemory implementation (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416519 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6ede40eeea557675f0290918084fe4c13a6baa95 ------
TIME:12/03/2012 14:54:19

COMMIT:[REVERT] BOOKKEEPER-336 bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place
Accidently committed this change, before approval. Reverting (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416408 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4e4697d62ce1a8a9dab1db303abbed647bce5e29 ------
TIME:12/03/2012 10:55:01

COMMIT:BOOKKEEPER-291: BKMBeanRegistry uses log4j directly (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416400 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4dc26a137f72f32a35d7d67c01866b2df1ce1201 ------
TIME:12/03/2012 10:49:57

COMMIT:BOOKKEEPER-336 bookie readEntries is taking more time if the ensemble has failed bookie(s) Basic speculative functionality  in place

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416393 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 134612c86c6a915fd347bd7d1402a96d91b8e13c ------
TIME:12/03/2012 10:46:05

COMMIT:BOOKKEEPER-351: asyncAddEntry should not throw an exception (Matteo Merli via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416352 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a4c778f13a5a07cf204eb47b860ac7b77a45e6a0 ------
TIME:12/03/2012 06:23:40

COMMIT:BOOKKEEPER-485: TestFencing hung (ivank via fpj)

--THIS line, and those below, will be ignored--

M    CHANGES.txt
A    bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java
M    bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416000 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d92dcb7e14497f159d5d5ee44cfc78d8f0b932fe ------
TIME:12/01/2012 15:04:29

COMMIT:BOOKKEEPER-482: Precommit is reporting findbugs errors in trunk (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415920 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 11dabd4b64a880a63d512fa6460c644a20f4fb75 ------
TIME:12/01/2012 06:32:49

COMMIT:BOOKKEEPER-389: add documentation for message filter. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415691 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4ba680e500b32fde9eb13f0fac727a42af196b51 ------
TIME:11/30/2012 16:28:43

COMMIT:BOOKKEEPER-480: Fix javac warnings (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415492 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ffe85db208c62a9fd7ec5cfe2f4266e900f27ed7 ------
TIME:11/30/2012 04:56:02

COMMIT:BOOKKEEPER-481: Fix javadoc warnings (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415491 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree beeccf83a2158c977bcac0e5442a714e97df45bb ------
TIME:11/30/2012 04:54:14

COMMIT:BOOKKEEPER-487: Add existed hub server settings to configuration template file (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415269 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bfc89a3308c7ec6b82ad46094b2906817a70c00f ------
TIME:11/29/2012 17:54:59

COMMIT:BOOKKEEPER-457: Create a format command for Hedwig to cleanup its metadata. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415176 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 926769d920879d6014302e11bdd4dcb55682a529 ------
TIME:11/29/2012 15:18:59

COMMIT:BOOKKEEPER-476: Log to file during tests (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414382 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 145e602c71b0e391eceef25c976c8b877e095d85 ------
TIME:11/27/2012 21:33:10

COMMIT:BOOKKEEPER-477: In ReadOnlyBookieTest, we should wait for the bookie to die before asserting on it (ivank via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414233 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 94d7dd57a96a458939a53f24feb66babe5de3757 ------
TIME:11/27/2012 16:52:45

COMMIT:BOOKKEEPER-479: Fix apache-rat issues in tree (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414207 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree db48614d58898f3e6829e5bd52d2071eaa8c97ea ------
TIME:11/27/2012 15:36:23

COMMIT:BOOKKEEPER-471: Add scripts for preCommit testing (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1414044 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fed261039baf5240034d1879a86b6693d7e8d8c0 ------
TIME:11/27/2012 10:50:56

COMMIT:BOOKKEEPER-440: Make Write/Delete SubscriptionData Restricted to Version (Fangmin Lv via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413745 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a031dcdf92840bd13137ad7c5bebc195bf3ff8ee ------
TIME:11/26/2012 18:47:54

COMMIT:BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank) [missing file]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413700 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8ac61f24027af1b239f55492333cc27637c75a66 ------
TIME:11/26/2012 17:13:44

COMMIT:BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413685 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4be4c979a07fef35bfc11de3def814ce95f96700 ------
TIME:11/26/2012 16:42:55

COMMIT:BOOKKEEPER-467: Allocate ports for testing dynamically (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412818 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1f1b349ba934f9efa75c9e5f91f631af57f220cd ------
TIME:11/23/2012 11:49:51

COMMIT:BOOKKEEPER-454: hedwig c++ tester script assumes sh is bash (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412629 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 20615e61eef0d76c377d10b0776391a60ec3c24a ------
TIME:11/22/2012 18:36:20

COMMIT:BOOKKEEPER-466: ZooKeeper test utility sets the port number as the tickTime (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412061 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fefe91dd3cf0b461d47e6196268f1a12358f7525 ------
TIME:11/21/2012 12:24:30

COMMIT:BOOKKEEPER-468: Remove <echo> from protobuf generation in hedwig (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1412025 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ecd83af9c31d1ef1babf0447f6980161dbf3f19 ------
TIME:11/21/2012 10:31:43

COMMIT:BOOKKEEPER-204: Provide a MetaStore interface, and a mock implementation. (Jiannan Wang via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1407520 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6c4c7d1c14970660eb28163187c43d60242634f1 ------
TIME:11/09/2012 17:13:10

COMMIT:BOOKKEEPER-444: Refactor pending read op to make speculative reads possible (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1406707 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4bad86e7fe3db76379fd1598c2b8e84e1bd8a64b ------
TIME:11/07/2012 17:27:20

COMMIT:BOOKKEEPER-452: Rename ClientConfiguration multiplexing_enabled to subscription_connection_sharing_enabled (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1406541 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1fdffdd7d4000ebdc49e9481d290c6de4d0604ee ------
TIME:11/07/2012 11:57:45

COMMIT:BOOKKEEPER-370: implement multiplexing cpp client. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1405159 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ec7b1a9b8982a33779bdf9842126fa409b36da9a ------
TIME:11/02/2012 21:47:32

COMMIT:BOOKKEEPER-368 Implementing multiplexing java client. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1405028 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3d5154ddbd6de68250913dba7c44e6ce7a3be449 ------
TIME:11/02/2012 17:14:59

COMMIT:BOOKKEEPER-434: [Hedwig CPP Client] Delay resolving default host until necessary. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1404255 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a8ccb02660ec5fcce93b1e1dc30017d942961a0f ------
TIME:10/31/2012 18:16:07

COMMIT:BOOKKEEPER-430: Remove manual bookie registration from overview (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1404083 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 678225598396920bab6b5bd91cb60132e5883a4b ------
TIME:10/31/2012 11:40:46

COMMIT:BOOKKEEPER-425: Cleanup Bookie id generation (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402526 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d091bfe78e7bd20c61c663dc42daa73f282571bd ------
TIME:10/26/2012 16:25:47

COMMIT:BOOKKEEPER-439: No more messages delivered after deleted consumed ledgers. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402501 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1bdf646fb790e4310343144479764da4ec90eb9f ------
TIME:10/26/2012 15:13:09

COMMIT:BOOKKEEPER-346: Detect IOExceptions in LedgerCache and bookie should look at next ledger dir(if any) (Vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402464 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 819b2eaf17cf2092ca7ab35e3b66fa0471ab6dcf ------
TIME:10/26/2012 12:51:44

COMMIT:BOOKKEEPER-441: InMemorySubscriptionManager should back up top2sub2seq before change it (Yixue via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402459 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bb5924f4d3e6aa5245b34ad5d02131e0679e9864 ------
TIME:10/26/2012 11:55:51

COMMIT:BOOKKEEPER-416: LedgerChecker returns underreplicated fragments for an closed ledger with no entries (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402172 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7922179979a772cc84bddcafe277f642191fd51d ------
TIME:10/25/2012 16:50:05

COMMIT:BOOKKEEPER-424: Bookie start is failing intermittently when zkclient connection delays (rakeshr via ivank) [missing files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402159 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bdbdd11dbcf007a65d8a335d441c19415bd4fad8 ------
TIME:10/25/2012 16:18:39

COMMIT:BOOKKEEPER-424: Bookie start is failing intermittently when zkclient connection delays (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1402146 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 71ad2d3a293de7933134b6a0e4a172b0e21bc334 ------
TIME:10/25/2012 15:35:28

COMMIT:BOOKKEEPER-427: TestConcurrentTopicAcquisition hangs every so often (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1401286 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 74a73a9d7f3c61aeaad0b5dea51ecbb6ed997424 ------
TIME:10/23/2012 15:22:43

COMMIT:BOOKKEEPER-411: Add CloseSubscription Request for multiplexing support (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1400836 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0324dd3e9941f249fbb131821403b2787bf120ed ------
TIME:10/22/2012 13:04:47

COMMIT:BOOKKEEPER-435: Create SubscriptionChannelManager to manage all subscription channel (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1400827 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b1ef6b7531fff6037d0047449543dc23d4b8f30d ------
TIME:10/22/2012 12:10:38

COMMIT:BOOKKEEPER-345: Detect IOExceptions on entrylogger and bookie should consider next ledger dir(if any) (Vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399680 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 05cb149cc5a08328ac9f9fa259012d5cbd56c8fe ------
TIME:10/18/2012 16:40:30

COMMIT:BOOKKEEPER-369: re-factor hedwig cpp client to provide better interface to support both one-subscription-per-channel and multiple-subscriptions-per-channel. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399578 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b6f8e7a452ea1bdd1088f3c3f6722e3fd8e48740 ------
TIME:10/18/2012 12:59:34

COMMIT:BOOKKEEPER-422: Simplify AbstractSubscriptionManager (stu via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1399159 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 96336ff9480da55dd6f4be7f34348db522e7aae1 ------
TIME:10/17/2012 11:19:49

COMMIT:BOOKKEEPER-436: Journal#rollLog may leak file handler (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1398995 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6edaa7ac420242d083d311ae821babc505b1695a ------
TIME:10/16/2012 23:20:26

COMMIT:BOOKKEEPER-417: Hierarchical zk underreplication manager should clean up its hierarchy when done to allow for fast acquisition of underreplicated entries (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1398834 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0a6c014dffadcd33907ee035a586751311bd846c ------
TIME:10/16/2012 17:01:08

COMMIT:BOOKKEEPER-418: Store hostname of locker in replication lock (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396536 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 38c0e900d3bc51ea4f8c030c4bc57b081be7643f ------
TIME:10/10/2012 12:29:03

COMMIT:BOOKKEEPER-413: Hedwig C++ client: Rename RUN_AS_SSL_MODE to SSL_ENABLED (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396531 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d63ba198a32d9da9768a601e7bc1a9f9290f61c9 ------
TIME:10/10/2012 12:09:18

COMMIT:BOOKKEEPER-415: Rename DeliveryThrottle to MessageWindowSize (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396524 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1b25bb826f9b44dc90f0cbba23d480e49a2cda51 ------
TIME:10/10/2012 11:45:29

COMMIT:BOOKKEEPER-315: Ledger entries should be replicated sequentially instead of parallel. (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394542 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 63df30f445fcd49b34343d4eb51512b99704a167 ------
TIME:10/05/2012 16:24:42

COMMIT:BOOKKEEPER-319: Manage auditing and replication processes (Vinay via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394145 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a5c171f708b96ee07ebbd07adf97e54fc0aa70d8 ------
TIME:10/04/2012 18:31:09

COMMIT:BOOKKEEPER-367: Server-Side Message Delivery Flow Control (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1394066 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8820f8f6c53fdcd57f187314058d202d2b9e3ea3 ------
TIME:10/04/2012 15:30:31

COMMIT:BOOKKEEPER-278: Ability to disable auto recovery temporarily (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1393983 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 53028b4e8936e438b1c6573759928b71886bacbe ------
TIME:10/04/2012 12:40:29

COMMIT:BOOKKEEPER-143: Add SSL support for hedwig cpp client (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1392319 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dee55a8fa8a6ea5a49a15c65487be760c67eece5 ------
TIME:10/01/2012 15:36:31

COMMIT:BOOKKEEPER-364: re-factor hedwig java client to support both one-subscription-per-channel and multiplex-subscriptions-per-channel. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1390777 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0c402096885886729d6136c3e32da92def36bca3 ------
TIME:09/27/2012 01:52:18

COMMIT:BOOKKEEPER-397: Make the hedwig client in RegionManager configurable. (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1390401 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7b348d79b9a82af02ca69bab24ff4acc1e4fa747 ------
TIME:09/26/2012 13:04:08

COMMIT:BOOKKEEPER-388: Document bookie format command (kiran_bc via ivank) [Corrected CHANGES.txt]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1388558 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f02204342fb9eb9b02ca2c3916cd6f88431528e7 ------
TIME:09/21/2012 17:47:07

COMMIT:BOOKKEEPER-388: Document bookie format command (vinayrpet via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1388557 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 32bd2513efe727ea5d2230e1e8eb1c334b5a760d ------
TIME:09/21/2012 17:45:41

COMMIT:BOOKKEEPER-405: Let's add Thread name for ReplicationWorker thread. (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1387525 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e6e13e265fab74e1338333304f2ad7e291bd2c91 ------
TIME:09/19/2012 13:03:27

COMMIT:BOOKKEEPER-252: Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384836 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 06107c92c60873caf9fb179421ca37e2272e1262 ------
TIME:09/14/2012 18:16:17

COMMIT:BOOKKEEPER-32: Clean up LOG.debug statements (Stu Hood via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384782 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2d822e090dd5fcf8a310d3cca57c46a0c1abb4a7 ------
TIME:09/14/2012 15:42:11

COMMIT:BOOKKEEPER-403: ReReadMetadataCb is not executed in the thread responsible for that ledger (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384700 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0869e23c83976a1c79fa993415a8aa3d06c4fbaf ------
TIME:09/14/2012 11:53:13

COMMIT: BOOKKEEPER-392: Racey ConcurrentMap usage in java hedwig-client (Stu Hood via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384336 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cddfb7a9d333aac4bd06753cd9cc3a7842516b6b ------
TIME:09/13/2012 15:52:24

COMMIT:BOOKKEEPER-325: Delay the replication of a ledger if RW found that its last fragment is in underReplication. (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1384080 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9361df08800945b4c9e0ef8c7b9c339103cf467e ------
TIME:09/12/2012 20:34:11

COMMIT:BOOKKEEPER-208: Separate write quorum from ack quorum (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1383872 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d9e10280816286493d14ff84f5a4efa9ef0b1adc ------
TIME:09/12/2012 11:59:50

COMMIT:BOOKKEEPER-396: Compilation issue in TestClient.java of BenchMark ( showing this in eclipse) (umamahesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1383299 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree de541462553f23fb290d8b5171b69eb237045be3 ------
TIME:09/11/2012 11:02:55

COMMIT:BOOKKEEPER-396: Compilation issue in TestClient.java of BenchMark ( showing this in eclipse) (umamahesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1383286 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2a97166fc4cca802266c707f79d1e16cedb65338 ------
TIME:09/11/2012 10:30:57

COMMIT:BOOKKEEPER-383: NPE in BookieJournalTest  (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1382016 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0eb217b1dd89aebc98c823d955ae3fdb69afbf67 ------
TIME:09/07/2012 15:22:18

COMMIT:BOOKKEEPER-354: [BOOKKEEPER-296] [Documentation] Modify the bookkeeper start script and document the bookkeeper stop command in bookkeeperConfig.xml (Kiran BC via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1381891 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 573a2a9a0c39f9ff26a4e6ef78811def898d55ba ------
TIME:09/07/2012 07:57:52

COMMIT:BOOKKEEPER-329: provide stop scripts for hub server (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1381890 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cd5b56ac500be33ef62487a851406cf30ecc472e ------
TIME:09/07/2012 07:53:54

COMMIT:BOOKKEEPER-372: Check service name in bookie start/stop script. (nijel via sjie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1381888 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d91154745051a3490f1b1879aa56d126a77579c1 ------
TIME:09/07/2012 07:50:49

COMMIT:BOOKKEEPER-296: It's better provide stop script for bookie (nijel via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1381886 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e07f85ffed769fdf8d2a6366e1b345d7d4549444 ------
TIME:09/07/2012 07:48:42

COMMIT:BOOKKEEPER-387: BookKeeper Upgrade is not working. (surendra via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1381882 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3b74796c057dfab8083ed4bdb73bb1d356fb55bc ------
TIME:09/07/2012 07:30:27

COMMIT:BOOKKEEPER-387: BookKeeper Upgrade is not working. (surendra via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381879 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree efb3ed239dc047ec36d0e38612479d2c569cbd01 ------
TIME:09/07/2012 07:26:40

COMMIT:BOOKKEEPER-395: HDFS dep transitively depends on a busted pom (Stu Hood via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381874 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5474d3c78e72c7ca49b08d75c872de1804f8116b ------
TIME:09/07/2012 07:12:48

COMMIT:BOOKKEEPER-300: Create Bookie format command (Vinay via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381870 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 247d71acb4f794d90590293c9898adb16843f447 ------
TIME:09/07/2012 07:04:33

COMMIT:BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381848 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2453eb773d65d661e31e5e22abcb918b85d7b74d ------
TIME:09/07/2012 05:12:27

COMMIT:BOOKKEEPER-386: It should not be possible to replicate a ledger fragment which is at the end of an open ledger (ivank & umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380488 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2b53dd68bbbb372e6c68c7e090e4c15c28386044 ------
TIME:09/04/2012 10:39:15

COMMIT:BOOKKEEPER-385: replicateLedgerFragment should throw Exceptions in error conditions (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380293 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d315fcd5958a31055df7b61393a6626a41d4ef29 ------
TIME:09/03/2012 18:54:10

COMMIT:BOOKKEEPER-335: client-side message filter for cpp client. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380273 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0274ae3f9b18bc8047db93f3adbea6b167c33172 ------
TIME:09/03/2012 17:27:11

COMMIT:BOOKKEEPER-334: client-side message filter for java client. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1380268 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2e6c55dd307843ed3eb88b3fb60f6b30fa667d67 ------
TIME:09/03/2012 17:14:13

COMMIT:BOOKKEEPER-384: Clean up LedgerManagerFactory and LedgerManager usage in tests (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1379445 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a30e219df4d027c9819520a93aed8242b1e0cfc4 ------
TIME:08/31/2012 15:25:39

COMMIT:BOOKKEEPER-371: NPE in hedwig hub client causes hedwig hub to shut down. (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378112 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fdc2f1b0faa764c11e763a5a7976060cb711901c ------
TIME:08/28/2012 14:51:31

COMMIT:BOOKKEEPER-376: LedgerManagers should consider 'underreplication' node as a special Znode (Uma via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378103 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 06f5e7a11bc5ca40d37fd7334f780fa96eb9ec84 ------
TIME:08/28/2012 14:25:41

COMMIT:BOOKKEEPER-337: Add entry fails with MetadataVersionException when last ensemble has morethan one bookie failures (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1378023 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9e7e723608ca7387e6323516ec2fafdad7f8e80b ------
TIME:08/28/2012 10:51:17

COMMIT:BOOKKEEPER-333: server-side message filter (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377756 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a9d245a76623807ac38ee524147508e69c732e73 ------
TIME:08/27/2012 19:21:16

COMMIT:BOOKKEEPER-272: Provide automatic mechanism to know bookie failures (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377716 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eebe0a4df730c077e1268569c26ba800ac8ae021 ------
TIME:08/27/2012 17:43:59

COMMIT:BOOKKEEPER-304: Prepare bookie vs ledgers cache and will be used by the Auditor (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377703 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e7b5d4441ccbbb880760b97ffca9c7d10f708522 ------
TIME:08/27/2012 16:55:17

COMMIT:BOOKKEEPER-381: ReadLastConfirmedOp's Logger class name is wrong (surendra via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1377678 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 19066a294cb059a1c817fdefaf7129198abdf3f8 ------
TIME:08/27/2012 15:34:00

COMMIT:BOOKKEEPER-382: space missed at concatenations in GarbageCollectorThread logging (Brahma via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1377673 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f996c320d032dec795f55280040455e5740e3ca6 ------
TIME:08/27/2012 15:19:28

COMMIT:BOOKKEEPER-382: space missed at concatenations in GarbageCollectorThread logging (Brahma via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377671 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4d32cc086d81269ece98fc8c343c56a80ead743d ------
TIME:08/27/2012 15:15:05

COMMIT:BOOKKEEPER-381: ReadLastConfirmedOp's Logger class name is wrong (surendra via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377656 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2fc70675502107675cfd110ab56507a58fb2ed42 ------
TIME:08/27/2012 14:43:27

COMMIT:BOOKKEEPER-380: ZkLedgerUnderreplicationManager.markLedgerUnderreplicated() is adding duplicate missingReplicas while multiple bk failed for the same ledger (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377630 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5c1da6b1cde689baaa2c5d6c5eaed777f2447a88 ------
TIME:08/27/2012 12:09:22

COMMIT:BOOKKEEPER-248: Rereplicating of under replicated data (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377100 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6f17250b9b29d8e508979c61493e84a067581279 ------
TIME:08/24/2012 22:44:27

COMMIT:BOOKKEEPER-378: ReplicationWorker may not get ZK watcher notification on UnderReplication ledger lock deletion. (umamaheswararao & ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1377075 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e4b34dab2dbfa3cfb5631c2c02be2016cbaee453 ------
TIME:08/24/2012 21:51:17

COMMIT:BOOKKEEPER-354: [BOOKKEEPER-296] [Documentation] Modify the bookkeeper start script and document the bookkeeper stop command in bookkeeperConfig.xml (Kiran BC via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1375448 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fcf184b2056dec75f34fa604f64f9f77c773ff14 ------
TIME:08/21/2012 11:37:59

COMMIT:BOOKKEEPER-299: Provide LedgerFragmentReplicator which should replicate the fragments found from LedgerChecker (umamahesh via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374719 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7981f00886bd05e4b4c9e4f96622a2fe0611a1a6 ------
TIME:08/19/2012 11:39:33

COMMIT:BOOKKEEPER-372: Check service name in bookie start/stop script. (nijel via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374345 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 031294b6587e49d39ee97fc529f6fe3d648e351d ------
TIME:08/17/2012 18:25:35

COMMIT:BOOKKEEPER-332: Add SubscriptionPreferences to record all preferences for a subscription (sijie via ivank) [missing files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374327 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 61104b24a9326f788e674c5fa73f5dd5b1b3a12f ------
TIME:08/17/2012 17:41:52

COMMIT:BOOKKEEPER-332: Add SubscriptionPreferences to record all preferences for a subscription (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374321 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 64ea3e4cee54212c57acdde7dcdc8470240d4832 ------
TIME:08/17/2012 17:32:23

COMMIT:BOOKKEEPER-283: Improve Hedwig Console to use Hedwig Metadata Manager. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374265 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5940df2bc5c83a0b214bef5bef9b1e935f60f885 ------
TIME:08/17/2012 15:56:32

COMMIT:BOOKKEEPER-247: Detection of under replication (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374195 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a046d86a5783f309011b0669169d81687f8fd1f5 ------
TIME:08/17/2012 12:41:45

COMMIT:BOOKKEEPER-338: Create Version.NEW and Version.ANY static instances of Version so that were not passing around nulls (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1374189 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 183eb8215d8821140a3574d6474851807dc1433c ------
TIME:08/17/2012 11:58:38

COMMIT:BOOKKEEPER-246: Recording of underreplication of ledger entries (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1372808 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 906af0fe13ecbd5b377497b9b16a7d1939589901 ------
TIME:08/14/2012 11:40:34

COMMIT:BOOKKEEPER-326: DeadLock during ledger recovery (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1372362 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 184aed62b51453d177baba2fc8befedc7dcde35c ------
TIME:08/13/2012 13:04:02

COMMIT:BOOKKEEPER-326: DeadLock during ledger recovery (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1372343 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b88da420311f9414b2e88ae82c414c1c6e30a92a ------
TIME:08/13/2012 11:38:00

COMMIT:BOOKKEEPER-191: Hub server should change ledger to write, so consumed messages have chance to be garbage collected. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1371255 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0398779b400c531c9cbb1137a7b94a2885ce2e5d ------
TIME:08/09/2012 17:26:17

COMMIT:BOOKKEEPER-340: Test backward compatibility for hedwig between different versions. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369854 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9110017c5174b541683dfd3060656209009beead ------
TIME:08/06/2012 16:17:05

COMMIT:BOOKKEEPER-259: Create a topic manager using versioned write for leader election (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369778 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 10409eea6826cd38c801bf544ef49be5db9ca295 ------
TIME:08/06/2012 13:01:36

COMMIT:BOOKKEEPER-339: Let hedwig cpp client support returning message seq id for publish requests. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369767 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2d20bc498920bb7f72428e473e3eab022bfdc0cb ------
TIME:08/06/2012 12:10:17

COMMIT:BOOKKEEPER-343: Failed to register hedwig JMX beans in test cases (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1369115 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f38654cb8618436b8191ac3873a67a9cf0446ffb ------
TIME:08/03/2012 19:42:05

COMMIT:BOOKKEEPER-331: Let hedwig support returning message seq id for publish requests. (Mridul via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1367117 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bf209490456c8fb1a14dd6bab236b3f77ae582b1 ------
TIME:07/30/2012 17:20:55

COMMIT:BOOKKEEPER-352: Should not use static ServerStats/BKStats instance in TestServerStats/TestBKStats (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1366409 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f054406014de5418db0b835ec50198aaa32ac84d ------
TIME:07/27/2012 17:07:56

COMMIT:BOOKKEEPER-352: Should not use static ServerStats/BKStats instance in TestServerStats/TestBKStats (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1366384 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0cf6b73e13f37d1b3e63d64abeb1533d5c501258 ------
TIME:07/27/2012 15:51:22

COMMIT:BOOKKEEPER-330: System.currentTimeMillis usage in Hedwig (uma via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1365875 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 04abfb0a81a71d0ff2cc71d2d3ef09d014ebda4c ------
TIME:07/26/2012 05:46:24

COMMIT:BOOKKEEPER-330: System.currentTimeMillis usage in Hedwig (uma via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365873 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7fbfca62475b36ead89fa1a59ca997c5898c9cfe ------
TIME:07/26/2012 05:22:34

COMMIT:BOOKKEEPER-317: Exceptions for replication (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365870 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree da6fc0b6cc1952fd1a804c211e354f365396939e ------
TIME:07/26/2012 05:00:27

COMMIT:BOOKKEEPER-349: Entry logger should close all the chennels which are there in Map, instead of closing only current channel. (umamaheswararao via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1365869 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8fdffc86b4fc0f9ae4b69104026f51ea65c2a8ba ------
TIME:07/26/2012 04:32:50

COMMIT:BOOKKEEPER-327: System.currentTimeMillis usage in BookKeeper (uma via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1365171 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 437677bbd4480545f6b7a41ba2df81d9a63d4d4a ------
TIME:07/24/2012 19:02:38

COMMIT:BOOKKEEPER-327: System.currentTimeMillis usage in BookKeeper (uma via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1364808 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2d409e9d42393257beea7cf5ae24ded13785f67c ------
TIME:07/23/2012 23:39:13

COMMIT:BOOKKEEPER-2: bookkeeper does not put enough meta-data in to do recovery properly (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1362974 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 70f20720ddf11986f21ed001ba5c8e468671e7fb ------
TIME:07/18/2012 17:00:47

COMMIT:BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie) (fix wrong entry in CHANGES.txt)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1362408 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 836b6afc8d87e2d09a6c0834da8c65bf4ced1330 ------
TIME:07/17/2012 10:42:07

COMMIT:BOOKKEEPER-310: Changes in hedwig server to support JMS spec (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1361968 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cab4865ccf7c60296d041a54f32cff9dab516f82 ------
TIME:07/16/2012 12:35:19

COMMIT:BOOKKEEPER-329: provide stop scripts for hub server (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1360311 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e6203de847dbdb26231471d74a3d7166d86f3c2a ------
TIME:07/11/2012 19:24:48

COMMIT:BOOKKEEPER-250: Need a ledger manager like interface to manage metadata operations in Hedwig (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1360300 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d59560ee0ba2d11566cd72e6a3e5d33f7b0f8577 ------
TIME:07/11/2012 19:11:06

COMMIT:BOOKKEEPER-328: Bookie DeathWatcher is missing thread name (Rakesh via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1358895 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 79d272db4ab31293608d8afb976891e383ed39b6 ------
TIME:07/09/2012 04:09:51

COMMIT:BOOKKEEPER-294: Not able to start the bookkeeper before the ZK session timeout. (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1357587 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 62c1c3bbdc43ebdacef75c26ea3220b37a8c1a8a ------
TIME:07/05/2012 15:09:35

COMMIT:BOOKKEEPER-294: Not able to start the bookkeeper before the ZK session timeout. (rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357581 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 35b343de7bc3b89b509b91343ee83302333765e1 ------
TIME:07/05/2012 14:45:33

COMMIT:BOOKKEEPER-296: It's better provide stop script for bookie (nijel via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357466 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree be6e4a9a0472ea1bd9478d8f0f995cefe848da6c ------
TIME:07/05/2012 07:26:09

COMMIT:BOOKKEEPER-318: Spelling mistake in MultiCallback log message. (surendra via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357464 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 85854cbfd02320635c44faf92861321935373bd7 ------
TIME:07/05/2012 07:10:47

COMMIT:BOOKKEEPER-324: Flakeyness in LedgerCreateDeleteTest (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357277 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e7f85a571bc1c5751673e4c8046b5c6147347e0 ------
TIME:07/04/2012 16:17:30

COMMIT:BOOKKEEPER-320: Let hedwig cpp client could publish messages using Message object instead of string. (jiannan via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357264 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 87f14c924434e07b9f90bd769defa8c42f077856 ------
TIME:07/04/2012 15:44:08

COMMIT:BOOKKEEPER-280: LedgerHandle.addEntry() should return an entryId (mmerli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355467 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 41ae7dfccbfc308983f9f83879e707fc8c0a9832 ------
TIME:06/29/2012 18:43:54

COMMIT:BOOKKEEPER-322: New protobufs generates findbugs errors (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355083 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2a6b906648fc0574e8f6cbc611f4fb8cb4b744d2 ------
TIME:06/28/2012 19:32:26

COMMIT:BOOKKEEPER-302: No more messages delivered when hub server scans messages over two ledgers. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355079 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 776fe04b96d0b8eb6d16d5b3498716ccc7fd8bf1 ------
TIME:06/28/2012 19:19:46

COMMIT:BOOKKEEPER-303: LedgerMetadata should serialized using protobufs (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1354492 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a766f00dff402dff2bae0291fc7470c1a142702e ------
TIME:06/27/2012 15:35:11

COMMIT:BOOKKEEPER-307: BookieShell introduces 4 findbugs warnings (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1354326 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 069424ac7daa0be2002c070a244e5f12ca1bb77d ------
TIME:06/27/2012 07:10:46

COMMIT:BOOKKEEPER-292: Test backward compatibility automatically between versions. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351651 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ebce91f456b85095eb887de4ca2b43b861d83efc ------
TIME:06/19/2012 12:58:16

COMMIT:BOOKKEEPER-203: improve ledger manager interface to remove zookeeper dependency on metadata operations. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351646 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8990efc2fb0ad267ba43cd5cf8c9856cf132ee52 ------
TIME:06/19/2012 12:39:37

COMMIT:BOOKKEEPER-298: We run with preferIPv4Stack in the scripts but not in the tests (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1351374 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree feb275d797bf79d6c2e55b716a09f52cb5bf82e0 ------
TIME:06/18/2012 16:54:55

COMMIT:BOOKKEEPER-298: We run with preferIPv4Stack in the scripts but not in the tests (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1351371 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 085ade8d1c2bbde9cc766a8baba4760979bbfe77 ------
TIME:06/18/2012 16:50:11

COMMIT:BOOKKEEPER-289: mvn clean doesn't remove test output files (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1351366 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 088ec81b8ffe9695f367e60a430aa02f5aba645e ------
TIME:06/18/2012 16:48:02

COMMIT:Preparing 4.1 branch for 4.1.1 changes

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1351359 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eee64c6683f88c687a962f1ba6eabe32ab9247d2 ------
TIME:06/18/2012 16:23:52

COMMIT:BOOKKEEPER-183: Provide tools to read/check data files in bookie server (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349896 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 55da59ec2e47c89f9cff2d5a1fb30b95525593c2 ------
TIME:06/13/2012 16:57:54

COMMIT:BOOKKEEPER-274: Hedwig cpp client library should not link to cppunit which is just used for test. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349423 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dd5fac29d0bba88e3ee063742c30ce27f95a81f8 ------
TIME:06/12/2012 18:23:12

COMMIT:BOOKKEEPER-289: mvn clean doesn't remove test output files (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1349400 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree db51fe34f0044867e58acef51a3e18b49a630885 ------
TIME:06/12/2012 17:37:57

COMMIT:svn merge -c 1347629,1347636  https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.1.0@1347677 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e56c9cc63670f37761960dcb2007ca106f81eea ------
TIME:06/07/2012 17:24:59

COMMIT:update release date for release 4.1.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1347636 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e56c9cc63670f37761960dcb2007ca106f81eea ------
TIME:06/07/2012 16:23:42

COMMIT:update release date for release 4.1.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1347634 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 412002f0c47d30036b7381f5b16029096b3365a5 ------
TIME:06/07/2012 16:21:52

COMMIT:BOOKKEEPER-288: NOTICE files don't have the correct year (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1347629 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 24064582f27e019ff02d8e8e8c8523e8b3ba075b ------
TIME:06/07/2012 16:17:55

COMMIT:BOOKKEEPER-288: NOTICE files don't have the correct year (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1347628 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ebd5e2340fdfe87711bf8676ca4cce0a4ee9dcd ------
TIME:06/07/2012 16:15:55

COMMIT: svn merge -c 1346253,1346258,1346328,1346343,1346976 https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1 

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.1.0@1347417 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb08088361df5c92f9b5e812ec7297c5690ba390 ------
TIME:06/07/2012 08:37:46

COMMIT:BOOKKEEPER-287: NoSuchElementException in LedgerCacheImpl (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346976 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb08088361df5c92f9b5e812ec7297c5690ba390 ------
TIME:06/06/2012 18:36:25

COMMIT:BOOKKEEPER-287: NoSuchElementException in LedgerCacheImpl (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346966 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree afbb44507dc3eefc42d9710af095631641923771 ------
TIME:06/06/2012 18:13:56

COMMIT:BOOKKEEPER-286: Compilation warning (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346343 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 76a1649a6fbe35736eea096fc191f198259e1858 ------
TIME:06/05/2012 13:18:36

COMMIT:BOOKKEEPER-286: Compilation warning (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346340 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d91866421923ab004aa3be71fa9ccf0934c1557a ------
TIME:06/05/2012 13:02:43

COMMIT:BOOKKEEPER-285: TestZkSubscriptionManager quits due to NPE, so other tests are not run in hedwig server. (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346328 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3e9692541ede5c7948993725430fb2008ceed80f ------
TIME:06/05/2012 12:11:18

COMMIT:BOOKKEEPER-285: TestZkSubscriptionManager quits due to NPE, so other tests are not run in hedwig server. (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346321 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a22ecc844c37becd60b119d8f497d13b0a12efbd ------
TIME:06/05/2012 11:56:14

COMMIT:BOOKKEEPER-279: LocalBookKeeper is failing intermittently due to zkclient connection establishment delay (Rakesh R via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346258 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 160f9471725d34c5aadf4364c27ccbe87390755a ------
TIME:06/05/2012 08:56:06

COMMIT:BOOKKEEPER-279: LocalBookKeeper is failing intermittently due to zkclient connection establishment delay (Rakesh R via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346257 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ed7d564911b355ebcafdd941dbca1cdefff7b71 ------
TIME:06/05/2012 08:40:28

COMMIT:BOOKKEEPER-281: BKClient is failing when zkclient connection delays (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346253 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9eaecaf0bef2e78dc1025d6a47642f3622e8da21 ------
TIME:06/05/2012 08:21:07

COMMIT:BOOKKEEPER-281: BKClient is failing when zkclient connection delays (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1346247 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3e4252fe0431a83937e8becde2317a59eb7daff6 ------
TIME:06/05/2012 08:00:19

COMMIT:BookKeeper 4.1.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.1.0@1344567 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 06219519f19bfa775f2fc7f939a7b0adadfa44e6 ------
TIME:05/31/2012 07:28:31

COMMIT:Preparing for release 4.1.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1344566 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 06219519f19bfa775f2fc7f939a7b0adadfa44e6 ------
TIME:05/31/2012 07:27:12

COMMIT:Bump version number to 4.2.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344543 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ab9681dd8cc78ac97cd1bac904ecc55f9fee249a ------
TIME:05/31/2012 04:29:46

COMMIT:Branching for 4.1 releases

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1344540 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6d3023323d358cc50e54cc080ab79515167ceaf6 ------
TIME:05/31/2012 04:24:18

COMMIT:Preparing for release 4.1.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344538 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6d3023323d358cc50e54cc080ab79515167ceaf6 ------
TIME:05/31/2012 04:22:21

COMMIT:BOOKKEEPER-273: LedgerHandle.deleteLedger() should be idempotent (Matteo Merli via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1344301 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 74d7add41a925b008c0e372dd2006837801a94ae ------
TIME:05/30/2012 17:13:11

COMMIT:BOOKKEEPER-271: Review documentation for message bounding (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343996 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d0fb9bdf1dff1a4415b6c524c0d3e87c5f26ec86 ------
TIME:05/29/2012 23:12:38

COMMIT:BOOKKEEPER-270: Review documentation on bookie cookie (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343986 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4ed3ab242a53b61ec76a1419b90bd6d9161a4727 ------
TIME:05/29/2012 23:02:04

COMMIT:BOOKKEEPER-270: Review documentation on bookie cookie (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343981 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0f3fde715de7d127db6b3142d7e55680629eafa4 ------
TIME:05/29/2012 23:00:26

COMMIT:BOOKKEEPER-269: Review documentation for hedwig console client (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343973 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a907ac0a960a13e7495a984732074799c7972848 ------
TIME:05/29/2012 22:47:00

COMMIT:BOOKKEEPER-258: CompactionTest failed (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342933 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4608596a0ad764637060c91115ea41a85a3fefd5 ------
TIME:05/26/2012 19:16:45

COMMIT:BOOKKEEPER-260: Define constant for -1 (invalid entry id) (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342678 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a598a5582c1388ac1a962cfb29d975cc968e498a ------
TIME:05/25/2012 17:13:44

COMMIT:BOOKKEEPER-265: Review JMX documentation (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342646 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fdaaf2c08f61c8cd4b77fc07ca7ae1d7f2ecd4bb ------
TIME:05/25/2012 16:38:23

COMMIT:BOOKKEEPER-266: Review versioning documentation (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342617 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 451d33021518f846c7751aa863ff10f8c4effd33 ------
TIME:05/25/2012 15:30:38

COMMIT:BOOKKEEPER-146: TestConcurrentTopicAcquisition sometimes hangs (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342550 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dbccb44cea89f28853217fe35482b8a77e37db0b ------
TIME:05/25/2012 11:48:05

COMMIT:BOOKKEEPER-263: ZK ledgers root path is hard coded (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1342145 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 95af2580f638dae801d3aa7a936d0ac3f7814942 ------
TIME:05/24/2012 07:12:56

COMMIT:BOOKKEEPER-251: Noise error message printed when scanning entry log files those have been garbage collected. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339715 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fbb72bbb4971a095d2faeea1ad81732b3897dd3a ------
TIME:05/17/2012 19:07:44

COMMIT:BOOKKEEPER-238: Add log4j.properties in conf/ for bin packages (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339698 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 981084a43979b5f115ee5c110962faa5ffdbe0c2 ------
TIME:05/17/2012 18:38:00

COMMIT:BOOKKEEPER-72: Fix warnings issued by FindBugs (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339691 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 83113a499d4258321dc2b9ab24c584d0f80d46f3 ------
TIME:05/17/2012 18:32:05

COMMIT:BOOKKEEPER-254: Bump zookeeper version in poms (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339672 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 913d683504a8bb83f4b727888d9ff74a6250c004 ------
TIME:05/17/2012 17:56:34

COMMIT:BOOKKEEPER-224: Fix findbugs in bookkeeper-server component [missing changes] (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339607 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aa56185d3a6e4757a9bbacdc2feb109af930035d ------
TIME:05/17/2012 16:05:02

COMMIT:BOOKKEEPER-209: Typo in ServerConfiguration for READAHEAD_ENABLED (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1338630 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f31c3e4d88b3acf4a69171a62fc85b3ad4ec59e3 ------
TIME:05/15/2012 12:28:38

COMMIT:BOOKKEEPER-145: Put notice and license file for distributed binaries in SVN (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1338616 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1cb760e39938e1e02fac1c6b76f83adec84b2b5c ------
TIME:05/15/2012 12:04:56

COMMIT:BOOKKEEPER-224: Fix findbugs in bookkeeper-server component (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336645 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eeabf4c8aa5b953cf70d4d029627d228b253dd3b ------
TIME:05/10/2012 14:47:37

COMMIT:BOOKKEEPER-245: Intermittent failures in PersistanceManager tests (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336569 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 05c43918726da589d5959783faad018331118e72 ------
TIME:05/10/2012 11:57:39

COMMIT:BOOKKEEPER-236: Benchmarking improvements from latest round of benchmarking (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336100 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dd4cba52c820af66bb97474cc6439ef985ce9d96 ------
TIME:05/09/2012 13:20:54

COMMIT:BOOKKEEPER-235: Bad syncing in entrylogger degrades performance for many concurrent ledgers (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336083 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dbb07efb8f9fdb2300eff64152b8e91047d8e604 ------
TIME:05/09/2012 13:00:38

COMMIT:BOOKKEEPER-234: EntryLogger will throw NPE, if any dir does not exist or IO Errors. (umamaheswararao via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335996 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ead9c1bbbe808ec2d2c722cac79768491d7643e7 ------
TIME:05/09/2012 10:39:33

COMMIT:BOOKKEEPER-242: Bookkeeper not able to connect other zookeeper when shutdown the zookeeper server where the BK has connected. (sijie & rakeshr via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335973 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ecd48e109d24a4881a743ae2b59177755a71b975 ------
TIME:05/09/2012 10:17:34

COMMIT:BOOKKEEPER-215: Deadlock occurs under high load (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335958 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 89696a33e81e1d1a58b41949824bd8c5dae6dcf1 ------
TIME:05/09/2012 09:43:50

COMMIT:BOOKKEEPER-241: Add documentation for bookie entry log compaction (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335947 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7ce6c6803cce03086873f7534f5a8ff8cc8f7ad1 ------
TIME:05/09/2012 09:16:05

COMMIT:BOOKKEEPER-229: Deleted entry log files would be garbage collected again and again. (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335367 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e6da36b026d653c255b2eb2ee3f26912aca8e2bd ------
TIME:05/08/2012 09:35:47

COMMIT:BOOKKEEPER-232: AsyncBK tests failing (umamaheswararao via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335117 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6c2230adc65d2bd2da6b1dbca3b595cbaa8149d5 ------
TIME:05/07/2012 18:48:07

COMMIT:BOOKKEEPER-228: Fix the bugs in BK benchmark (umamaheswararao via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1334107 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3c75fe54ee0597f8cfbda31a21de13dd6002eac1 ------
TIME:05/04/2012 20:11:43

COMMIT:BOOKKEEPER-231: ZKUtil.killServer not closing the FileTxnSnapLog from ZK. (Uma Maheswara Rao G via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1331720 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 65996ded8c8f53d927f1e60629192b40d80c6d98 ------
TIME:04/28/2012 11:11:28

COMMIT:BOOKKEEPER-56: Race condition of message handler in connection recovery in Hedwig client (added AlreadyStartDeliveryException file missed in r1329883) (sijie & Gavin Li via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1331704 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 78724d36e0aef711e54bc2c6f2956278354ad178 ------
TIME:04/28/2012 10:11:14

COMMIT:BOOKKEEPER-217: NPE in hedwig client when enable DEBUG (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1329886 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dd50dcac97a5c5b6e9876849e91af2c260a99172 ------
TIME:04/24/2012 19:42:06

COMMIT:BOOKKEEPER-56: Race condition of message handler in connection recovery in Hedwig client (sijie & Gavin Li via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1329883 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1584a6bee7551f0a349e388627ef1cba1d25a174 ------
TIME:04/24/2012 19:37:54

COMMIT:BOOKKEEPER-173: Uncontrolled number of threads in bookkeeper (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1328452 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree caea203aa7cd47fb5368c63d6d58ae61c6b8dfcf ------
TIME:04/20/2012 19:18:36

COMMIT:BOOKKEEPER-168: Message bounding on subscriptions (ivank) [missing test]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1328270 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4a8b164b2c669ef41539b7b0d8b8880091ae118a ------
TIME:04/20/2012 11:19:08

COMMIT:BOOKKEEPER-213: PerChannelBookieClient calls the wrong errorOut function when encountering an exception (Aniruddha via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327761 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c52d188879844b0d39468c094ff73afbe3376778 ------
TIME:04/19/2012 03:02:01

COMMIT:BOOKKEEPER-218: Provide journal manager to manage journal related operations (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327045 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 11c27988bbab8bb6fe012065eedbc7dc6e384830 ------
TIME:04/17/2012 13:16:26

COMMIT:BOOKKEEPER-196: Define interface between bookie and ledger storage (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1327027 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b2c6b7d9002a1b3be1b337629abd2f8315e8daa5 ------
TIME:04/17/2012 12:18:55

COMMIT:BOOKKEEPER-216: Bookie doesn't exit with right exit code (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1326624 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 684a6e75baa1c4231c8bc4cd6fbce32629b59554 ------
TIME:04/16/2012 16:11:51

COMMIT:BOOKKEEPER-197: HedwigConsole uses the same file to load bookkeeper client config and hub server config (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1326464 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ae2fbcb9d29d1d74c1db7e3254744d7c977153e2 ------
TIME:04/16/2012 04:29:19

COMMIT:BOOKKEEPER-200: Fix format and comments (fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1312034 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b6f537760257b4334cf31306c4ae4a12e9bffacb ------
TIME:04/11/2012 01:05:23

COMMIT:BOOKKEEPER-211: Bookie fails to to start (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311564 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 78ef3d97664d619221735f7773ac6109a62edbdb ------
TIME:04/10/2012 05:21:55

COMMIT:BOOKKEEPER-212: Bookie stops responding when creating and deleting many ledgers (sijie via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311177 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d5d335a9b91f41e63d23c394e93a4da28cafda83 ------
TIME:04/09/2012 11:42:01

COMMIT:BOOKKEEPER-207: BenchBookie doesn't run correctly (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1309007 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5f5f468380a64c8c6d99037c43d84ae28088fd0b ------
TIME:04/03/2012 18:02:44

COMMIT:BOOKKEEPER-135: Fencing does not check the ledger masterPasswd (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1308294 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 04dcf6e583b23dc7db7dae0a998389027fa4cdfb ------
TIME:04/02/2012 12:38:18

COMMIT:BOOKKEEPER-112: Bookie Recovery on an open ledger will cause LedgerHandle#close on that ledger to fail (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307743 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ba890e7a88896051ca2206d43c03c8103f6b9760 ------
TIME:03/31/2012 10:58:51

COMMIT:BOOKKEEPER-198: replaying entries of deleted ledgers would exhaust ledger cache. (sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307732 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eff98c8549f9a2db3397f72b40e32b45c8955369 ------
TIME:03/31/2012 09:31:54

COMMIT:BOOKKEEPER-193: Ledger is garbage collected by mistake. (sijie, ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307725 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c05919c31a2d605ed4643776e4491811c4661705 ------
TIME:03/31/2012 09:13:07

COMMIT:BOOKKEEPER-166: Bookie will not recover its journal if the length prefix of an entry is truncated (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1307353 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b5c3c204070989819d9c9e5ae0cc5c15879c5f38 ------
TIME:03/30/2012 13:00:20

COMMIT:BOOKKEEPER-194: Get correct latency for addEntry operations for JMX. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306857 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7ba9d90997ffd331f8bf38471370cfd2cc907ae6 ------
TIME:03/29/2012 15:41:21

COMMIT:BOOKKEEPER-190: Add entries would fail when number of open ledgers reaches more than openFileLimit. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306839 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ac46a913712c60854893555ebeb094aac827e95d ------
TIME:03/29/2012 15:18:34

COMMIT:BOOKKEEPER-97: collect pub/sub/consume statistics on hub server (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306798 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 691c1298cc367b504c03099f2d38fe45d21d820b ------
TIME:03/29/2012 14:07:13

COMMIT:BOOKKEEPER-195: HierarchicalLedgerManager doesn't consider idgen as a "specialNode" (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1306616 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1976ec691bc2e664c1d96051cf1eebbce379e386 ------
TIME:03/28/2012 23:57:40

COMMIT:BOOKKEEPER-189: AbstractZkLedgerManager doesn't disregard cookies (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1303291 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 244e8aa0249846045e000b3c768f1a2631b3c0d8 ------
TIME:03/21/2012 06:40:55

COMMIT:BOOKKEEPER-188: Garbage collection code is in the wrong place (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1303286 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ab99eddca713678fbef4e75b5457d1f16f131193 ------
TIME:03/21/2012 06:13:23

COMMIT:BOOKKEEPER-175: Bookie code is very coupled (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302870 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 40f6b80b9f4f9d7dfe5a6f4063ae733c1394b94e ------
TIME:03/20/2012 14:09:07

COMMIT:BOOKKEEPER-187: Create well defined interface for LedgerCache (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302851 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 956bd659fab11190e5b04fe258b5bb5ff05f6154 ------
TIME:03/20/2012 12:51:03

COMMIT:BOOKKEEPER-186: Bookkeeper throttling - permits is not released when read has failed from all replicas (Rakesh R via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302458 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ceed841fad9a8f97800d8db9ebe87d32ef27e9d2 ------
TIME:03/19/2012 15:02:15

COMMIT:BOOKKEEPER-96: extends zookeeper JMX to monitor and manage hedwig server (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1302392 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f5c0a55c2ee08ed777fb66973ed902cb11f3aedb ------
TIME:03/19/2012 13:04:51

COMMIT:BOOKKEEPER-182: Entry log file is overwritten when fail to read lastLogId. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1301395 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c7ac5f039aedf3c7f5a6f0a1af36d7df3202139e ------
TIME:03/16/2012 10:41:45

COMMIT:BOOKKEEPER-184: CompactionTest failing on Jenkins (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300862 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ab0b317c5b73203ce7da15ff1a269bac84b30afe ------
TIME:03/15/2012 10:37:43

COMMIT:BOOKKEEPER-185: Remove bookkeeper-server dependency on hadoop-common (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300616 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c38647e41c831501b27f6cc7e93e44b2340bc569 ------
TIME:03/14/2012 17:11:54

COMMIT:BOOKKEEPER-168: Message bounding on subscriptions (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1300510 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 26d5da074ab3cd7150b1f5305a21c214b1167e36 ------
TIME:03/14/2012 12:29:03

COMMIT:BOOKKEEPER-163: Prevent incorrect NoSuchLedgerException for readLastConfirmed. (ivank via sijie)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1299984 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6dbc0c9a54c4e1dcf680f6457f1ad5982339748b ------
TIME:03/13/2012 07:31:36

COMMIT:Set benchmark script to executable (BOOKKEEPER-158)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298847 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9a56b4c22cd70220407236ec50e6f1854eb5d996 ------
TIME:03/09/2012 15:27:40

COMMIT:BOOKKEEPER-158: Move latest benchmarking code into trunk (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298825 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7071337c81eb3d1f33583a21a873a07b021108c1 ------
TIME:03/09/2012 14:48:20

COMMIT:BOOKKEEPER-180: bookie server doesn't quit when running out of disk space (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298492 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b0aeeaa054afbb1064b1395386d79464f9884487 ------
TIME:03/08/2012 19:24:51

COMMIT:BOOKKEEPER-160: bookie server needs to do compaction over entry log files to reclaim disk space (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1298357 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0c4e8295bf23fed6a611de9656735774832176a4 ------
TIME:03/08/2012 12:13:23

COMMIT:BOOKKEEPER-176: HierarchicalBookieFailureTest Hung (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1295604 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a7e3bf2aa8733b885973034e23c849ea5c0c886e ------
TIME:03/01/2012 15:58:08

COMMIT:BOOKKEEPER-74: Bookkeeper Persistence Manager should give up topic on error (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1295571 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree befb9ed4b93345341687e710085437d357f1dfdf ------
TIME:03/01/2012 15:10:17

COMMIT:BOOKKEEPER-113: NPE In BookKeeper test (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293383 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9e4303493549ba49fb724c494bc7f24064ef79be ------
TIME:02/24/2012 20:07:57

COMMIT:BOOKKEEPER-178: Delay ledger directory creation until the ledger index file was created (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293372 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a81b267dbd3d863b7185e09c3c7f7845b51643e7 ------
TIME:02/24/2012 19:20:56

COMMIT:BOOKKEEPER-177: Index file is lost or some index pages aren't flushed. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293369 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6a3d9916efc8f4d5f346df97493d096f206ac2c9 ------
TIME:02/24/2012 19:08:01

COMMIT:BOOKKEEPER-172: Upgrade framework for filesystem layouts (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293342 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree b8ed3e41a6d2189eda49f9b2edf7baf0d14c4c57 ------
TIME:02/24/2012 18:10:20

COMMIT:BOOKKEEPER-174: Bookie can't start when replaying entries whose ledger were deleted and garbage collected. (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1245411 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 69bfea457f46215764d306387a2c5de3dc86373d ------
TIME:02/17/2012 12:50:23

COMMIT:BOOKKEEPER-169: bookie hangs on reading header when encountering partial header index file (sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1245369 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree da458bc6e691dd6f8b5d12496c73d0d5aad2eb77 ------
TIME:02/17/2012 11:18:00

COMMIT:BOOKKEEPER-170: Bookie constructor starts a number of threads. (ivank via fpj)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1244528 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 127bd4fb912ac837d8554453eaa0d3908d7326ee ------
TIME:02/15/2012 16:11:53

COMMIT:BOOKKEEPER-171: ServerConfiguration can't use more than one directory for ledgers

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1244421 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 58c95a78c7011c0d1ca02112e66559670074bc5a ------
TIME:02/15/2012 10:58:37

COMMIT:BOOKKEEPER-152: Can't recover a ledger whose current ensemble contain failed bookie. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1243539 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e8099ca4f7243d4f58df205cc8f3ad0546f84763 ------
TIME:02/13/2012 15:46:38

COMMIT:BOOKKEEPER-162: LedgerHandle.readLastConfirmed does not work (fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1243462 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7d7b35a8f3edaf9b21b1c5b1b2cc1043664b13ab ------
TIME:02/13/2012 11:19:17

COMMIT:BOOKKEEPER-137: Do not create Ledger index files until absolutely necessary. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1242404 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3f53fe162a136968ec19a642394a9c9d423fd850 ------
TIME:02/09/2012 18:14:29

COMMIT:BOOKKEEPER-165: Add versioning support for journal files (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241922 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 496c20256ef3a2ab3aef4771bac079d703d219f7 ------
TIME:02/08/2012 15:54:29

COMMIT:BOOKKEEPER-77: Add a console client for hedwig (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241858 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0f35da1b4e5785c402908d9172cd9baaf3246559 ------
TIME:02/08/2012 11:49:10

COMMIT:BOOKKEEPER-156: BookieJournalRollingTest failing (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241855 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f212240d29be185d88e087887b929bf275cefd88 ------
TIME:02/08/2012 11:40:43

COMMIT:BOOKKEEPER-167: PerChannelBookieClient doesn't use ClientConfiguration (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241854 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 62493aef335dcaa36a55a4e9462a07a3b2c7e8e3 ------
TIME:02/08/2012 11:40:19

COMMIT:BOOKKEEPER-161: PerChannelBookieClient tries to reuse HashedWheelTimer, throws Exception (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1241404 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9f48b9c2b23bf572ca5dcce5725851153a732c43 ------
TIME:02/07/2012 11:03:17

COMMIT:BOOKKEEPER-157. For small packets, increasing number of bookies actually degrades performance. (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239167 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 76085aa440080c3de0159c916fa20f02175046ce ------
TIME:02/01/2012 16:19:57

COMMIT:Removing file accidentally added in r1239096

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239098 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6d190177dac751683e0837f95b6678304dd3916d ------
TIME:02/01/2012 13:01:49

COMMIT:BOOKKEEPER-98: collect add/read statistics on bookie server (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239096 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb13099af00a3c1145c5c438da9719087dc07266 ------
TIME:02/01/2012 12:58:17

COMMIT:BOOKKEEPER-23: Timeout requests (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1239068 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree eb0d55ddde8d5a721e80a972b23dd0628eb74726 ------
TIME:02/01/2012 12:06:32

COMMIT:BOOKKEEPER-153: Ledger can't be opened or closed due to zero-length metadata (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232890 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a6996565bccf8e92200c75e1e03630737ad7ec4c ------
TIME:01/18/2012 15:11:46

COMMIT:BOOKKEEPER-95: extends zookeeper JMX to monitor and manage bookie server (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232852 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e17276b1ecde9592bf1ac4a4209f1256fcebab7f ------
TIME:01/18/2012 13:09:48

COMMIT:BOOKKEEPER-150: Entry is lost when recovering a ledger with not enough bookies. (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232448 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8187c27471a8edbc2602f76a136e0c30fa79a5d2 ------
TIME:01/17/2012 16:52:16

COMMIT:BOOKKEEPER-40: BookieClientTest fails intermittantly (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1231187 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ae4c7445c876fb4cad1a5d352fd83632b7bcc3c7 ------
TIME:01/13/2012 18:06:41

COMMIT:BOOKKEEPER-148: Jenkins build is failing (ivank via fpj)




git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1230070 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 12742b9a0819527a0c37d7f7ac9ef343aed503d2 ------
TIME:01/11/2012 15:46:29

COMMIT:BOOKKEEPER-133: Hub server should update subscription state to zookeeper when losing topic or shutting down (Sijie Gou via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1222365 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree be4b1c194d6d82acfe62272e905cf5b3e1a05b65 ------
TIME:12/22/2011 18:35:48

COMMIT:BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1221798 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0bc707992820f86936e45d818023b629fd31b58b ------
TIME:12/21/2011 17:43:23

COMMIT:BOOKKEEPER-141: Run extracting ledger id from entry log files in GC thread to speed up bookie restart (Sijie Gou via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1215156 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e58e2c4ad7e38e2b67a7a0a9b7685490f7eb17e0 ------
TIME:12/16/2011 15:32:58

COMMIT:BOOKKEEPER-142: Parsing last log id is wrong, which may make entry log files overwritten (Sijie Gou via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1215098 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 38676d52e0abd8db81a1445f862bb0ae3a501e3b ------
TIME:12/16/2011 12:43:31

COMMIT:BookKeeper 4.0.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.0.0@1209674 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4e9f8b741674f0f4d772ea92214a73ab4bbe4e6d ------
TIME:12/02/2011 21:02:11

COMMIT:BOOKKEEPER-139: Binary packages do not carry NOTICE.txt (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209671 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ce62d86e1932970a9600465c5abe0cb61380b74 ------
TIME:12/02/2011 20:58:59

COMMIT:BOOKKEEPER-139: Binary packages do not carry NOTICE.txt (ivank) - Forgot to delete bookkeeper-server/README.txt

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209667 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4e9f8b741674f0f4d772ea92214a73ab4bbe4e6d ------
TIME:12/02/2011 20:57:10

COMMIT:BOOKKEEPER-139: Binary packages do not carry NOTICE.txt (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209666 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree af3b94b9dc80147d4d0f0a4d9661f19176f9932e ------
TIME:12/02/2011 20:55:52

COMMIT:BOOKKEEPER-138: NOTICE.txt is invalid (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209650 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 96f4b96cec08d0a2d7503e4aff89a2dd5d820009 ------
TIME:12/02/2011 20:33:43

COMMIT:BookKeeper 4.0.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.0.0@1209649 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e822dc243afd716bc38d092887936fc81d1092c ------
TIME:12/02/2011 20:32:56

COMMIT:BOOKKEEPER-138: NOTICE.txt is invalid (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209645 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1e822dc243afd716bc38d092887936fc81d1092c ------
TIME:12/02/2011 20:25:41

COMMIT:Reverting BOOKKEEPER-130: Add developer KEYS file to svn (ivank) 

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209621 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree df59c498098c8aa4311b80f31fe669bdca5eae44 ------
TIME:12/02/2011 19:22:43

COMMIT:Reverting BOOKKEEPER-130: Add developer KEYS file to svn (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209613 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 270707a7e1c7a69b87abe6130a2370c9cf4afe5b ------
TIME:12/02/2011 19:07:59

COMMIT:BookKeeper 4.0.0 release.

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.0.0@1209293 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 894e974df086123f3a98c318da127114f347dedd ------
TIME:12/01/2011 23:54:57

COMMIT:BOOKKEEPER-134: Delete superfluous lib directories (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209276 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 540305d2206f69c933ed158634efe7ae6b5b9b28 ------
TIME:12/01/2011 23:26:46

COMMIT:BOOKKEEPER-134: Delete superfluous lib directories (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209273 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 894e974df086123f3a98c318da127114f347dedd ------
TIME:12/01/2011 23:15:58

COMMIT:BOOKKEEPER-131: Fix zookeeper test dependency (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1209237 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3f357f1b537084468c7c1d4fa089b76a375ad180 ------
TIME:12/01/2011 22:08:08

COMMIT:BOOKKEEPER-131: Fix zookeeper test dependency (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1209236 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c64a6f2863f67e8335f5d88351b220e70504316a ------
TIME:12/01/2011 22:06:57

COMMIT:BOOKKEEPER-132: Sign artifacts before deploying to maven (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1208489 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 540fc5e435cf024e2553df5152fb519ce5b88f90 ------
TIME:11/30/2011 17:20:41

COMMIT:BOOKKEEPER-132: Sign artifacts before deploying to maven (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208487 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 42ca1fb4433a7c53208f9396eb02a6340f4b8e8b ------
TIME:11/30/2011 17:18:45

COMMIT:BOOKKEEPER-66: use IPv4 for builds (mmorel via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208472 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d7b0aa7171f6dc6fe795c42180147f6fa8059070 ------
TIME:11/30/2011 16:42:14

COMMIT:BOOKKEEPER-66: use IPv4 for builds (mmorel via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1208470 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5190eaa98a9608654c659c0566772b3102d27a54 ------
TIME:11/30/2011 16:38:50

COMMIT:Removing SNAPSHOT from version: 4.0.0-SNAPSHOT -> 4.0.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1208400 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cffc26402434399fea0ddc9e0892498e61705286 ------
TIME:11/30/2011 13:03:32

COMMIT:Bumping version number for trunk: 4.0.0 -> 4.1.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208399 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fb21a0df69cead3e80a8fb3c3da8f50e4087a7a7 ------
TIME:11/30/2011 13:01:55

COMMIT:Fixing CHANGES.txt for new trunk

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208398 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d3d842e9a12fb2460999991db3cf1c4f2ac05b4e ------
TIME:11/30/2011 12:59:57

COMMIT:Branching for 4.0 releases

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.0@1208397 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ceb1a66301c5faa48e81f2a4fa2886f1baac41fd ------
TIME:11/30/2011 12:53:02

COMMIT:Preparing for release 4.0.0

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208396 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ceb1a66301c5faa48e81f2a4fa2886f1baac41fd ------
TIME:11/30/2011 12:52:01

COMMIT:Cleanup of CHANGES.txt before cutting 4.0.0 branch

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208395 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f697e49209ab54289f4dc34dea45aa3b470d25a0 ------
TIME:11/30/2011 12:50:25

COMMIT:BOOKKEEPER-130: Add developer KEYS file to svn (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208382 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 31ddb16f50ab9cb8dc32842b2c83d358b7893e99 ------
TIME:11/30/2011 12:10:44

COMMIT:BOOKKEEPER-129: ZK_TIMEOUT typo in client/server configuration (Sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208372 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree dafa3266fc0ccb0ee8a111bd35276ea7136ce0c1 ------
TIME:11/30/2011 11:39:06

COMMIT:BOOKKEEPER-128: pom and script modifications required for generating release packages (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208358 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4dbd5b19f2ff3dca419a2df1a0c776d8bd08007c ------
TIME:11/30/2011 11:07:23

COMMIT:BOOKKEEPER-111: Document bookie recovery feature (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208133 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5010e91a73f42866f2f61b78481364a29cd657da ------
TIME:11/30/2011 00:19:38

COMMIT:BOOKKEEPER-122: Review BookKeeper server documentation (fpj & ivank) [Forgot to add 2 files]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208129 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 48a33e1c3eb501af18f8db4d9fbcad24c3fb8181 ------
TIME:11/30/2011 00:15:02

COMMIT:BOOKKEEPER-122: Review BookKeeper server documentation (fpj & ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208123 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ee6d31ea6c536877d86843ea312f6a840ef8c75 ------
TIME:11/29/2011 23:55:24

COMMIT:BOOKKEEPER-120: Review BookKeeper client documentation (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208111 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3f6e697abc77860728c6f470ae4801c19b0f01b8 ------
TIME:11/29/2011 23:29:42

COMMIT:BOOKKEEPER-127: Make poms use official zookeeper 3.4.0 (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208109 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 65d113370aed67392287d4a1c091d61d615b3987 ------
TIME:11/29/2011 23:26:53

COMMIT:BOOKKEEPER-121: Review Hedwig client documentation (breed via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1208050 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 487876cea5574567f3e0014d334c284d922bc165 ------
TIME:11/29/2011 21:00:18

COMMIT:BOOKKEEPER-62: Bookie can not start when encountering corrupted records (breed via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207997 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 45a73dc014e8bbe0ef3c65d1faeaf36bb6efe497 ------
TIME:11/29/2011 18:46:36

COMMIT:BOOKKEEPER-125: log4j still used in some places (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207996 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 131f8eff123ec08e4a23132f13d1fe1b7a36ff98 ------
TIME:11/29/2011 18:45:58

COMMIT:BOOKKEEPER-124: build has RAT failures (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207797 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5ba3e3fabe4df89479eda55c18e59aa1c1a2cefe ------
TIME:11/29/2011 10:05:53

COMMIT:BOOKKEEPER-53: race condition of outstandingMsgSet@SubscribeResponseHandler


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207648 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e5d72020b773d7e0543d59237dc2a61834de25e0 ------
TIME:11/28/2011 23:01:53

COMMIT:BOOKKEEPER-39: Bookie server failed to restart because of too many ledgers (more than ~50,000 ledgers) (Sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207495 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5901519c151d210cb9b85e14c90c6a04ce19966d ------
TIME:11/28/2011 19:25:18

COMMIT:BOOKKEEPER-119: Keys in configuration have inconsistent style (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207396 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree ee3e11674f089c041908b6c57603dde22f41b879 ------
TIME:11/28/2011 17:32:27

COMMIT:BOOKKEEPER-117: Support multi threads in hedwig cpp client to leverage multi-core hardware (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207289 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree d311f6606c6c1988425d0310ebe0cfc679b487bd ------
TIME:11/28/2011 16:17:48

COMMIT:BOOKKEEPER-118: Hedwig client doesn't kill and remove old subscription channel after redirection. (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207099 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2920872f290f68916d5de775c8c750e13fa8c640 ------
TIME:11/28/2011 13:15:52

COMMIT:BOOKKEEPER-79: randomly startDelivery/stopDelivery will core dump in c++ hedwig client (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1204437 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a39ab0deaaceb7a00a7d3848c05daa9d5dfb97cc ------
TIME:11/21/2011 11:32:40

COMMIT:BOOKKEEPER-114: add a shutdown hook to shut down bookie server safely. (Sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203790 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a15d39a8ede06d8438c9a02d6a292137743e7f29 ------
TIME:11/18/2011 19:58:23

COMMIT:BOOKKEEPER-115: LocalBookKeeper fails after BOOKKEEPER-108 (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203774 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 84c3c309401e856e80094a18567fa00e5a7ddf22 ------
TIME:11/18/2011 19:06:13

COMMIT:BOOKKEEPER-69: ServerRedirectLoopException when a machine (hosts bookie server & hub server) reboot, which is caused by race condition of topic manager (Sijie, ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203576 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree aec63797117c9a4e3cf887e8baf29afde42b3f18 ------
TIME:11/18/2011 11:38:46

COMMIT:BOOKKEEPER-108: add configuration support for BK (Sijie via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203568 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3857be4833cbc3c4535aae006cf1b464af97004c ------
TIME:11/18/2011 11:18:05

COMMIT:BOOKKEEPER-90: Hedwig API changes for initial Bookkeeper release (ivank via fpj)




git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203380 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 45ffa9ef0a1f28601b4afe61b922c23d017cb04e ------
TIME:11/17/2011 22:38:49

COMMIT:BOOKKEEPER-87: TestHedwigHub exhausts direct buffer memory with netty 3.2.4.Final (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203191 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 998f18c34c3392c72b18e388754c36b0418b4180 ------
TIME:11/17/2011 15:00:27

COMMIT:BOOKKEEPER-91: Bookkeeper and hedwig clients should not use log4j directly (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203138 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 0d70dd7f982582e6245b11ccbe958f8625e57478 ------
TIME:11/17/2011 11:16:32

COMMIT:BOOKKEEPER-81: disk space of garbage collected entry logger files isn't reclaimed util process quit (Sijie Guo via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203118 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4cf23688f0979cc46f3319f03d6e6ab425bceb37 ------
TIME:11/17/2011 09:59:36

COMMIT:BOOKKEEPER-109: Add documentation to describe how bookies flushes data (Sijie Guo via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1203103 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9a39de5c227cac19f2df54778ae24b65c329ce76 ------
TIME:11/17/2011 09:27:30

COMMIT:BOOKKEEPER-104: Add versioning between bookie and its filesystem layout (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202814 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree bcd957787ef149e5e4347f9db049cfae3ff43966 ------
TIME:11/16/2011 19:01:04

COMMIT:BOOKKEEPER-101 : Add Fencing to Bookkeeper (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202758 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 976230a9e589fcb66ef0f812255f368ec65c7a3a ------
TIME:11/16/2011 17:05:52

COMMIT:BOOKKEEPER-106:	recoveryBookieData can select a recovery bookie which is already in the ledgers ensemble (forgot to edit CHANGES.txt)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202372 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 7bbd830fdf13403c471835b715e34b51919a1f22 ------
TIME:11/15/2011 19:44:33

COMMIT:BOOKKEEPER-106: recoveryBookieData can select a recovery bookie which is already in the ledgers ensemble



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1202370 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8d2a7d3f09d04d1a678b8043ddb4772989e566db ------
TIME:11/15/2011 19:42:58

COMMIT:BOOKKEEPER-82: support journal rolling (Sijie Guo via fpj)




git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1200806 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4333d2dc565dd6e7941e8ea432aca3d3b981b4c1 ------
TIME:11/11/2011 11:24:19

COMMIT:BOOKKEEPER-80: subscription msg queue race condition in hedwig c++ client (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1199372 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1d669ad72d40860430659a408cadfbcf4a30245f ------
TIME:11/08/2011 19:09:49

COMMIT:BOOKKEEPER-107: memory leak in HostAddress of hedwig c++ client (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1199368 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4c07339166b093a5568d55604b7abf46e5b6e4d8 ------
TIME:11/08/2011 18:58:18

COMMIT:BOOKKEEPER-50: NullPointException at LedgerDescriptor#cmpMasterKey (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197495 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 83183f42f4973e79f8f6e5aa1394fb130a4fd2ad ------
TIME:11/04/2011 11:46:44

COMMIT:BOOKKEEPER-102: Make bookkeeper use ZK from temporary repo (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197489 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 686adf4cc82523c5791020cfb14bfbde02608432 ------
TIME:11/04/2011 11:24:34

COMMIT:BOOKKEEPER-103: ledgerId and entryId is parsed wrong when addEntry (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1197472 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4528ae4d66dedde1de286d1a2a9b80e190da020c ------
TIME:11/04/2011 11:00:29

COMMIT:BOOKKEEPER-71: hedwig c++ client does not build . (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1190306 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e331eaef98b17c2d2dfac5bae89f1e47a1c5986c ------
TIME:10/28/2011 15:36:43

COMMIT:BOOKKEEPER-100: Some hedwig tests have build errors (dferro via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189874 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree de782a046fca05c3b0f71b889571a4846b1aac1e ------
TIME:10/27/2011 19:12:51

COMMIT:BOOKKEEPER-93: bookkeeper doesn't work correctly on OpenLedgerNoRecovery (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189867 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 5e003fcc54e65e2a663bc0e8679f2b8da4729eaf ------
TIME:10/27/2011 18:53:34

COMMIT:BOOKKEEPER-89: Bookkeeper API changes for initial Bookkeeper release (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189842 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 09c24a016b25e26d5c4aa969a0cc5dcbea768cf5 ------
TIME:10/27/2011 18:26:18

COMMIT:BOOKKEEPER-83: Added versioning and flags to the bookie protocol (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189753 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 46099bf70eed7bbbd7eda700f190f7d1c7b966a9 ------
TIME:10/27/2011 15:41:19

COMMIT:BOOKKEEPER-94: Double callbacks in readLastConfirmedOp which fails readLastConfirmed operation even received enough valid responses. (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1189225 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 63baeb6b53d53539f19c11359036c80bc167eb43 ------
TIME:10/26/2011 16:06:38

COMMIT:BOOKKEEPER-92: using wrong context object in readLastConfirmedComplete callback (Sijie Guo via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1188704 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree de627b596c6083f87c8507c9b7506ba7d69584bf ------
TIME:10/25/2011 17:16:30

COMMIT:BOOKKEEPER-88: derby doesn't like - in the topic names (breed via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1188059 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f25ae505cc14d01ab93546925eb0426cfd7485b9 ------
TIME:10/24/2011 11:40:18

COMMIT:BOOKKEEPER-84: Add versioning for ZK metadata


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1187846 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2c9fdb3b5022314c06bbef50c487d7684da38bd0 ------
TIME:10/23/2011 08:11:20

COMMIT:missing CHANGE.txt entry for BOOKKEEPER-61 (commit 1180266)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1186382 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 899642064e44acf0f4221299a7911af859213407 ------
TIME:10/19/2011 20:20:01

COMMIT:BOOKKEEPER-86: bookkeeper-benchmark fails to compile after BOOKKEEPER-68


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185775 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 13608f4ef80431625eb1d7cc7ea43371ba1204e9 ------
TIME:10/18/2011 20:14:32

COMMIT:BOOKKEEPER-68: Conditional setData (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185532 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 11a0a214990a841b48a6190901d7b3228a85a20c ------
TIME:10/18/2011 10:42:46

COMMIT:BOOKKEEPER-65: fix dependencies on incompatible versions of netty (mmorel via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1185388 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6677b16775badc3ab988d804d0195aff449038cf ------
TIME:10/17/2011 23:39:26

COMMIT:  BOOKKEEPER-61: BufferedChannel read endless when the remaining bytes of file is less than the capacity of read buffer


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1180266 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cb7456c6e7e6a669e8dac021df51ed1261e6d0c9 ------
TIME:10/08/2011 00:24:21

COMMIT:BOOKKEEPER-41: Generation of packages for distribution (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1179705 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 41a4f6029f28cf7d3f68a2a0dd588712399225c3 ------
TIME:10/06/2011 18:54:11

COMMIT:BOOKKEEPER-59: Race condition in netty code allocates and orphans resources (BK-5 revisited) (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1171607 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c5d1428af4db94cf7518c7378550594f9ca7536a ------
TIME:09/16/2011 16:55:38

COMMIT:BOOKKEEPER-26: Indentation is all messed up in the BookKeeper code (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1165369 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 424cf47eae8512a2db6e85aaeee915abac29d744 ------
TIME:09/05/2011 19:38:57

COMMIT:BOOKKEEPER-63: Hedwig PubSubServer must wait for its Zookeeper client to be connected upon startup (morel via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1165231 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 6f143c0ce5fb4ed8a01d3a5f18f3137c5175a20f ------
TIME:09/05/2011 12:32:39

COMMIT:BOOKKEEPER-57: NullPointException at bookie.zk@EntryLogger (xulei via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163655 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 2e45373249706750a9d6830c89bc7ae9b8bdf91e ------
TIME:08/31/2011 16:59:46

COMMIT:BOOKKEEPER-52: Message sequence confuse due to the subscribeMsgQueue@SubscribeResponseHandler (xulei via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163161 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 24c1f3661384b1356cbe5965e84e2858a36c5b2c ------
TIME:08/30/2011 12:13:51

COMMIT:BOOKKEEPER-51: NullPointException at FIFODeliveryManager#deliveryPtrs (xulei via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163149 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 185b336a481099c007b45f8b0f83e870d2714e49 ------
TIME:08/30/2011 11:14:33

COMMIT:BOOKKEEPER-28: Create useful startup scripts for bookkeeper and hedwig (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1163137 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree f55e7dd4934f07df13225f14663137df62f7d903 ------
TIME:08/30/2011 10:34:31

COMMIT:BOOKKEEPER-18: maven build is unstable (morel, ivank via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1162913 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree e7b00acf05bc1b407637b3f1b45ce9029f60c424 ------
TIME:08/29/2011 19:34:16

COMMIT:BOOKKEEPER-58: Changes introduced in BK-38 cause BookieClientTest to hang indefinitely. (ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1162912 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 1b00c3b623d9a42345c5f6b76a313fa1d818eaa1 ------
TIME:08/29/2011 19:33:01

COMMIT:forgot to add test from BOOKKEEPER-38


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160918 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a450cfbc5d31070898f35e28b3cf5770ad6eb545 ------
TIME:08/24/2011 00:43:46

COMMIT:BOOKKEEPER-44: Reuse publish channel to default server to avoid too many connect requests to default server when lots of producers came in same time


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160917 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c1ec0c07d96bf8b2356a2e82f922320567130931 ------
TIME:08/24/2011 00:42:32

COMMIT:BOOKKEEPER-38: Bookie Server doesn't exit when its zookeeper session is expired. So the process is hang there.


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160915 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 8c665ad8a15c3a210618c9451c933ac121fc0393 ------
TIME:08/24/2011 00:38:29

COMMIT:BOOKKEEPER-43: NullPointException when releasing topic


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1160913 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 74d053c1ac237d90f25ab99327e4ff38d21c39fb ------
TIME:08/24/2011 00:34:58

COMMIT:BOOKKEEPER-29: BookieRecoveryTest fails intermittently (ivank, fpj via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156766 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3de9e13d442b1201fda1c61bde405b37988236e6 ------
TIME:08/11/2011 21:37:21

COMMIT:BOOKKEEPER-33: Add length and offset parameter to addEntry (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156723 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4bb3371e8d971a3b2ed3ef6436d838f4b0fc20a4 ------
TIME:08/11/2011 20:36:52

COMMIT:BOOKKEEPER-29: BookieRecoveryTest fails intermittently (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156096 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4e247abfe54364ba6649b6a2cd55a8babb49a8dc ------
TIME:08/10/2011 12:37:39

COMMIT:BOOKKEEPER-27: mvn site failed with unresolved dependencies (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1152529 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 3f8220d69c996dc035cc0af8a9a8692ecc6e8352 ------
TIME:07/31/2011 01:58:28

COMMIT:BOOKKEEPER-11: Read from open ledger (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1151958 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree afd8c973c666e86d37806854186c9984e4c2a421 ------
TIME:07/28/2011 20:33:52

COMMIT:BOOKKEEPER-30: Test are too noisy (ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1145532 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree deeae3351c848451fa62ccdf852effaf09f1cb05 ------
TIME:07/12/2011 12:36:05

COMMIT:BOOKKEEPER-5: Issue with Netty in BookKeeper (fpj and ivank via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1143850 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 153b5521210ecc1a9bbd3c9f88e915b967195b41 ------
TIME:07/07/2011 16:37:50

COMMIT:initial setup for hedwig and bookkeeper doc


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1140397 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree c8f595edaadb4dcca599758658ad7dd0ef05d569 ------
TIME:06/28/2011 04:03:01

COMMIT:BOOKKEEPER-22: Exception in LedgerCache causes addEntry request to fail (fpj via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1132682 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9c70be55c77cd3202672611a6699ef358ccbc619 ------
TIME:06/06/2011 17:49:38

COMMIT:BOOKKEEPER-1: Static variable makes tests fail (fpj via ivank) [CHANGES.txt]

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1127455 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 9438a536964baee6d05545f948e21af6cad3853a ------
TIME:05/25/2011 11:41:33

COMMIT:BOOKKEEPER-1: Static variable makes tests fail (fpj via ivank)

git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1127451 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 50abb259caec1a7be8d7faf73176709f685bbe32 ------
TIME:05/25/2011 11:28:46

COMMIT:BOOKKEEPER-19: BookKeeper doesn't support more than 2Gig of memory (ivan via fpj)



git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1125406 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree fe188288a822fa93210a0cc756793a5e72f4d45c ------
TIME:05/20/2011 16:11:04

COMMIT:more fixing of the build (ivankelly via breed)


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1090338 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 87b6a0a05a20bf521728ddd7064d7ba121b0b933 ------
TIME:04/08/2011 18:35:23

COMMIT:got bookkeper work with maven


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1087198 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree cd18981181913373516861e7ef159b585e70c51b ------
TIME:03/31/2011 08:46:23

COMMIT:ZOOKEEPER-1038. Move bookkeeper and hedwig code in subversion


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1087134 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree a0a079ca2025033ccadb1af22232651eb54e0486 ------
TIME:03/31/2011 01:29:21

COMMIT:added top level directories


git-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1086836 13f79535-47bb-0310-9956-ffa450edef68

TREE:tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904 ------
TIME:03/30/2011 06:43:01
